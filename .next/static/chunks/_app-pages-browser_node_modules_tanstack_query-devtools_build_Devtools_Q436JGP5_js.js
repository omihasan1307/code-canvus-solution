"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["_app-pages-browser_node_modules_tanstack_query-devtools_build_Devtools_Q436JGP5_js"],{

/***/ "(app-pages-browser)/./node_modules/@swc/helpers/esm/_tagged_template_literal.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@swc/helpers/esm/_tagged_template_literal.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   _: function() { return /* binding */ _tagged_template_literal; },\n/* harmony export */   _tagged_template_literal: function() { return /* binding */ _tagged_template_literal; }\n/* harmony export */ });\nfunction _tagged_template_literal(strings, raw) {\n    if (!raw) raw = strings.slice(0);\n    return Object.freeze(Object.defineProperties(strings, {\n        raw: {\n            value: Object.freeze(raw)\n        }\n    }));\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3djL2hlbHBlcnMvZXNtL190YWdnZWRfdGVtcGxhdGVfbGl0ZXJhbC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFPLFNBQVNBLHlCQUF5QkMsT0FBTyxFQUFFQyxHQUFHO0lBQ2pELElBQUksQ0FBQ0EsS0FBS0EsTUFBTUQsUUFBUUUsS0FBSyxDQUFDO0lBRTlCLE9BQU9DLE9BQU9DLE1BQU0sQ0FBQ0QsT0FBT0UsZ0JBQWdCLENBQUNMLFNBQVM7UUFBRUMsS0FBSztZQUFFSyxPQUFPSCxPQUFPQyxNQUFNLENBQUNIO1FBQUs7SUFBRTtBQUMvRjtBQUN5QyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHN3Yy9oZWxwZXJzL2VzbS9fdGFnZ2VkX3RlbXBsYXRlX2xpdGVyYWwuanM/YmNlNiJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZnVuY3Rpb24gX3RhZ2dlZF90ZW1wbGF0ZV9saXRlcmFsKHN0cmluZ3MsIHJhdykge1xuICAgIGlmICghcmF3KSByYXcgPSBzdHJpbmdzLnNsaWNlKDApO1xuXG4gICAgcmV0dXJuIE9iamVjdC5mcmVlemUoT2JqZWN0LmRlZmluZVByb3BlcnRpZXMoc3RyaW5ncywgeyByYXc6IHsgdmFsdWU6IE9iamVjdC5mcmVlemUocmF3KSB9IH0pKTtcbn1cbmV4cG9ydCB7IF90YWdnZWRfdGVtcGxhdGVfbGl0ZXJhbCBhcyBfIH07XG4iXSwibmFtZXMiOlsiX3RhZ2dlZF90ZW1wbGF0ZV9saXRlcmFsIiwic3RyaW5ncyIsInJhdyIsInNsaWNlIiwiT2JqZWN0IiwiZnJlZXplIiwiZGVmaW5lUHJvcGVydGllcyIsInZhbHVlIiwiXyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@swc/helpers/esm/_tagged_template_literal.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@tanstack/query-devtools/build/Devtools/Q436JGP5.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@tanstack/query-devtools/build/Devtools/Q436JGP5.js ***!
  \**************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ Devtools_default; }\n/* harmony export */ });\n/* harmony import */ var _swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @swc/helpers/_/_tagged_template_literal */ \"(app-pages-browser)/./node_modules/@swc/helpers/esm/_tagged_template_literal.js\");\n/* harmony import */ var _chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../chunk/6EPU3DES.js */ \"(app-pages-browser)/./node_modules/@tanstack/query-devtools/build/chunk/6EPU3DES.js\");\n\nfunction _templateObject() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n          transform: rotate(\",\n        \"deg);\\n        \"\n    ]);\n    _templateObject = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject1() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n            & svg {\\n              top: -1px;\\n            }\\n          \"\n    ]);\n    _templateObject1 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject2() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n          width: \",\n        \";\\n          height: \",\n        \";\\n        \"\n    ]);\n    _templateObject2 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject3() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n      & * {\\n        font-size: \",\n        \";\\n        font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas,\\n          'Liberation Mono', 'Courier New', monospace;\\n      }\\n      position: relative;\\n      outline: none;\\n      word-break: break-word;\\n    \"\n    ]);\n    _templateObject3 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject4() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n      margin: 0 0 0 0.5em;\\n      padding-left: 0.75em;\\n      border-left: 2px solid \",\n        \";\\n      /* outline: 1px solid \",\n        \"; */\\n    \"\n    ]);\n    _templateObject4 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject5() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n      & path {\\n        stroke: \",\n        \";\\n      }\\n      & svg {\\n        width: \",\n        \";\\n        height: \",\n        \";\\n      }\\n      display: inline-flex;\\n      align-items: center;\\n      transition: all 0.1s ease;\\n      /* outline: 1px solid \",\n        \"; */\\n    \"\n    ]);\n    _templateObject5 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject6() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n      display: flex;\\n      align-items: center;\\n      line-height: \",\n        \";\\n      min-height: \",\n        \";\\n      gap: \",\n        \";\\n    \"\n    ]);\n    _templateObject6 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject7() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n      cursor: pointer;\\n      color: inherit;\\n      font: inherit;\\n      outline: inherit;\\n      height: \",\n        \";\\n      background: transparent;\\n      border: none;\\n      padding: 0;\\n      display: inline-flex;\\n      align-items: center;\\n      gap: \",\n        \";\\n      position: relative;\\n      /* outline: 1px solid \",\n        \"; */\\n\\n      &:focus-visible {\\n        border-radius: \",\n        \";\\n        outline: 2px solid \",\n        \";\\n      }\\n\\n      & svg {\\n        position: relative;\\n        left: 1px;\\n      }\\n    \"\n    ]);\n    _templateObject7 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject8() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n      color: \",\n        \";\\n      font-size: \",\n        \";\\n      margin-left: \",\n        \";\\n      /* outline: 1px solid \",\n        \"; */\\n    \"\n    ]);\n    _templateObject8 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject9() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n      color: \",\n        \";\\n      white-space: nowrap;\\n    \"\n    ]);\n    _templateObject9 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject10() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n      color: \",\n        \";\\n      flex-grow: 1;\\n    \"\n    ]);\n    _templateObject10 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject11() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n      display: inline-flex;\\n      gap: \",\n        \";\\n      align-items: center;\\n    \"\n    ]);\n    _templateObject11 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject12() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n      display: inline-flex;\\n      gap: \",\n        \";\\n      width: 100%;\\n      margin: \",\n        \" 0px;\\n      line-height: \",\n        \";\\n      align-items: center;\\n    \"\n    ]);\n    _templateObject12 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject13() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n      border: none;\\n      padding: \",\n        \" \",\n        \" \",\n        \" \",\n        \";\\n      flex-grow: 1;\\n      border-radius: \",\n        \";\\n      background-color: \",\n        \";\\n\\n      &:hover {\\n        background-color: \",\n        \";\\n      }\\n    \"\n    ]);\n    _templateObject13 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject14() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n      background-color: transparent;\\n      color: \",\n        \";\\n      border: none;\\n      display: inline-flex;\\n      padding: 0px;\\n      align-items: center;\\n      justify-content: center;\\n      cursor: pointer;\\n      width: \",\n        \";\\n      height: \",\n        \";\\n      position: relative;\\n      z-index: 1;\\n\\n      &:hover svg {\\n        color: \",\n        \";\\n      }\\n\\n      &:focus-visible {\\n        border-radius: \",\n        \";\\n        outline: 2px solid \",\n        \";\\n        outline-offset: 2px;\\n      }\\n    \"\n    ]);\n    _templateObject14 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject15() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n            & .tsqd-panel-transition-exit-active,\\n            & .tsqd-panel-transition-enter-active {\\n              transition:\\n                opacity 0.3s,\\n                transform 0.3s;\\n            }\\n\\n            & .tsqd-panel-transition-exit-to,\\n            & .tsqd-panel-transition-enter {\\n              \",\n        \"\\n            }\\n\\n            & .tsqd-button-transition-exit-active,\\n            & .tsqd-button-transition-enter-active {\\n              transition:\\n                opacity 0.3s,\\n                transform 0.3s;\\n              opacity: 1;\\n            }\\n\\n            & .tsqd-button-transition-exit-to,\\n            & .tsqd-button-transition-enter {\\n              transform: \",\n        \";\\n              opacity: 0;\\n            }\\n          \"\n    ]);\n    _templateObject15 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject16() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n        flex-direction: column;\\n        background-color: \",\n        \";\\n      \"\n    ]);\n    _templateObject16 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject17() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n      flex-direction: row;\\n      background-color: \",\n        \";\\n    \"\n    ]);\n    _templateObject17 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject18() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n            min-width: min-content;\\n          \"\n    ]);\n    _templateObject18 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject19() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n        flex-direction: column;\\n        background-color: \",\n        \";\\n      \"\n    ]);\n    _templateObject19 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject20() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n      flex-direction: row;\\n      background-color: \",\n        \";\\n    \"\n    ]);\n    _templateObject20 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject21() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n            min-width: min-content;\\n          \"\n    ]);\n    _templateObject21 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject22() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n              height: 50%;\\n              max-height: 50%;\\n            \"\n    ]);\n    _templateObject22 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject23() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n              height: 100%;\\n              max-height: 100%;\\n            \"\n    ]);\n    _templateObject23 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject24() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n        background-color: \",\n        \";\\n        color: \",\n        \";\\n      \"\n    ]);\n    _templateObject24 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject25() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n      background-color: \",\n        \";\\n      color: \",\n        \";\\n    \"\n    ]);\n    _templateObject25 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject26() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n        background-color: \",\n        \";\\n        color: \",\n        \";\\n      \"\n    ]);\n    _templateObject26 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject27() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n      background-color: \",\n        \";\\n      color: \",\n        \";\\n    \"\n    ]);\n    _templateObject27 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject28() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n            cursor: pointer;\\n            &:hover {\\n              background: \",\n        \"\",\n        \";\\n            }\\n          \"\n    ]);\n    _templateObject28 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject29() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n            width: \",\n        \";\\n            height: \",\n        \";\\n            border-radius: \",\n        \";\\n            background-color: \",\n        \";\\n          \"\n    ]);\n    _templateObject29 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject30() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n              background-color: \",\n        \";\\n              color: \",\n        \";\\n            \"\n    ]);\n    _templateObject30 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject31() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n        background-color: \",\n        \";\\n        color: \",\n        \";\\n        border-color: \",\n        \";\\n      \"\n    ]);\n    _templateObject31 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject32() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n      background-color: \",\n        \";\\n      color: \",\n        \";\\n      border-color: \",\n        \";\\n    \"\n    ]);\n    _templateObject32 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject33() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n                  color: \",\n        \";\\n                \"\n    ]);\n    _templateObject33 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject34() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n                  background-color: \",\n        \";\\n                \"\n    ]);\n    _templateObject34 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject35() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n                  background-color: \",\n        \";\\n                \"\n    ]);\n    _templateObject35 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject36() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n                color: \",\n        \";\\n              \"\n    ]);\n    _templateObject36 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject37() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n                background-color: \",\n        \";\\n              \"\n    ]);\n    _templateObject37 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject38() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n                color: \",\n        \";\\n              \"\n    ]);\n    _templateObject38 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject39() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n                background-color: \",\n        \";\\n              \"\n    ]);\n    _templateObject39 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject40() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n                color: \",\n        \";\\n              \"\n    ]);\n    _templateObject40 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject41() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n                background-color: \",\n        \";\\n              \"\n    ]);\n    _templateObject41 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject42() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n                color: \",\n        \";\\n              \"\n    ]);\n    _templateObject42 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject43() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n                background-color: \",\n        \";\\n              \"\n    ]);\n    _templateObject43 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject44() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n                color: \",\n        \";\\n              \"\n    ]);\n    _templateObject44 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject45() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n                background-color: \",\n        \";\\n              \"\n    ]);\n    _templateObject45 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject46() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n        background-color: \",\n        \";\\n        color: \",\n        \";\\n        border-color: \",\n        \";\\n      \"\n    ]);\n    _templateObject46 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject47() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n      background-color: \",\n        \";\\n      color: \",\n        \";\\n      border-color: \",\n        \";\\n    \"\n    ]);\n    _templateObject47 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject48() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n      z-index: 100000;\\n      position: fixed;\\n      padding: 4px;\\n      text-align: left;\\n\\n      display: flex;\\n      align-items: center;\\n      justify-content: center;\\n      border-radius: 9999px;\\n      box-shadow: \",\n        \";\\n      overflow: hidden;\\n\\n      & div {\\n        position: absolute;\\n        top: -8px;\\n        left: -8px;\\n        right: -8px;\\n        bottom: -8px;\\n        border-radius: 9999px;\\n\\n        & svg {\\n          position: absolute;\\n          width: 100%;\\n          height: 100%;\\n        }\\n        filter: blur(6px) saturate(1.2) contrast(1.1);\\n      }\\n\\n      &:focus-within {\\n        outline-offset: 2px;\\n        outline: 3px solid \",\n        \";\\n      }\\n\\n      & button {\\n        position: relative;\\n        z-index: 1;\\n        padding: 0;\\n        border-radius: 9999px;\\n        background-color: transparent;\\n        border: none;\\n        height: 40px;\\n        display: flex;\\n        width: 40px;\\n        overflow: hidden;\\n        cursor: pointer;\\n        outline: none;\\n        & svg {\\n          position: absolute;\\n          width: 100%;\\n          height: 100%;\\n        }\\n      }\\n    \"\n    ]);\n    _templateObject48 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject49() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n      position: fixed;\\n      z-index: 9999;\\n      display: flex;\\n      gap: \",\n        \";\\n      & * {\\n        box-sizing: border-box;\\n        text-transform: none;\\n      }\\n\\n      & *::-webkit-scrollbar {\\n        width: 7px;\\n      }\\n\\n      & *::-webkit-scrollbar-track {\\n        background: transparent;\\n      }\\n\\n      & *::-webkit-scrollbar-thumb {\\n        background: \",\n        \";\\n      }\\n\\n      & *::-webkit-scrollbar-thumb:hover {\\n        background: \",\n        \";\\n      }\\n    \"\n    ]);\n    _templateObject49 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject50() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n      bottom: 12px;\\n      right: 12px;\\n    \"\n    ]);\n    _templateObject50 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject51() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n      bottom: 12px;\\n      left: 12px;\\n    \"\n    ]);\n    _templateObject51 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject52() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n      top: 12px;\\n      left: 12px;\\n    \"\n    ]);\n    _templateObject52 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject53() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n      top: 12px;\\n      right: 12px;\\n    \"\n    ]);\n    _templateObject53 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject54() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n      position: relative;\\n    \"\n    ]);\n    _templateObject54 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject55() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n      top: 0;\\n      right: 0;\\n      left: 0;\\n      max-height: 90%;\\n      min-height: \",\n        \";\\n      border-bottom: \",\n        \" 1px solid;\\n    \"\n    ]);\n    _templateObject55 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject56() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n      bottom: 0;\\n      right: 0;\\n      left: 0;\\n      max-height: 90%;\\n      min-height: \",\n        \";\\n      border-top: \",\n        \" 1px solid;\\n    \"\n    ]);\n    _templateObject56 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject57() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n      bottom: 0;\\n      right: 0;\\n      top: 0;\\n      border-left: \",\n        \" 1px solid;\\n      max-width: 90%;\\n    \"\n    ]);\n    _templateObject57 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject58() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n      bottom: 0;\\n      left: 0;\\n      top: 0;\\n      border-right: \",\n        \" 1px solid;\\n      max-width: 90%;\\n    \"\n    ]);\n    _templateObject58 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject59() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n      position: absolute;\\n      cursor: pointer;\\n      z-index: 5;\\n      display: flex;\\n      align-items: center;\\n      justify-content: center;\\n      outline: none;\\n      background-color: \",\n        \";\\n      &:hover {\\n        background-color: \",\n        \";\\n      }\\n      &:focus-visible {\\n        outline: 2px solid \",\n        \";\\n      }\\n      & svg {\\n        color: \",\n        \";\\n        width: \",\n        \";\\n        height: \",\n        \";\\n      }\\n    \"\n    ]);\n    _templateObject59 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject60() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n      bottom: 0;\\n      right: \",\n        \";\\n      transform: translate(0, 100%);\\n      border-right: \",\n        \" 1px solid;\\n      border-left: \",\n        \" 1px solid;\\n      border-top: none;\\n      border-bottom: \",\n        \" 1px solid;\\n      border-radius: 0px 0px \",\n        \" \",\n        \";\\n      padding: \",\n        \" \",\n        \" \",\n        \" \",\n        \";\\n\\n      &::after {\\n        content: ' ';\\n        position: absolute;\\n        bottom: 100%;\\n        left: -\",\n        \";\\n        height: \",\n        \";\\n        width: calc(100% + \",\n        \");\\n      }\\n\\n      & svg {\\n        transform: rotate(180deg);\\n      }\\n    \"\n    ]);\n    _templateObject60 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject61() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n      top: 0;\\n      right: \",\n        \";\\n      transform: translate(0, -100%);\\n      border-right: \",\n        \" 1px solid;\\n      border-left: \",\n        \" 1px solid;\\n      border-top: \",\n        \" 1px solid;\\n      border-bottom: none;\\n      border-radius: \",\n        \" \",\n        \" 0px 0px;\\n      padding: \",\n        \" \",\n        \" \",\n        \" \",\n        \";\\n\\n      &::after {\\n        content: ' ';\\n        position: absolute;\\n        top: 100%;\\n        left: -\",\n        \";\\n        height: \",\n        \";\\n        width: calc(100% + \",\n        \");\\n      }\\n    \"\n    ]);\n    _templateObject61 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject62() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n      bottom: \",\n        \";\\n      left: 0;\\n      transform: translate(-100%, 0);\\n      border-right: none;\\n      border-left: \",\n        \" 1px solid;\\n      border-top: \",\n        \" 1px solid;\\n      border-bottom: \",\n        \" 1px solid;\\n      border-radius: \",\n        \" 0px 0px \",\n        \";\\n      padding: \",\n        \" \",\n        \" \",\n        \" \",\n        \";\\n\\n      &::after {\\n        content: ' ';\\n        position: absolute;\\n        left: 100%;\\n        height: calc(100% + \",\n        \");\\n        width: \",\n        \";\\n      }\\n\\n      & svg {\\n        transform: rotate(-90deg);\\n      }\\n    \"\n    ]);\n    _templateObject62 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject63() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n      bottom: \",\n        \";\\n      right: 0;\\n      transform: translate(100%, 0);\\n      border-left: none;\\n      border-right: \",\n        \" 1px solid;\\n      border-top: \",\n        \" 1px solid;\\n      border-bottom: \",\n        \" 1px solid;\\n      border-radius: 0px \",\n        \" \",\n        \" 0px;\\n      padding: \",\n        \" \",\n        \" \",\n        \" \",\n        \";\\n\\n      &::after {\\n        content: ' ';\\n        position: absolute;\\n        right: 100%;\\n        height: calc(100% + \",\n        \");\\n        width: \",\n        \";\\n      }\\n\\n      & svg {\\n        transform: rotate(90deg);\\n      }\\n    \"\n    ]);\n    _templateObject63 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject64() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n      flex: 1 1 700px;\\n      background-color: \",\n        \";\\n      display: flex;\\n      flex-direction: column;\\n      & * {\\n        font-family: ui-sans-serif, Inter, system-ui, sans-serif, sans-serif;\\n      }\\n    \"\n    ]);\n    _templateObject64 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject65() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n      position: absolute;\\n      transition: background-color 0.125s ease;\\n      &:hover {\\n        background-color: \",\n        \"\",\n        \";\\n      }\\n      z-index: 4;\\n    \"\n    ]);\n    _templateObject65 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject66() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n      bottom: 0;\\n      width: 100%;\\n      height: 3px;\\n      cursor: ns-resize;\\n    \"\n    ]);\n    _templateObject66 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject67() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n      top: 0;\\n      width: 100%;\\n      height: 3px;\\n      cursor: ns-resize;\\n    \"\n    ]);\n    _templateObject67 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject68() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n      left: 0;\\n      width: 3px;\\n      height: 100%;\\n      cursor: ew-resize;\\n    \"\n    ]);\n    _templateObject68 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject69() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n      right: 0;\\n      width: 3px;\\n      height: 100%;\\n      cursor: ew-resize;\\n    \"\n    ]);\n    _templateObject69 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject70() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n      display: flex;\\n      justify-content: space-between;\\n      align-items: center;\\n      padding: \",\n        \" \",\n        \";\\n      gap: \",\n        \";\\n      border-bottom: \",\n        \" 1px solid;\\n      align-items: center;\\n      & > button {\\n        padding: 0;\\n        background: transparent;\\n        border: none;\\n        display: flex;\\n        gap: \",\n        \";\\n        flex-direction: column;\\n      }\\n    \"\n    ]);\n    _templateObject70 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject71() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n      display: flex;\\n      gap: \",\n        \";\\n      align-items: center;\\n    \"\n    ]);\n    _templateObject71 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject72() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n      cursor: pointer;\\n      display: flex;\\n      flex-direction: column;\\n      background-color: transparent;\\n      border: none;\\n      gap: \",\n        \";\\n      padding: 0px;\\n      &:hover {\\n        opacity: 0.7;\\n      }\\n      &:focus-visible {\\n        outline-offset: 4px;\\n        border-radius: \",\n        \";\\n        outline: 2px solid \",\n        \";\\n      }\\n    \"\n    ]);\n    _templateObject72 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject73() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n      font-size: \",\n        \";\\n      font-weight: \",\n        \";\\n      line-height: \",\n        \";\\n      white-space: nowrap;\\n      color: \",\n        \";\\n    \"\n    ]);\n    _templateObject73 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject74() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n      font-weight: \",\n        \";\\n      font-size: \",\n        \";\\n      background: linear-gradient(\\n        to right,\\n        \",\n        \"\\n      );\\n      background-clip: text;\\n      -webkit-background-clip: text;\\n      line-height: 1;\\n      -webkit-text-fill-color: transparent;\\n      white-space: nowrap;\\n    \"\n    ]);\n    _templateObject74 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject75() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n      display: flex;\\n      gap: \",\n        \";\\n      height: min-content;\\n    \"\n    ]);\n    _templateObject75 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject76() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n      display: flex;\\n      gap: \",\n        \";\\n      box-sizing: border-box;\\n      height: \",\n        \";\\n      background: \",\n        \";\\n      color: \",\n        \";\\n      border-radius: \",\n        \";\\n      font-size: \",\n        \";\\n      padding: \",\n        \";\\n      padding-left: \",\n        \";\\n      align-items: center;\\n      font-weight: \",\n        \";\\n      border: \",\n        \";\\n      user-select: none;\\n      position: relative;\\n      &:focus-visible {\\n        outline-offset: 2px;\\n        outline: 2px solid \",\n        \";\\n      }\\n    \"\n    ]);\n    _templateObject76 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject77() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n      font-size: \",\n        \";\\n    \"\n    ]);\n    _templateObject77 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject78() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n      font-size: \",\n        \";\\n      padding: 0 5px;\\n      display: flex;\\n      align-items: center;\\n      justify-content: center;\\n      color: \",\n        \";\\n      background-color: \",\n        \";\\n      border-radius: 2px;\\n      font-variant-numeric: tabular-nums;\\n      height: \",\n        \";\\n    \"\n    ]);\n    _templateObject78 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject79() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n      position: absolute;\\n      z-index: 1;\\n      background-color: \",\n        \";\\n      top: 100%;\\n      left: 50%;\\n      transform: translate(-50%, calc(\",\n        \"));\\n      padding: \",\n        \" \",\n        \";\\n      border-radius: \",\n        \";\\n      font-size: \",\n        \";\\n      border: 1px solid \",\n        \";\\n      color: \",\n        \";\\n\\n      &::before {\\n        top: 0px;\\n        content: ' ';\\n        display: block;\\n        left: 50%;\\n        transform: translate(-50%, -100%);\\n        position: absolute;\\n        border-color: transparent transparent\\n          \",\n        \" transparent;\\n        border-style: solid;\\n        border-width: 7px;\\n        /* transform: rotate(180deg); */\\n      }\\n\\n      &::after {\\n        top: 0px;\\n        content: ' ';\\n        display: block;\\n        left: 50%;\\n        transform: translate(-50%, calc(-100% + 2px));\\n        position: absolute;\\n        border-color: transparent transparent\\n          \",\n        \" transparent;\\n        border-style: solid;\\n        border-width: 7px;\\n      }\\n    \"\n    ]);\n    _templateObject79 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject80() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n      display: flex;\\n      gap: \",\n        \";\\n      & > button {\\n        cursor: pointer;\\n        padding: \",\n        \" \",\n        \" \",\n        \"\\n          \",\n        \";\\n        border-radius: \",\n        \";\\n        background-color: \",\n        \";\\n        border: 1px solid \",\n        \";\\n        color: \",\n        \";\\n        font-size: \",\n        \";\\n        display: flex;\\n        align-items: center;\\n        line-height: \",\n        \";\\n        gap: \",\n        \";\\n        max-width: 160px;\\n        &:focus-visible {\\n          outline-offset: 2px;\\n          border-radius: \",\n        \";\\n          outline: 2px solid \",\n        \";\\n        }\\n        & svg {\\n          width: \",\n        \";\\n          height: \",\n        \";\\n          color: \",\n        \";\\n        }\\n      }\\n    \"\n    ]);\n    _templateObject80 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject81() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n      padding: \",\n        \" \",\n        \";\\n      border-radius: \",\n        \";\\n      background-color: \",\n        \";\\n      display: flex;\\n      box-sizing: content-box;\\n      align-items: center;\\n      gap: \",\n        \";\\n      max-width: 160px;\\n      min-width: 100px;\\n      border: 1px solid \",\n        \";\\n      height: min-content;\\n      color: \",\n        \";\\n      & > svg {\\n        width: \",\n        \";\\n        height: \",\n        \";\\n      }\\n      & input {\\n        font-size: \",\n        \";\\n        width: 100%;\\n        background-color: \",\n        \";\\n        border: none;\\n        padding: 0;\\n        line-height: \",\n        \";\\n        color: \",\n        \";\\n        &::placeholder {\\n          color: \",\n        \";\\n        }\\n        &:focus {\\n          outline: none;\\n        }\\n      }\\n\\n      &:focus-within {\\n        outline-offset: 2px;\\n        border-radius: \",\n        \";\\n        outline: 2px solid \",\n        \";\\n      }\\n    \"\n    ]);\n    _templateObject81 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject82() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n      padding: \",\n        \" \",\n        \";\\n      border-radius: \",\n        \";\\n      background-color: \",\n        \";\\n      display: flex;\\n      align-items: center;\\n      gap: \",\n        \";\\n      box-sizing: content-box;\\n      max-width: 160px;\\n      border: 1px solid \",\n        \";\\n      height: min-content;\\n      & > svg {\\n        color: \",\n        \";\\n        width: \",\n        \";\\n        height: \",\n        \";\\n      }\\n      & > select {\\n        appearance: none;\\n        color: \",\n        \";\\n        min-width: 100px;\\n        line-height: \",\n        \";\\n        font-size: \",\n        \";\\n        background-color: \",\n        \";\\n        border: none;\\n        &:focus {\\n          outline: none;\\n        }\\n      }\\n      &:focus-within {\\n        outline-offset: 2px;\\n        border-radius: \",\n        \";\\n        outline: 2px solid \",\n        \";\\n      }\\n    \"\n    ]);\n    _templateObject82 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject83() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n      display: flex;\\n      gap: \",\n        \";\\n    \"\n    ]);\n    _templateObject83 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject84() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n      border-radius: \",\n        \";\\n      background-color: \",\n        \";\\n      border: 1px solid \",\n        \";\\n      width: \",\n        \";\\n      height: \",\n        \";\\n      justify-content: center;\\n      display: flex;\\n      align-items: center;\\n      gap: \",\n        \";\\n      max-width: 160px;\\n      cursor: pointer;\\n      padding: 0;\\n      &:hover {\\n        background-color: \",\n        \";\\n      }\\n      & svg {\\n        color: \",\n        \";\\n        width: \",\n        \";\\n        height: \",\n        \";\\n      }\\n      &:focus-visible {\\n        outline-offset: 2px;\\n        border-radius: \",\n        \";\\n        outline: 2px solid \",\n        \";\\n      }\\n    \"\n    ]);\n    _templateObject84 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject85() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n      & svg {\\n        stroke: \",\n        \";\\n        fill: \",\n        \";\\n      }\\n    \"\n    ]);\n    _templateObject85 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject86() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n      flex: 1;\\n      overflow-y: auto;\\n      & > div {\\n        display: flex;\\n        flex-direction: column;\\n      }\\n    \"\n    ]);\n    _templateObject86 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject87() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n      display: flex;\\n      align-items: center;\\n      padding: 0;\\n      border: none;\\n      cursor: pointer;\\n      color: \",\n        \";\\n      background-color: \",\n        \";\\n      line-height: 1;\\n      &:focus {\\n        outline: none;\\n      }\\n      &:focus-visible {\\n        outline-offset: -2px;\\n        border-radius: \",\n        \";\\n        outline: 2px solid \",\n        \";\\n      }\\n      &:hover .tsqd-query-hash {\\n        background-color: \",\n        \";\\n      }\\n\\n      & .tsqd-query-observer-count {\\n        padding: 0 \",\n        \";\\n        user-select: none;\\n        min-width: \",\n        \";\\n        align-self: stretch;\\n        display: flex;\\n        align-items: center;\\n        justify-content: center;\\n        font-size: \",\n        \";\\n        font-weight: \",\n        \";\\n        border-bottom-width: 1px;\\n        border-bottom-style: solid;\\n        border-bottom: 1px solid \",\n        \";\\n      }\\n      & .tsqd-query-hash {\\n        user-select: text;\\n        font-size: \",\n        \";\\n        display: flex;\\n        align-items: center;\\n        min-height: \",\n        \";\\n        flex: 1;\\n        padding: \",\n        \" \",\n        \";\\n        font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas,\\n          'Liberation Mono', 'Courier New', monospace;\\n        border-bottom: 1px solid \",\n        \";\\n        text-align: left;\\n        text-overflow: clip;\\n        word-break: break-word;\\n      }\\n\\n      & .tsqd-query-disabled-indicator {\\n        align-self: stretch;\\n        display: flex;\\n        align-items: center;\\n        padding: 0 \",\n        \";\\n        color: \",\n        \";\\n        background-color: \",\n        \";\\n        border-bottom: 1px solid \",\n        \";\\n        font-size: \",\n        \";\\n      }\\n    \"\n    ]);\n    _templateObject87 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject88() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n      background-color: \",\n        \";\\n    \"\n    ]);\n    _templateObject88 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject89() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n      flex: 1 1 700px;\\n      background-color: \",\n        \";\\n      color: \",\n        \";\\n      font-family: ui-sans-serif, Inter, system-ui, sans-serif, sans-serif;\\n      display: flex;\\n      flex-direction: column;\\n      overflow-y: auto;\\n      display: flex;\\n      text-align: left;\\n    \"\n    ]);\n    _templateObject89 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject90() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n      font-family: ui-sans-serif, Inter, system-ui, sans-serif, sans-serif;\\n      position: sticky;\\n      top: 0;\\n      z-index: 2;\\n      background-color: \",\n        \";\\n      padding: \",\n        \" \",\n        \";\\n      font-weight: \",\n        \";\\n      font-size: \",\n        \";\\n      line-height: \",\n        \";\\n      text-align: left;\\n    \"\n    ]);\n    _templateObject90 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject91() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n      margin: \",\n        \" 0px \",\n        \" 0px;\\n      & > div {\\n        display: flex;\\n        align-items: stretch;\\n        padding: 0 \",\n        \";\\n        line-height: \",\n        \";\\n        justify-content: space-between;\\n        & > span {\\n          font-size: \",\n        \";\\n        }\\n        & > span:nth-child(2) {\\n          font-variant-numeric: tabular-nums;\\n        }\\n      }\\n\\n      & > div:first-child {\\n        margin-bottom: \",\n        \";\\n      }\\n\\n      & code {\\n        font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas,\\n          'Liberation Mono', 'Courier New', monospace;\\n        margin: 0;\\n        font-size: \",\n        \";\\n        line-height: \",\n        \";\\n      }\\n\\n      & pre {\\n        margin: 0;\\n        display: flex;\\n        align-items: center;\\n      }\\n    \"\n    ]);\n    _templateObject91 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject92() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n      border: 1px solid \",\n        \";\\n      border-radius: \",\n        \";\\n      font-weight: \",\n        \";\\n      padding: \",\n        \" \",\n        \";\\n    \"\n    ]);\n    _templateObject92 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject93() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n      flex-wrap: wrap;\\n      margin: \",\n        \" 0px \",\n        \" 0px;\\n      display: flex;\\n      gap: \",\n        \";\\n      padding: 0px \",\n        \";\\n      & > button {\\n        font-family: ui-sans-serif, Inter, system-ui, sans-serif, sans-serif;\\n        font-size: \",\n        \";\\n        padding: \",\n        \" \",\n        \";\\n        display: flex;\\n        border-radius: \",\n        \";\\n        background-color: \",\n        \";\\n        border: 1px solid \",\n        \";\\n        align-items: center;\\n        gap: \",\n        \";\\n        font-weight: \",\n        \";\\n        line-height: \",\n        \";\\n        cursor: pointer;\\n        &:focus-visible {\\n          outline-offset: 2px;\\n          border-radius: \",\n        \";\\n          outline: 2px solid \",\n        \";\\n        }\\n        &:hover {\\n          background-color: \",\n        \";\\n        }\\n\\n        &:disabled {\\n          opacity: 0.6;\\n          cursor: not-allowed;\\n        }\\n\\n        & > span {\\n          width: \",\n        \";\\n          height: \",\n        \";\\n          border-radius: \",\n        \";\\n        }\\n      }\\n    \"\n    ]);\n    _templateObject93 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject94() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n      font-size: \",\n        \";\\n      padding: \",\n        \" \",\n        \";\\n      display: flex;\\n      border-radius: \",\n        \";\\n      overflow: hidden;\\n      background-color: \",\n        \";\\n      border: 1px solid \",\n        \";\\n      align-items: center;\\n      gap: \",\n        \";\\n      font-weight: \",\n        \";\\n      line-height: \",\n        \";\\n      color: \",\n        \";\\n      cursor: pointer;\\n      position: relative;\\n      &:hover {\\n        background-color: \",\n        \";\\n      }\\n      & > span {\\n        width: \",\n        \";\\n        height: \",\n        \";\\n        border-radius: \",\n        \";\\n      }\\n      &:focus-within {\\n        outline-offset: 2px;\\n        border-radius: \",\n        \";\\n        outline: 2px solid \",\n        \";\\n      }\\n      & select {\\n        position: absolute;\\n        top: 0;\\n        left: 0;\\n        width: 100%;\\n        height: 100%;\\n        appearance: none;\\n        background-color: transparent;\\n        border: none;\\n        color: transparent;\\n        outline: none;\\n      }\\n\\n      & svg path {\\n        stroke: \",\n        \";\\n      }\\n      & svg {\\n        width: \",\n        \";\\n        height: \",\n        \";\\n      }\\n    \"\n    ]);\n    _templateObject94 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject95() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n      display: flex;\\n      & * {\\n        font-family: ui-sans-serif, Inter, system-ui, sans-serif, sans-serif;\\n      }\\n      flex-direction: column;\\n      gap: \",\n        \";\\n      border-radius: \",\n        \";\\n      border: 1px solid \",\n        \";\\n      background-color: \",\n        \";\\n      font-size: \",\n        \";\\n      color: \",\n        \";\\n      z-index: 99999;\\n      min-width: 120px;\\n      padding: \",\n        \";\\n    \"\n    ]);\n    _templateObject95 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject96() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n      display: flex;\\n      align-items: center;\\n      justify-content: space-between;\\n      border-radius: \",\n        \";\\n      padding: \",\n        \" \",\n        \";\\n      cursor: pointer;\\n      background-color: transparent;\\n      border: none;\\n      color: \",\n        \";\\n      & svg {\\n        color: \",\n        \";\\n        transform: rotate(-90deg);\\n        width: \",\n        \";\\n        height: \",\n        \";\\n      }\\n      &:hover {\\n        background-color: \",\n        \";\\n      }\\n      &:focus-visible {\\n        outline-offset: 2px;\\n        outline: 2px solid \",\n        \";\\n      }\\n      &.data-disabled {\\n        opacity: 0.6;\\n        cursor: not-allowed;\\n      }\\n    \"\n    ]);\n    _templateObject96 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject97() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n      padding: \",\n        \" \",\n        \";\\n      font-weight: \",\n        \";\\n      border-bottom: 1px solid \",\n        \";\\n      color: \",\n        \";\\n      font-size: \",\n        \";\\n    \"\n    ]);\n    _templateObject97 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject98() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n      display: flex;\\n      align-items: center;\\n      justify-content: space-between;\\n      color: \",\n        \";\\n      font-size: \",\n        \";\\n      border-radius: \",\n        \";\\n      padding: \",\n        \" \",\n        \";\\n      cursor: pointer;\\n      background-color: transparent;\\n      border: none;\\n      & svg {\\n        color: \",\n        \";\\n      }\\n      &:hover {\\n        background-color: \",\n        \";\\n      }\\n      &:focus-visible {\\n        outline-offset: 2px;\\n        outline: 2px solid \",\n        \";\\n      }\\n    \"\n    ]);\n    _templateObject98 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject99() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n      background-color: \",\n        \";\\n      color: \",\n        \";\\n      & svg {\\n        color: \",\n        \";\\n      }\\n      &:hover {\\n        background-color: \",\n        \";\\n      }\\n    \"\n    ]);\n    _templateObject99 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject100() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n      border-radius: \",\n        \";\\n      background-color: \",\n        \";\\n      border: 1px solid \",\n        \";\\n      display: flex;\\n      padding: 0;\\n      font-size: \",\n        \";\\n      color: \",\n        \";\\n      overflow: hidden;\\n\\n      &:has(:focus-visible) {\\n        outline: 2px solid \",\n        \";\\n      }\\n\\n      & .tsqd-radio-toggle {\\n        opacity: 0.5;\\n        display: flex;\\n        & label {\\n          display: flex;\\n          align-items: center;\\n          cursor: pointer;\\n          line-height: \",\n        \";\\n        }\\n\\n        & label:hover {\\n          background-color: \",\n        \";\\n        }\\n      }\\n\\n      & > [data-checked] {\\n        opacity: 1;\\n        background-color: \",\n        \";\\n        & label:hover {\\n          background-color: \",\n        \";\\n        }\\n      }\\n\\n      & .tsqd-radio-toggle:first-child {\\n        & label {\\n          padding: 0 \",\n        \" 0 \",\n        \";\\n        }\\n        border-right: 1px solid \",\n        \";\\n      }\\n\\n      & .tsqd-radio-toggle:nth-child(2) {\\n        & label {\\n          padding: 0 \",\n        \" 0 \",\n        \";\\n        }\\n      }\\n    \"\n    ]);\n    _templateObject100 = function() {\n        return data;\n    };\n    return data;\n}\nvar _s = $RefreshSig$(), _s1 = $RefreshSig$(), _s2 = $RefreshSig$(), _s3 = $RefreshSig$(), _s4 = $RefreshSig$(), _s5 = $RefreshSig$(), _s6 = $RefreshSig$(), _s7 = $RefreshSig$(), _s8 = $RefreshSig$(), _s9 = $RefreshSig$(), _s10 = $RefreshSig$(), _s11 = $RefreshSig$(), _s12 = $RefreshSig$(), _s13 = $RefreshSig$(), _s14 = $RefreshSig$(), _s15 = $RefreshSig$(), _s16 = $RefreshSig$(), _s17 = $RefreshSig$(), _s18 = $RefreshSig$(), _s19 = $RefreshSig$(), _s20 = $RefreshSig$(), _s21 = $RefreshSig$(), _s22 = $RefreshSig$(), _s23 = $RefreshSig$(), _s24 = $RefreshSig$(), _s25 = $RefreshSig$(), _s26 = $RefreshSig$(), _s27 = $RefreshSig$(), _s28 = $RefreshSig$(), _s29 = $RefreshSig$(), _s30 = $RefreshSig$(), _s31 = $RefreshSig$(), _s32 = $RefreshSig$(), _s33 = $RefreshSig$(), _s34 = $RefreshSig$(), _s35 = $RefreshSig$(), _s36 = $RefreshSig$(), _s37 = $RefreshSig$(), _s38 = $RefreshSig$(), _s39 = $RefreshSig$(), _s40 = $RefreshSig$(), _s41 = $RefreshSig$(), _s42 = $RefreshSig$(), _s43 = $RefreshSig$(), _s44 = $RefreshSig$(), _s45 = $RefreshSig$(), _s46 = $RefreshSig$(), _s47 = $RefreshSig$(), _s48 = $RefreshSig$(), _s49 = $RefreshSig$(), _s50 = $RefreshSig$(), _s51 = $RefreshSig$(), _s52 = $RefreshSig$(), _s53 = $RefreshSig$(), _s54 = $RefreshSig$(), _s55 = $RefreshSig$(), _s56 = $RefreshSig$(), _s57 = $RefreshSig$(), _s58 = $RefreshSig$(), _s59 = $RefreshSig$(), _s60 = $RefreshSig$(), _s61 = $RefreshSig$(), _s62 = $RefreshSig$(), _s63 = $RefreshSig$(), _s64 = $RefreshSig$(), _s65 = $RefreshSig$(), _s66 = $RefreshSig$(), _s67 = $RefreshSig$(), _s68 = $RefreshSig$();\n\n// ../../node_modules/.pnpm/@tanstack+match-sorter-utils@8.15.1/node_modules/@tanstack/match-sorter-utils/build/lib/index.mjs\nvar characterMap = {\n    À: \"A\",\n    Á: \"A\",\n    Â: \"A\",\n    Ã: \"A\",\n    Ä: \"A\",\n    Å: \"A\",\n    Ấ: \"A\",\n    Ắ: \"A\",\n    Ẳ: \"A\",\n    Ẵ: \"A\",\n    Ặ: \"A\",\n    Æ: \"AE\",\n    Ầ: \"A\",\n    Ằ: \"A\",\n    Ȃ: \"A\",\n    Ç: \"C\",\n    Ḉ: \"C\",\n    È: \"E\",\n    É: \"E\",\n    Ê: \"E\",\n    Ë: \"E\",\n    Ế: \"E\",\n    Ḗ: \"E\",\n    Ề: \"E\",\n    Ḕ: \"E\",\n    Ḝ: \"E\",\n    Ȇ: \"E\",\n    Ì: \"I\",\n    Í: \"I\",\n    Î: \"I\",\n    Ï: \"I\",\n    Ḯ: \"I\",\n    Ȋ: \"I\",\n    Ð: \"D\",\n    Ñ: \"N\",\n    Ò: \"O\",\n    Ó: \"O\",\n    Ô: \"O\",\n    Õ: \"O\",\n    Ö: \"O\",\n    Ø: \"O\",\n    Ố: \"O\",\n    Ṍ: \"O\",\n    Ṓ: \"O\",\n    Ȏ: \"O\",\n    Ù: \"U\",\n    Ú: \"U\",\n    Û: \"U\",\n    Ü: \"U\",\n    Ý: \"Y\",\n    à: \"a\",\n    á: \"a\",\n    â: \"a\",\n    ã: \"a\",\n    ä: \"a\",\n    å: \"a\",\n    ấ: \"a\",\n    ắ: \"a\",\n    ẳ: \"a\",\n    ẵ: \"a\",\n    ặ: \"a\",\n    æ: \"ae\",\n    ầ: \"a\",\n    ằ: \"a\",\n    ȃ: \"a\",\n    ç: \"c\",\n    ḉ: \"c\",\n    è: \"e\",\n    é: \"e\",\n    ê: \"e\",\n    ë: \"e\",\n    ế: \"e\",\n    ḗ: \"e\",\n    ề: \"e\",\n    ḕ: \"e\",\n    ḝ: \"e\",\n    ȇ: \"e\",\n    ì: \"i\",\n    í: \"i\",\n    î: \"i\",\n    ï: \"i\",\n    ḯ: \"i\",\n    ȋ: \"i\",\n    ð: \"d\",\n    ñ: \"n\",\n    ò: \"o\",\n    ó: \"o\",\n    ô: \"o\",\n    õ: \"o\",\n    ö: \"o\",\n    ø: \"o\",\n    ố: \"o\",\n    ṍ: \"o\",\n    ṓ: \"o\",\n    ȏ: \"o\",\n    ù: \"u\",\n    ú: \"u\",\n    û: \"u\",\n    ü: \"u\",\n    ý: \"y\",\n    ÿ: \"y\",\n    Ā: \"A\",\n    ā: \"a\",\n    Ă: \"A\",\n    ă: \"a\",\n    Ą: \"A\",\n    ą: \"a\",\n    Ć: \"C\",\n    ć: \"c\",\n    Ĉ: \"C\",\n    ĉ: \"c\",\n    Ċ: \"C\",\n    ċ: \"c\",\n    Č: \"C\",\n    č: \"c\",\n    C̆: \"C\",\n    c̆: \"c\",\n    Ď: \"D\",\n    ď: \"d\",\n    Đ: \"D\",\n    đ: \"d\",\n    Ē: \"E\",\n    ē: \"e\",\n    Ĕ: \"E\",\n    ĕ: \"e\",\n    Ė: \"E\",\n    ė: \"e\",\n    Ę: \"E\",\n    ę: \"e\",\n    Ě: \"E\",\n    ě: \"e\",\n    Ĝ: \"G\",\n    Ǵ: \"G\",\n    ĝ: \"g\",\n    ǵ: \"g\",\n    Ğ: \"G\",\n    ğ: \"g\",\n    Ġ: \"G\",\n    ġ: \"g\",\n    Ģ: \"G\",\n    ģ: \"g\",\n    Ĥ: \"H\",\n    ĥ: \"h\",\n    Ħ: \"H\",\n    ħ: \"h\",\n    Ḫ: \"H\",\n    ḫ: \"h\",\n    Ĩ: \"I\",\n    ĩ: \"i\",\n    Ī: \"I\",\n    ī: \"i\",\n    Ĭ: \"I\",\n    ĭ: \"i\",\n    Į: \"I\",\n    į: \"i\",\n    İ: \"I\",\n    ı: \"i\",\n    Ĳ: \"IJ\",\n    ĳ: \"ij\",\n    Ĵ: \"J\",\n    ĵ: \"j\",\n    Ķ: \"K\",\n    ķ: \"k\",\n    Ḱ: \"K\",\n    ḱ: \"k\",\n    K̆: \"K\",\n    k̆: \"k\",\n    Ĺ: \"L\",\n    ĺ: \"l\",\n    Ļ: \"L\",\n    ļ: \"l\",\n    Ľ: \"L\",\n    ľ: \"l\",\n    Ŀ: \"L\",\n    ŀ: \"l\",\n    Ł: \"l\",\n    ł: \"l\",\n    Ḿ: \"M\",\n    ḿ: \"m\",\n    M̆: \"M\",\n    m̆: \"m\",\n    Ń: \"N\",\n    ń: \"n\",\n    Ņ: \"N\",\n    ņ: \"n\",\n    Ň: \"N\",\n    ň: \"n\",\n    ŉ: \"n\",\n    N̆: \"N\",\n    n̆: \"n\",\n    Ō: \"O\",\n    ō: \"o\",\n    Ŏ: \"O\",\n    ŏ: \"o\",\n    Ő: \"O\",\n    ő: \"o\",\n    Œ: \"OE\",\n    œ: \"oe\",\n    P̆: \"P\",\n    p̆: \"p\",\n    Ŕ: \"R\",\n    ŕ: \"r\",\n    Ŗ: \"R\",\n    ŗ: \"r\",\n    Ř: \"R\",\n    ř: \"r\",\n    R̆: \"R\",\n    r̆: \"r\",\n    Ȓ: \"R\",\n    ȓ: \"r\",\n    Ś: \"S\",\n    ś: \"s\",\n    Ŝ: \"S\",\n    ŝ: \"s\",\n    Ş: \"S\",\n    Ș: \"S\",\n    ș: \"s\",\n    ş: \"s\",\n    Š: \"S\",\n    š: \"s\",\n    Ţ: \"T\",\n    ţ: \"t\",\n    ț: \"t\",\n    Ț: \"T\",\n    Ť: \"T\",\n    ť: \"t\",\n    Ŧ: \"T\",\n    ŧ: \"t\",\n    T̆: \"T\",\n    t̆: \"t\",\n    Ũ: \"U\",\n    ũ: \"u\",\n    Ū: \"U\",\n    ū: \"u\",\n    Ŭ: \"U\",\n    ŭ: \"u\",\n    Ů: \"U\",\n    ů: \"u\",\n    Ű: \"U\",\n    ű: \"u\",\n    Ų: \"U\",\n    ų: \"u\",\n    Ȗ: \"U\",\n    ȗ: \"u\",\n    V̆: \"V\",\n    v̆: \"v\",\n    Ŵ: \"W\",\n    ŵ: \"w\",\n    Ẃ: \"W\",\n    ẃ: \"w\",\n    X̆: \"X\",\n    x̆: \"x\",\n    Ŷ: \"Y\",\n    ŷ: \"y\",\n    Ÿ: \"Y\",\n    Y̆: \"Y\",\n    y̆: \"y\",\n    Ź: \"Z\",\n    ź: \"z\",\n    Ż: \"Z\",\n    ż: \"z\",\n    Ž: \"Z\",\n    ž: \"z\",\n    ſ: \"s\",\n    ƒ: \"f\",\n    Ơ: \"O\",\n    ơ: \"o\",\n    Ư: \"U\",\n    ư: \"u\",\n    Ǎ: \"A\",\n    ǎ: \"a\",\n    Ǐ: \"I\",\n    ǐ: \"i\",\n    Ǒ: \"O\",\n    ǒ: \"o\",\n    Ǔ: \"U\",\n    ǔ: \"u\",\n    Ǖ: \"U\",\n    ǖ: \"u\",\n    Ǘ: \"U\",\n    ǘ: \"u\",\n    Ǚ: \"U\",\n    ǚ: \"u\",\n    Ǜ: \"U\",\n    ǜ: \"u\",\n    Ứ: \"U\",\n    ứ: \"u\",\n    Ṹ: \"U\",\n    ṹ: \"u\",\n    Ǻ: \"A\",\n    ǻ: \"a\",\n    Ǽ: \"AE\",\n    ǽ: \"ae\",\n    Ǿ: \"O\",\n    ǿ: \"o\",\n    Þ: \"TH\",\n    þ: \"th\",\n    Ṕ: \"P\",\n    ṕ: \"p\",\n    Ṥ: \"S\",\n    ṥ: \"s\",\n    X́: \"X\",\n    x́: \"x\",\n    Ѓ: \"Г\",\n    ѓ: \"г\",\n    Ќ: \"К\",\n    ќ: \"к\",\n    A̋: \"A\",\n    a̋: \"a\",\n    E̋: \"E\",\n    e̋: \"e\",\n    I̋: \"I\",\n    i̋: \"i\",\n    Ǹ: \"N\",\n    ǹ: \"n\",\n    Ồ: \"O\",\n    ồ: \"o\",\n    Ṑ: \"O\",\n    ṑ: \"o\",\n    Ừ: \"U\",\n    ừ: \"u\",\n    Ẁ: \"W\",\n    ẁ: \"w\",\n    Ỳ: \"Y\",\n    ỳ: \"y\",\n    Ȁ: \"A\",\n    ȁ: \"a\",\n    Ȅ: \"E\",\n    ȅ: \"e\",\n    Ȉ: \"I\",\n    ȉ: \"i\",\n    Ȍ: \"O\",\n    ȍ: \"o\",\n    Ȑ: \"R\",\n    ȑ: \"r\",\n    Ȕ: \"U\",\n    ȕ: \"u\",\n    B̌: \"B\",\n    b̌: \"b\",\n    Č̣: \"C\",\n    č̣: \"c\",\n    Ê̌: \"E\",\n    ê̌: \"e\",\n    F̌: \"F\",\n    f̌: \"f\",\n    Ǧ: \"G\",\n    ǧ: \"g\",\n    Ȟ: \"H\",\n    ȟ: \"h\",\n    J̌: \"J\",\n    ǰ: \"j\",\n    Ǩ: \"K\",\n    ǩ: \"k\",\n    M̌: \"M\",\n    m̌: \"m\",\n    P̌: \"P\",\n    p̌: \"p\",\n    Q̌: \"Q\",\n    q̌: \"q\",\n    Ř̩: \"R\",\n    ř̩: \"r\",\n    Ṧ: \"S\",\n    ṧ: \"s\",\n    V̌: \"V\",\n    v̌: \"v\",\n    W̌: \"W\",\n    w̌: \"w\",\n    X̌: \"X\",\n    x̌: \"x\",\n    Y̌: \"Y\",\n    y̌: \"y\",\n    A̧: \"A\",\n    a̧: \"a\",\n    B̧: \"B\",\n    b̧: \"b\",\n    Ḑ: \"D\",\n    ḑ: \"d\",\n    Ȩ: \"E\",\n    ȩ: \"e\",\n    Ɛ̧: \"E\",\n    ɛ̧: \"e\",\n    Ḩ: \"H\",\n    ḩ: \"h\",\n    I̧: \"I\",\n    i̧: \"i\",\n    Ɨ̧: \"I\",\n    ɨ̧: \"i\",\n    M̧: \"M\",\n    m̧: \"m\",\n    O̧: \"O\",\n    o̧: \"o\",\n    Q̧: \"Q\",\n    q̧: \"q\",\n    U̧: \"U\",\n    u̧: \"u\",\n    X̧: \"X\",\n    x̧: \"x\",\n    Z̧: \"Z\",\n    z̧: \"z\"\n};\nvar chars = Object.keys(characterMap).join(\"|\");\nvar allAccents = new RegExp(chars, \"g\");\nfunction removeAccents(str) {\n    return str.replace(allAccents, (match)=>{\n        return characterMap[match];\n    });\n}\nvar rankings = {\n    CASE_SENSITIVE_EQUAL: 7,\n    EQUAL: 6,\n    STARTS_WITH: 5,\n    WORD_STARTS_WITH: 4,\n    CONTAINS: 3,\n    ACRONYM: 2,\n    MATCHES: 1,\n    NO_MATCH: 0\n};\nfunction rankItem(item, value, options) {\n    var _options$threshold;\n    options = options || {};\n    options.threshold = (_options$threshold = options.threshold) != null ? _options$threshold : rankings.MATCHES;\n    if (!options.accessors) {\n        const rank = getMatchRanking(item, value, options);\n        return {\n            // ends up being duplicate of 'item' in matches but consistent\n            rankedValue: item,\n            rank,\n            accessorIndex: -1,\n            accessorThreshold: options.threshold,\n            passed: rank >= options.threshold\n        };\n    }\n    const valuesToRank = getAllValuesToRank(item, options.accessors);\n    const rankingInfo = {\n        rankedValue: item,\n        rank: rankings.NO_MATCH,\n        accessorIndex: -1,\n        accessorThreshold: options.threshold,\n        passed: false\n    };\n    for(let i2 = 0; i2 < valuesToRank.length; i2++){\n        const rankValue = valuesToRank[i2];\n        let newRank = getMatchRanking(rankValue.itemValue, value, options);\n        const { minRanking, maxRanking, threshold = options.threshold } = rankValue.attributes;\n        if (newRank < minRanking && newRank >= rankings.MATCHES) {\n            newRank = minRanking;\n        } else if (newRank > maxRanking) {\n            newRank = maxRanking;\n        }\n        newRank = Math.min(newRank, maxRanking);\n        if (newRank >= threshold && newRank > rankingInfo.rank) {\n            rankingInfo.rank = newRank;\n            rankingInfo.passed = true;\n            rankingInfo.accessorIndex = i2;\n            rankingInfo.accessorThreshold = threshold;\n            rankingInfo.rankedValue = rankValue.itemValue;\n        }\n    }\n    return rankingInfo;\n}\nfunction getMatchRanking(testString, stringToRank, options) {\n    testString = prepareValueForComparison(testString, options);\n    stringToRank = prepareValueForComparison(stringToRank, options);\n    if (stringToRank.length > testString.length) {\n        return rankings.NO_MATCH;\n    }\n    if (testString === stringToRank) {\n        return rankings.CASE_SENSITIVE_EQUAL;\n    }\n    testString = testString.toLowerCase();\n    stringToRank = stringToRank.toLowerCase();\n    if (testString === stringToRank) {\n        return rankings.EQUAL;\n    }\n    if (testString.startsWith(stringToRank)) {\n        return rankings.STARTS_WITH;\n    }\n    if (testString.includes(\" \".concat(stringToRank))) {\n        return rankings.WORD_STARTS_WITH;\n    }\n    if (testString.includes(stringToRank)) {\n        return rankings.CONTAINS;\n    } else if (stringToRank.length === 1) {\n        return rankings.NO_MATCH;\n    }\n    if (getAcronym(testString).includes(stringToRank)) {\n        return rankings.ACRONYM;\n    }\n    return getClosenessRanking(testString, stringToRank);\n}\nfunction getAcronym(string) {\n    let acronym = \"\";\n    const wordsInString = string.split(\" \");\n    wordsInString.forEach((wordInString)=>{\n        const splitByHyphenWords = wordInString.split(\"-\");\n        splitByHyphenWords.forEach((splitByHyphenWord)=>{\n            acronym += splitByHyphenWord.substr(0, 1);\n        });\n    });\n    return acronym;\n}\nfunction getClosenessRanking(testString, stringToRank) {\n    let matchingInOrderCharCount = 0;\n    let charNumber = 0;\n    function findMatchingCharacter(matchChar, string, index) {\n        for(let j = index, J = string.length; j < J; j++){\n            const stringChar = string[j];\n            if (stringChar === matchChar) {\n                matchingInOrderCharCount += 1;\n                return j + 1;\n            }\n        }\n        return -1;\n    }\n    function getRanking(spread3) {\n        const spreadPercentage = 1 / spread3;\n        const inOrderPercentage = matchingInOrderCharCount / stringToRank.length;\n        const ranking = rankings.MATCHES + inOrderPercentage * spreadPercentage;\n        return ranking;\n    }\n    const firstIndex = findMatchingCharacter(stringToRank[0], testString, 0);\n    if (firstIndex < 0) {\n        return rankings.NO_MATCH;\n    }\n    charNumber = firstIndex;\n    for(let i2 = 1, I = stringToRank.length; i2 < I; i2++){\n        const matchChar = stringToRank[i2];\n        charNumber = findMatchingCharacter(matchChar, testString, charNumber);\n        const found = charNumber > -1;\n        if (!found) {\n            return rankings.NO_MATCH;\n        }\n    }\n    const spread2 = charNumber - firstIndex;\n    return getRanking(spread2);\n}\nfunction prepareValueForComparison(value, _ref) {\n    let { keepDiacritics } = _ref;\n    value = \"\".concat(value);\n    if (!keepDiacritics) {\n        value = removeAccents(value);\n    }\n    return value;\n}\nfunction getItemValues(item, accessor) {\n    let accessorFn = accessor;\n    if (typeof accessor === \"object\") {\n        accessorFn = accessor.accessor;\n    }\n    const value = accessorFn(item);\n    if (value == null) {\n        return [];\n    }\n    if (Array.isArray(value)) {\n        return value;\n    }\n    return [\n        String(value)\n    ];\n}\nfunction getAllValuesToRank(item, accessors) {\n    const allValues = [];\n    for(let j = 0, J = accessors.length; j < J; j++){\n        const accessor = accessors[j];\n        const attributes = getAccessorAttributes(accessor);\n        const itemValues = getItemValues(item, accessor);\n        for(let i2 = 0, I = itemValues.length; i2 < I; i2++){\n            allValues.push({\n                itemValue: itemValues[i2],\n                attributes\n            });\n        }\n    }\n    return allValues;\n}\nvar defaultKeyAttributes = {\n    maxRanking: Infinity,\n    minRanking: -Infinity\n};\nfunction getAccessorAttributes(accessor) {\n    if (typeof accessor === \"function\") {\n        return defaultKeyAttributes;\n    }\n    return {\n        ...defaultKeyAttributes,\n        ...accessor\n    };\n}\n// ../../node_modules/.pnpm/goober@2.1.14_csstype@3.1.3/node_modules/goober/dist/goober.modern.js\nvar e = {\n    data: \"\"\n};\nvar t = (t2)=> true ? ((t2 ? t2.querySelector(\"#_goober\") : window._goober) || Object.assign((t2 || document.head).appendChild(document.createElement(\"style\")), {\n        innerHTML: \" \",\n        id: \"_goober\"\n    })).firstChild : 0;\nvar l = /(?:([\\u0080-\\uFFFF\\w-%@]+) *:? *([^{;]+?);|([^;}{]*?) *{)|(}\\s*)/g;\nvar a = /\\/\\*[^]*?\\*\\/|  +/g;\nvar n = /\\n+/g;\nvar o = (e2, t2)=>{\n    let r2 = \"\", l2 = \"\", a2 = \"\";\n    for(let n2 in e2){\n        let c2 = e2[n2];\n        \"@\" == n2[0] ? \"i\" == n2[1] ? r2 = n2 + \" \" + c2 + \";\" : l2 += \"f\" == n2[1] ? o(c2, n2) : n2 + \"{\" + o(c2, \"k\" == n2[1] ? \"\" : t2) + \"}\" : \"object\" == typeof c2 ? l2 += o(c2, t2 ? t2.replace(/([^,])+/g, (e3)=>n2.replace(/(^:.*)|([^,])+/g, (t3)=>/&/.test(t3) ? t3.replace(/&/g, e3) : e3 ? e3 + \" \" + t3 : t3)) : n2) : null != c2 && (n2 = /^--/.test(n2) ? n2 : n2.replace(/[A-Z]/g, \"-$&\").toLowerCase(), a2 += o.p ? o.p(n2, c2) : n2 + \":\" + c2 + \";\");\n    }\n    return r2 + (t2 && a2 ? t2 + \"{\" + a2 + \"}\" : a2) + l2;\n};\nvar c = {};\nvar s = (e2)=>{\n    if (\"object\" == typeof e2) {\n        let t2 = \"\";\n        for(let r2 in e2)t2 += r2 + s(e2[r2]);\n        return t2;\n    }\n    return e2;\n};\nvar i = (e2, t2, r2, i2, p2)=>{\n    let u2 = s(e2), d = c[u2] || (c[u2] = ((e3)=>{\n        let t3 = 0, r3 = 11;\n        for(; t3 < e3.length;)r3 = 101 * r3 + e3.charCodeAt(t3++) >>> 0;\n        return \"go\" + r3;\n    })(u2));\n    if (!c[d]) {\n        let t3 = u2 !== e2 ? e2 : ((e3)=>{\n            let t4, r3, o2 = [\n                {}\n            ];\n            for(; t4 = l.exec(e3.replace(a, \"\"));)t4[4] ? o2.shift() : t4[3] ? (r3 = t4[3].replace(n, \" \").trim(), o2.unshift(o2[0][r3] = o2[0][r3] || {})) : o2[0][t4[1]] = t4[2].replace(n, \" \").trim();\n            return o2[0];\n        })(e2);\n        c[d] = o(p2 ? {\n            [\"@keyframes \" + d]: t3\n        } : t3, r2 ? \"\" : \".\" + d);\n    }\n    let f = r2 && c.g ? c.g : null;\n    return r2 && (c.g = c[d]), ((e3, t3, r3, l2)=>{\n        l2 ? t3.data = t3.data.replace(l2, e3) : -1 === t3.data.indexOf(e3) && (t3.data = r3 ? e3 + t3.data : t3.data + e3);\n    })(c[d], t2, i2, f), d;\n};\nvar p = (e2, t2, r2)=>e2.reduce((e3, l2, a2)=>{\n        let n2 = t2[a2];\n        if (n2 && n2.call) {\n            let e4 = n2(r2), t3 = e4 && e4.props && e4.props.className || /^go/.test(e4) && e4;\n            n2 = t3 ? \".\" + t3 : e4 && \"object\" == typeof e4 ? e4.props ? \"\" : o(e4, \"\") : false === e4 ? \"\" : e4;\n        }\n        return e3 + l2 + (null == n2 ? \"\" : n2);\n    }, \"\");\nfunction u(e2) {\n    let r2 = this || {}, l2 = e2.call ? e2(r2.p) : e2;\n    return i(l2.unshift ? l2.raw ? p(l2, [].slice.call(arguments, 1), r2.p) : l2.reduce((e3, t2)=>Object.assign(e3, t2 && t2.call ? t2(r2.p) : t2), {}) : l2, t(r2.target), r2.g, r2.o, r2.k);\n}\nu.bind({\n    g: 1\n});\nu.bind({\n    k: 1\n});\n// ../../node_modules/.pnpm/clsx@2.1.1/node_modules/clsx/dist/clsx.mjs\nfunction r(e2) {\n    var t2, f, n2 = \"\";\n    if (\"string\" == typeof e2 || \"number\" == typeof e2) n2 += e2;\n    else if (\"object\" == typeof e2) if (Array.isArray(e2)) {\n        var o2 = e2.length;\n        for(t2 = 0; t2 < o2; t2++)e2[t2] && (f = r(e2[t2])) && (n2 && (n2 += \" \"), n2 += f);\n    } else for(f in e2)e2[f] && (n2 && (n2 += \" \"), n2 += f);\n    return n2;\n}\nfunction clsx() {\n    for(var e2, t2, f = 0, n2 = \"\", o2 = arguments.length; f < o2; f++)(e2 = arguments[f]) && (t2 = r(e2)) && (n2 && (n2 += \" \"), n2 += t2);\n    return n2;\n}\n// ../../node_modules/.pnpm/@solid-primitives+transition-group@1.0.3_solid-js@1.8.17/node_modules/@solid-primitives/transition-group/dist/index.js\nvar noop = ()=>{};\nfunction createListTransition(source, options) {\n    _s();\n    const initSource = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.untrack)(source);\n    if (_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.isServer) {\n        const copy = initSource.slice();\n        return ()=>copy;\n    }\n    const { onChange } = options;\n    let prevSet = new Set(options.appear ? void 0 : initSource);\n    const exiting = /* @__PURE__ */ new WeakSet();\n    const [toRemove, setToRemove] = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createSignal)([], {\n        equals: false\n    });\n    const [isTransitionPending] = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.useTransition)();\n    const finishRemoved = options.exitMethod === \"remove\" ? noop : (els)=>{\n        setToRemove((p2)=>(p2.push.apply(p2, els), p2));\n        for (const el of els)exiting.delete(el);\n    };\n    const handleRemoved = options.exitMethod === \"remove\" ? noop : options.exitMethod === \"keep-index\" ? (els, el, i2)=>els.splice(i2, 0, el) : (els, el)=>els.push(el);\n    return (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)((prev)=>{\n        const elsToRemove = toRemove();\n        const sourceList = source();\n        sourceList[_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.$TRACK];\n        if ((0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.untrack)(isTransitionPending)) {\n            isTransitionPending();\n            return prev;\n        }\n        if (elsToRemove.length) {\n            const next = prev.filter((e2)=>!elsToRemove.includes(e2));\n            elsToRemove.length = 0;\n            onChange({\n                list: next,\n                added: [],\n                removed: [],\n                unchanged: next,\n                finishRemoved\n            });\n            return next;\n        }\n        return (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.untrack)(()=>{\n            const nextSet = new Set(sourceList);\n            const next = sourceList.slice();\n            const added = [];\n            const removed = [];\n            const unchanged = [];\n            for (const el of sourceList){\n                (prevSet.has(el) ? unchanged : added).push(el);\n            }\n            let nothingChanged = !added.length;\n            for(let i2 = 0; i2 < prev.length; i2++){\n                const el = prev[i2];\n                if (!nextSet.has(el)) {\n                    if (!exiting.has(el)) {\n                        removed.push(el);\n                        exiting.add(el);\n                    }\n                    handleRemoved(next, el, i2);\n                }\n                if (nothingChanged && el !== next[i2]) nothingChanged = false;\n            }\n            if (!removed.length && nothingChanged) return prev;\n            onChange({\n                list: next,\n                added,\n                removed,\n                unchanged,\n                finishRemoved\n            });\n            prevSet = nextSet;\n            return next;\n        });\n    }, options.appear ? [] : initSource.slice());\n}\n_s(createListTransition, \"NgwygDCtH1iRpwx4nv2y42vGpHo=\", false, function() {\n    return [\n        _chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.useTransition\n    ];\n});\n// ../../node_modules/.pnpm/@solid-primitives+utils@6.2.3_solid-js@1.8.17/node_modules/@solid-primitives/utils/dist/chunk/R5675YMU.js\nvar isClient = !_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.isServer;\nvar isDev = isClient && !!_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.DEV;\nvar noop2 = ()=>void 0;\nvar isNonNullable = (i2)=>i2 != null;\nvar filterNonNullable = (arr)=>arr.filter(isNonNullable);\nfunction chain(callbacks) {\n    return function() {\n        for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){\n            args[_key] = arguments[_key];\n        }\n        for (const callback of callbacks)callback && callback(...args);\n    };\n}\nvar access = (v)=>typeof v === \"function\" && !v.length ? v() : v;\nvar asArray = (value)=>Array.isArray(value) ? value : value ? [\n        value\n    ] : [];\nfunction accessWith(valueOrFn) {\n    for(var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++){\n        args[_key - 1] = arguments[_key];\n    }\n    return typeof valueOrFn === \"function\" ? valueOrFn(...args) : valueOrFn;\n}\nvar tryOnCleanup = isDev ? (fn)=>(0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.getOwner)() ? (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.onCleanup)(fn) : fn : _chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.onCleanup;\nfunction handleDiffArray(current, prev, handleAdded, handleRemoved) {\n    const currLength = current.length;\n    const prevLength = prev.length;\n    let i2 = 0;\n    if (!prevLength) {\n        for(; i2 < currLength; i2++)handleAdded(current[i2]);\n        return;\n    }\n    if (!currLength) {\n        for(; i2 < prevLength; i2++)handleRemoved(prev[i2]);\n        return;\n    }\n    for(; i2 < prevLength; i2++){\n        if (prev[i2] !== current[i2]) break;\n    }\n    let prevEl;\n    let currEl;\n    prev = prev.slice(i2);\n    current = current.slice(i2);\n    for (prevEl of prev){\n        if (!current.includes(prevEl)) handleRemoved(prevEl);\n    }\n    for (currEl of current){\n        if (!prev.includes(currEl)) handleAdded(currEl);\n    }\n}\n// ../../node_modules/.pnpm/@solid-primitives+refs@1.0.5_solid-js@1.8.17/node_modules/@solid-primitives/refs/dist/index.js\nfunction mergeRefs() {\n    for(var _len = arguments.length, refs = new Array(_len), _key = 0; _key < _len; _key++){\n        refs[_key] = arguments[_key];\n    }\n    return chain(refs);\n}\nvar defaultElementPredicate = _chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.isServer ? (item)=>item != null && typeof item === \"object\" && \"t\" in item : (item)=>item instanceof Element;\nfunction getResolvedElements(value, predicate) {\n    if (predicate(value)) return value;\n    if (typeof value === \"function\" && !value.length) return getResolvedElements(value(), predicate);\n    if (Array.isArray(value)) {\n        const results = [];\n        for (const item of value){\n            const result = getResolvedElements(item, predicate);\n            if (result) Array.isArray(result) ? results.push.apply(results, result) : results.push(result);\n        }\n        return results.length ? results : null;\n    }\n    return null;\n}\nfunction resolveElements(fn) {\n    let predicate = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : defaultElementPredicate, serverPredicate = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : defaultElementPredicate;\n    const children2 = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(fn);\n    const memo = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(()=>getResolvedElements(children2(), _chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.isServer ? serverPredicate : predicate));\n    memo.toArray = ()=>{\n        const value = memo();\n        return Array.isArray(value) ? value : value ? [\n            value\n        ] : [];\n    };\n    return memo;\n}\n// ../../node_modules/.pnpm/solid-transition-group@0.2.3_solid-js@1.8.17/node_modules/solid-transition-group/dist/index.js\nfunction createClassnames(props) {\n    return (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(()=>{\n        const name = props.name || \"s\";\n        return {\n            enterActive: (props.enterActiveClass || name + \"-enter-active\").split(\" \"),\n            enter: (props.enterClass || name + \"-enter\").split(\" \"),\n            enterTo: (props.enterToClass || name + \"-enter-to\").split(\" \"),\n            exitActive: (props.exitActiveClass || name + \"-exit-active\").split(\" \"),\n            exit: (props.exitClass || name + \"-exit\").split(\" \"),\n            exitTo: (props.exitToClass || name + \"-exit-to\").split(\" \"),\n            move: (props.moveClass || name + \"-move\").split(\" \")\n        };\n    });\n}\nfunction nextFrame(fn) {\n    requestAnimationFrame(()=>requestAnimationFrame(fn));\n}\nfunction enterTransition(classes, events, el, done) {\n    const { onBeforeEnter, onEnter, onAfterEnter } = events;\n    onBeforeEnter === null || onBeforeEnter === void 0 ? void 0 : onBeforeEnter(el);\n    el.classList.add(...classes.enter);\n    el.classList.add(...classes.enterActive);\n    queueMicrotask(()=>{\n        if (!el.parentNode) return done === null || done === void 0 ? void 0 : done();\n        onEnter === null || onEnter === void 0 ? void 0 : onEnter(el, ()=>endTransition());\n    });\n    nextFrame(()=>{\n        el.classList.remove(...classes.enter);\n        el.classList.add(...classes.enterTo);\n        if (!onEnter || onEnter.length < 2) {\n            el.addEventListener(\"transitionend\", endTransition);\n            el.addEventListener(\"animationend\", endTransition);\n        }\n    });\n    function endTransition(e2) {\n        if (!e2 || e2.target === el) {\n            done === null || done === void 0 ? void 0 : done();\n            el.removeEventListener(\"transitionend\", endTransition);\n            el.removeEventListener(\"animationend\", endTransition);\n            el.classList.remove(...classes.enterActive);\n            el.classList.remove(...classes.enterTo);\n            onAfterEnter === null || onAfterEnter === void 0 ? void 0 : onAfterEnter(el);\n        }\n    }\n}\nfunction exitTransition(classes, events, el, done) {\n    const { onBeforeExit, onExit, onAfterExit } = events;\n    if (!el.parentNode) return done === null || done === void 0 ? void 0 : done();\n    onBeforeExit === null || onBeforeExit === void 0 ? void 0 : onBeforeExit(el);\n    el.classList.add(...classes.exit);\n    el.classList.add(...classes.exitActive);\n    onExit === null || onExit === void 0 ? void 0 : onExit(el, ()=>endTransition());\n    nextFrame(()=>{\n        el.classList.remove(...classes.exit);\n        el.classList.add(...classes.exitTo);\n        if (!onExit || onExit.length < 2) {\n            el.addEventListener(\"transitionend\", endTransition);\n            el.addEventListener(\"animationend\", endTransition);\n        }\n    });\n    function endTransition(e2) {\n        if (!e2 || e2.target === el) {\n            done === null || done === void 0 ? void 0 : done();\n            el.removeEventListener(\"transitionend\", endTransition);\n            el.removeEventListener(\"animationend\", endTransition);\n            el.classList.remove(...classes.exitActive);\n            el.classList.remove(...classes.exitTo);\n            onAfterExit === null || onAfterExit === void 0 ? void 0 : onAfterExit(el);\n        }\n    }\n}\nvar TransitionGroup = (props)=>{\n    const classnames = createClassnames(props);\n    return createListTransition(resolveElements(()=>props.children).toArray, {\n        appear: props.appear,\n        exitMethod: \"keep-index\",\n        onChange (param) {\n            let { added, removed, finishRemoved, list } = param;\n            const classes = classnames();\n            for (const el of added){\n                enterTransition(classes, props, el);\n            }\n            const toMove = [];\n            for (const el of list){\n                if (el.isConnected && (el instanceof HTMLElement || el instanceof SVGElement)) {\n                    toMove.push({\n                        el,\n                        rect: el.getBoundingClientRect()\n                    });\n                }\n            }\n            queueMicrotask(()=>{\n                const moved = [];\n                for (const { el, rect } of toMove){\n                    if (el.isConnected) {\n                        const newRect = el.getBoundingClientRect(), dX = rect.left - newRect.left, dY = rect.top - newRect.top;\n                        if (dX || dY) {\n                            el.style.transform = \"translate(\".concat(dX, \"px, \").concat(dY, \"px)\");\n                            el.style.transitionDuration = \"0s\";\n                            moved.push(el);\n                        }\n                    }\n                }\n                document.body.offsetHeight;\n                for (const el of moved){\n                    let endTransition2 = function(e2) {\n                        if (e2.target === el || /transform$/.test(e2.propertyName)) {\n                            el.removeEventListener(\"transitionend\", endTransition2);\n                            el.classList.remove(...classes.move);\n                        }\n                    };\n                    el.classList.add(...classes.move);\n                    el.style.transform = el.style.transitionDuration = \"\";\n                    el.addEventListener(\"transitionend\", endTransition2);\n                }\n            });\n            for (const el of removed){\n                exitTransition(classes, props, el, ()=>finishRemoved([\n                        el\n                    ]));\n            }\n        }\n    });\n};\n_c = TransitionGroup;\n// ../../node_modules/.pnpm/@solid-primitives+keyed@1.2.2_solid-js@1.8.17/node_modules/@solid-primitives/keyed/dist/index.js\nvar FALLBACK = Symbol(\"fallback\");\nfunction dispose(list) {\n    for (const o2 of list)o2.dispose();\n}\nfunction keyArray(items, keyFn, mapFn) {\n    let options = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : {};\n    if (_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.isServer) {\n        const itemsRef = items();\n        let s2 = [];\n        if (itemsRef && itemsRef.length) {\n            for(let i2 = 0, len = itemsRef.length; i2 < len; i2++)s2.push(mapFn(()=>itemsRef[i2], ()=>i2));\n        } else if (options.fallback) s2 = [\n            options.fallback()\n        ];\n        return ()=>s2;\n    }\n    const prev = /* @__PURE__ */ new Map();\n    (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.onCleanup)(()=>dispose(prev.values()));\n    return ()=>{\n        const list = items() || [];\n        list[_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.$TRACK];\n        return (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.untrack)(()=>{\n            if (!list.length) {\n                dispose(prev.values());\n                prev.clear();\n                if (!options.fallback) return [];\n                const fb2 = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createRoot)((dispose2)=>{\n                    prev.set(FALLBACK, {\n                        dispose: dispose2\n                    });\n                    return options.fallback();\n                });\n                return [\n                    fb2\n                ];\n            }\n            const result = new Array(list.length);\n            const fb = prev.get(FALLBACK);\n            if (!prev.size || fb) {\n                fb === null || fb === void 0 ? void 0 : fb.dispose();\n                prev.delete(FALLBACK);\n                for(let i2 = 0; i2 < list.length; i2++){\n                    const item = list[i2];\n                    const key = keyFn(item, i2);\n                    addNewItem(result, item, i2, key);\n                }\n                return result;\n            }\n            const prevKeys = new Set(prev.keys());\n            for(let i2 = 0; i2 < list.length; i2++){\n                const item = list[i2];\n                const key = keyFn(item, i2);\n                prevKeys.delete(key);\n                const lookup = prev.get(key);\n                if (lookup) {\n                    var _lookup_setIndex;\n                    result[i2] = lookup.mapped;\n                    (_lookup_setIndex = lookup.setIndex) === null || _lookup_setIndex === void 0 ? void 0 : _lookup_setIndex.call(lookup, i2);\n                    lookup.setItem(()=>item);\n                } else addNewItem(result, item, i2, key);\n            }\n            for (const key of prevKeys){\n                var _prev_get;\n                (_prev_get = prev.get(key)) === null || _prev_get === void 0 ? void 0 : _prev_get.dispose();\n                prev.delete(key);\n            }\n            return result;\n        });\n    };\n    function addNewItem(list, item, i2, key) {\n        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createRoot)((dispose2)=>{\n            const [getItem, setItem] = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createSignal)(item);\n            const save = {\n                setItem,\n                dispose: dispose2\n            };\n            if (mapFn.length > 1) {\n                const [index, setIndex] = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createSignal)(i2);\n                save.setIndex = setIndex;\n                save.mapped = mapFn(getItem, index);\n            } else save.mapped = mapFn(getItem);\n            prev.set(key, save);\n            list[i2] = save.mapped;\n        });\n    }\n}\nfunction Key(props) {\n    const { by } = props;\n    return (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(keyArray(()=>props.each, typeof by === \"function\" ? by : (v)=>v[by], props.children, \"fallback\" in props ? {\n        fallback: ()=>props.fallback\n    } : void 0));\n}\n_c1 = Key;\n// ../../node_modules/.pnpm/@solid-primitives+storage@1.3.11_solid-js@1.8.17/node_modules/@solid-primitives/storage/dist/index.js\nfunction createStorage(props) {\n    const [error, setError] = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createSignal)();\n    const handleError = (props === null || props === void 0 ? void 0 : props.throw) ? (err, fallback)=>{\n        setError(err instanceof Error ? err : new Error(fallback));\n        throw err;\n    } : (err, fallback)=>{\n        setError(err instanceof Error ? err : new Error(fallback));\n    };\n    const apis = (props === null || props === void 0 ? void 0 : props.api) ? Array.isArray(props.api) ? props.api : [\n        props.api\n    ] : [\n        globalThis.localStorage\n    ].filter(Boolean);\n    const prefix = (props === null || props === void 0 ? void 0 : props.prefix) ? \"\".concat(props.prefix, \".\") : \"\";\n    const signals = /* @__PURE__ */ new Map();\n    const store = new Proxy({}, {\n        get (_, key) {\n            let node = signals.get(key);\n            if (!node) {\n                node = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createSignal)(void 0, {\n                    equals: false\n                });\n                signals.set(key, node);\n            }\n            node[0]();\n            const value = apis.reduce((result, api)=>{\n                if (result !== null || !api) {\n                    return result;\n                }\n                try {\n                    return api.getItem(\"\".concat(prefix).concat(key));\n                } catch (err) {\n                    handleError(err, \"Error reading \".concat(prefix).concat(key, \" from \").concat(api[\"name\"]));\n                    return null;\n                }\n            }, null);\n            if (value !== null && (props === null || props === void 0 ? void 0 : props.deserializer)) {\n                return props.deserializer(value, key, props.options);\n            }\n            return value;\n        }\n    });\n    const setter = (key, value, options)=>{\n        const filteredValue = (props === null || props === void 0 ? void 0 : props.serializer) ? props.serializer(value, key, options !== null && options !== void 0 ? options : props.options) : value;\n        const apiKey = \"\".concat(prefix).concat(key);\n        apis.forEach((api)=>{\n            try {\n                api.getItem(apiKey) !== filteredValue && api.setItem(apiKey, filteredValue);\n            } catch (err) {\n                handleError(err, \"Error setting \".concat(prefix).concat(key, \" to \").concat(filteredValue, \" in \").concat(api.name));\n            }\n        });\n        const node = signals.get(key);\n        node && node[1]();\n    };\n    const remove = (key)=>apis.forEach((api)=>{\n            try {\n                api.removeItem(\"\".concat(prefix).concat(key));\n            } catch (err) {\n                handleError(err, \"Error removing \".concat(prefix).concat(key, \" from \").concat(api.name));\n            }\n        });\n    const clear = ()=>apis.forEach((api)=>{\n            try {\n                api.clear();\n            } catch (err) {\n                handleError(err, \"Error clearing \".concat(api.name));\n            }\n        });\n    const toJSON = ()=>{\n        const result = {};\n        const addValue = (key, value)=>{\n            if (!result.hasOwnProperty(key)) {\n                const filteredValue = value && (props === null || props === void 0 ? void 0 : props.deserializer) ? props.deserializer(value, key, props.options) : value;\n                if (filteredValue) {\n                    result[key] = filteredValue;\n                }\n            }\n        };\n        apis.forEach((api)=>{\n            if (typeof api.getAll === \"function\") {\n                let values;\n                try {\n                    values = api.getAll();\n                } catch (err) {\n                    handleError(err, \"Error getting all values from in \".concat(api.name));\n                }\n                for (const key of values){\n                    addValue(key, values[key]);\n                }\n            } else {\n                let index = 0, key;\n                try {\n                    while(key = api.key(index++)){\n                        if (!result.hasOwnProperty(key)) {\n                            addValue(key, api.getItem(key));\n                        }\n                    }\n                } catch (err) {\n                    handleError(err, \"Error getting all values from \".concat(api.name));\n                }\n            }\n        });\n        return result;\n    };\n    (props === null || props === void 0 ? void 0 : props.sync) !== false && (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.onMount)(()=>{\n        const listener = (ev)=>{\n            var _signals_get;\n            let changed = false;\n            apis.forEach((api)=>{\n                try {\n                    if (api !== ev.storageArea && ev.key && ev.newValue !== api.getItem(ev.key)) {\n                        ev.newValue ? api.setItem(ev.key, ev.newValue) : api.removeItem(ev.key);\n                        changed = true;\n                    }\n                } catch (err) {\n                    handleError(err, \"Error synching api \".concat(api.name, \" from storage event (\").concat(ev.key, \"=\").concat(ev.newValue, \")\"));\n                }\n            });\n            changed && ev.key && ((_signals_get = signals.get(ev.key)) === null || _signals_get === void 0 ? void 0 : _signals_get[1]());\n        };\n        if (\"addEventListener\" in globalThis) {\n            globalThis.addEventListener(\"storage\", listener);\n            (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.onCleanup)(()=>globalThis.removeEventListener(\"storage\", listener));\n        } else {\n            apis.forEach((api)=>{\n                var _api_addEventListener;\n                return (_api_addEventListener = api.addEventListener) === null || _api_addEventListener === void 0 ? void 0 : _api_addEventListener.call(api, \"storage\", listener);\n            });\n            (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.onCleanup)(()=>apis.forEach((api)=>{\n                    var _api_removeEventListener;\n                    return (_api_removeEventListener = api.removeEventListener) === null || _api_removeEventListener === void 0 ? void 0 : _api_removeEventListener.call(api, \"storage\", listener);\n                }));\n        }\n    });\n    return [\n        store,\n        setter,\n        {\n            clear,\n            error,\n            remove,\n            toJSON\n        }\n    ];\n}\nvar createLocalStorage = createStorage;\nvar addClearMethod = (storage)=>{\n    if (typeof storage.clear === \"function\") {\n        return storage;\n    }\n    storage.clear = ()=>{\n        let key;\n        while(key = storage.key(0)){\n            storage.removeItem(key);\n        }\n    };\n    return storage;\n};\nvar serializeCookieOptions = (options)=>{\n    if (!options) {\n        return \"\";\n    }\n    let memo = \"\";\n    for(const key in options){\n        if (!options.hasOwnProperty(key)) {\n            continue;\n        }\n        const value = options[key];\n        memo += value instanceof Date ? \"; \".concat(key, \"=\").concat(value.toUTCString()) : typeof value === \"boolean\" ? \"; \".concat(key) : \"; \".concat(key, \"=\").concat(value);\n    }\n    return memo;\n};\nvar cookieStorage = addClearMethod({\n    _cookies: [\n        globalThis.document,\n        \"cookie\"\n    ],\n    getItem: (key)=>{\n        var _cookieStorage__cookies__cookieStorage__cookies__match;\n        var _cookieStorage__cookies__cookieStorage__cookies__match_pop;\n        return (_cookieStorage__cookies__cookieStorage__cookies__match_pop = (_cookieStorage__cookies__cookieStorage__cookies__match = cookieStorage._cookies[0][cookieStorage._cookies[1]].match(\"(^|;)\\\\s*\" + key + \"\\\\s*=\\\\s*([^;]+)\")) === null || _cookieStorage__cookies__cookieStorage__cookies__match === void 0 ? void 0 : _cookieStorage__cookies__cookieStorage__cookies__match.pop()) !== null && _cookieStorage__cookies__cookieStorage__cookies__match_pop !== void 0 ? _cookieStorage__cookies__cookieStorage__cookies__match_pop : null;\n    },\n    setItem: (key, value, options)=>{\n        const oldValue = cookieStorage.getItem(key);\n        cookieStorage._cookies[0][cookieStorage._cookies[1]] = \"\".concat(key, \"=\").concat(value).concat(serializeCookieOptions(options));\n        const storageEvent = Object.assign(new Event(\"storage\"), {\n            key,\n            oldValue,\n            newValue: value,\n            url: globalThis.document.URL,\n            storageArea: cookieStorage\n        });\n        window.dispatchEvent(storageEvent);\n    },\n    removeItem: (key)=>{\n        cookieStorage._cookies[0][cookieStorage._cookies[1]] = \"\".concat(key, \"=deleted\").concat(serializeCookieOptions({\n            expires: /* @__PURE__ */ new Date(0)\n        }));\n    },\n    key: (index)=>{\n        let key = null;\n        let count = 0;\n        cookieStorage._cookies[0][cookieStorage._cookies[1]].replace(/(?:^|;)\\s*(.+?)\\s*=\\s*[^;]+/g, (_, found)=>{\n            if (!key && found && count++ === index) {\n                key = found;\n            }\n            return \"\";\n        });\n        return key;\n    },\n    get length () {\n        let length = 0;\n        cookieStorage._cookies[0][cookieStorage._cookies[1]].replace(/(?:^|;)\\s*.+?\\s*=\\s*[^;]+/g, (found)=>{\n            length += found ? 1 : 0;\n            return \"\";\n        });\n        return length;\n    }\n});\n// ../../node_modules/.pnpm/@solid-primitives+event-listener@2.3.3_solid-js@1.8.17/node_modules/@solid-primitives/event-listener/dist/index.js\nfunction makeEventListener(target, type, handler, options) {\n    target.addEventListener(type, handler, options);\n    return tryOnCleanup(target.removeEventListener.bind(target, type, handler, options));\n}\nfunction createEventListener(targets, type, handler, options) {\n    if (_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.isServer) return;\n    const attachListeners = ()=>{\n        asArray(access(targets)).forEach((el)=>{\n            if (el) asArray(access(type)).forEach((type2)=>makeEventListener(el, type2, handler, options));\n        });\n    };\n    if (typeof targets === \"function\") (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createEffect)(attachListeners);\n    else (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createRenderEffect)(attachListeners);\n}\n// ../../node_modules/.pnpm/@solid-primitives+resize-observer@2.0.25_solid-js@1.8.17/node_modules/@solid-primitives/resize-observer/dist/index.js\nfunction makeResizeObserver(callback, options) {\n    if (_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.isServer) {\n        return {\n            observe: noop2,\n            unobserve: noop2\n        };\n    }\n    const observer = new ResizeObserver(callback);\n    (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.onCleanup)(observer.disconnect.bind(observer));\n    return {\n        observe: (ref)=>observer.observe(ref, options),\n        unobserve: observer.unobserve.bind(observer)\n    };\n}\nfunction createResizeObserver(targets, onResize, options) {\n    if (_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.isServer) return;\n    const previousMap = /* @__PURE__ */ new WeakMap(), { observe, unobserve } = makeResizeObserver((entries2)=>{\n        for (const entry of entries2){\n            const { contentRect, target } = entry, width = Math.round(contentRect.width), height = Math.round(contentRect.height), previous = previousMap.get(target);\n            if (!previous || previous.width !== width || previous.height !== height) {\n                onResize(contentRect, target, entry);\n                previousMap.set(target, {\n                    width,\n                    height\n                });\n            }\n        }\n    }, options);\n    (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createEffect)((prev)=>{\n        const refs = filterNonNullable(asArray(access(targets)));\n        handleDiffArray(refs, prev, observe, unobserve);\n        return refs;\n    }, []);\n}\n// ../../node_modules/.pnpm/@kobalte+utils@0.9.0_solid-js@1.8.17/node_modules/@kobalte/utils/dist/index.js\nfunction addItemToArray(array, item) {\n    let index = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : -1;\n    if (!(index in array)) {\n        return [\n            ...array,\n            item\n        ];\n    }\n    return [\n        ...array.slice(0, index),\n        item,\n        ...array.slice(index)\n    ];\n}\nfunction removeItemFromArray(array, item) {\n    const updatedArray = [\n        ...array\n    ];\n    const index = updatedArray.indexOf(item);\n    if (index !== -1) {\n        updatedArray.splice(index, 1);\n    }\n    return updatedArray;\n}\nfunction isNumber(value) {\n    return typeof value === \"number\";\n}\nfunction isString(value) {\n    return Object.prototype.toString.call(value) === \"[object String]\";\n}\nfunction isFunction(value) {\n    return typeof value === \"function\";\n}\nfunction createGenerateId(baseId) {\n    return (suffix)=>\"\".concat(baseId(), \"-\").concat(suffix);\n}\nfunction contains(parent, child) {\n    if (!parent) {\n        return false;\n    }\n    return parent === child || parent.contains(child);\n}\nfunction getActiveElement(node) {\n    let activeDescendant = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;\n    const { activeElement } = getDocument(node);\n    if (!(activeElement === null || activeElement === void 0 ? void 0 : activeElement.nodeName)) {\n        return null;\n    }\n    if (isFrame(activeElement) && activeElement.contentDocument) {\n        return getActiveElement(activeElement.contentDocument.body, activeDescendant);\n    }\n    if (activeDescendant) {\n        const id = activeElement.getAttribute(\"aria-activedescendant\");\n        if (id) {\n            const element = getDocument(activeElement).getElementById(id);\n            if (element) {\n                return element;\n            }\n        }\n    }\n    return activeElement;\n}\nfunction getWindow(node) {\n    return getDocument(node).defaultView || window;\n}\nfunction getDocument(node) {\n    return node ? node.ownerDocument || node : document;\n}\nfunction isFrame(element) {\n    return element.tagName === \"IFRAME\";\n}\nvar EventKey = /* @__PURE__ */ ((EventKey2)=>{\n    EventKey2[\"Escape\"] = \"Escape\";\n    EventKey2[\"Enter\"] = \"Enter\";\n    EventKey2[\"Tab\"] = \"Tab\";\n    EventKey2[\"Space\"] = \" \";\n    EventKey2[\"ArrowDown\"] = \"ArrowDown\";\n    EventKey2[\"ArrowLeft\"] = \"ArrowLeft\";\n    EventKey2[\"ArrowRight\"] = \"ArrowRight\";\n    EventKey2[\"ArrowUp\"] = \"ArrowUp\";\n    EventKey2[\"End\"] = \"End\";\n    EventKey2[\"Home\"] = \"Home\";\n    EventKey2[\"PageDown\"] = \"PageDown\";\n    EventKey2[\"PageUp\"] = \"PageUp\";\n    return EventKey2;\n})(EventKey || {});\nfunction testPlatform(re) {\n    var _window_navigator_userAgentData;\n    return  true && window.navigator != null ? // @ts-ignore\n    re.test(((_window_navigator_userAgentData = window.navigator[\"userAgentData\"]) === null || _window_navigator_userAgentData === void 0 ? void 0 : _window_navigator_userAgentData.platform) || window.navigator.platform) : false;\n}\nfunction isMac() {\n    return testPlatform(/^Mac/i);\n}\nfunction isIPhone() {\n    return testPlatform(/^iPhone/i);\n}\nfunction isIPad() {\n    return testPlatform(/^iPad/i) || // iPadOS 13 lies and says it's a Mac, but we can distinguish by detecting touch support.\n    isMac() && navigator.maxTouchPoints > 1;\n}\nfunction isIOS() {\n    return isIPhone() || isIPad();\n}\nfunction isAppleDevice() {\n    return isMac() || isIOS();\n}\nfunction callHandler(event, handler) {\n    if (handler) {\n        if (isFunction(handler)) {\n            handler(event);\n        } else {\n            handler[0](handler[1], event);\n        }\n    }\n    return event === null || event === void 0 ? void 0 : event.defaultPrevented;\n}\nfunction composeEventHandlers(handlers) {\n    return (event)=>{\n        for (const handler of handlers){\n            callHandler(event, handler);\n        }\n    };\n}\nfunction isCtrlKey(e2) {\n    if (isMac()) {\n        return e2.metaKey && !e2.ctrlKey;\n    }\n    return e2.ctrlKey && !e2.metaKey;\n}\nfunction focusWithoutScrolling(element) {\n    if (!element) {\n        return;\n    }\n    if (supportsPreventScroll()) {\n        element.focus({\n            preventScroll: true\n        });\n    } else {\n        const scrollableElements = getScrollableElements(element);\n        element.focus();\n        restoreScrollPosition(scrollableElements);\n    }\n}\nvar supportsPreventScrollCached = null;\nfunction supportsPreventScroll() {\n    if (supportsPreventScrollCached == null) {\n        supportsPreventScrollCached = false;\n        try {\n            const focusElem = document.createElement(\"div\");\n            focusElem.focus({\n                get preventScroll () {\n                    supportsPreventScrollCached = true;\n                    return true;\n                }\n            });\n        } catch (e2) {}\n    }\n    return supportsPreventScrollCached;\n}\nfunction getScrollableElements(element) {\n    let parent = element.parentNode;\n    const scrollableElements = [];\n    const rootScrollingElement = document.scrollingElement || document.documentElement;\n    while(parent instanceof HTMLElement && parent !== rootScrollingElement){\n        if (parent.offsetHeight < parent.scrollHeight || parent.offsetWidth < parent.scrollWidth) {\n            scrollableElements.push({\n                element: parent,\n                scrollTop: parent.scrollTop,\n                scrollLeft: parent.scrollLeft\n            });\n        }\n        parent = parent.parentNode;\n    }\n    if (rootScrollingElement instanceof HTMLElement) {\n        scrollableElements.push({\n            element: rootScrollingElement,\n            scrollTop: rootScrollingElement.scrollTop,\n            scrollLeft: rootScrollingElement.scrollLeft\n        });\n    }\n    return scrollableElements;\n}\nfunction restoreScrollPosition(scrollableElements) {\n    for (const { element, scrollTop, scrollLeft } of scrollableElements){\n        element.scrollTop = scrollTop;\n        element.scrollLeft = scrollLeft;\n    }\n}\nvar focusableElements = [\n    \"input:not([type='hidden']):not([disabled])\",\n    \"select:not([disabled])\",\n    \"textarea:not([disabled])\",\n    \"button:not([disabled])\",\n    \"a[href]\",\n    \"area[href]\",\n    \"[tabindex]\",\n    \"iframe\",\n    \"object\",\n    \"embed\",\n    \"audio[controls]\",\n    \"video[controls]\",\n    \"[contenteditable]:not([contenteditable='false'])\"\n];\nvar tabbableElements = [\n    ...focusableElements,\n    '[tabindex]:not([tabindex=\"-1\"]):not([disabled])'\n];\nvar FOCUSABLE_ELEMENT_SELECTOR = focusableElements.join(\":not([hidden]),\") + \",[tabindex]:not([disabled]):not([hidden])\";\nvar TABBABLE_ELEMENT_SELECTOR = tabbableElements.join(':not([hidden]):not([tabindex=\"-1\"]),');\nfunction getAllTabbableIn(container, includeContainer) {\n    const elements = Array.from(container.querySelectorAll(FOCUSABLE_ELEMENT_SELECTOR));\n    const tabbableElements2 = elements.filter(isTabbable);\n    if (includeContainer && isTabbable(container)) {\n        tabbableElements2.unshift(container);\n    }\n    tabbableElements2.forEach((element, i2)=>{\n        if (isFrame(element) && element.contentDocument) {\n            const frameBody = element.contentDocument.body;\n            const allFrameTabbable = getAllTabbableIn(frameBody, false);\n            tabbableElements2.splice(i2, 1, ...allFrameTabbable);\n        }\n    });\n    return tabbableElements2;\n}\nfunction isTabbable(element) {\n    return isFocusable(element) && !hasNegativeTabIndex(element);\n}\nfunction isFocusable(element) {\n    return element.matches(FOCUSABLE_ELEMENT_SELECTOR) && isElementVisible(element);\n}\nfunction hasNegativeTabIndex(element) {\n    const tabIndex = parseInt(element.getAttribute(\"tabindex\") || \"0\", 10);\n    return tabIndex < 0;\n}\nfunction isElementVisible(element, childElement) {\n    return element.nodeName !== \"#comment\" && isStyleVisible(element) && isAttributeVisible(element, childElement) && (!element.parentElement || isElementVisible(element.parentElement, element));\n}\nfunction isStyleVisible(element) {\n    if (!(element instanceof HTMLElement) && !(element instanceof SVGElement)) {\n        return false;\n    }\n    const { display, visibility } = element.style;\n    let isVisible = display !== \"none\" && visibility !== \"hidden\" && visibility !== \"collapse\";\n    if (isVisible) {\n        if (!element.ownerDocument.defaultView) {\n            return isVisible;\n        }\n        const { getComputedStyle: getComputedStyle3 } = element.ownerDocument.defaultView;\n        const { display: computedDisplay, visibility: computedVisibility } = getComputedStyle3(element);\n        isVisible = computedDisplay !== \"none\" && computedVisibility !== \"hidden\" && computedVisibility !== \"collapse\";\n    }\n    return isVisible;\n}\nfunction isAttributeVisible(element, childElement) {\n    return !element.hasAttribute(\"hidden\") && (element.nodeName === \"DETAILS\" && childElement && childElement.nodeName !== \"SUMMARY\" ? element.hasAttribute(\"open\") : true);\n}\nfunction isElementInScope(element, scope) {\n    return scope.some((node)=>node.contains(element));\n}\nfunction getFocusableTreeWalker(root, opts, scope) {\n    const selector = (opts === null || opts === void 0 ? void 0 : opts.tabbable) ? TABBABLE_ELEMENT_SELECTOR : FOCUSABLE_ELEMENT_SELECTOR;\n    const walker = document.createTreeWalker(root, NodeFilter.SHOW_ELEMENT, {\n        acceptNode (node) {\n            var _opts_from;\n            if (opts === null || opts === void 0 ? void 0 : (_opts_from = opts.from) === null || _opts_from === void 0 ? void 0 : _opts_from.contains(node)) {\n                return NodeFilter.FILTER_REJECT;\n            }\n            if (node.matches(selector) && isElementVisible(node) && (!scope || isElementInScope(node, scope)) && (!(opts === null || opts === void 0 ? void 0 : opts.accept) || opts.accept(node))) {\n                return NodeFilter.FILTER_ACCEPT;\n            }\n            return NodeFilter.FILTER_SKIP;\n        }\n    });\n    if (opts === null || opts === void 0 ? void 0 : opts.from) {\n        walker.currentNode = opts.from;\n    }\n    return walker;\n}\nfunction getScrollParent(node) {\n    while(node && !isScrollable(node)){\n        node = node.parentElement;\n    }\n    return node || document.scrollingElement || document.documentElement;\n}\nfunction isScrollable(node) {\n    const style = window.getComputedStyle(node);\n    return /(auto|scroll)/.test(style.overflow + style.overflowX + style.overflowY);\n}\nfunction noop3() {\n    return;\n}\nfunction isPointInPolygon(point, polygon) {\n    const [x, y] = point;\n    let inside = false;\n    const length = polygon.length;\n    for(let l2 = length, i2 = 0, j = l2 - 1; i2 < l2; j = i2++){\n        const [xi, yi] = polygon[i2];\n        const [xj, yj] = polygon[j];\n        const [, vy] = polygon[j === 0 ? l2 - 1 : j - 1] || [\n            0,\n            0\n        ];\n        const where = (yi - yj) * (x - xi) - (xi - xj) * (y - yi);\n        if (yj < yi) {\n            if (y >= yj && y < yi) {\n                if (where === 0) return true;\n                if (where > 0) {\n                    if (y === yj) {\n                        if (y > vy) {\n                            inside = !inside;\n                        }\n                    } else {\n                        inside = !inside;\n                    }\n                }\n            }\n        } else if (yi < yj) {\n            if (y > yi && y <= yj) {\n                if (where === 0) return true;\n                if (where < 0) {\n                    if (y === yj) {\n                        if (y < vy) {\n                            inside = !inside;\n                        }\n                    } else {\n                        inside = !inside;\n                    }\n                }\n            }\n        } else if (y == yi && (x >= xj && x <= xi || x >= xi && x <= xj)) {\n            return true;\n        }\n    }\n    return inside;\n}\nfunction mergeDefaultProps(defaultProps, props) {\n    return (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.mergeProps)(defaultProps, props);\n}\nvar transitionsByElement = /* @__PURE__ */ new Map();\nvar transitionCallbacks = /* @__PURE__ */ new Set();\nfunction setupGlobalEvents() {\n    if (false) {}\n    const onTransitionStart = (e2)=>{\n        if (!e2.target) {\n            return;\n        }\n        let transitions = transitionsByElement.get(e2.target);\n        if (!transitions) {\n            transitions = /* @__PURE__ */ new Set();\n            transitionsByElement.set(e2.target, transitions);\n            e2.target.addEventListener(\"transitioncancel\", onTransitionEnd);\n        }\n        transitions.add(e2.propertyName);\n    };\n    const onTransitionEnd = (e2)=>{\n        if (!e2.target) {\n            return;\n        }\n        const properties = transitionsByElement.get(e2.target);\n        if (!properties) {\n            return;\n        }\n        properties.delete(e2.propertyName);\n        if (properties.size === 0) {\n            e2.target.removeEventListener(\"transitioncancel\", onTransitionEnd);\n            transitionsByElement.delete(e2.target);\n        }\n        if (transitionsByElement.size === 0) {\n            for (const cb of transitionCallbacks){\n                cb();\n            }\n            transitionCallbacks.clear();\n        }\n    };\n    document.body.addEventListener(\"transitionrun\", onTransitionStart);\n    document.body.addEventListener(\"transitionend\", onTransitionEnd);\n}\nif (typeof document !== \"undefined\") {\n    if (document.readyState !== \"loading\") {\n        setupGlobalEvents();\n    } else {\n        document.addEventListener(\"DOMContentLoaded\", setupGlobalEvents);\n    }\n}\nfunction scrollIntoView(scrollView, element) {\n    const offsetX = relativeOffset(scrollView, element, \"left\");\n    const offsetY = relativeOffset(scrollView, element, \"top\");\n    const width = element.offsetWidth;\n    const height = element.offsetHeight;\n    let x = scrollView.scrollLeft;\n    let y = scrollView.scrollTop;\n    const maxX = x + scrollView.offsetWidth;\n    const maxY = y + scrollView.offsetHeight;\n    if (offsetX <= x) {\n        x = offsetX;\n    } else if (offsetX + width > maxX) {\n        x += offsetX + width - maxX;\n    }\n    if (offsetY <= y) {\n        y = offsetY;\n    } else if (offsetY + height > maxY) {\n        y += offsetY + height - maxY;\n    }\n    scrollView.scrollLeft = x;\n    scrollView.scrollTop = y;\n}\nfunction relativeOffset(ancestor, child, axis) {\n    const prop = axis === \"left\" ? \"offsetLeft\" : \"offsetTop\";\n    let sum = 0;\n    while(child.offsetParent){\n        sum += child[prop];\n        if (child.offsetParent === ancestor) {\n            break;\n        } else if (child.offsetParent.contains(ancestor)) {\n            sum -= ancestor[prop];\n            break;\n        }\n        child = child.offsetParent;\n    }\n    return sum;\n}\nfunction scrollIntoViewport(targetElement, opts) {\n    if (document.contains(targetElement)) {\n        const root = document.scrollingElement || document.documentElement;\n        const isScrollPrevented = window.getComputedStyle(root).overflow === \"hidden\";\n        if (!isScrollPrevented) {\n            var _targetElement_scrollIntoView;\n            const { left: originalLeft, top: originalTop } = targetElement.getBoundingClientRect();\n            targetElement === null || targetElement === void 0 ? void 0 : (_targetElement_scrollIntoView = targetElement.scrollIntoView) === null || _targetElement_scrollIntoView === void 0 ? void 0 : _targetElement_scrollIntoView.call(targetElement, {\n                block: \"nearest\"\n            });\n            const { left: newLeft, top: newTop } = targetElement.getBoundingClientRect();\n            if (Math.abs(originalLeft - newLeft) > 1 || Math.abs(originalTop - newTop) > 1) {\n                var _opts_containingElement_scrollIntoView, _opts_containingElement, _targetElement_scrollIntoView1;\n                opts === null || opts === void 0 ? void 0 : (_opts_containingElement = opts.containingElement) === null || _opts_containingElement === void 0 ? void 0 : (_opts_containingElement_scrollIntoView = _opts_containingElement.scrollIntoView) === null || _opts_containingElement_scrollIntoView === void 0 ? void 0 : _opts_containingElement_scrollIntoView.call(_opts_containingElement, {\n                    block: \"center\",\n                    inline: \"center\"\n                });\n                (_targetElement_scrollIntoView1 = targetElement.scrollIntoView) === null || _targetElement_scrollIntoView1 === void 0 ? void 0 : _targetElement_scrollIntoView1.call(targetElement, {\n                    block: \"nearest\"\n                });\n            }\n        } else {\n            let scrollParent = getScrollParent(targetElement);\n            while(targetElement && scrollParent && targetElement !== root && scrollParent !== root){\n                scrollIntoView(scrollParent, targetElement);\n                targetElement = scrollParent;\n                scrollParent = getScrollParent(targetElement);\n            }\n        }\n    }\n}\nvar visuallyHiddenStyles = {\n    border: \"0\",\n    clip: \"rect(0 0 0 0)\",\n    \"clip-path\": \"inset(50%)\",\n    height: \"1px\",\n    margin: \"0 -1px -1px 0\",\n    overflow: \"hidden\",\n    padding: \"0\",\n    position: \"absolute\",\n    width: \"1px\",\n    \"white-space\": \"nowrap\"\n};\n// ../../node_modules/.pnpm/@kobalte+core@0.13.1_solid-js@1.8.17/node_modules/@kobalte/core/dist/chunk/BLN63FDC.js\nfunction createControllableSignal(props) {\n    var _props_defaultValue;\n    const [_value, _setValue] = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createSignal)((_props_defaultValue = props.defaultValue) === null || _props_defaultValue === void 0 ? void 0 : _props_defaultValue.call(props));\n    const isControlled = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(()=>{\n        var _props_value;\n        return ((_props_value = props.value) === null || _props_value === void 0 ? void 0 : _props_value.call(props)) !== void 0;\n    });\n    const value = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(()=>{\n        var _props_value;\n        return isControlled() ? (_props_value = props.value) === null || _props_value === void 0 ? void 0 : _props_value.call(props) : _value();\n    });\n    const setValue = (next)=>{\n        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.untrack)(()=>{\n            const nextValue = accessWith(next, value());\n            if (!Object.is(nextValue, value())) {\n                var _props_onChange;\n                if (!isControlled()) {\n                    _setValue(nextValue);\n                }\n                (_props_onChange = props.onChange) === null || _props_onChange === void 0 ? void 0 : _props_onChange.call(props, nextValue);\n            }\n            return nextValue;\n        });\n    };\n    return [\n        value,\n        setValue\n    ];\n}\nfunction createControllableBooleanSignal(props) {\n    const [_value, setValue] = createControllableSignal(props);\n    const value = ()=>{\n        var _value1;\n        return (_value1 = _value()) !== null && _value1 !== void 0 ? _value1 : false;\n    };\n    return [\n        value,\n        setValue\n    ];\n}\nfunction createControllableArraySignal(props) {\n    const [_value, setValue] = createControllableSignal(props);\n    const value = ()=>{\n        var _value1;\n        return (_value1 = _value()) !== null && _value1 !== void 0 ? _value1 : [];\n    };\n    return [\n        value,\n        setValue\n    ];\n}\n// ../../node_modules/.pnpm/@kobalte+core@0.13.1_solid-js@1.8.17/node_modules/@kobalte/core/dist/chunk/7CVNMTYF.js\nvar DomCollectionContext = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createContext)();\nfunction useOptionalDomCollectionContext() {\n    _s1();\n    return (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.useContext)(DomCollectionContext);\n}\n_s1(useOptionalDomCollectionContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nfunction useDomCollectionContext() {\n    _s2();\n    const context = useOptionalDomCollectionContext();\n    if (context === void 0) {\n        throw new Error(\"[kobalte]: `useDomCollectionContext` must be used within a `DomCollectionProvider` component\");\n    }\n    return context;\n}\n_s2(useDomCollectionContext, \"nmgAACrHCowBSA47jQ580mCwWqk=\", false, function() {\n    return [\n        useOptionalDomCollectionContext\n    ];\n});\nfunction isElementPreceding(a2, b2) {\n    return Boolean(b2.compareDocumentPosition(a2) & Node.DOCUMENT_POSITION_PRECEDING);\n}\nfunction findDOMIndex(items, item) {\n    const itemEl = item.ref();\n    if (!itemEl) {\n        return -1;\n    }\n    let length = items.length;\n    if (!length) {\n        return -1;\n    }\n    while(length--){\n        var _items_length;\n        const currentItemEl = (_items_length = items[length]) === null || _items_length === void 0 ? void 0 : _items_length.ref();\n        if (!currentItemEl) {\n            continue;\n        }\n        if (isElementPreceding(currentItemEl, itemEl)) {\n            return length + 1;\n        }\n    }\n    return 0;\n}\nfunction sortBasedOnDOMPosition(items) {\n    const pairs = items.map((item, index)=>[\n            index,\n            item\n        ]);\n    let isOrderDifferent = false;\n    pairs.sort((param, param1)=>{\n        let [indexA, a2] = param, [indexB, b2] = param1;\n        const elementA = a2.ref();\n        const elementB = b2.ref();\n        if (elementA === elementB) {\n            return 0;\n        }\n        if (!elementA || !elementB) {\n            return 0;\n        }\n        if (isElementPreceding(elementA, elementB)) {\n            if (indexA > indexB) {\n                isOrderDifferent = true;\n            }\n            return -1;\n        }\n        if (indexA < indexB) {\n            isOrderDifferent = true;\n        }\n        return 1;\n    });\n    if (isOrderDifferent) {\n        return pairs.map((param)=>{\n            let [_, item] = param;\n            return item;\n        });\n    }\n    return items;\n}\nfunction setItemsBasedOnDOMPosition(items, setItems) {\n    const sortedItems = sortBasedOnDOMPosition(items);\n    if (items !== sortedItems) {\n        setItems(sortedItems);\n    }\n}\nfunction getCommonParent(items) {\n    var _items_, _firstItem_ref;\n    const firstItem = items[0];\n    const lastItemEl = (_items_ = items[items.length - 1]) === null || _items_ === void 0 ? void 0 : _items_.ref();\n    let parentEl = firstItem === null || firstItem === void 0 ? void 0 : (_firstItem_ref = firstItem.ref()) === null || _firstItem_ref === void 0 ? void 0 : _firstItem_ref.parentElement;\n    while(parentEl){\n        if (lastItemEl && parentEl.contains(lastItemEl)) {\n            return parentEl;\n        }\n        parentEl = parentEl.parentElement;\n    }\n    return getDocument(parentEl).body;\n}\nfunction createTimeoutObserver(items, setItems) {\n    (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createEffect)(()=>{\n        const timeout = setTimeout(()=>{\n            setItemsBasedOnDOMPosition(items(), setItems);\n        });\n        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.onCleanup)(()=>clearTimeout(timeout));\n    });\n}\nfunction createSortBasedOnDOMPosition(items, setItems) {\n    if (typeof IntersectionObserver !== \"function\") {\n        createTimeoutObserver(items, setItems);\n        return;\n    }\n    let previousItems = [];\n    (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createEffect)(()=>{\n        const callback = ()=>{\n            const hasPreviousItems = !!previousItems.length;\n            previousItems = items();\n            if (!hasPreviousItems) {\n                return;\n            }\n            setItemsBasedOnDOMPosition(items(), setItems);\n        };\n        const root = getCommonParent(items());\n        const observer = new IntersectionObserver(callback, {\n            root\n        });\n        for (const item of items()){\n            const itemEl = item.ref();\n            if (itemEl) {\n                observer.observe(itemEl);\n            }\n        }\n        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.onCleanup)(()=>observer.disconnect());\n    });\n}\nfunction createDomCollection() {\n    let props = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    const [items, setItems] = createControllableArraySignal({\n        value: ()=>access(props.items),\n        onChange: (value)=>{\n            var _props_onItemsChange;\n            return (_props_onItemsChange = props.onItemsChange) === null || _props_onItemsChange === void 0 ? void 0 : _props_onItemsChange.call(props, value);\n        }\n    });\n    createSortBasedOnDOMPosition(items, setItems);\n    const registerItem = (item)=>{\n        setItems((prevItems)=>{\n            const index = findDOMIndex(prevItems, item);\n            return addItemToArray(prevItems, item, index);\n        });\n        return ()=>{\n            setItems((prevItems)=>{\n                const nextItems = prevItems.filter((prevItem)=>prevItem.ref() !== item.ref());\n                if (prevItems.length === nextItems.length) {\n                    return prevItems;\n                }\n                return nextItems;\n            });\n        };\n    };\n    const DomCollectionProvider = (props2)=>{\n        return (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(DomCollectionContext.Provider, {\n            value: {\n                registerItem\n            },\n            get children () {\n                return props2.children;\n            }\n        });\n    };\n    return {\n        DomCollectionProvider\n    };\n}\nfunction createDomCollectionItem(props) {\n    _s3();\n    const context = useDomCollectionContext();\n    const mergedProps = mergeDefaultProps({\n        shouldRegisterItem: true\n    }, props);\n    (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createEffect)(()=>{\n        if (!mergedProps.shouldRegisterItem) {\n            return;\n        }\n        const unregister = context.registerItem(mergedProps.getItem());\n        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.onCleanup)(unregister);\n    });\n}\n_s3(createDomCollectionItem, \"23gd0O9DifdZbGY6mOJp6nPqahA=\", false, function() {\n    return [\n        useDomCollectionContext\n    ];\n});\n// ../../node_modules/.pnpm/@kobalte+core@0.13.1_solid-js@1.8.17/node_modules/@kobalte/core/dist/chunk/3NGA46QE.js\nfunction buildNodes(params) {\n    var _params_startIndex;\n    let index = (_params_startIndex = params.startIndex) !== null && _params_startIndex !== void 0 ? _params_startIndex : 0;\n    var _params_startLevel;\n    const level = (_params_startLevel = params.startLevel) !== null && _params_startLevel !== void 0 ? _params_startLevel : 0;\n    const nodes = [];\n    const getKey = (data)=>{\n        if (data == null) {\n            return \"\";\n        }\n        var _params_getKey;\n        const _getKey = (_params_getKey = params.getKey) !== null && _params_getKey !== void 0 ? _params_getKey : \"key\";\n        const dataKey = isString(_getKey) ? data[_getKey] : _getKey(data);\n        return dataKey != null ? String(dataKey) : \"\";\n    };\n    const getTextValue = (data)=>{\n        if (data == null) {\n            return \"\";\n        }\n        var _params_getTextValue;\n        const _getTextValue = (_params_getTextValue = params.getTextValue) !== null && _params_getTextValue !== void 0 ? _params_getTextValue : \"textValue\";\n        const dataTextValue = isString(_getTextValue) ? data[_getTextValue] : _getTextValue(data);\n        return dataTextValue != null ? String(dataTextValue) : \"\";\n    };\n    const getDisabled = (data)=>{\n        if (data == null) {\n            return false;\n        }\n        var _params_getDisabled;\n        const _getDisabled = (_params_getDisabled = params.getDisabled) !== null && _params_getDisabled !== void 0 ? _params_getDisabled : \"disabled\";\n        var _ref;\n        return (_ref = isString(_getDisabled) ? data[_getDisabled] : _getDisabled(data)) !== null && _ref !== void 0 ? _ref : false;\n    };\n    const getSectionChildren = (data)=>{\n        var _params_getSectionChildren;\n        if (data == null) {\n            return void 0;\n        }\n        if (isString(params.getSectionChildren)) {\n            return data[params.getSectionChildren];\n        }\n        return (_params_getSectionChildren = params.getSectionChildren) === null || _params_getSectionChildren === void 0 ? void 0 : _params_getSectionChildren.call(params, data);\n    };\n    for (const data of params.dataSource){\n        if (isString(data) || isNumber(data)) {\n            nodes.push({\n                type: \"item\",\n                rawValue: data,\n                key: String(data),\n                textValue: String(data),\n                disabled: getDisabled(data),\n                level,\n                index\n            });\n            index++;\n            continue;\n        }\n        if (getSectionChildren(data) != null) {\n            nodes.push({\n                type: \"section\",\n                rawValue: data,\n                key: \"\",\n                // not applicable here\n                textValue: \"\",\n                // not applicable here\n                disabled: false,\n                // not applicable here\n                level,\n                index\n            });\n            index++;\n            var _getSectionChildren;\n            const sectionChildren = (_getSectionChildren = getSectionChildren(data)) !== null && _getSectionChildren !== void 0 ? _getSectionChildren : [];\n            if (sectionChildren.length > 0) {\n                const childNodes = buildNodes({\n                    dataSource: sectionChildren,\n                    getKey: params.getKey,\n                    getTextValue: params.getTextValue,\n                    getDisabled: params.getDisabled,\n                    getSectionChildren: params.getSectionChildren,\n                    startIndex: index,\n                    startLevel: level + 1\n                });\n                nodes.push(...childNodes);\n                index += childNodes.length;\n            }\n        } else {\n            nodes.push({\n                type: \"item\",\n                rawValue: data,\n                key: getKey(data),\n                textValue: getTextValue(data),\n                disabled: getDisabled(data),\n                level,\n                index\n            });\n            index++;\n        }\n    }\n    return nodes;\n}\nfunction createCollection(props) {\n    let deps = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : [];\n    return (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(()=>{\n        const nodes = buildNodes({\n            dataSource: access(props.dataSource),\n            getKey: access(props.getKey),\n            getTextValue: access(props.getTextValue),\n            getDisabled: access(props.getDisabled),\n            getSectionChildren: access(props.getSectionChildren)\n        });\n        for(let i2 = 0; i2 < deps.length; i2++)deps[i2]();\n        return props.factory(nodes);\n    });\n}\n// ../../node_modules/.pnpm/@kobalte+core@0.13.1_solid-js@1.8.17/node_modules/@kobalte/core/dist/chunk/XHJPQEZP.js\nvar RTL_SCRIPTS = /* @__PURE__ */ new Set([\n    \"Avst\",\n    \"Arab\",\n    \"Armi\",\n    \"Syrc\",\n    \"Samr\",\n    \"Mand\",\n    \"Thaa\",\n    \"Mend\",\n    \"Nkoo\",\n    \"Adlm\",\n    \"Rohg\",\n    \"Hebr\"\n]);\nvar RTL_LANGS = /* @__PURE__ */ new Set([\n    \"ae\",\n    \"ar\",\n    \"arc\",\n    \"bcc\",\n    \"bqi\",\n    \"ckb\",\n    \"dv\",\n    \"fa\",\n    \"glk\",\n    \"he\",\n    \"ku\",\n    \"mzn\",\n    \"nqo\",\n    \"pnb\",\n    \"ps\",\n    \"sd\",\n    \"ug\",\n    \"ur\",\n    \"yi\"\n]);\nfunction isRTL(locale) {\n    if (Intl.Locale) {\n        var _maximize_script;\n        const script = (_maximize_script = new Intl.Locale(locale).maximize().script) !== null && _maximize_script !== void 0 ? _maximize_script : \"\";\n        return RTL_SCRIPTS.has(script);\n    }\n    const lang = locale.split(\"-\")[0];\n    return RTL_LANGS.has(lang);\n}\nfunction getReadingDirection(locale) {\n    return isRTL(locale) ? \"rtl\" : \"ltr\";\n}\nfunction getDefaultLocale() {\n    let locale = typeof navigator !== \"undefined\" && // @ts-ignore\n    (navigator.language || navigator.userLanguage) || \"en-US\";\n    return {\n        locale,\n        direction: getReadingDirection(locale)\n    };\n}\nvar currentLocale = getDefaultLocale();\nvar listeners = /* @__PURE__ */ new Set();\nfunction updateLocale() {\n    currentLocale = getDefaultLocale();\n    for (const listener of listeners){\n        listener(currentLocale);\n    }\n}\nfunction createDefaultLocale() {\n    const defaultSSRLocale = {\n        locale: \"en-US\",\n        direction: \"ltr\"\n    };\n    const [defaultClientLocale, setDefaultClientLocale] = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createSignal)(currentLocale);\n    const defaultLocale = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(()=>_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.isServer ? defaultSSRLocale : defaultClientLocale());\n    (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.onMount)(()=>{\n        if (listeners.size === 0) {\n            window.addEventListener(\"languagechange\", updateLocale);\n        }\n        listeners.add(setDefaultClientLocale);\n        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.onCleanup)(()=>{\n            listeners.delete(setDefaultClientLocale);\n            if (listeners.size === 0) {\n                window.removeEventListener(\"languagechange\", updateLocale);\n            }\n        });\n    });\n    return {\n        locale: ()=>defaultLocale().locale,\n        direction: ()=>defaultLocale().direction\n    };\n}\nvar I18nContext = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createContext)();\nfunction useLocale() {\n    _s4();\n    const defaultLocale = createDefaultLocale();\n    const context = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.useContext)(I18nContext);\n    return context || defaultLocale;\n}\n_s4(useLocale, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar cache = /* @__PURE__ */ new Map();\nfunction createCollator(options) {\n    _s5();\n    const { locale } = useLocale();\n    const cacheKey = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(()=>{\n        return locale() + (options ? Object.entries(options).sort((a2, b2)=>a2[0] < b2[0] ? -1 : 1).join() : \"\");\n    });\n    return (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(()=>{\n        const key = cacheKey();\n        let collator;\n        if (cache.has(key)) {\n            collator = cache.get(key);\n        }\n        if (!collator) {\n            collator = new Intl.Collator(locale(), options);\n            cache.set(key, collator);\n        }\n        return collator;\n    });\n}\n_s5(createCollator, \"aQZd10leNxbqQbwDEUSVdOnDXm0=\", false, function() {\n    return [\n        useLocale\n    ];\n});\n// ../../node_modules/.pnpm/@kobalte+core@0.13.1_solid-js@1.8.17/node_modules/@kobalte/core/dist/chunk/F2YUHYY4.js\nvar Selection = class _Selection extends Set {\n    constructor(keys2, anchorKey, currentKey){\n        super(keys2);\n        if (keys2 instanceof _Selection) {\n            this.anchorKey = anchorKey || keys2.anchorKey;\n            this.currentKey = currentKey || keys2.currentKey;\n        } else {\n            this.anchorKey = anchorKey;\n            this.currentKey = currentKey;\n        }\n    }\n};\nfunction createControllableSelectionSignal(props) {\n    const [_value, setValue] = createControllableSignal(props);\n    const value = ()=>{\n        var _value1;\n        return (_value1 = _value()) !== null && _value1 !== void 0 ? _value1 : new Selection();\n    };\n    return [\n        value,\n        setValue\n    ];\n}\nfunction isNonContiguousSelectionModifier(e2) {\n    return isAppleDevice() ? e2.altKey : e2.ctrlKey;\n}\nfunction isCtrlKeyPressed(e2) {\n    if (isMac()) {\n        return e2.metaKey;\n    }\n    return e2.ctrlKey;\n}\nfunction convertSelection(selection) {\n    return new Selection(selection);\n}\nfunction isSameSelection(setA, setB) {\n    if (setA.size !== setB.size) {\n        return false;\n    }\n    for (const item of setA){\n        if (!setB.has(item)) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction createMultipleSelectionState(props) {\n    const mergedProps = mergeDefaultProps({\n        selectionMode: \"none\",\n        selectionBehavior: \"toggle\"\n    }, props);\n    const [isFocused, setFocused] = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createSignal)(false);\n    const [focusedKey, setFocusedKey] = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createSignal)();\n    const selectedKeysProp = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(()=>{\n        const selection = access(mergedProps.selectedKeys);\n        if (selection != null) {\n            return convertSelection(selection);\n        }\n        return selection;\n    });\n    const defaultSelectedKeys = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(()=>{\n        const defaultSelection = access(mergedProps.defaultSelectedKeys);\n        if (defaultSelection != null) {\n            return convertSelection(defaultSelection);\n        }\n        return new Selection();\n    });\n    const [selectedKeys, _setSelectedKeys] = createControllableSelectionSignal({\n        value: selectedKeysProp,\n        defaultValue: defaultSelectedKeys,\n        onChange: (value)=>{\n            var _mergedProps_onSelectionChange;\n            return (_mergedProps_onSelectionChange = mergedProps.onSelectionChange) === null || _mergedProps_onSelectionChange === void 0 ? void 0 : _mergedProps_onSelectionChange.call(mergedProps, value);\n        }\n    });\n    const [selectionBehavior, setSelectionBehavior] = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createSignal)(access(mergedProps.selectionBehavior));\n    const selectionMode = ()=>access(mergedProps.selectionMode);\n    const disallowEmptySelection = ()=>{\n        var _access;\n        return (_access = access(mergedProps.disallowEmptySelection)) !== null && _access !== void 0 ? _access : false;\n    };\n    const setSelectedKeys = (keys2)=>{\n        if (access(mergedProps.allowDuplicateSelectionEvents) || !isSameSelection(keys2, selectedKeys())) {\n            _setSelectedKeys(keys2);\n        }\n    };\n    (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createEffect)(()=>{\n        const selection = selectedKeys();\n        if (access(mergedProps.selectionBehavior) === \"replace\" && selectionBehavior() === \"toggle\" && typeof selection === \"object\" && selection.size === 0) {\n            setSelectionBehavior(\"replace\");\n        }\n    });\n    (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createEffect)(()=>{\n        var _access;\n        setSelectionBehavior((_access = access(mergedProps.selectionBehavior)) !== null && _access !== void 0 ? _access : \"toggle\");\n    });\n    return {\n        selectionMode,\n        disallowEmptySelection,\n        selectionBehavior,\n        setSelectionBehavior,\n        isFocused,\n        setFocused,\n        focusedKey,\n        setFocusedKey,\n        selectedKeys,\n        setSelectedKeys\n    };\n}\nfunction createTypeSelect(props) {\n    const [search, setSearch] = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createSignal)(\"\");\n    const [timeoutId, setTimeoutId] = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createSignal)(-1);\n    const onKeyDown = (e2)=>{\n        if (access(props.isDisabled)) {\n            return;\n        }\n        const delegate = access(props.keyboardDelegate);\n        const manager = access(props.selectionManager);\n        if (!delegate.getKeyForSearch) {\n            return;\n        }\n        const character = getStringForKey(e2.key);\n        if (!character || e2.ctrlKey || e2.metaKey) {\n            return;\n        }\n        if (character === \" \" && search().trim().length > 0) {\n            e2.preventDefault();\n            e2.stopPropagation();\n        }\n        let newSearch = setSearch((prev)=>prev + character);\n        var _delegate_getKeyForSearch;\n        let key = (_delegate_getKeyForSearch = delegate.getKeyForSearch(newSearch, manager.focusedKey())) !== null && _delegate_getKeyForSearch !== void 0 ? _delegate_getKeyForSearch : delegate.getKeyForSearch(newSearch);\n        if (key == null && isAllSameLetter(newSearch)) {\n            newSearch = newSearch[0];\n            var _delegate_getKeyForSearch1;\n            key = (_delegate_getKeyForSearch1 = delegate.getKeyForSearch(newSearch, manager.focusedKey())) !== null && _delegate_getKeyForSearch1 !== void 0 ? _delegate_getKeyForSearch1 : delegate.getKeyForSearch(newSearch);\n        }\n        if (key != null) {\n            var _props_onTypeSelect;\n            manager.setFocusedKey(key);\n            (_props_onTypeSelect = props.onTypeSelect) === null || _props_onTypeSelect === void 0 ? void 0 : _props_onTypeSelect.call(props, key);\n        }\n        clearTimeout(timeoutId());\n        setTimeoutId(window.setTimeout(()=>setSearch(\"\"), 500));\n    };\n    return {\n        typeSelectHandlers: {\n            onKeyDown\n        }\n    };\n}\nfunction getStringForKey(key) {\n    if (key.length === 1 || !/^[A-Z]/i.test(key)) {\n        return key;\n    }\n    return \"\";\n}\nfunction isAllSameLetter(search) {\n    return search.split(\"\").every((letter)=>letter === search[0]);\n}\nfunction createSelectableCollection(props, ref, scrollRef) {\n    _s6();\n    const defaultProps = {\n        selectOnFocus: ()=>access(props.selectionManager).selectionBehavior() === \"replace\"\n    };\n    const mergedProps = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.mergeProps)(defaultProps, props);\n    const finalScrollRef = ()=>{\n        var _scrollRef;\n        return (_scrollRef = scrollRef === null || scrollRef === void 0 ? void 0 : scrollRef()) !== null && _scrollRef !== void 0 ? _scrollRef : ref();\n    };\n    const { direction } = useLocale();\n    let scrollPos = {\n        top: 0,\n        left: 0\n    };\n    createEventListener(()=>!access(mergedProps.isVirtualized) ? finalScrollRef() : void 0, \"scroll\", ()=>{\n        const scrollEl = finalScrollRef();\n        if (!scrollEl) {\n            return;\n        }\n        scrollPos = {\n            top: scrollEl.scrollTop,\n            left: scrollEl.scrollLeft\n        };\n    });\n    const { typeSelectHandlers } = createTypeSelect({\n        isDisabled: ()=>access(mergedProps.disallowTypeAhead),\n        keyboardDelegate: ()=>access(mergedProps.keyboardDelegate),\n        selectionManager: ()=>access(mergedProps.selectionManager)\n    });\n    const onKeyDown = (e2)=>{\n        callHandler(e2, typeSelectHandlers.onKeyDown);\n        if (e2.altKey && e2.key === \"Tab\") {\n            e2.preventDefault();\n        }\n        const refEl = ref();\n        if (!(refEl === null || refEl === void 0 ? void 0 : refEl.contains(e2.target))) {\n            return;\n        }\n        const manager = access(mergedProps.selectionManager);\n        const selectOnFocus = access(mergedProps.selectOnFocus);\n        const navigateToKey = (key)=>{\n            if (key != null) {\n                manager.setFocusedKey(key);\n                if (e2.shiftKey && manager.selectionMode() === \"multiple\") {\n                    manager.extendSelection(key);\n                } else if (selectOnFocus && !isNonContiguousSelectionModifier(e2)) {\n                    manager.replaceSelection(key);\n                }\n            }\n        };\n        const delegate = access(mergedProps.keyboardDelegate);\n        const shouldFocusWrap = access(mergedProps.shouldFocusWrap);\n        const focusedKey = manager.focusedKey();\n        switch(e2.key){\n            case \"ArrowDown\":\n                {\n                    if (delegate.getKeyBelow) {\n                        e2.preventDefault();\n                        let nextKey;\n                        if (focusedKey != null) {\n                            nextKey = delegate.getKeyBelow(focusedKey);\n                        } else {\n                            var _delegate_getFirstKey;\n                            nextKey = (_delegate_getFirstKey = delegate.getFirstKey) === null || _delegate_getFirstKey === void 0 ? void 0 : _delegate_getFirstKey.call(delegate);\n                        }\n                        if (nextKey == null && shouldFocusWrap) {\n                            var _delegate_getFirstKey1;\n                            nextKey = (_delegate_getFirstKey1 = delegate.getFirstKey) === null || _delegate_getFirstKey1 === void 0 ? void 0 : _delegate_getFirstKey1.call(delegate, focusedKey);\n                        }\n                        navigateToKey(nextKey);\n                    }\n                    break;\n                }\n            case \"ArrowUp\":\n                {\n                    if (delegate.getKeyAbove) {\n                        e2.preventDefault();\n                        let nextKey;\n                        if (focusedKey != null) {\n                            nextKey = delegate.getKeyAbove(focusedKey);\n                        } else {\n                            var _delegate_getLastKey;\n                            nextKey = (_delegate_getLastKey = delegate.getLastKey) === null || _delegate_getLastKey === void 0 ? void 0 : _delegate_getLastKey.call(delegate);\n                        }\n                        if (nextKey == null && shouldFocusWrap) {\n                            var _delegate_getLastKey1;\n                            nextKey = (_delegate_getLastKey1 = delegate.getLastKey) === null || _delegate_getLastKey1 === void 0 ? void 0 : _delegate_getLastKey1.call(delegate, focusedKey);\n                        }\n                        navigateToKey(nextKey);\n                    }\n                    break;\n                }\n            case \"ArrowLeft\":\n                {\n                    if (delegate.getKeyLeftOf) {\n                        e2.preventDefault();\n                        const isRTL3 = direction() === \"rtl\";\n                        let nextKey;\n                        if (focusedKey != null) {\n                            nextKey = delegate.getKeyLeftOf(focusedKey);\n                        } else {\n                            var _delegate_getFirstKey2, _delegate_getLastKey2;\n                            nextKey = isRTL3 ? (_delegate_getFirstKey2 = delegate.getFirstKey) === null || _delegate_getFirstKey2 === void 0 ? void 0 : _delegate_getFirstKey2.call(delegate) : (_delegate_getLastKey2 = delegate.getLastKey) === null || _delegate_getLastKey2 === void 0 ? void 0 : _delegate_getLastKey2.call(delegate);\n                        }\n                        navigateToKey(nextKey);\n                    }\n                    break;\n                }\n            case \"ArrowRight\":\n                {\n                    if (delegate.getKeyRightOf) {\n                        e2.preventDefault();\n                        const isRTL3 = direction() === \"rtl\";\n                        let nextKey;\n                        if (focusedKey != null) {\n                            nextKey = delegate.getKeyRightOf(focusedKey);\n                        } else {\n                            var _delegate_getLastKey3, _delegate_getFirstKey3;\n                            nextKey = isRTL3 ? (_delegate_getLastKey3 = delegate.getLastKey) === null || _delegate_getLastKey3 === void 0 ? void 0 : _delegate_getLastKey3.call(delegate) : (_delegate_getFirstKey3 = delegate.getFirstKey) === null || _delegate_getFirstKey3 === void 0 ? void 0 : _delegate_getFirstKey3.call(delegate);\n                        }\n                        navigateToKey(nextKey);\n                    }\n                    break;\n                }\n            case \"Home\":\n                if (delegate.getFirstKey) {\n                    e2.preventDefault();\n                    const firstKey = delegate.getFirstKey(focusedKey, isCtrlKeyPressed(e2));\n                    if (firstKey != null) {\n                        manager.setFocusedKey(firstKey);\n                        if (isCtrlKeyPressed(e2) && e2.shiftKey && manager.selectionMode() === \"multiple\") {\n                            manager.extendSelection(firstKey);\n                        } else if (selectOnFocus) {\n                            manager.replaceSelection(firstKey);\n                        }\n                    }\n                }\n                break;\n            case \"End\":\n                if (delegate.getLastKey) {\n                    e2.preventDefault();\n                    const lastKey = delegate.getLastKey(focusedKey, isCtrlKeyPressed(e2));\n                    if (lastKey != null) {\n                        manager.setFocusedKey(lastKey);\n                        if (isCtrlKeyPressed(e2) && e2.shiftKey && manager.selectionMode() === \"multiple\") {\n                            manager.extendSelection(lastKey);\n                        } else if (selectOnFocus) {\n                            manager.replaceSelection(lastKey);\n                        }\n                    }\n                }\n                break;\n            case \"PageDown\":\n                if (delegate.getKeyPageBelow && focusedKey != null) {\n                    e2.preventDefault();\n                    const nextKey = delegate.getKeyPageBelow(focusedKey);\n                    navigateToKey(nextKey);\n                }\n                break;\n            case \"PageUp\":\n                if (delegate.getKeyPageAbove && focusedKey != null) {\n                    e2.preventDefault();\n                    const nextKey = delegate.getKeyPageAbove(focusedKey);\n                    navigateToKey(nextKey);\n                }\n                break;\n            case \"a\":\n                if (isCtrlKeyPressed(e2) && manager.selectionMode() === \"multiple\" && access(mergedProps.disallowSelectAll) !== true) {\n                    e2.preventDefault();\n                    manager.selectAll();\n                }\n                break;\n            case \"Escape\":\n                if (!e2.defaultPrevented) {\n                    e2.preventDefault();\n                    if (!access(mergedProps.disallowEmptySelection)) {\n                        manager.clearSelection();\n                    }\n                }\n                break;\n            case \"Tab\":\n                {\n                    if (!access(mergedProps.allowsTabNavigation)) {\n                        if (e2.shiftKey) {\n                            refEl.focus();\n                        } else {\n                            const walker = getFocusableTreeWalker(refEl, {\n                                tabbable: true\n                            });\n                            let next;\n                            let last;\n                            do {\n                                last = walker.lastChild();\n                                if (last) {\n                                    next = last;\n                                }\n                            }while (last);\n                            if (next && !next.contains(document.activeElement)) {\n                                focusWithoutScrolling(next);\n                            }\n                        }\n                        break;\n                    }\n                }\n        }\n    };\n    const onFocusIn = (e2)=>{\n        const manager = access(mergedProps.selectionManager);\n        const delegate = access(mergedProps.keyboardDelegate);\n        const selectOnFocus = access(mergedProps.selectOnFocus);\n        if (manager.isFocused()) {\n            if (!e2.currentTarget.contains(e2.target)) {\n                manager.setFocused(false);\n            }\n            return;\n        }\n        if (!e2.currentTarget.contains(e2.target)) {\n            return;\n        }\n        manager.setFocused(true);\n        if (manager.focusedKey() == null) {\n            const navigateToFirstKey = (key)=>{\n                if (key == null) {\n                    return;\n                }\n                manager.setFocusedKey(key);\n                if (selectOnFocus) {\n                    manager.replaceSelection(key);\n                }\n            };\n            const relatedTarget = e2.relatedTarget;\n            if (relatedTarget && e2.currentTarget.compareDocumentPosition(relatedTarget) & Node.DOCUMENT_POSITION_FOLLOWING) {\n                var _delegate_getLastKey;\n                var _manager_lastSelectedKey;\n                navigateToFirstKey((_manager_lastSelectedKey = manager.lastSelectedKey()) !== null && _manager_lastSelectedKey !== void 0 ? _manager_lastSelectedKey : (_delegate_getLastKey = delegate.getLastKey) === null || _delegate_getLastKey === void 0 ? void 0 : _delegate_getLastKey.call(delegate));\n            } else {\n                var _delegate_getFirstKey;\n                var _manager_firstSelectedKey;\n                navigateToFirstKey((_manager_firstSelectedKey = manager.firstSelectedKey()) !== null && _manager_firstSelectedKey !== void 0 ? _manager_firstSelectedKey : (_delegate_getFirstKey = delegate.getFirstKey) === null || _delegate_getFirstKey === void 0 ? void 0 : _delegate_getFirstKey.call(delegate));\n            }\n        } else if (!access(mergedProps.isVirtualized)) {\n            const scrollEl = finalScrollRef();\n            if (scrollEl) {\n                scrollEl.scrollTop = scrollPos.top;\n                scrollEl.scrollLeft = scrollPos.left;\n                const element = scrollEl.querySelector('[data-key=\"'.concat(manager.focusedKey(), '\"]'));\n                if (element) {\n                    focusWithoutScrolling(element);\n                    scrollIntoView(scrollEl, element);\n                }\n            }\n        }\n    };\n    const onFocusOut = (e2)=>{\n        const manager = access(mergedProps.selectionManager);\n        if (!e2.currentTarget.contains(e2.relatedTarget)) {\n            manager.setFocused(false);\n        }\n    };\n    const onMouseDown = (e2)=>{\n        if (finalScrollRef() === e2.target) {\n            e2.preventDefault();\n        }\n    };\n    const tryAutoFocus = ()=>{\n        const autoFocus = access(mergedProps.autoFocus);\n        if (!autoFocus) {\n            return;\n        }\n        const manager = access(mergedProps.selectionManager);\n        const delegate = access(mergedProps.keyboardDelegate);\n        let focusedKey;\n        if (autoFocus === \"first\") {\n            var _delegate_getFirstKey;\n            focusedKey = (_delegate_getFirstKey = delegate.getFirstKey) === null || _delegate_getFirstKey === void 0 ? void 0 : _delegate_getFirstKey.call(delegate);\n        }\n        if (autoFocus === \"last\") {\n            var _delegate_getLastKey;\n            focusedKey = (_delegate_getLastKey = delegate.getLastKey) === null || _delegate_getLastKey === void 0 ? void 0 : _delegate_getLastKey.call(delegate);\n        }\n        const selectedKeys = manager.selectedKeys();\n        if (selectedKeys.size) {\n            focusedKey = selectedKeys.values().next().value;\n        }\n        manager.setFocused(true);\n        manager.setFocusedKey(focusedKey);\n        const refEl = ref();\n        if (refEl && focusedKey == null && !access(mergedProps.shouldUseVirtualFocus)) {\n            focusWithoutScrolling(refEl);\n        }\n    };\n    (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.onMount)(()=>{\n        if (mergedProps.deferAutoFocus) {\n            setTimeout(tryAutoFocus, 0);\n        } else {\n            tryAutoFocus();\n        }\n    });\n    (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createEffect)((0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.on)([\n        finalScrollRef,\n        ()=>access(mergedProps.isVirtualized),\n        ()=>access(mergedProps.selectionManager).focusedKey()\n    ], (newValue)=>{\n        const [scrollEl, isVirtualized, focusedKey] = newValue;\n        if (isVirtualized) {\n            var _mergedProps_scrollToKey;\n            focusedKey && ((_mergedProps_scrollToKey = mergedProps.scrollToKey) === null || _mergedProps_scrollToKey === void 0 ? void 0 : _mergedProps_scrollToKey.call(mergedProps, focusedKey));\n        } else {\n            if (focusedKey && scrollEl) {\n                const element = scrollEl.querySelector('[data-key=\"'.concat(focusedKey, '\"]'));\n                if (element) {\n                    scrollIntoView(scrollEl, element);\n                }\n            }\n        }\n    }));\n    const tabIndex = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(()=>{\n        if (access(mergedProps.shouldUseVirtualFocus)) {\n            return void 0;\n        }\n        return access(mergedProps.selectionManager).focusedKey() == null ? 0 : -1;\n    });\n    return {\n        tabIndex,\n        onKeyDown,\n        onMouseDown,\n        onFocusIn,\n        onFocusOut\n    };\n}\n_s6(createSelectableCollection, \"BJ1HgBSQnElDfi3eMXFs1TrHRwU=\", false, function() {\n    return [\n        useLocale\n    ];\n});\nfunction createSelectableItem(props, ref) {\n    const manager = ()=>access(props.selectionManager);\n    const key = ()=>access(props.key);\n    const shouldUseVirtualFocus = ()=>access(props.shouldUseVirtualFocus);\n    const onSelect = (e2)=>{\n        if (manager().selectionMode() === \"none\") {\n            return;\n        }\n        if (manager().selectionMode() === \"single\") {\n            if (manager().isSelected(key()) && !manager().disallowEmptySelection()) {\n                manager().toggleSelection(key());\n            } else {\n                manager().replaceSelection(key());\n            }\n        } else if (e2 === null || e2 === void 0 ? void 0 : e2.shiftKey) {\n            manager().extendSelection(key());\n        } else if (manager().selectionBehavior() === \"toggle\" || isCtrlKeyPressed(e2) || \"pointerType\" in e2 && e2.pointerType === \"touch\") {\n            manager().toggleSelection(key());\n        } else {\n            manager().replaceSelection(key());\n        }\n    };\n    const isSelected = ()=>manager().isSelected(key());\n    const isDisabled = ()=>access(props.disabled) || manager().isDisabled(key());\n    const allowsSelection = ()=>!isDisabled() && manager().canSelectItem(key());\n    let pointerDownType = null;\n    const onPointerDown = (e2)=>{\n        if (!allowsSelection()) {\n            return;\n        }\n        pointerDownType = e2.pointerType;\n        if (e2.pointerType === \"mouse\" && e2.button === 0 && !access(props.shouldSelectOnPressUp)) {\n            onSelect(e2);\n        }\n    };\n    const onPointerUp = (e2)=>{\n        if (!allowsSelection()) {\n            return;\n        }\n        if (e2.pointerType === \"mouse\" && e2.button === 0 && access(props.shouldSelectOnPressUp) && access(props.allowsDifferentPressOrigin)) {\n            onSelect(e2);\n        }\n    };\n    const onClick = (e2)=>{\n        if (!allowsSelection()) {\n            return;\n        }\n        if (access(props.shouldSelectOnPressUp) && !access(props.allowsDifferentPressOrigin) || pointerDownType !== \"mouse\") {\n            onSelect(e2);\n        }\n    };\n    const onKeyDown = (e2)=>{\n        if (!allowsSelection() || ![\n            \"Enter\",\n            \" \"\n        ].includes(e2.key)) {\n            return;\n        }\n        if (isNonContiguousSelectionModifier(e2)) {\n            manager().toggleSelection(key());\n        } else {\n            onSelect(e2);\n        }\n    };\n    const onMouseDown = (e2)=>{\n        if (isDisabled()) {\n            e2.preventDefault();\n        }\n    };\n    const onFocus = (e2)=>{\n        const refEl = ref();\n        if (shouldUseVirtualFocus() || isDisabled() || !refEl) {\n            return;\n        }\n        if (e2.target === refEl) {\n            manager().setFocusedKey(key());\n        }\n    };\n    const tabIndex = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(()=>{\n        if (shouldUseVirtualFocus() || isDisabled()) {\n            return void 0;\n        }\n        return key() === manager().focusedKey() ? 0 : -1;\n    });\n    const dataKey = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(()=>{\n        return access(props.virtualized) ? void 0 : key();\n    });\n    (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createEffect)((0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.on)([\n        ref,\n        key,\n        shouldUseVirtualFocus,\n        ()=>manager().focusedKey(),\n        ()=>manager().isFocused()\n    ], (param)=>{\n        let [refEl, key2, shouldUseVirtualFocus2, focusedKey, isFocused] = param;\n        if (refEl && key2 === focusedKey && isFocused && !shouldUseVirtualFocus2 && document.activeElement !== refEl) {\n            if (props.focus) {\n                props.focus();\n            } else {\n                focusWithoutScrolling(refEl);\n            }\n        }\n    }));\n    return {\n        isSelected,\n        isDisabled,\n        allowsSelection,\n        tabIndex,\n        dataKey,\n        onPointerDown,\n        onPointerUp,\n        onClick,\n        onKeyDown,\n        onMouseDown,\n        onFocus\n    };\n}\nvar SelectionManager = class {\n    /** The type of selection that is allowed in the collection. */ selectionMode() {\n        return this.state.selectionMode();\n    }\n    /** Whether the collection allows empty selection. */ disallowEmptySelection() {\n        return this.state.disallowEmptySelection();\n    }\n    /** The selection behavior for the collection. */ selectionBehavior() {\n        return this.state.selectionBehavior();\n    }\n    /** Sets the selection behavior for the collection. */ setSelectionBehavior(selectionBehavior) {\n        this.state.setSelectionBehavior(selectionBehavior);\n    }\n    /** Whether the collection is currently focused. */ isFocused() {\n        return this.state.isFocused();\n    }\n    /** Sets whether the collection is focused. */ setFocused(isFocused) {\n        this.state.setFocused(isFocused);\n    }\n    /** The current focused key in the collection. */ focusedKey() {\n        return this.state.focusedKey();\n    }\n    /** Sets the focused key. */ setFocusedKey(key) {\n        if (key == null || this.collection().getItem(key)) {\n            this.state.setFocusedKey(key);\n        }\n    }\n    /** The currently selected keys in the collection. */ selectedKeys() {\n        return this.state.selectedKeys();\n    }\n    /** Returns whether a key is selected. */ isSelected(key) {\n        if (this.state.selectionMode() === \"none\") {\n            return false;\n        }\n        const retrievedKey = this.getKey(key);\n        if (retrievedKey == null) {\n            return false;\n        }\n        return this.state.selectedKeys().has(retrievedKey);\n    }\n    /** Whether the selection is empty. */ isEmpty() {\n        return this.state.selectedKeys().size === 0;\n    }\n    /** Whether all items in the collection are selected. */ isSelectAll() {\n        if (this.isEmpty()) {\n            return false;\n        }\n        const selectedKeys = this.state.selectedKeys();\n        return this.getAllSelectableKeys().every((k)=>selectedKeys.has(k));\n    }\n    firstSelectedKey() {\n        let first;\n        for (const key of this.state.selectedKeys()){\n            const item = this.collection().getItem(key);\n            const isItemBeforeFirst = (item === null || item === void 0 ? void 0 : item.index) != null && (first === null || first === void 0 ? void 0 : first.index) != null && item.index < first.index;\n            if (!first || isItemBeforeFirst) {\n                first = item;\n            }\n        }\n        return first === null || first === void 0 ? void 0 : first.key;\n    }\n    lastSelectedKey() {\n        let last;\n        for (const key of this.state.selectedKeys()){\n            const item = this.collection().getItem(key);\n            const isItemAfterLast = (item === null || item === void 0 ? void 0 : item.index) != null && (last === null || last === void 0 ? void 0 : last.index) != null && item.index > last.index;\n            if (!last || isItemAfterLast) {\n                last = item;\n            }\n        }\n        return last === null || last === void 0 ? void 0 : last.key;\n    }\n    /** Extends the selection to the given key. */ extendSelection(toKey) {\n        if (this.selectionMode() === \"none\") {\n            return;\n        }\n        if (this.selectionMode() === \"single\") {\n            this.replaceSelection(toKey);\n            return;\n        }\n        const retrievedToKey = this.getKey(toKey);\n        if (retrievedToKey == null) {\n            return;\n        }\n        const selectedKeys = this.state.selectedKeys();\n        const anchorKey = selectedKeys.anchorKey || retrievedToKey;\n        const selection = new Selection(selectedKeys, anchorKey, retrievedToKey);\n        for (const key of this.getKeyRange(anchorKey, selectedKeys.currentKey || retrievedToKey)){\n            selection.delete(key);\n        }\n        for (const key of this.getKeyRange(retrievedToKey, anchorKey)){\n            if (this.canSelectItem(key)) {\n                selection.add(key);\n            }\n        }\n        this.state.setSelectedKeys(selection);\n    }\n    getKeyRange(from, to) {\n        const fromItem = this.collection().getItem(from);\n        const toItem = this.collection().getItem(to);\n        if (fromItem && toItem) {\n            if (fromItem.index != null && toItem.index != null && fromItem.index <= toItem.index) {\n                return this.getKeyRangeInternal(from, to);\n            }\n            return this.getKeyRangeInternal(to, from);\n        }\n        return [];\n    }\n    getKeyRangeInternal(from, to) {\n        const keys2 = [];\n        let key = from;\n        while(key != null){\n            const item = this.collection().getItem(key);\n            if (item && item.type === \"item\") {\n                keys2.push(key);\n            }\n            if (key === to) {\n                return keys2;\n            }\n            key = this.collection().getKeyAfter(key);\n        }\n        return [];\n    }\n    getKey(key) {\n        const item = this.collection().getItem(key);\n        if (!item) {\n            return key;\n        }\n        if (!item || item.type !== \"item\") {\n            return null;\n        }\n        return item.key;\n    }\n    /** Toggles whether the given key is selected. */ toggleSelection(key) {\n        if (this.selectionMode() === \"none\") {\n            return;\n        }\n        if (this.selectionMode() === \"single\" && !this.isSelected(key)) {\n            this.replaceSelection(key);\n            return;\n        }\n        const retrievedKey = this.getKey(key);\n        if (retrievedKey == null) {\n            return;\n        }\n        const keys2 = new Selection(this.state.selectedKeys());\n        if (keys2.has(retrievedKey)) {\n            keys2.delete(retrievedKey);\n        } else if (this.canSelectItem(retrievedKey)) {\n            keys2.add(retrievedKey);\n            keys2.anchorKey = retrievedKey;\n            keys2.currentKey = retrievedKey;\n        }\n        if (this.disallowEmptySelection() && keys2.size === 0) {\n            return;\n        }\n        this.state.setSelectedKeys(keys2);\n    }\n    /** Replaces the selection with only the given key. */ replaceSelection(key) {\n        if (this.selectionMode() === \"none\") {\n            return;\n        }\n        const retrievedKey = this.getKey(key);\n        if (retrievedKey == null) {\n            return;\n        }\n        const selection = this.canSelectItem(retrievedKey) ? new Selection([\n            retrievedKey\n        ], retrievedKey, retrievedKey) : new Selection();\n        this.state.setSelectedKeys(selection);\n    }\n    /** Replaces the selection with the given keys. */ setSelectedKeys(keys2) {\n        if (this.selectionMode() === \"none\") {\n            return;\n        }\n        const selection = new Selection();\n        for (const key of keys2){\n            const retrievedKey = this.getKey(key);\n            if (retrievedKey != null) {\n                selection.add(retrievedKey);\n                if (this.selectionMode() === \"single\") {\n                    break;\n                }\n            }\n        }\n        this.state.setSelectedKeys(selection);\n    }\n    /** Selects all items in the collection. */ selectAll() {\n        if (this.selectionMode() === \"multiple\") {\n            this.state.setSelectedKeys(new Set(this.getAllSelectableKeys()));\n        }\n    }\n    /**\n   * Removes all keys from the selection.\n   */ clearSelection() {\n        const selectedKeys = this.state.selectedKeys();\n        if (!this.disallowEmptySelection() && selectedKeys.size > 0) {\n            this.state.setSelectedKeys(new Selection());\n        }\n    }\n    /**\n   * Toggles between select all and an empty selection.\n   */ toggleSelectAll() {\n        if (this.isSelectAll()) {\n            this.clearSelection();\n        } else {\n            this.selectAll();\n        }\n    }\n    select(key, e2) {\n        if (this.selectionMode() === \"none\") {\n            return;\n        }\n        if (this.selectionMode() === \"single\") {\n            if (this.isSelected(key) && !this.disallowEmptySelection()) {\n                this.toggleSelection(key);\n            } else {\n                this.replaceSelection(key);\n            }\n        } else if (this.selectionBehavior() === \"toggle\" || e2 && e2.pointerType === \"touch\") {\n            this.toggleSelection(key);\n        } else {\n            this.replaceSelection(key);\n        }\n    }\n    /** Returns whether the current selection is equal to the given selection. */ isSelectionEqual(selection) {\n        if (selection === this.state.selectedKeys()) {\n            return true;\n        }\n        const selectedKeys = this.selectedKeys();\n        if (selection.size !== selectedKeys.size) {\n            return false;\n        }\n        for (const key of selection){\n            if (!selectedKeys.has(key)) {\n                return false;\n            }\n        }\n        for (const key of selectedKeys){\n            if (!selection.has(key)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    canSelectItem(key) {\n        if (this.state.selectionMode() === \"none\") {\n            return false;\n        }\n        const item = this.collection().getItem(key);\n        return item != null && !item.disabled;\n    }\n    isDisabled(key) {\n        const item = this.collection().getItem(key);\n        return !item || item.disabled;\n    }\n    getAllSelectableKeys() {\n        const keys2 = [];\n        const addKeys = (key)=>{\n            while(key != null){\n                if (this.canSelectItem(key)) {\n                    const item = this.collection().getItem(key);\n                    if (!item) {\n                        continue;\n                    }\n                    if (item.type === \"item\") {\n                        keys2.push(key);\n                    }\n                }\n                key = this.collection().getKeyAfter(key);\n            }\n        };\n        addKeys(this.collection().getFirstKey());\n        return keys2;\n    }\n    constructor(collection, state){\n        this.collection = collection;\n        this.state = state;\n    }\n};\nvar ListCollection = class {\n    *[Symbol.iterator]() {\n        yield* this.iterable;\n    }\n    getSize() {\n        return this.keyMap.size;\n    }\n    getKeys() {\n        return this.keyMap.keys();\n    }\n    getKeyBefore(key) {\n        var _this_keyMap_get;\n        return (_this_keyMap_get = this.keyMap.get(key)) === null || _this_keyMap_get === void 0 ? void 0 : _this_keyMap_get.prevKey;\n    }\n    getKeyAfter(key) {\n        var _this_keyMap_get;\n        return (_this_keyMap_get = this.keyMap.get(key)) === null || _this_keyMap_get === void 0 ? void 0 : _this_keyMap_get.nextKey;\n    }\n    getFirstKey() {\n        return this.firstKey;\n    }\n    getLastKey() {\n        return this.lastKey;\n    }\n    getItem(key) {\n        return this.keyMap.get(key);\n    }\n    at(idx) {\n        const keys2 = [\n            ...this.getKeys()\n        ];\n        return this.getItem(keys2[idx]);\n    }\n    constructor(nodes){\n        this.keyMap = /* @__PURE__ */ new Map();\n        this.iterable = nodes;\n        for (const node of nodes){\n            this.keyMap.set(node.key, node);\n        }\n        if (this.keyMap.size === 0) {\n            return;\n        }\n        let last;\n        let index = 0;\n        for (const [key, node] of this.keyMap){\n            if (last) {\n                last.nextKey = key;\n                node.prevKey = last.key;\n            } else {\n                this.firstKey = key;\n                node.prevKey = void 0;\n            }\n            if (node.type === \"item\") {\n                node.index = index++;\n            }\n            last = node;\n            last.nextKey = void 0;\n        }\n        this.lastKey = last.key;\n    }\n};\nfunction createListState(props) {\n    const selectionState = createMultipleSelectionState(props);\n    const factory = (nodes)=>{\n        return props.filter ? new ListCollection(props.filter(nodes)) : new ListCollection(nodes);\n    };\n    const collection = createCollection({\n        dataSource: ()=>access(props.dataSource),\n        getKey: ()=>access(props.getKey),\n        getTextValue: ()=>access(props.getTextValue),\n        getDisabled: ()=>access(props.getDisabled),\n        getSectionChildren: ()=>access(props.getSectionChildren),\n        factory\n    }, [\n        ()=>props.filter\n    ]);\n    const selectionManager = new SelectionManager(collection, selectionState);\n    (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComputed)(()=>{\n        const focusedKey = selectionState.focusedKey();\n        if (focusedKey != null && !collection().getItem(focusedKey)) {\n            selectionState.setFocusedKey(void 0);\n        }\n    });\n    return {\n        collection,\n        selectionManager: ()=>selectionManager\n    };\n}\n// ../../node_modules/.pnpm/@kobalte+core@0.13.1_solid-js@1.8.17/node_modules/@kobalte/core/dist/chunk/32MH7W7S.js\nfunction createPresence(present) {\n    const [node, setNode] = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createSignal)();\n    let styles = {};\n    let prevPresent = present();\n    let prevAnimationName = \"none\";\n    const [state, send] = createStateMachine(present() ? \"mounted\" : \"unmounted\", {\n        mounted: {\n            UNMOUNT: \"unmounted\",\n            ANIMATION_OUT: \"unmountSuspended\"\n        },\n        unmountSuspended: {\n            MOUNT: \"mounted\",\n            ANIMATION_END: \"unmounted\"\n        },\n        unmounted: {\n            MOUNT: \"mounted\"\n        }\n    });\n    (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createEffect)((0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.on)(state, (state2)=>{\n        const currentAnimationName = getAnimationName(styles);\n        prevAnimationName = state2 === \"mounted\" ? currentAnimationName : \"none\";\n    }));\n    (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createEffect)((0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.on)(present, (present2)=>{\n        if (prevPresent === present2) {\n            return;\n        }\n        const currentAnimationName = getAnimationName(styles);\n        if (present2) {\n            send(\"MOUNT\");\n        } else if ((styles === null || styles === void 0 ? void 0 : styles.display) === \"none\") {\n            send(\"UNMOUNT\");\n        } else {\n            const isAnimating = prevAnimationName !== currentAnimationName;\n            if (prevPresent && isAnimating) {\n                send(\"ANIMATION_OUT\");\n            } else {\n                send(\"UNMOUNT\");\n            }\n        }\n        prevPresent = present2;\n    }));\n    (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createEffect)((0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.on)(node, (node2)=>{\n        if (node2) {\n            const handleAnimationEnd = (event)=>{\n                const currentAnimationName = getAnimationName(styles);\n                const isCurrentAnimation = currentAnimationName.includes(event.animationName);\n                if (event.target === node2 && isCurrentAnimation) {\n                    send(\"ANIMATION_END\");\n                }\n            };\n            const handleAnimationStart = (event)=>{\n                if (event.target === node2) {\n                    prevAnimationName = getAnimationName(styles);\n                }\n            };\n            node2.addEventListener(\"animationstart\", handleAnimationStart);\n            node2.addEventListener(\"animationcancel\", handleAnimationEnd);\n            node2.addEventListener(\"animationend\", handleAnimationEnd);\n            (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.onCleanup)(()=>{\n                node2.removeEventListener(\"animationstart\", handleAnimationStart);\n                node2.removeEventListener(\"animationcancel\", handleAnimationEnd);\n                node2.removeEventListener(\"animationend\", handleAnimationEnd);\n            });\n        } else {\n            send(\"ANIMATION_END\");\n        }\n    }));\n    return {\n        isPresent: ()=>[\n                \"mounted\",\n                \"unmountSuspended\"\n            ].includes(state()),\n        setRef: (el)=>{\n            if (el) {\n                styles = getComputedStyle(el);\n            }\n            setNode(el);\n        }\n    };\n}\nfunction getAnimationName(styles) {\n    return (styles === null || styles === void 0 ? void 0 : styles.animationName) || \"none\";\n}\nfunction createStateMachine(initialState, machine) {\n    const reduce = (state2, event)=>{\n        const nextState = machine[state2][event];\n        return nextState !== null && nextState !== void 0 ? nextState : state2;\n    };\n    const [state, setState] = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createSignal)(initialState);\n    const send = (event)=>{\n        setState((prev)=>reduce(prev, event));\n    };\n    return [\n        state,\n        send\n    ];\n}\n// ../../node_modules/.pnpm/@kobalte+core@0.13.1_solid-js@1.8.17/node_modules/@kobalte/core/dist/chunk/SNFWSEOJ.js\nfunction Polymorphic(props) {\n    const [local, others] = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.splitProps)(props, [\n        \"as\"\n    ]);\n    if (!local.as) {\n        throw new Error(\"[kobalte]: Polymorphic is missing the required `as` prop.\");\n    }\n    return(// @ts-ignore: Props are valid but not worth calculating\n    (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.Dynamic, (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.mergeProps)({\n        get component () {\n            return local.as;\n        }\n    }, others)));\n}\n_c2 = Polymorphic;\n// ../../node_modules/.pnpm/@kobalte+core@0.13.1_solid-js@1.8.17/node_modules/@kobalte/core/dist/chunk/5ZKAE4VZ.js\nvar __defProp = Object.defineProperty;\nvar __export = (target, all)=>{\n    for(var name in all)__defProp(target, name, {\n        get: all[name],\n        enumerable: true\n    });\n};\n// ../../node_modules/.pnpm/@kobalte+core@0.13.1_solid-js@1.8.17/node_modules/@kobalte/core/dist/chunk/E4R2EMM4.js\nfunction createRegisterId(setter) {\n    return (id)=>{\n        setter(id);\n        return ()=>setter(void 0);\n    };\n}\n// ../../node_modules/.pnpm/@kobalte+core@0.13.1_solid-js@1.8.17/node_modules/@kobalte/core/dist/chunk/3QD537TT.js\nfunction createTagName(ref, fallback) {\n    const [tagName, setTagName] = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createSignal)(stringOrUndefined(fallback === null || fallback === void 0 ? void 0 : fallback()));\n    (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createEffect)(()=>{\n        var _ref;\n        setTagName(((_ref = ref()) === null || _ref === void 0 ? void 0 : _ref.tagName.toLowerCase()) || stringOrUndefined(fallback === null || fallback === void 0 ? void 0 : fallback()));\n    });\n    return tagName;\n}\nfunction stringOrUndefined(value) {\n    return isString(value) ? value : void 0;\n}\n// ../../node_modules/.pnpm/@kobalte+core@0.13.1_solid-js@1.8.17/node_modules/@kobalte/core/dist/chunk/IXGTCCA7.js\nvar FORM_CONTROL_PROP_NAMES = [\n    \"id\",\n    \"name\",\n    \"validationState\",\n    \"required\",\n    \"disabled\",\n    \"readOnly\"\n];\nfunction createFormControl(props) {\n    const defaultId = \"form-control-\".concat((0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createUniqueId)());\n    const mergedProps = mergeDefaultProps({\n        id: defaultId\n    }, props);\n    const [labelId, setLabelId] = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createSignal)();\n    const [fieldId, setFieldId] = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createSignal)();\n    const [descriptionId, setDescriptionId] = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createSignal)();\n    const [errorMessageId, setErrorMessageId] = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createSignal)();\n    const getAriaLabelledBy = (fieldId2, fieldAriaLabel, fieldAriaLabelledBy)=>{\n        const hasAriaLabelledBy = fieldAriaLabelledBy != null || labelId() != null;\n        return [\n            fieldAriaLabelledBy,\n            labelId(),\n            // If there is both an aria-label and aria-labelledby, add the field itself has an aria-labelledby\n            hasAriaLabelledBy && fieldAriaLabel != null ? fieldId2 : void 0\n        ].filter(Boolean).join(\" \") || void 0;\n    };\n    const getAriaDescribedBy = (fieldAriaDescribedBy)=>{\n        return [\n            descriptionId(),\n            // Use aria-describedby for error message because aria-errormessage is unsupported using VoiceOver or NVDA.\n            // See https://github.com/adobe/react-spectrum/issues/1346#issuecomment-740136268\n            errorMessageId(),\n            fieldAriaDescribedBy\n        ].filter(Boolean).join(\" \") || void 0;\n    };\n    const dataset = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(()=>({\n            \"data-valid\": access(mergedProps.validationState) === \"valid\" ? \"\" : void 0,\n            \"data-invalid\": access(mergedProps.validationState) === \"invalid\" ? \"\" : void 0,\n            \"data-required\": access(mergedProps.required) ? \"\" : void 0,\n            \"data-disabled\": access(mergedProps.disabled) ? \"\" : void 0,\n            \"data-readonly\": access(mergedProps.readOnly) ? \"\" : void 0\n        }));\n    const formControlContext = {\n        name: ()=>{\n            var _access;\n            return (_access = access(mergedProps.name)) !== null && _access !== void 0 ? _access : access(mergedProps.id);\n        },\n        dataset,\n        validationState: ()=>access(mergedProps.validationState),\n        isRequired: ()=>access(mergedProps.required),\n        isDisabled: ()=>access(mergedProps.disabled),\n        isReadOnly: ()=>access(mergedProps.readOnly),\n        labelId,\n        fieldId,\n        descriptionId,\n        errorMessageId,\n        getAriaLabelledBy,\n        getAriaDescribedBy,\n        generateId: createGenerateId(()=>access(mergedProps.id)),\n        registerLabel: createRegisterId(setLabelId),\n        registerField: createRegisterId(setFieldId),\n        registerDescription: createRegisterId(setDescriptionId),\n        registerErrorMessage: createRegisterId(setErrorMessageId)\n    };\n    return {\n        formControlContext\n    };\n}\nvar FormControlContext = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createContext)();\nfunction useFormControlContext() {\n    _s7();\n    const context = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.useContext)(FormControlContext);\n    if (context === void 0) {\n        throw new Error(\"[kobalte]: `useFormControlContext` must be used within a `FormControlContext.Provider` component\");\n    }\n    return context;\n}\n_s7(useFormControlContext, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nfunction FormControlDescription(props) {\n    _s8();\n    const context = useFormControlContext();\n    const mergedProps = mergeDefaultProps({\n        id: context.generateId(\"description\")\n    }, props);\n    (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createEffect)(()=>(0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.onCleanup)(context.registerDescription(mergedProps.id)));\n    return (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(Polymorphic, (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.mergeProps)({\n        as: \"div\"\n    }, ()=>context.dataset(), mergedProps));\n}\n_s8(FormControlDescription, \"eSMNy3rgxn5HDoAy+O2ARZUcBw8=\", false, function() {\n    return [\n        useFormControlContext\n    ];\n});\n_c3 = FormControlDescription;\nfunction FormControlErrorMessage(props) {\n    _s9();\n    const context = useFormControlContext();\n    const mergedProps = mergeDefaultProps({\n        id: context.generateId(\"error-message\")\n    }, props);\n    const [local, others] = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.splitProps)(mergedProps, [\n        \"forceMount\"\n    ]);\n    const isInvalid = ()=>context.validationState() === \"invalid\";\n    (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createEffect)(()=>{\n        if (!isInvalid()) {\n            return;\n        }\n        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.onCleanup)(context.registerErrorMessage(others.id));\n    });\n    return (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.Show, {\n        get when () {\n            return local.forceMount || isInvalid();\n        },\n        get children () {\n            return (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(Polymorphic, (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.mergeProps)({\n                as: \"div\"\n            }, ()=>context.dataset(), others));\n        }\n    });\n}\n_s9(FormControlErrorMessage, \"eSMNy3rgxn5HDoAy+O2ARZUcBw8=\", false, function() {\n    return [\n        useFormControlContext\n    ];\n});\n_c4 = FormControlErrorMessage;\nfunction FormControlLabel(props) {\n    _s10();\n    let ref;\n    const context = useFormControlContext();\n    const mergedProps = mergeDefaultProps({\n        id: context.generateId(\"label\")\n    }, props);\n    const [local, others] = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.splitProps)(mergedProps, [\n        \"ref\"\n    ]);\n    const tagName = createTagName(()=>ref, ()=>\"label\");\n    (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createEffect)(()=>(0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.onCleanup)(context.registerLabel(others.id)));\n    return (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(Polymorphic, (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.mergeProps)({\n        as: \"label\",\n        ref (r$) {\n            const _ref$ = mergeRefs((el)=>ref = el, local.ref);\n            typeof _ref$ === \"function\" && _ref$(r$);\n        },\n        get [\"for\"] () {\n            return (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(()=>tagName() === \"label\")() ? context.fieldId() : void 0;\n        }\n    }, ()=>context.dataset(), others));\n}\n_s10(FormControlLabel, \"eSMNy3rgxn5HDoAy+O2ARZUcBw8=\", false, function() {\n    return [\n        useFormControlContext\n    ];\n});\n_c5 = FormControlLabel;\n// ../../node_modules/.pnpm/@kobalte+core@0.13.1_solid-js@1.8.17/node_modules/@kobalte/core/dist/chunk/ANN3A2QM.js\nfunction createFormResetListener(element, handler) {\n    (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createEffect)((0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.on)(element, (element2)=>{\n        if (element2 == null) {\n            return;\n        }\n        const form = getClosestForm(element2);\n        if (form == null) {\n            return;\n        }\n        form.addEventListener(\"reset\", handler, {\n            passive: true\n        });\n        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.onCleanup)(()=>{\n            form.removeEventListener(\"reset\", handler);\n        });\n    }));\n}\nfunction getClosestForm(element) {\n    return isFormElement(element) ? element.form : element.closest(\"form\");\n}\nfunction isFormElement(element) {\n    return element.matches(\"textarea, input, select, button\");\n}\n// ../../node_modules/.pnpm/@kobalte+core@0.13.1_solid-js@1.8.17/node_modules/@kobalte/core/dist/chunk/ZKYDDHM6.js\nvar DATA_TOP_LAYER_ATTR = \"data-kb-top-layer\";\nvar originalBodyPointerEvents;\nvar hasDisabledBodyPointerEvents = false;\nvar layers = [];\nfunction indexOf(node) {\n    return layers.findIndex((layer)=>layer.node === node);\n}\nfunction find(node) {\n    return layers[indexOf(node)];\n}\nfunction isTopMostLayer(node) {\n    return layers[layers.length - 1].node === node;\n}\nfunction getPointerBlockingLayers() {\n    return layers.filter((layer)=>layer.isPointerBlocking);\n}\nfunction getTopMostPointerBlockingLayer() {\n    return [\n        ...getPointerBlockingLayers()\n    ].slice(-1)[0];\n}\nfunction hasPointerBlockingLayer() {\n    return getPointerBlockingLayers().length > 0;\n}\nfunction isBelowPointerBlockingLayer(node) {\n    var _getTopMostPointerBlockingLayer;\n    const highestBlockingIndex = indexOf((_getTopMostPointerBlockingLayer = getTopMostPointerBlockingLayer()) === null || _getTopMostPointerBlockingLayer === void 0 ? void 0 : _getTopMostPointerBlockingLayer.node);\n    return indexOf(node) < highestBlockingIndex;\n}\nfunction addLayer(layer) {\n    layers.push(layer);\n}\nfunction removeLayer(node) {\n    const index = indexOf(node);\n    if (index < 0) {\n        return;\n    }\n    layers.splice(index, 1);\n}\nfunction assignPointerEventToLayers() {\n    for (const { node } of layers){\n        node.style.pointerEvents = isBelowPointerBlockingLayer(node) ? \"none\" : \"auto\";\n    }\n}\nfunction disableBodyPointerEvents(node) {\n    if (hasPointerBlockingLayer() && !hasDisabledBodyPointerEvents) {\n        const ownerDocument = getDocument(node);\n        originalBodyPointerEvents = document.body.style.pointerEvents;\n        ownerDocument.body.style.pointerEvents = \"none\";\n        hasDisabledBodyPointerEvents = true;\n    }\n}\nfunction restoreBodyPointerEvents(node) {\n    if (hasPointerBlockingLayer()) {\n        return;\n    }\n    const ownerDocument = getDocument(node);\n    ownerDocument.body.style.pointerEvents = originalBodyPointerEvents;\n    if (ownerDocument.body.style.length === 0) {\n        ownerDocument.body.removeAttribute(\"style\");\n    }\n    hasDisabledBodyPointerEvents = false;\n}\nvar layerStack = {\n    layers,\n    isTopMostLayer,\n    hasPointerBlockingLayer,\n    isBelowPointerBlockingLayer,\n    addLayer,\n    removeLayer,\n    indexOf,\n    find,\n    assignPointerEventToLayers,\n    disableBodyPointerEvents,\n    restoreBodyPointerEvents\n};\n// ../../node_modules/.pnpm/@kobalte+core@0.13.1_solid-js@1.8.17/node_modules/@kobalte/core/dist/chunk/EOS4KX3P.js\nvar button_exports = {};\n__export(button_exports, {\n    Button: ()=>Button,\n    Root: ()=>ButtonRoot\n});\nvar BUTTON_INPUT_TYPES = [\n    \"button\",\n    \"color\",\n    \"file\",\n    \"image\",\n    \"reset\",\n    \"submit\"\n];\nfunction isButton(element) {\n    const tagName = element.tagName.toLowerCase();\n    if (tagName === \"button\") {\n        return true;\n    }\n    if (tagName === \"input\" && element.type) {\n        return BUTTON_INPUT_TYPES.indexOf(element.type) !== -1;\n    }\n    return false;\n}\nfunction ButtonRoot(props) {\n    let ref;\n    const mergedProps = mergeDefaultProps({\n        type: \"button\"\n    }, props);\n    const [local, others] = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.splitProps)(mergedProps, [\n        \"ref\",\n        \"type\",\n        \"disabled\"\n    ]);\n    const tagName = createTagName(()=>ref, ()=>\"button\");\n    const isNativeButton = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(()=>{\n        const elementTagName = tagName();\n        if (elementTagName == null) {\n            return false;\n        }\n        return isButton({\n            tagName: elementTagName,\n            type: local.type\n        });\n    });\n    const isNativeInput = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(()=>{\n        return tagName() === \"input\";\n    });\n    const isNativeLink = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(()=>{\n        return tagName() === \"a\" && (ref === null || ref === void 0 ? void 0 : ref.getAttribute(\"href\")) != null;\n    });\n    return (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(Polymorphic, (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.mergeProps)({\n        as: \"button\",\n        ref (r$) {\n            const _ref$ = mergeRefs((el)=>ref = el, local.ref);\n            typeof _ref$ === \"function\" && _ref$(r$);\n        },\n        get type () {\n            return isNativeButton() || isNativeInput() ? local.type : void 0;\n        },\n        get role () {\n            return !isNativeButton() && !isNativeLink() ? \"button\" : void 0;\n        },\n        get tabIndex () {\n            return !isNativeButton() && !isNativeLink() && !local.disabled ? 0 : void 0;\n        },\n        get disabled () {\n            return isNativeButton() || isNativeInput() ? local.disabled : void 0;\n        },\n        get [\"aria-disabled\"] () {\n            return !isNativeButton() && !isNativeInput() && local.disabled ? true : void 0;\n        },\n        get [\"data-disabled\"] () {\n            return local.disabled ? \"\" : void 0;\n        }\n    }, others));\n}\n_c6 = ButtonRoot;\nvar Button = ButtonRoot;\n// ../../node_modules/.pnpm/@kobalte+core@0.13.1_solid-js@1.8.17/node_modules/@kobalte/core/dist/chunk/YGDQXQ2B.js\nfunction createToggleState() {\n    let props = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    const [isSelected, _setIsSelected] = createControllableBooleanSignal({\n        value: ()=>access(props.isSelected),\n        defaultValue: ()=>!!access(props.defaultIsSelected),\n        onChange: (value)=>{\n            var _props_onSelectedChange;\n            return (_props_onSelectedChange = props.onSelectedChange) === null || _props_onSelectedChange === void 0 ? void 0 : _props_onSelectedChange.call(props, value);\n        }\n    });\n    const setIsSelected = (value)=>{\n        if (!access(props.isReadOnly) && !access(props.isDisabled)) {\n            _setIsSelected(value);\n        }\n    };\n    const toggle = ()=>{\n        if (!access(props.isReadOnly) && !access(props.isDisabled)) {\n            _setIsSelected(!isSelected());\n        }\n    };\n    return {\n        isSelected,\n        setIsSelected,\n        toggle\n    };\n}\n// ../../node_modules/.pnpm/@floating-ui+utils@0.1.6/node_modules/@floating-ui/utils/dist/floating-ui.utils.mjs\nvar sides = [\n    \"top\",\n    \"right\",\n    \"bottom\",\n    \"left\"\n];\nvar min = Math.min;\nvar max = Math.max;\nvar oppositeSideMap = {\n    left: \"right\",\n    right: \"left\",\n    bottom: \"top\",\n    top: \"bottom\"\n};\nvar oppositeAlignmentMap = {\n    start: \"end\",\n    end: \"start\"\n};\nfunction clamp2(start, value, end) {\n    return max(start, min(value, end));\n}\nfunction evaluate(value, param) {\n    return typeof value === \"function\" ? value(param) : value;\n}\nfunction getSide(placement) {\n    return placement.split(\"-\")[0];\n}\nfunction getAlignment(placement) {\n    return placement.split(\"-\")[1];\n}\nfunction getOppositeAxis(axis) {\n    return axis === \"x\" ? \"y\" : \"x\";\n}\nfunction getAxisLength(axis) {\n    return axis === \"y\" ? \"height\" : \"width\";\n}\nfunction getSideAxis(placement) {\n    return [\n        \"top\",\n        \"bottom\"\n    ].includes(getSide(placement)) ? \"y\" : \"x\";\n}\nfunction getAlignmentAxis(placement) {\n    return getOppositeAxis(getSideAxis(placement));\n}\nfunction getAlignmentSides(placement, rects, rtl) {\n    if (rtl === void 0) {\n        rtl = false;\n    }\n    const alignment = getAlignment(placement);\n    const alignmentAxis = getAlignmentAxis(placement);\n    const length = getAxisLength(alignmentAxis);\n    let mainAlignmentSide = alignmentAxis === \"x\" ? alignment === (rtl ? \"end\" : \"start\") ? \"right\" : \"left\" : alignment === \"start\" ? \"bottom\" : \"top\";\n    if (rects.reference[length] > rects.floating[length]) {\n        mainAlignmentSide = getOppositePlacement(mainAlignmentSide);\n    }\n    return [\n        mainAlignmentSide,\n        getOppositePlacement(mainAlignmentSide)\n    ];\n}\nfunction getExpandedPlacements(placement) {\n    const oppositePlacement = getOppositePlacement(placement);\n    return [\n        getOppositeAlignmentPlacement(placement),\n        oppositePlacement,\n        getOppositeAlignmentPlacement(oppositePlacement)\n    ];\n}\nfunction getOppositeAlignmentPlacement(placement) {\n    return placement.replace(/start|end/g, (alignment)=>oppositeAlignmentMap[alignment]);\n}\nfunction getSideList(side, isStart, rtl) {\n    const lr = [\n        \"left\",\n        \"right\"\n    ];\n    const rl = [\n        \"right\",\n        \"left\"\n    ];\n    const tb = [\n        \"top\",\n        \"bottom\"\n    ];\n    const bt = [\n        \"bottom\",\n        \"top\"\n    ];\n    switch(side){\n        case \"top\":\n        case \"bottom\":\n            if (rtl) return isStart ? rl : lr;\n            return isStart ? lr : rl;\n        case \"left\":\n        case \"right\":\n            return isStart ? tb : bt;\n        default:\n            return [];\n    }\n}\nfunction getOppositeAxisPlacements(placement, flipAlignment, direction, rtl) {\n    const alignment = getAlignment(placement);\n    let list = getSideList(getSide(placement), direction === \"start\", rtl);\n    if (alignment) {\n        list = list.map((side)=>side + \"-\" + alignment);\n        if (flipAlignment) {\n            list = list.concat(list.map(getOppositeAlignmentPlacement));\n        }\n    }\n    return list;\n}\nfunction getOppositePlacement(placement) {\n    return placement.replace(/left|right|bottom|top/g, (side)=>oppositeSideMap[side]);\n}\nfunction expandPaddingObject(padding) {\n    return {\n        top: 0,\n        right: 0,\n        bottom: 0,\n        left: 0,\n        ...padding\n    };\n}\nfunction getPaddingObject(padding) {\n    return typeof padding !== \"number\" ? expandPaddingObject(padding) : {\n        top: padding,\n        right: padding,\n        bottom: padding,\n        left: padding\n    };\n}\nfunction rectToClientRect(rect) {\n    return {\n        ...rect,\n        top: rect.y,\n        left: rect.x,\n        right: rect.x + rect.width,\n        bottom: rect.y + rect.height\n    };\n}\n// ../../node_modules/.pnpm/@floating-ui+core@1.5.0/node_modules/@floating-ui/core/dist/floating-ui.core.mjs\nfunction computeCoordsFromPlacement(_ref, placement, rtl) {\n    let { reference, floating } = _ref;\n    const sideAxis = getSideAxis(placement);\n    const alignmentAxis = getAlignmentAxis(placement);\n    const alignLength = getAxisLength(alignmentAxis);\n    const side = getSide(placement);\n    const isVertical = sideAxis === \"y\";\n    const commonX = reference.x + reference.width / 2 - floating.width / 2;\n    const commonY = reference.y + reference.height / 2 - floating.height / 2;\n    const commonAlign = reference[alignLength] / 2 - floating[alignLength] / 2;\n    let coords;\n    switch(side){\n        case \"top\":\n            coords = {\n                x: commonX,\n                y: reference.y - floating.height\n            };\n            break;\n        case \"bottom\":\n            coords = {\n                x: commonX,\n                y: reference.y + reference.height\n            };\n            break;\n        case \"right\":\n            coords = {\n                x: reference.x + reference.width,\n                y: commonY\n            };\n            break;\n        case \"left\":\n            coords = {\n                x: reference.x - floating.width,\n                y: commonY\n            };\n            break;\n        default:\n            coords = {\n                x: reference.x,\n                y: reference.y\n            };\n    }\n    switch(getAlignment(placement)){\n        case \"start\":\n            coords[alignmentAxis] -= commonAlign * (rtl && isVertical ? -1 : 1);\n            break;\n        case \"end\":\n            coords[alignmentAxis] += commonAlign * (rtl && isVertical ? -1 : 1);\n            break;\n    }\n    return coords;\n}\nvar computePosition = async (reference, floating, config)=>{\n    const { placement = \"bottom\", strategy = \"absolute\", middleware = [], platform: platform2 } = config;\n    const validMiddleware = middleware.filter(Boolean);\n    const rtl = await (platform2.isRTL == null ? void 0 : platform2.isRTL(floating));\n    let rects = await platform2.getElementRects({\n        reference,\n        floating,\n        strategy\n    });\n    let { x, y } = computeCoordsFromPlacement(rects, placement, rtl);\n    let statefulPlacement = placement;\n    let middlewareData = {};\n    let resetCount = 0;\n    for(let i2 = 0; i2 < validMiddleware.length; i2++){\n        const { name, fn } = validMiddleware[i2];\n        const { x: nextX, y: nextY, data, reset } = await fn({\n            x,\n            y,\n            initialPlacement: placement,\n            placement: statefulPlacement,\n            strategy,\n            middlewareData,\n            rects,\n            platform: platform2,\n            elements: {\n                reference,\n                floating\n            }\n        });\n        x = nextX != null ? nextX : x;\n        y = nextY != null ? nextY : y;\n        middlewareData = {\n            ...middlewareData,\n            [name]: {\n                ...middlewareData[name],\n                ...data\n            }\n        };\n        if (reset && resetCount <= 50) {\n            resetCount++;\n            if (typeof reset === \"object\") {\n                if (reset.placement) {\n                    statefulPlacement = reset.placement;\n                }\n                if (reset.rects) {\n                    rects = reset.rects === true ? await platform2.getElementRects({\n                        reference,\n                        floating,\n                        strategy\n                    }) : reset.rects;\n                }\n                ({ x, y } = computeCoordsFromPlacement(rects, statefulPlacement, rtl));\n            }\n            i2 = -1;\n            continue;\n        }\n    }\n    return {\n        x,\n        y,\n        placement: statefulPlacement,\n        strategy,\n        middlewareData\n    };\n};\nasync function detectOverflow(state, options) {\n    var _await$platform$isEle;\n    if (options === void 0) {\n        options = {};\n    }\n    const { x, y, platform: platform2, rects, elements, strategy } = state;\n    const { boundary = \"clippingAncestors\", rootBoundary = \"viewport\", elementContext = \"floating\", altBoundary = false, padding = 0 } = evaluate(options, state);\n    const paddingObject = getPaddingObject(padding);\n    const altContext = elementContext === \"floating\" ? \"reference\" : \"floating\";\n    const element = elements[altBoundary ? altContext : elementContext];\n    const clippingClientRect = rectToClientRect(await platform2.getClippingRect({\n        element: ((_await$platform$isEle = await (platform2.isElement == null ? void 0 : platform2.isElement(element))) != null ? _await$platform$isEle : true) ? element : element.contextElement || await (platform2.getDocumentElement == null ? void 0 : platform2.getDocumentElement(elements.floating)),\n        boundary,\n        rootBoundary,\n        strategy\n    }));\n    const rect = elementContext === \"floating\" ? {\n        ...rects.floating,\n        x,\n        y\n    } : rects.reference;\n    const offsetParent = await (platform2.getOffsetParent == null ? void 0 : platform2.getOffsetParent(elements.floating));\n    const offsetScale = await (platform2.isElement == null ? void 0 : platform2.isElement(offsetParent)) ? await (platform2.getScale == null ? void 0 : platform2.getScale(offsetParent)) || {\n        x: 1,\n        y: 1\n    } : {\n        x: 1,\n        y: 1\n    };\n    const elementClientRect = rectToClientRect(platform2.convertOffsetParentRelativeRectToViewportRelativeRect ? await platform2.convertOffsetParentRelativeRectToViewportRelativeRect({\n        rect,\n        offsetParent,\n        strategy\n    }) : rect);\n    return {\n        top: (clippingClientRect.top - elementClientRect.top + paddingObject.top) / offsetScale.y,\n        bottom: (elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom) / offsetScale.y,\n        left: (clippingClientRect.left - elementClientRect.left + paddingObject.left) / offsetScale.x,\n        right: (elementClientRect.right - clippingClientRect.right + paddingObject.right) / offsetScale.x\n    };\n}\nvar arrow = (options)=>({\n        name: \"arrow\",\n        options,\n        async fn (state) {\n            const { x, y, placement, rects, platform: platform2, elements, middlewareData } = state;\n            const { element, padding = 0 } = evaluate(options, state) || {};\n            if (element == null) {\n                return {};\n            }\n            const paddingObject = getPaddingObject(padding);\n            const coords = {\n                x,\n                y\n            };\n            const axis = getAlignmentAxis(placement);\n            const length = getAxisLength(axis);\n            const arrowDimensions = await platform2.getDimensions(element);\n            const isYAxis = axis === \"y\";\n            const minProp = isYAxis ? \"top\" : \"left\";\n            const maxProp = isYAxis ? \"bottom\" : \"right\";\n            const clientProp = isYAxis ? \"clientHeight\" : \"clientWidth\";\n            const endDiff = rects.reference[length] + rects.reference[axis] - coords[axis] - rects.floating[length];\n            const startDiff = coords[axis] - rects.reference[axis];\n            const arrowOffsetParent = await (platform2.getOffsetParent == null ? void 0 : platform2.getOffsetParent(element));\n            let clientSize = arrowOffsetParent ? arrowOffsetParent[clientProp] : 0;\n            if (!clientSize || !await (platform2.isElement == null ? void 0 : platform2.isElement(arrowOffsetParent))) {\n                clientSize = elements.floating[clientProp] || rects.floating[length];\n            }\n            const centerToReference = endDiff / 2 - startDiff / 2;\n            const largestPossiblePadding = clientSize / 2 - arrowDimensions[length] / 2 - 1;\n            const minPadding = min(paddingObject[minProp], largestPossiblePadding);\n            const maxPadding = min(paddingObject[maxProp], largestPossiblePadding);\n            const min$1 = minPadding;\n            const max3 = clientSize - arrowDimensions[length] - maxPadding;\n            const center = clientSize / 2 - arrowDimensions[length] / 2 + centerToReference;\n            const offset3 = clamp2(min$1, center, max3);\n            const shouldAddOffset = !middlewareData.arrow && getAlignment(placement) != null && center != offset3 && rects.reference[length] / 2 - (center < min$1 ? minPadding : maxPadding) - arrowDimensions[length] / 2 < 0;\n            const alignmentOffset = shouldAddOffset ? center < min$1 ? center - min$1 : center - max3 : 0;\n            return {\n                [axis]: coords[axis] + alignmentOffset,\n                data: {\n                    [axis]: offset3,\n                    centerOffset: center - offset3 - alignmentOffset,\n                    ...shouldAddOffset && {\n                        alignmentOffset\n                    }\n                },\n                reset: shouldAddOffset\n            };\n        }\n    });\nvar flip = function(options) {\n    if (options === void 0) {\n        options = {};\n    }\n    return {\n        name: \"flip\",\n        options,\n        async fn (state) {\n            var _middlewareData$arrow, _middlewareData$flip;\n            const { placement, middlewareData, rects, initialPlacement, platform: platform2, elements } = state;\n            const { mainAxis: checkMainAxis = true, crossAxis: checkCrossAxis = true, fallbackPlacements: specifiedFallbackPlacements, fallbackStrategy = \"bestFit\", fallbackAxisSideDirection = \"none\", flipAlignment = true, ...detectOverflowOptions } = evaluate(options, state);\n            if ((_middlewareData$arrow = middlewareData.arrow) != null && _middlewareData$arrow.alignmentOffset) {\n                return {};\n            }\n            const side = getSide(placement);\n            const isBasePlacement = getSide(initialPlacement) === initialPlacement;\n            const rtl = await (platform2.isRTL == null ? void 0 : platform2.isRTL(elements.floating));\n            const fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipAlignment ? [\n                getOppositePlacement(initialPlacement)\n            ] : getExpandedPlacements(initialPlacement));\n            if (!specifiedFallbackPlacements && fallbackAxisSideDirection !== \"none\") {\n                fallbackPlacements.push(...getOppositeAxisPlacements(initialPlacement, flipAlignment, fallbackAxisSideDirection, rtl));\n            }\n            const placements2 = [\n                initialPlacement,\n                ...fallbackPlacements\n            ];\n            const overflow = await detectOverflow(state, detectOverflowOptions);\n            const overflows = [];\n            let overflowsData = ((_middlewareData$flip = middlewareData.flip) == null ? void 0 : _middlewareData$flip.overflows) || [];\n            if (checkMainAxis) {\n                overflows.push(overflow[side]);\n            }\n            if (checkCrossAxis) {\n                const sides2 = getAlignmentSides(placement, rects, rtl);\n                overflows.push(overflow[sides2[0]], overflow[sides2[1]]);\n            }\n            overflowsData = [\n                ...overflowsData,\n                {\n                    placement,\n                    overflows\n                }\n            ];\n            if (!overflows.every((side2)=>side2 <= 0)) {\n                var _middlewareData$flip2, _overflowsData$filter;\n                const nextIndex = (((_middlewareData$flip2 = middlewareData.flip) == null ? void 0 : _middlewareData$flip2.index) || 0) + 1;\n                const nextPlacement = placements2[nextIndex];\n                if (nextPlacement) {\n                    return {\n                        data: {\n                            index: nextIndex,\n                            overflows: overflowsData\n                        },\n                        reset: {\n                            placement: nextPlacement\n                        }\n                    };\n                }\n                let resetPlacement = (_overflowsData$filter = overflowsData.filter((d)=>d.overflows[0] <= 0).sort((a2, b2)=>a2.overflows[1] - b2.overflows[1])[0]) == null ? void 0 : _overflowsData$filter.placement;\n                if (!resetPlacement) {\n                    switch(fallbackStrategy){\n                        case \"bestFit\":\n                            {\n                                var _overflowsData$map$so;\n                                const placement2 = (_overflowsData$map$so = overflowsData.map((d)=>[\n                                        d.placement,\n                                        d.overflows.filter((overflow2)=>overflow2 > 0).reduce((acc, overflow2)=>acc + overflow2, 0)\n                                    ]).sort((a2, b2)=>a2[1] - b2[1])[0]) == null ? void 0 : _overflowsData$map$so[0];\n                                if (placement2) {\n                                    resetPlacement = placement2;\n                                }\n                                break;\n                            }\n                        case \"initialPlacement\":\n                            resetPlacement = initialPlacement;\n                            break;\n                    }\n                }\n                if (placement !== resetPlacement) {\n                    return {\n                        reset: {\n                            placement: resetPlacement\n                        }\n                    };\n                }\n            }\n            return {};\n        }\n    };\n};\nfunction getSideOffsets(overflow, rect) {\n    return {\n        top: overflow.top - rect.height,\n        right: overflow.right - rect.width,\n        bottom: overflow.bottom - rect.height,\n        left: overflow.left - rect.width\n    };\n}\nfunction isAnySideFullyClipped(overflow) {\n    return sides.some((side)=>overflow[side] >= 0);\n}\nvar hide = function(options) {\n    if (options === void 0) {\n        options = {};\n    }\n    return {\n        name: \"hide\",\n        options,\n        async fn (state) {\n            const { rects } = state;\n            const { strategy = \"referenceHidden\", ...detectOverflowOptions } = evaluate(options, state);\n            switch(strategy){\n                case \"referenceHidden\":\n                    {\n                        const overflow = await detectOverflow(state, {\n                            ...detectOverflowOptions,\n                            elementContext: \"reference\"\n                        });\n                        const offsets = getSideOffsets(overflow, rects.reference);\n                        return {\n                            data: {\n                                referenceHiddenOffsets: offsets,\n                                referenceHidden: isAnySideFullyClipped(offsets)\n                            }\n                        };\n                    }\n                case \"escaped\":\n                    {\n                        const overflow = await detectOverflow(state, {\n                            ...detectOverflowOptions,\n                            altBoundary: true\n                        });\n                        const offsets = getSideOffsets(overflow, rects.floating);\n                        return {\n                            data: {\n                                escapedOffsets: offsets,\n                                escaped: isAnySideFullyClipped(offsets)\n                            }\n                        };\n                    }\n                default:\n                    {\n                        return {};\n                    }\n            }\n        }\n    };\n};\nasync function convertValueToCoords(state, options) {\n    const { placement, platform: platform2, elements } = state;\n    const rtl = await (platform2.isRTL == null ? void 0 : platform2.isRTL(elements.floating));\n    const side = getSide(placement);\n    const alignment = getAlignment(placement);\n    const isVertical = getSideAxis(placement) === \"y\";\n    const mainAxisMulti = [\n        \"left\",\n        \"top\"\n    ].includes(side) ? -1 : 1;\n    const crossAxisMulti = rtl && isVertical ? -1 : 1;\n    const rawValue = evaluate(options, state);\n    let { mainAxis, crossAxis, alignmentAxis } = typeof rawValue === \"number\" ? {\n        mainAxis: rawValue,\n        crossAxis: 0,\n        alignmentAxis: null\n    } : {\n        mainAxis: 0,\n        crossAxis: 0,\n        alignmentAxis: null,\n        ...rawValue\n    };\n    if (alignment && typeof alignmentAxis === \"number\") {\n        crossAxis = alignment === \"end\" ? alignmentAxis * -1 : alignmentAxis;\n    }\n    return isVertical ? {\n        x: crossAxis * crossAxisMulti,\n        y: mainAxis * mainAxisMulti\n    } : {\n        x: mainAxis * mainAxisMulti,\n        y: crossAxis * crossAxisMulti\n    };\n}\nvar offset = function(options) {\n    if (options === void 0) {\n        options = 0;\n    }\n    return {\n        name: \"offset\",\n        options,\n        async fn (state) {\n            const { x, y } = state;\n            const diffCoords = await convertValueToCoords(state, options);\n            return {\n                x: x + diffCoords.x,\n                y: y + diffCoords.y,\n                data: diffCoords\n            };\n        }\n    };\n};\nvar shift = function(options) {\n    if (options === void 0) {\n        options = {};\n    }\n    return {\n        name: \"shift\",\n        options,\n        async fn (state) {\n            const { x, y, placement } = state;\n            const { mainAxis: checkMainAxis = true, crossAxis: checkCrossAxis = false, limiter = {\n                fn: (_ref)=>{\n                    let { x: x2, y: y2 } = _ref;\n                    return {\n                        x: x2,\n                        y: y2\n                    };\n                }\n            }, ...detectOverflowOptions } = evaluate(options, state);\n            const coords = {\n                x,\n                y\n            };\n            const overflow = await detectOverflow(state, detectOverflowOptions);\n            const crossAxis = getSideAxis(getSide(placement));\n            const mainAxis = getOppositeAxis(crossAxis);\n            let mainAxisCoord = coords[mainAxis];\n            let crossAxisCoord = coords[crossAxis];\n            if (checkMainAxis) {\n                const minSide = mainAxis === \"y\" ? \"top\" : \"left\";\n                const maxSide = mainAxis === \"y\" ? \"bottom\" : \"right\";\n                const min3 = mainAxisCoord + overflow[minSide];\n                const max3 = mainAxisCoord - overflow[maxSide];\n                mainAxisCoord = clamp2(min3, mainAxisCoord, max3);\n            }\n            if (checkCrossAxis) {\n                const minSide = crossAxis === \"y\" ? \"top\" : \"left\";\n                const maxSide = crossAxis === \"y\" ? \"bottom\" : \"right\";\n                const min3 = crossAxisCoord + overflow[minSide];\n                const max3 = crossAxisCoord - overflow[maxSide];\n                crossAxisCoord = clamp2(min3, crossAxisCoord, max3);\n            }\n            const limitedCoords = limiter.fn({\n                ...state,\n                [mainAxis]: mainAxisCoord,\n                [crossAxis]: crossAxisCoord\n            });\n            return {\n                ...limitedCoords,\n                data: {\n                    x: limitedCoords.x - x,\n                    y: limitedCoords.y - y\n                }\n            };\n        }\n    };\n};\nvar size = function(options) {\n    if (options === void 0) {\n        options = {};\n    }\n    return {\n        name: \"size\",\n        options,\n        async fn (state) {\n            const { placement, rects, platform: platform2, elements } = state;\n            const { apply = ()=>{}, ...detectOverflowOptions } = evaluate(options, state);\n            const overflow = await detectOverflow(state, detectOverflowOptions);\n            const side = getSide(placement);\n            const alignment = getAlignment(placement);\n            const isYAxis = getSideAxis(placement) === \"y\";\n            const { width, height } = rects.floating;\n            let heightSide;\n            let widthSide;\n            if (side === \"top\" || side === \"bottom\") {\n                heightSide = side;\n                widthSide = alignment === (await (platform2.isRTL == null ? void 0 : platform2.isRTL(elements.floating)) ? \"start\" : \"end\") ? \"left\" : \"right\";\n            } else {\n                widthSide = side;\n                heightSide = alignment === \"end\" ? \"top\" : \"bottom\";\n            }\n            const overflowAvailableHeight = height - overflow[heightSide];\n            const overflowAvailableWidth = width - overflow[widthSide];\n            const noShift = !state.middlewareData.shift;\n            let availableHeight = overflowAvailableHeight;\n            let availableWidth = overflowAvailableWidth;\n            if (isYAxis) {\n                const maximumClippingWidth = width - overflow.left - overflow.right;\n                availableWidth = alignment || noShift ? min(overflowAvailableWidth, maximumClippingWidth) : maximumClippingWidth;\n            } else {\n                const maximumClippingHeight = height - overflow.top - overflow.bottom;\n                availableHeight = alignment || noShift ? min(overflowAvailableHeight, maximumClippingHeight) : maximumClippingHeight;\n            }\n            if (noShift && !alignment) {\n                const xMin = max(overflow.left, 0);\n                const xMax = max(overflow.right, 0);\n                const yMin = max(overflow.top, 0);\n                const yMax = max(overflow.bottom, 0);\n                if (isYAxis) {\n                    availableWidth = width - 2 * (xMin !== 0 || xMax !== 0 ? xMin + xMax : max(overflow.left, overflow.right));\n                } else {\n                    availableHeight = height - 2 * (yMin !== 0 || yMax !== 0 ? yMin + yMax : max(overflow.top, overflow.bottom));\n                }\n            }\n            await apply({\n                ...state,\n                availableWidth,\n                availableHeight\n            });\n            const nextDimensions = await platform2.getDimensions(elements.floating);\n            if (width !== nextDimensions.width || height !== nextDimensions.height) {\n                return {\n                    reset: {\n                        rects: true\n                    }\n                };\n            }\n            return {};\n        }\n    };\n};\n// ../../node_modules/.pnpm/@floating-ui+utils@0.2.2/node_modules/@floating-ui/utils/dist/floating-ui.utils.mjs\nvar min2 = Math.min;\nvar max2 = Math.max;\nvar round = Math.round;\nvar floor = Math.floor;\nvar createCoords = (v)=>({\n        x: v,\n        y: v\n    });\n// ../../node_modules/.pnpm/@floating-ui+utils@0.2.2/node_modules/@floating-ui/utils/dist/floating-ui.utils.dom.mjs\nfunction getNodeName(node) {\n    if (isNode(node)) {\n        return (node.nodeName || \"\").toLowerCase();\n    }\n    return \"#document\";\n}\nfunction getWindow2(node) {\n    var _node$ownerDocument;\n    return (node == null || (_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.defaultView) || window;\n}\nfunction getDocumentElement(node) {\n    var _ref;\n    return (_ref = (isNode(node) ? node.ownerDocument : node.document) || window.document) == null ? void 0 : _ref.documentElement;\n}\nfunction isNode(value) {\n    return value instanceof Node || value instanceof getWindow2(value).Node;\n}\nfunction isElement(value) {\n    return value instanceof Element || value instanceof getWindow2(value).Element;\n}\nfunction isHTMLElement(value) {\n    return value instanceof HTMLElement || value instanceof getWindow2(value).HTMLElement;\n}\nfunction isShadowRoot(value) {\n    if (typeof ShadowRoot === \"undefined\") {\n        return false;\n    }\n    return value instanceof ShadowRoot || value instanceof getWindow2(value).ShadowRoot;\n}\nfunction isOverflowElement(element) {\n    const { overflow, overflowX, overflowY, display } = getComputedStyle2(element);\n    return /auto|scroll|overlay|hidden|clip/.test(overflow + overflowY + overflowX) && ![\n        \"inline\",\n        \"contents\"\n    ].includes(display);\n}\nfunction isTableElement(element) {\n    return [\n        \"table\",\n        \"td\",\n        \"th\"\n    ].includes(getNodeName(element));\n}\nfunction isContainingBlock(element) {\n    const webkit = isWebKit();\n    const css = getComputedStyle2(element);\n    return css.transform !== \"none\" || css.perspective !== \"none\" || (css.containerType ? css.containerType !== \"normal\" : false) || !webkit && (css.backdropFilter ? css.backdropFilter !== \"none\" : false) || !webkit && (css.filter ? css.filter !== \"none\" : false) || [\n        \"transform\",\n        \"perspective\",\n        \"filter\"\n    ].some((value)=>(css.willChange || \"\").includes(value)) || [\n        \"paint\",\n        \"layout\",\n        \"strict\",\n        \"content\"\n    ].some((value)=>(css.contain || \"\").includes(value));\n}\nfunction getContainingBlock(element) {\n    let currentNode = getParentNode(element);\n    while(isHTMLElement(currentNode) && !isLastTraversableNode(currentNode)){\n        if (isContainingBlock(currentNode)) {\n            return currentNode;\n        }\n        currentNode = getParentNode(currentNode);\n    }\n    return null;\n}\nfunction isWebKit() {\n    if (typeof CSS === \"undefined\" || !CSS.supports) return false;\n    return CSS.supports(\"-webkit-backdrop-filter\", \"none\");\n}\nfunction isLastTraversableNode(node) {\n    return [\n        \"html\",\n        \"body\",\n        \"#document\"\n    ].includes(getNodeName(node));\n}\nfunction getComputedStyle2(element) {\n    return getWindow2(element).getComputedStyle(element);\n}\nfunction getNodeScroll(element) {\n    if (isElement(element)) {\n        return {\n            scrollLeft: element.scrollLeft,\n            scrollTop: element.scrollTop\n        };\n    }\n    return {\n        scrollLeft: element.pageXOffset,\n        scrollTop: element.pageYOffset\n    };\n}\nfunction getParentNode(node) {\n    if (getNodeName(node) === \"html\") {\n        return node;\n    }\n    const result = // Step into the shadow DOM of the parent of a slotted node.\n    node.assignedSlot || // DOM Element detected.\n    node.parentNode || // ShadowRoot detected.\n    isShadowRoot(node) && node.host || // Fallback.\n    getDocumentElement(node);\n    return isShadowRoot(result) ? result.host : result;\n}\nfunction getNearestOverflowAncestor(node) {\n    const parentNode = getParentNode(node);\n    if (isLastTraversableNode(parentNode)) {\n        return node.ownerDocument ? node.ownerDocument.body : node.body;\n    }\n    if (isHTMLElement(parentNode) && isOverflowElement(parentNode)) {\n        return parentNode;\n    }\n    return getNearestOverflowAncestor(parentNode);\n}\nfunction getOverflowAncestors(node, list, traverseIframes) {\n    var _node$ownerDocument2;\n    if (list === void 0) {\n        list = [];\n    }\n    if (traverseIframes === void 0) {\n        traverseIframes = true;\n    }\n    const scrollableAncestor = getNearestOverflowAncestor(node);\n    const isBody = scrollableAncestor === ((_node$ownerDocument2 = node.ownerDocument) == null ? void 0 : _node$ownerDocument2.body);\n    const win = getWindow2(scrollableAncestor);\n    if (isBody) {\n        return list.concat(win, win.visualViewport || [], isOverflowElement(scrollableAncestor) ? scrollableAncestor : [], win.frameElement && traverseIframes ? getOverflowAncestors(win.frameElement) : []);\n    }\n    return list.concat(scrollableAncestor, getOverflowAncestors(scrollableAncestor, [], traverseIframes));\n}\n// ../../node_modules/.pnpm/@floating-ui+dom@1.6.5/node_modules/@floating-ui/dom/dist/floating-ui.dom.mjs\nfunction getCssDimensions(element) {\n    const css = getComputedStyle2(element);\n    let width = parseFloat(css.width) || 0;\n    let height = parseFloat(css.height) || 0;\n    const hasOffset = isHTMLElement(element);\n    const offsetWidth = hasOffset ? element.offsetWidth : width;\n    const offsetHeight = hasOffset ? element.offsetHeight : height;\n    const shouldFallback = round(width) !== offsetWidth || round(height) !== offsetHeight;\n    if (shouldFallback) {\n        width = offsetWidth;\n        height = offsetHeight;\n    }\n    return {\n        width,\n        height,\n        $: shouldFallback\n    };\n}\nfunction unwrapElement(element) {\n    return !isElement(element) ? element.contextElement : element;\n}\nfunction getScale(element) {\n    const domElement = unwrapElement(element);\n    if (!isHTMLElement(domElement)) {\n        return createCoords(1);\n    }\n    const rect = domElement.getBoundingClientRect();\n    const { width, height, $ } = getCssDimensions(domElement);\n    let x = ($ ? round(rect.width) : rect.width) / width;\n    let y = ($ ? round(rect.height) : rect.height) / height;\n    if (!x || !Number.isFinite(x)) {\n        x = 1;\n    }\n    if (!y || !Number.isFinite(y)) {\n        y = 1;\n    }\n    return {\n        x,\n        y\n    };\n}\nvar noOffsets = /* @__PURE__ */ createCoords(0);\nfunction getVisualOffsets(element) {\n    const win = getWindow2(element);\n    if (!isWebKit() || !win.visualViewport) {\n        return noOffsets;\n    }\n    return {\n        x: win.visualViewport.offsetLeft,\n        y: win.visualViewport.offsetTop\n    };\n}\nfunction shouldAddVisualOffsets(element, isFixed, floatingOffsetParent) {\n    if (isFixed === void 0) {\n        isFixed = false;\n    }\n    if (!floatingOffsetParent || isFixed && floatingOffsetParent !== getWindow2(element)) {\n        return false;\n    }\n    return isFixed;\n}\nfunction getBoundingClientRect(element, includeScale, isFixedStrategy, offsetParent) {\n    if (includeScale === void 0) {\n        includeScale = false;\n    }\n    if (isFixedStrategy === void 0) {\n        isFixedStrategy = false;\n    }\n    const clientRect = element.getBoundingClientRect();\n    const domElement = unwrapElement(element);\n    let scale = createCoords(1);\n    if (includeScale) {\n        if (offsetParent) {\n            if (isElement(offsetParent)) {\n                scale = getScale(offsetParent);\n            }\n        } else {\n            scale = getScale(element);\n        }\n    }\n    const visualOffsets = shouldAddVisualOffsets(domElement, isFixedStrategy, offsetParent) ? getVisualOffsets(domElement) : createCoords(0);\n    let x = (clientRect.left + visualOffsets.x) / scale.x;\n    let y = (clientRect.top + visualOffsets.y) / scale.y;\n    let width = clientRect.width / scale.x;\n    let height = clientRect.height / scale.y;\n    if (domElement) {\n        const win = getWindow2(domElement);\n        const offsetWin = offsetParent && isElement(offsetParent) ? getWindow2(offsetParent) : offsetParent;\n        let currentWin = win;\n        let currentIFrame = currentWin.frameElement;\n        while(currentIFrame && offsetParent && offsetWin !== currentWin){\n            const iframeScale = getScale(currentIFrame);\n            const iframeRect = currentIFrame.getBoundingClientRect();\n            const css = getComputedStyle2(currentIFrame);\n            const left = iframeRect.left + (currentIFrame.clientLeft + parseFloat(css.paddingLeft)) * iframeScale.x;\n            const top = iframeRect.top + (currentIFrame.clientTop + parseFloat(css.paddingTop)) * iframeScale.y;\n            x *= iframeScale.x;\n            y *= iframeScale.y;\n            width *= iframeScale.x;\n            height *= iframeScale.y;\n            x += left;\n            y += top;\n            currentWin = getWindow2(currentIFrame);\n            currentIFrame = currentWin.frameElement;\n        }\n    }\n    return rectToClientRect({\n        width,\n        height,\n        x,\n        y\n    });\n}\nvar topLayerSelectors = [\n    \":popover-open\",\n    \":modal\"\n];\nfunction isTopLayer(element) {\n    return topLayerSelectors.some((selector)=>{\n        try {\n            return element.matches(selector);\n        } catch (e2) {\n            return false;\n        }\n    });\n}\nfunction convertOffsetParentRelativeRectToViewportRelativeRect(_ref) {\n    let { elements, rect, offsetParent, strategy } = _ref;\n    const isFixed = strategy === \"fixed\";\n    const documentElement = getDocumentElement(offsetParent);\n    const topLayer = elements ? isTopLayer(elements.floating) : false;\n    if (offsetParent === documentElement || topLayer && isFixed) {\n        return rect;\n    }\n    let scroll = {\n        scrollLeft: 0,\n        scrollTop: 0\n    };\n    let scale = createCoords(1);\n    const offsets = createCoords(0);\n    const isOffsetParentAnElement = isHTMLElement(offsetParent);\n    if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n        if (getNodeName(offsetParent) !== \"body\" || isOverflowElement(documentElement)) {\n            scroll = getNodeScroll(offsetParent);\n        }\n        if (isHTMLElement(offsetParent)) {\n            const offsetRect = getBoundingClientRect(offsetParent);\n            scale = getScale(offsetParent);\n            offsets.x = offsetRect.x + offsetParent.clientLeft;\n            offsets.y = offsetRect.y + offsetParent.clientTop;\n        }\n    }\n    return {\n        width: rect.width * scale.x,\n        height: rect.height * scale.y,\n        x: rect.x * scale.x - scroll.scrollLeft * scale.x + offsets.x,\n        y: rect.y * scale.y - scroll.scrollTop * scale.y + offsets.y\n    };\n}\nfunction getClientRects(element) {\n    return Array.from(element.getClientRects());\n}\nfunction getWindowScrollBarX(element) {\n    return getBoundingClientRect(getDocumentElement(element)).left + getNodeScroll(element).scrollLeft;\n}\nfunction getDocumentRect(element) {\n    const html = getDocumentElement(element);\n    const scroll = getNodeScroll(element);\n    const body = element.ownerDocument.body;\n    const width = max2(html.scrollWidth, html.clientWidth, body.scrollWidth, body.clientWidth);\n    const height = max2(html.scrollHeight, html.clientHeight, body.scrollHeight, body.clientHeight);\n    let x = -scroll.scrollLeft + getWindowScrollBarX(element);\n    const y = -scroll.scrollTop;\n    if (getComputedStyle2(body).direction === \"rtl\") {\n        x += max2(html.clientWidth, body.clientWidth) - width;\n    }\n    return {\n        width,\n        height,\n        x,\n        y\n    };\n}\nfunction getViewportRect(element, strategy) {\n    const win = getWindow2(element);\n    const html = getDocumentElement(element);\n    const visualViewport = win.visualViewport;\n    let width = html.clientWidth;\n    let height = html.clientHeight;\n    let x = 0;\n    let y = 0;\n    if (visualViewport) {\n        width = visualViewport.width;\n        height = visualViewport.height;\n        const visualViewportBased = isWebKit();\n        if (!visualViewportBased || visualViewportBased && strategy === \"fixed\") {\n            x = visualViewport.offsetLeft;\n            y = visualViewport.offsetTop;\n        }\n    }\n    return {\n        width,\n        height,\n        x,\n        y\n    };\n}\nfunction getInnerBoundingClientRect(element, strategy) {\n    const clientRect = getBoundingClientRect(element, true, strategy === \"fixed\");\n    const top = clientRect.top + element.clientTop;\n    const left = clientRect.left + element.clientLeft;\n    const scale = isHTMLElement(element) ? getScale(element) : createCoords(1);\n    const width = element.clientWidth * scale.x;\n    const height = element.clientHeight * scale.y;\n    const x = left * scale.x;\n    const y = top * scale.y;\n    return {\n        width,\n        height,\n        x,\n        y\n    };\n}\nfunction getClientRectFromClippingAncestor(element, clippingAncestor, strategy) {\n    let rect;\n    if (clippingAncestor === \"viewport\") {\n        rect = getViewportRect(element, strategy);\n    } else if (clippingAncestor === \"document\") {\n        rect = getDocumentRect(getDocumentElement(element));\n    } else if (isElement(clippingAncestor)) {\n        rect = getInnerBoundingClientRect(clippingAncestor, strategy);\n    } else {\n        const visualOffsets = getVisualOffsets(element);\n        rect = {\n            ...clippingAncestor,\n            x: clippingAncestor.x - visualOffsets.x,\n            y: clippingAncestor.y - visualOffsets.y\n        };\n    }\n    return rectToClientRect(rect);\n}\nfunction hasFixedPositionAncestor(element, stopNode) {\n    const parentNode = getParentNode(element);\n    if (parentNode === stopNode || !isElement(parentNode) || isLastTraversableNode(parentNode)) {\n        return false;\n    }\n    return getComputedStyle2(parentNode).position === \"fixed\" || hasFixedPositionAncestor(parentNode, stopNode);\n}\nfunction getClippingElementAncestors(element, cache2) {\n    const cachedResult = cache2.get(element);\n    if (cachedResult) {\n        return cachedResult;\n    }\n    let result = getOverflowAncestors(element, [], false).filter((el)=>isElement(el) && getNodeName(el) !== \"body\");\n    let currentContainingBlockComputedStyle = null;\n    const elementIsFixed = getComputedStyle2(element).position === \"fixed\";\n    let currentNode = elementIsFixed ? getParentNode(element) : element;\n    while(isElement(currentNode) && !isLastTraversableNode(currentNode)){\n        const computedStyle = getComputedStyle2(currentNode);\n        const currentNodeIsContaining = isContainingBlock(currentNode);\n        if (!currentNodeIsContaining && computedStyle.position === \"fixed\") {\n            currentContainingBlockComputedStyle = null;\n        }\n        const shouldDropCurrentNode = elementIsFixed ? !currentNodeIsContaining && !currentContainingBlockComputedStyle : !currentNodeIsContaining && computedStyle.position === \"static\" && !!currentContainingBlockComputedStyle && [\n            \"absolute\",\n            \"fixed\"\n        ].includes(currentContainingBlockComputedStyle.position) || isOverflowElement(currentNode) && !currentNodeIsContaining && hasFixedPositionAncestor(element, currentNode);\n        if (shouldDropCurrentNode) {\n            result = result.filter((ancestor)=>ancestor !== currentNode);\n        } else {\n            currentContainingBlockComputedStyle = computedStyle;\n        }\n        currentNode = getParentNode(currentNode);\n    }\n    cache2.set(element, result);\n    return result;\n}\nfunction getClippingRect(_ref) {\n    let { element, boundary, rootBoundary, strategy } = _ref;\n    const elementClippingAncestors = boundary === \"clippingAncestors\" ? isTopLayer(element) ? [] : getClippingElementAncestors(element, this._c) : [].concat(boundary);\n    const clippingAncestors = [\n        ...elementClippingAncestors,\n        rootBoundary\n    ];\n    const firstClippingAncestor = clippingAncestors[0];\n    const clippingRect = clippingAncestors.reduce((accRect, clippingAncestor)=>{\n        const rect = getClientRectFromClippingAncestor(element, clippingAncestor, strategy);\n        accRect.top = max2(rect.top, accRect.top);\n        accRect.right = min2(rect.right, accRect.right);\n        accRect.bottom = min2(rect.bottom, accRect.bottom);\n        accRect.left = max2(rect.left, accRect.left);\n        return accRect;\n    }, getClientRectFromClippingAncestor(element, firstClippingAncestor, strategy));\n    return {\n        width: clippingRect.right - clippingRect.left,\n        height: clippingRect.bottom - clippingRect.top,\n        x: clippingRect.left,\n        y: clippingRect.top\n    };\n}\nfunction getDimensions(element) {\n    const { width, height } = getCssDimensions(element);\n    return {\n        width,\n        height\n    };\n}\nfunction getRectRelativeToOffsetParent(element, offsetParent, strategy) {\n    const isOffsetParentAnElement = isHTMLElement(offsetParent);\n    const documentElement = getDocumentElement(offsetParent);\n    const isFixed = strategy === \"fixed\";\n    const rect = getBoundingClientRect(element, true, isFixed, offsetParent);\n    let scroll = {\n        scrollLeft: 0,\n        scrollTop: 0\n    };\n    const offsets = createCoords(0);\n    if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n        if (getNodeName(offsetParent) !== \"body\" || isOverflowElement(documentElement)) {\n            scroll = getNodeScroll(offsetParent);\n        }\n        if (isOffsetParentAnElement) {\n            const offsetRect = getBoundingClientRect(offsetParent, true, isFixed, offsetParent);\n            offsets.x = offsetRect.x + offsetParent.clientLeft;\n            offsets.y = offsetRect.y + offsetParent.clientTop;\n        } else if (documentElement) {\n            offsets.x = getWindowScrollBarX(documentElement);\n        }\n    }\n    const x = rect.left + scroll.scrollLeft - offsets.x;\n    const y = rect.top + scroll.scrollTop - offsets.y;\n    return {\n        x,\n        y,\n        width: rect.width,\n        height: rect.height\n    };\n}\nfunction isStaticPositioned(element) {\n    return getComputedStyle2(element).position === \"static\";\n}\nfunction getTrueOffsetParent(element, polyfill) {\n    if (!isHTMLElement(element) || getComputedStyle2(element).position === \"fixed\") {\n        return null;\n    }\n    if (polyfill) {\n        return polyfill(element);\n    }\n    return element.offsetParent;\n}\nfunction getOffsetParent(element, polyfill) {\n    const win = getWindow2(element);\n    if (isTopLayer(element)) {\n        return win;\n    }\n    if (!isHTMLElement(element)) {\n        let svgOffsetParent = getParentNode(element);\n        while(svgOffsetParent && !isLastTraversableNode(svgOffsetParent)){\n            if (isElement(svgOffsetParent) && !isStaticPositioned(svgOffsetParent)) {\n                return svgOffsetParent;\n            }\n            svgOffsetParent = getParentNode(svgOffsetParent);\n        }\n        return win;\n    }\n    let offsetParent = getTrueOffsetParent(element, polyfill);\n    while(offsetParent && isTableElement(offsetParent) && isStaticPositioned(offsetParent)){\n        offsetParent = getTrueOffsetParent(offsetParent, polyfill);\n    }\n    if (offsetParent && isLastTraversableNode(offsetParent) && isStaticPositioned(offsetParent) && !isContainingBlock(offsetParent)) {\n        return win;\n    }\n    return offsetParent || getContainingBlock(element) || win;\n}\nvar getElementRects = async function(data) {\n    const getOffsetParentFn = this.getOffsetParent || getOffsetParent;\n    const getDimensionsFn = this.getDimensions;\n    const floatingDimensions = await getDimensionsFn(data.floating);\n    return {\n        reference: getRectRelativeToOffsetParent(data.reference, await getOffsetParentFn(data.floating), data.strategy),\n        floating: {\n            x: 0,\n            y: 0,\n            width: floatingDimensions.width,\n            height: floatingDimensions.height\n        }\n    };\n};\nfunction isRTL2(element) {\n    return getComputedStyle2(element).direction === \"rtl\";\n}\nvar platform = {\n    convertOffsetParentRelativeRectToViewportRelativeRect,\n    getDocumentElement,\n    getClippingRect,\n    getOffsetParent,\n    getElementRects,\n    getClientRects,\n    getDimensions,\n    getScale,\n    isElement,\n    isRTL: isRTL2\n};\nfunction observeMove(element, onMove) {\n    let io = null;\n    let timeoutId;\n    const root = getDocumentElement(element);\n    function cleanup() {\n        var _io;\n        clearTimeout(timeoutId);\n        (_io = io) == null || _io.disconnect();\n        io = null;\n    }\n    function refresh(skip, threshold) {\n        if (skip === void 0) {\n            skip = false;\n        }\n        if (threshold === void 0) {\n            threshold = 1;\n        }\n        cleanup();\n        const { left, top, width, height } = element.getBoundingClientRect();\n        if (!skip) {\n            onMove();\n        }\n        if (!width || !height) {\n            return;\n        }\n        const insetTop = floor(top);\n        const insetRight = floor(root.clientWidth - (left + width));\n        const insetBottom = floor(root.clientHeight - (top + height));\n        const insetLeft = floor(left);\n        const rootMargin = -insetTop + \"px \" + -insetRight + \"px \" + -insetBottom + \"px \" + -insetLeft + \"px\";\n        const options = {\n            rootMargin,\n            threshold: max2(0, min2(1, threshold)) || 1\n        };\n        let isFirstUpdate = true;\n        function handleObserve(entries2) {\n            const ratio = entries2[0].intersectionRatio;\n            if (ratio !== threshold) {\n                if (!isFirstUpdate) {\n                    return refresh();\n                }\n                if (!ratio) {\n                    timeoutId = setTimeout(()=>{\n                        refresh(false, 1e-7);\n                    }, 1e3);\n                } else {\n                    refresh(false, ratio);\n                }\n            }\n            isFirstUpdate = false;\n        }\n        try {\n            io = new IntersectionObserver(handleObserve, {\n                ...options,\n                // Handle <iframe>s\n                root: root.ownerDocument\n            });\n        } catch (e2) {\n            io = new IntersectionObserver(handleObserve, options);\n        }\n        io.observe(element);\n    }\n    refresh(true);\n    return cleanup;\n}\nfunction autoUpdate(reference, floating, update, options) {\n    if (options === void 0) {\n        options = {};\n    }\n    const { ancestorScroll = true, ancestorResize = true, elementResize = typeof ResizeObserver === \"function\", layoutShift = typeof IntersectionObserver === \"function\", animationFrame = false } = options;\n    const referenceEl = unwrapElement(reference);\n    const ancestors = ancestorScroll || ancestorResize ? [\n        ...referenceEl ? getOverflowAncestors(referenceEl) : [],\n        ...getOverflowAncestors(floating)\n    ] : [];\n    ancestors.forEach((ancestor)=>{\n        ancestorScroll && ancestor.addEventListener(\"scroll\", update, {\n            passive: true\n        });\n        ancestorResize && ancestor.addEventListener(\"resize\", update);\n    });\n    const cleanupIo = referenceEl && layoutShift ? observeMove(referenceEl, update) : null;\n    let reobserveFrame = -1;\n    let resizeObserver = null;\n    if (elementResize) {\n        resizeObserver = new ResizeObserver((_ref)=>{\n            let [firstEntry] = _ref;\n            if (firstEntry && firstEntry.target === referenceEl && resizeObserver) {\n                resizeObserver.unobserve(floating);\n                cancelAnimationFrame(reobserveFrame);\n                reobserveFrame = requestAnimationFrame(()=>{\n                    var _resizeObserver;\n                    (_resizeObserver = resizeObserver) == null || _resizeObserver.observe(floating);\n                });\n            }\n            update();\n        });\n        if (referenceEl && !animationFrame) {\n            resizeObserver.observe(referenceEl);\n        }\n        resizeObserver.observe(floating);\n    }\n    let frameId;\n    let prevRefRect = animationFrame ? getBoundingClientRect(reference) : null;\n    if (animationFrame) {\n        frameLoop();\n    }\n    function frameLoop() {\n        const nextRefRect = getBoundingClientRect(reference);\n        if (prevRefRect && (nextRefRect.x !== prevRefRect.x || nextRefRect.y !== prevRefRect.y || nextRefRect.width !== prevRefRect.width || nextRefRect.height !== prevRefRect.height)) {\n            update();\n        }\n        prevRefRect = nextRefRect;\n        frameId = requestAnimationFrame(frameLoop);\n    }\n    update();\n    return ()=>{\n        var _resizeObserver2;\n        ancestors.forEach((ancestor)=>{\n            ancestorScroll && ancestor.removeEventListener(\"scroll\", update);\n            ancestorResize && ancestor.removeEventListener(\"resize\", update);\n        });\n        cleanupIo == null || cleanupIo();\n        (_resizeObserver2 = resizeObserver) == null || _resizeObserver2.disconnect();\n        resizeObserver = null;\n        if (animationFrame) {\n            cancelAnimationFrame(frameId);\n        }\n    };\n}\nvar offset2 = offset;\nvar shift2 = shift;\nvar flip2 = flip;\nvar size2 = size;\nvar hide2 = hide;\nvar arrow2 = arrow;\nvar computePosition2 = (reference, floating, options)=>{\n    const cache2 = /* @__PURE__ */ new Map();\n    const mergedOptions = {\n        platform,\n        ...options\n    };\n    const platformWithCache = {\n        ...mergedOptions.platform,\n        _c: cache2\n    };\n    return computePosition(reference, floating, {\n        ...mergedOptions,\n        platform: platformWithCache\n    });\n};\n// ../../node_modules/.pnpm/@kobalte+core@0.13.1_solid-js@1.8.17/node_modules/@kobalte/core/dist/chunk/6SUY5UYD.js\nvar PopperContext = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createContext)();\nfunction usePopperContext() {\n    _s11();\n    const context = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.useContext)(PopperContext);\n    if (context === void 0) {\n        throw new Error(\"[kobalte]: `usePopperContext` must be used within a `Popper` component\");\n    }\n    return context;\n}\n_s11(usePopperContext, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _tmpl$ = /* @__PURE__ */ (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.template)('<svg display=\"block\" viewBox=\"0 0 30 30\"><g><path fill=\"none\" d=\"M23,27.8c1.1,1.2,3.4,2.2,5,2.2h2H0h2c1.7,0,3.9-1,5-2.2l6.6-7.2c0.7-0.8,2-0.8,2.7,0L23,27.8L23,27.8z\"></path><path stroke=\"none\" d=\"M23,27.8c1.1,1.2,3.4,2.2,5,2.2h2H0h2c1.7,0,3.9-1,5-2.2l6.6-7.2c0.7-0.8,2-0.8,2.7,0L23,27.8L23,27.8z\">');\nvar DEFAULT_SIZE = 30;\nvar HALF_DEFAULT_SIZE = DEFAULT_SIZE / 2;\nvar ROTATION_DEG = {\n    top: 180,\n    right: -90,\n    bottom: 0,\n    left: 90\n};\nfunction PopperArrow(props) {\n    _s12();\n    const context = usePopperContext();\n    const mergedProps = mergeDefaultProps({\n        size: DEFAULT_SIZE\n    }, props);\n    const [local, others] = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.splitProps)(mergedProps, [\n        \"ref\",\n        \"style\",\n        \"size\"\n    ]);\n    const dir = ()=>context.currentPlacement().split(\"-\")[0];\n    const contentStyle = createComputedStyle(context.contentRef);\n    const fill = ()=>{\n        var _contentStyle;\n        return ((_contentStyle = contentStyle()) === null || _contentStyle === void 0 ? void 0 : _contentStyle.getPropertyValue(\"background-color\")) || \"none\";\n    };\n    const stroke = ()=>{\n        var _contentStyle;\n        return ((_contentStyle = contentStyle()) === null || _contentStyle === void 0 ? void 0 : _contentStyle.getPropertyValue(\"border-\".concat(dir(), \"-color\"))) || \"none\";\n    };\n    const borderWidth = ()=>{\n        var _contentStyle;\n        return ((_contentStyle = contentStyle()) === null || _contentStyle === void 0 ? void 0 : _contentStyle.getPropertyValue(\"border-\".concat(dir(), \"-width\"))) || \"0px\";\n    };\n    const strokeWidth = ()=>{\n        return parseInt(borderWidth()) * 2 * (DEFAULT_SIZE / local.size);\n    };\n    const rotate = ()=>{\n        return \"rotate(\".concat(ROTATION_DEG[dir()], \" \").concat(HALF_DEFAULT_SIZE, \" \").concat(HALF_DEFAULT_SIZE, \")\");\n    };\n    return (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(Polymorphic, (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.mergeProps)({\n        as: \"div\",\n        ref (r$) {\n            const _ref$ = mergeRefs(context.setArrowRef, local.ref);\n            typeof _ref$ === \"function\" && _ref$(r$);\n        },\n        \"aria-hidden\": \"true\",\n        get style () {\n            return {\n                // server side rendering\n                position: \"absolute\",\n                \"font-size\": \"\".concat(local.size, \"px\"),\n                width: \"1em\",\n                height: \"1em\",\n                \"pointer-events\": \"none\",\n                fill: fill(),\n                stroke: stroke(),\n                \"stroke-width\": strokeWidth(),\n                ...local.style\n            };\n        }\n    }, others, {\n        get children () {\n            const _el$ = _tmpl$(), _el$2 = _el$.firstChild;\n            (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createRenderEffect)(()=>(0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$2, \"transform\", rotate()));\n            return _el$;\n        }\n    }));\n}\n_s12(PopperArrow, \"BLwKQlJkJgbziecIetjdX5b+JbU=\", false, function() {\n    return [\n        usePopperContext\n    ];\n});\n_c7 = PopperArrow;\nfunction createComputedStyle(element) {\n    const [style, setStyle] = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createSignal)();\n    (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createEffect)(()=>{\n        const el = element();\n        el && setStyle(getWindow(el).getComputedStyle(el));\n    });\n    return style;\n}\nfunction PopperPositioner(props) {\n    _s13();\n    const context = usePopperContext();\n    const [local, others] = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.splitProps)(props, [\n        \"ref\",\n        \"style\"\n    ]);\n    return (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(Polymorphic, (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.mergeProps)({\n        as: \"div\",\n        ref (r$) {\n            const _ref$ = mergeRefs(context.setPositionerRef, local.ref);\n            typeof _ref$ === \"function\" && _ref$(r$);\n        },\n        \"data-popper-positioner\": \"\",\n        get style () {\n            return {\n                position: \"absolute\",\n                top: 0,\n                left: 0,\n                \"min-width\": \"max-content\",\n                ...local.style\n            };\n        }\n    }, others));\n}\n_s13(PopperPositioner, \"BLwKQlJkJgbziecIetjdX5b+JbU=\", false, function() {\n    return [\n        usePopperContext\n    ];\n});\n_c8 = PopperPositioner;\nfunction createDOMRect(anchorRect) {\n    const { x = 0, y = 0, width = 0, height = 0 } = anchorRect !== null && anchorRect !== void 0 ? anchorRect : {};\n    if (typeof DOMRect === \"function\") {\n        return new DOMRect(x, y, width, height);\n    }\n    const rect = {\n        x,\n        y,\n        width,\n        height,\n        top: y,\n        right: x + width,\n        bottom: y + height,\n        left: x\n    };\n    return {\n        ...rect,\n        toJSON: ()=>rect\n    };\n}\nfunction getAnchorElement(anchor, getAnchorRect) {\n    const contextElement = anchor;\n    return {\n        contextElement,\n        getBoundingClientRect: ()=>{\n            const anchorRect = getAnchorRect(anchor);\n            if (anchorRect) {\n                return createDOMRect(anchorRect);\n            }\n            if (anchor) {\n                return anchor.getBoundingClientRect();\n            }\n            return createDOMRect();\n        }\n    };\n}\nfunction isValidPlacement(flip22) {\n    return /^(?:top|bottom|left|right)(?:-(?:start|end))?$/.test(flip22);\n}\nvar REVERSE_BASE_PLACEMENT = {\n    top: \"bottom\",\n    right: \"left\",\n    bottom: \"top\",\n    left: \"right\"\n};\nfunction getTransformOrigin(placement, readingDirection) {\n    const [basePlacement, alignment] = placement.split(\"-\");\n    const reversePlacement = REVERSE_BASE_PLACEMENT[basePlacement];\n    if (!alignment) {\n        return \"\".concat(reversePlacement, \" center\");\n    }\n    if (basePlacement === \"left\" || basePlacement === \"right\") {\n        return \"\".concat(reversePlacement, \" \").concat(alignment === \"start\" ? \"top\" : \"bottom\");\n    }\n    if (alignment === \"start\") {\n        return \"\".concat(reversePlacement, \" \").concat(readingDirection === \"rtl\" ? \"right\" : \"left\");\n    }\n    return \"\".concat(reversePlacement, \" \").concat(readingDirection === \"rtl\" ? \"left\" : \"right\");\n}\nfunction PopperRoot(props) {\n    _s14();\n    const mergedProps = mergeDefaultProps({\n        getAnchorRect: (anchor)=>anchor === null || anchor === void 0 ? void 0 : anchor.getBoundingClientRect(),\n        placement: \"bottom\",\n        gutter: 0,\n        shift: 0,\n        flip: true,\n        slide: true,\n        overlap: false,\n        sameWidth: false,\n        fitViewport: false,\n        hideWhenDetached: false,\n        detachedPadding: 0,\n        arrowPadding: 4,\n        overflowPadding: 8\n    }, props);\n    const [positionerRef, setPositionerRef] = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createSignal)();\n    const [arrowRef, setArrowRef] = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createSignal)();\n    const [currentPlacement, setCurrentPlacement] = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createSignal)(mergedProps.placement);\n    const anchorRef = ()=>{\n        var _mergedProps_anchorRef;\n        return getAnchorElement((_mergedProps_anchorRef = mergedProps.anchorRef) === null || _mergedProps_anchorRef === void 0 ? void 0 : _mergedProps_anchorRef.call(mergedProps), mergedProps.getAnchorRect);\n    };\n    const { direction } = useLocale();\n    async function updatePosition() {\n        var _mergedProps_onCurrentPlacementChange;\n        const referenceEl = anchorRef();\n        const floatingEl = positionerRef();\n        const arrowEl = arrowRef();\n        if (!referenceEl || !floatingEl) {\n            return;\n        }\n        const arrowOffset = ((arrowEl === null || arrowEl === void 0 ? void 0 : arrowEl.clientHeight) || 0) / 2;\n        var _mergedProps_gutter;\n        const finalGutter = typeof mergedProps.gutter === \"number\" ? mergedProps.gutter + arrowOffset : (_mergedProps_gutter = mergedProps.gutter) !== null && _mergedProps_gutter !== void 0 ? _mergedProps_gutter : arrowOffset;\n        floatingEl.style.setProperty(\"--kb-popper-content-overflow-padding\", \"\".concat(mergedProps.overflowPadding, \"px\"));\n        referenceEl.getBoundingClientRect();\n        const middleware = [\n            // https://floating-ui.com/docs/offset\n            offset2((param)=>{\n                let { placement } = param;\n                const hasAlignment = !!placement.split(\"-\")[1];\n                return {\n                    mainAxis: finalGutter,\n                    crossAxis: !hasAlignment ? mergedProps.shift : void 0,\n                    alignmentAxis: mergedProps.shift\n                };\n            })\n        ];\n        if (mergedProps.flip !== false) {\n            const fallbackPlacements = typeof mergedProps.flip === \"string\" ? mergedProps.flip.split(\" \") : void 0;\n            if (fallbackPlacements !== void 0 && !fallbackPlacements.every(isValidPlacement)) {\n                throw new Error(\"`flip` expects a spaced-delimited list of placements\");\n            }\n            middleware.push(flip2({\n                padding: mergedProps.overflowPadding,\n                fallbackPlacements\n            }));\n        }\n        if (mergedProps.slide || mergedProps.overlap) {\n            middleware.push(shift2({\n                mainAxis: mergedProps.slide,\n                crossAxis: mergedProps.overlap,\n                padding: mergedProps.overflowPadding\n            }));\n        }\n        middleware.push(size2({\n            padding: mergedProps.overflowPadding,\n            apply (param) {\n                let { availableWidth, availableHeight, rects } = param;\n                const referenceWidth = Math.round(rects.reference.width);\n                availableWidth = Math.floor(availableWidth);\n                availableHeight = Math.floor(availableHeight);\n                floatingEl.style.setProperty(\"--kb-popper-anchor-width\", \"\".concat(referenceWidth, \"px\"));\n                floatingEl.style.setProperty(\"--kb-popper-content-available-width\", \"\".concat(availableWidth, \"px\"));\n                floatingEl.style.setProperty(\"--kb-popper-content-available-height\", \"\".concat(availableHeight, \"px\"));\n                if (mergedProps.sameWidth) {\n                    floatingEl.style.width = \"\".concat(referenceWidth, \"px\");\n                }\n                if (mergedProps.fitViewport) {\n                    floatingEl.style.maxWidth = \"\".concat(availableWidth, \"px\");\n                    floatingEl.style.maxHeight = \"\".concat(availableHeight, \"px\");\n                }\n            }\n        }));\n        if (mergedProps.hideWhenDetached) {\n            middleware.push(hide2({\n                padding: mergedProps.detachedPadding\n            }));\n        }\n        if (arrowEl) {\n            middleware.push(arrow2({\n                element: arrowEl,\n                padding: mergedProps.arrowPadding\n            }));\n        }\n        const pos = await computePosition2(referenceEl, floatingEl, {\n            placement: mergedProps.placement,\n            strategy: \"absolute\",\n            middleware,\n            platform: {\n                ...platform,\n                isRTL: ()=>direction() === \"rtl\"\n            }\n        });\n        setCurrentPlacement(pos.placement);\n        (_mergedProps_onCurrentPlacementChange = mergedProps.onCurrentPlacementChange) === null || _mergedProps_onCurrentPlacementChange === void 0 ? void 0 : _mergedProps_onCurrentPlacementChange.call(mergedProps, pos.placement);\n        if (!floatingEl) {\n            return;\n        }\n        floatingEl.style.setProperty(\"--kb-popper-content-transform-origin\", getTransformOrigin(pos.placement, direction()));\n        const x = Math.round(pos.x);\n        const y = Math.round(pos.y);\n        let visibility;\n        if (mergedProps.hideWhenDetached) {\n            var _pos_middlewareData_hide;\n            visibility = ((_pos_middlewareData_hide = pos.middlewareData.hide) === null || _pos_middlewareData_hide === void 0 ? void 0 : _pos_middlewareData_hide.referenceHidden) ? \"hidden\" : \"visible\";\n        }\n        Object.assign(floatingEl.style, {\n            top: \"0\",\n            left: \"0\",\n            transform: \"translate3d(\".concat(x, \"px, \").concat(y, \"px, 0)\"),\n            visibility\n        });\n        if (arrowEl && pos.middlewareData.arrow) {\n            const { x: arrowX, y: arrowY } = pos.middlewareData.arrow;\n            const dir = pos.placement.split(\"-\")[0];\n            Object.assign(arrowEl.style, {\n                left: arrowX != null ? \"\".concat(arrowX, \"px\") : \"\",\n                top: arrowY != null ? \"\".concat(arrowY, \"px\") : \"\",\n                [dir]: \"100%\"\n            });\n        }\n    }\n    (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createEffect)(()=>{\n        const referenceEl = anchorRef();\n        const floatingEl = positionerRef();\n        if (!referenceEl || !floatingEl) {\n            return;\n        }\n        const cleanupAutoUpdate = autoUpdate(referenceEl, floatingEl, updatePosition, {\n            // JSDOM doesn't support ResizeObserver\n            elementResize: typeof ResizeObserver === \"function\"\n        });\n        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.onCleanup)(cleanupAutoUpdate);\n    });\n    (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createEffect)(()=>{\n        var _mergedProps_contentRef;\n        const positioner = positionerRef();\n        const content = (_mergedProps_contentRef = mergedProps.contentRef) === null || _mergedProps_contentRef === void 0 ? void 0 : _mergedProps_contentRef.call(mergedProps);\n        if (!positioner || !content) {\n            return;\n        }\n        queueMicrotask(()=>{\n            positioner.style.zIndex = getComputedStyle(content).zIndex;\n        });\n    });\n    const context = {\n        currentPlacement,\n        contentRef: ()=>{\n            var _mergedProps_contentRef;\n            return (_mergedProps_contentRef = mergedProps.contentRef) === null || _mergedProps_contentRef === void 0 ? void 0 : _mergedProps_contentRef.call(mergedProps);\n        },\n        setPositionerRef,\n        setArrowRef\n    };\n    return (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(PopperContext.Provider, {\n        value: context,\n        get children () {\n            return mergedProps.children;\n        }\n    });\n}\n_s14(PopperRoot, \"wF7kuazRv875Ci8MQbx5obOHKLY=\", false, function() {\n    return [\n        useLocale\n    ];\n});\n_c9 = PopperRoot;\nvar Popper = Object.assign(PopperRoot, {\n    Arrow: PopperArrow,\n    Context: PopperContext,\n    usePopperContext,\n    Positioner: PopperPositioner\n});\n_c10 = Popper;\n// ../../node_modules/.pnpm/@kobalte+core@0.13.1_solid-js@1.8.17/node_modules/@kobalte/core/dist/chunk/QZ25QYEA.js\nfunction createEscapeKeyDown(props) {\n    const handleKeyDown = (event)=>{\n        if (event.key === EventKey.Escape) {\n            var _props_onEscapeKeyDown;\n            (_props_onEscapeKeyDown = props.onEscapeKeyDown) === null || _props_onEscapeKeyDown === void 0 ? void 0 : _props_onEscapeKeyDown.call(props, event);\n        }\n    };\n    (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createEffect)(()=>{\n        var _props_ownerDocument;\n        if (_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.isServer) {\n            return;\n        }\n        if (access(props.isDisabled)) {\n            return;\n        }\n        var _props_ownerDocument1;\n        const document2 = (_props_ownerDocument1 = (_props_ownerDocument = props.ownerDocument) === null || _props_ownerDocument === void 0 ? void 0 : _props_ownerDocument.call(props)) !== null && _props_ownerDocument1 !== void 0 ? _props_ownerDocument1 : getDocument();\n        document2.addEventListener(\"keydown\", handleKeyDown);\n        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.onCleanup)(()=>{\n            document2.removeEventListener(\"keydown\", handleKeyDown);\n        });\n    });\n}\n// ../../node_modules/.pnpm/@kobalte+core@0.13.1_solid-js@1.8.17/node_modules/@kobalte/core/dist/chunk/QGCMYLTA.js\nvar POINTER_DOWN_OUTSIDE_EVENT = \"interactOutside.pointerDownOutside\";\nvar FOCUS_OUTSIDE_EVENT = \"interactOutside.focusOutside\";\nfunction createInteractOutside(props, ref) {\n    let pointerDownTimeoutId;\n    let clickHandler = noop3;\n    const ownerDocument = ()=>getDocument(ref());\n    const onPointerDownOutside = (e2)=>{\n        var _props_onPointerDownOutside;\n        return (_props_onPointerDownOutside = props.onPointerDownOutside) === null || _props_onPointerDownOutside === void 0 ? void 0 : _props_onPointerDownOutside.call(props, e2);\n    };\n    const onFocusOutside = (e2)=>{\n        var _props_onFocusOutside;\n        return (_props_onFocusOutside = props.onFocusOutside) === null || _props_onFocusOutside === void 0 ? void 0 : _props_onFocusOutside.call(props, e2);\n    };\n    const onInteractOutside = (e2)=>{\n        var _props_onInteractOutside;\n        return (_props_onInteractOutside = props.onInteractOutside) === null || _props_onInteractOutside === void 0 ? void 0 : _props_onInteractOutside.call(props, e2);\n    };\n    const isEventOutside = (e2)=>{\n        var _props_shouldExcludeElement;\n        const target = e2.target;\n        if (!(target instanceof HTMLElement)) {\n            return false;\n        }\n        if (target.closest(\"[\".concat(DATA_TOP_LAYER_ATTR, \"]\"))) {\n            return false;\n        }\n        if (!contains(ownerDocument(), target)) {\n            return false;\n        }\n        if (contains(ref(), target)) {\n            return false;\n        }\n        return !((_props_shouldExcludeElement = props.shouldExcludeElement) === null || _props_shouldExcludeElement === void 0 ? void 0 : _props_shouldExcludeElement.call(props, target));\n    };\n    const onPointerDown = (e2)=>{\n        function handler() {\n            const container = ref();\n            const target = e2.target;\n            if (!container || !target || !isEventOutside(e2)) {\n                return;\n            }\n            const handler2 = composeEventHandlers([\n                onPointerDownOutside,\n                onInteractOutside\n            ]);\n            target.addEventListener(POINTER_DOWN_OUTSIDE_EVENT, handler2, {\n                once: true\n            });\n            const pointerDownOutsideEvent = new CustomEvent(POINTER_DOWN_OUTSIDE_EVENT, {\n                bubbles: false,\n                cancelable: true,\n                detail: {\n                    originalEvent: e2,\n                    isContextMenu: e2.button === 2 || isCtrlKey(e2) && e2.button === 0\n                }\n            });\n            target.dispatchEvent(pointerDownOutsideEvent);\n        }\n        if (e2.pointerType === \"touch\") {\n            ownerDocument().removeEventListener(\"click\", handler);\n            clickHandler = handler;\n            ownerDocument().addEventListener(\"click\", handler, {\n                once: true\n            });\n        } else {\n            handler();\n        }\n    };\n    const onFocusIn = (e2)=>{\n        const container = ref();\n        const target = e2.target;\n        if (!container || !target || !isEventOutside(e2)) {\n            return;\n        }\n        const handler = composeEventHandlers([\n            onFocusOutside,\n            onInteractOutside\n        ]);\n        target.addEventListener(FOCUS_OUTSIDE_EVENT, handler, {\n            once: true\n        });\n        const focusOutsideEvent = new CustomEvent(FOCUS_OUTSIDE_EVENT, {\n            bubbles: false,\n            cancelable: true,\n            detail: {\n                originalEvent: e2,\n                isContextMenu: false\n            }\n        });\n        target.dispatchEvent(focusOutsideEvent);\n    };\n    (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createEffect)(()=>{\n        if (_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.isServer) {\n            return;\n        }\n        if (access(props.isDisabled)) {\n            return;\n        }\n        pointerDownTimeoutId = window.setTimeout(()=>{\n            ownerDocument().addEventListener(\"pointerdown\", onPointerDown, true);\n        }, 0);\n        ownerDocument().addEventListener(\"focusin\", onFocusIn, true);\n        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.onCleanup)(()=>{\n            window.clearTimeout(pointerDownTimeoutId);\n            ownerDocument().removeEventListener(\"click\", clickHandler);\n            ownerDocument().removeEventListener(\"pointerdown\", onPointerDown, true);\n            ownerDocument().removeEventListener(\"focusin\", onFocusIn, true);\n        });\n    });\n}\n// ../../node_modules/.pnpm/@kobalte+core@0.13.1_solid-js@1.8.17/node_modules/@kobalte/core/dist/chunk/7MUMWGWR.js\nvar DismissableLayerContext = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createContext)();\nfunction useOptionalDismissableLayerContext() {\n    _s15();\n    return (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.useContext)(DismissableLayerContext);\n}\n_s15(useOptionalDismissableLayerContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nfunction DismissableLayer(props) {\n    _s16();\n    let ref;\n    const parentContext = useOptionalDismissableLayerContext();\n    const [local, others] = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.splitProps)(props, [\n        \"ref\",\n        \"disableOutsidePointerEvents\",\n        \"excludedElements\",\n        \"onEscapeKeyDown\",\n        \"onPointerDownOutside\",\n        \"onFocusOutside\",\n        \"onInteractOutside\",\n        \"onDismiss\",\n        \"bypassTopMostLayerCheck\"\n    ]);\n    const nestedLayers = /* @__PURE__ */ new Set([]);\n    const registerNestedLayer = (element)=>{\n        nestedLayers.add(element);\n        const parentUnregister = parentContext === null || parentContext === void 0 ? void 0 : parentContext.registerNestedLayer(element);\n        return ()=>{\n            nestedLayers.delete(element);\n            parentUnregister === null || parentUnregister === void 0 ? void 0 : parentUnregister();\n        };\n    };\n    const shouldExcludeElement = (element)=>{\n        var _local_excludedElements;\n        if (!ref) {\n            return false;\n        }\n        return ((_local_excludedElements = local.excludedElements) === null || _local_excludedElements === void 0 ? void 0 : _local_excludedElements.some((node)=>contains(node(), element))) || [\n            ...nestedLayers\n        ].some((layer)=>contains(layer, element));\n    };\n    const onPointerDownOutside = (e2)=>{\n        var _local_onPointerDownOutside, _local_onInteractOutside;\n        if (!ref || layerStack.isBelowPointerBlockingLayer(ref)) {\n            return;\n        }\n        if (!local.bypassTopMostLayerCheck && !layerStack.isTopMostLayer(ref)) {\n            return;\n        }\n        (_local_onPointerDownOutside = local.onPointerDownOutside) === null || _local_onPointerDownOutside === void 0 ? void 0 : _local_onPointerDownOutside.call(local, e2);\n        (_local_onInteractOutside = local.onInteractOutside) === null || _local_onInteractOutside === void 0 ? void 0 : _local_onInteractOutside.call(local, e2);\n        if (!e2.defaultPrevented) {\n            var _local_onDismiss;\n            (_local_onDismiss = local.onDismiss) === null || _local_onDismiss === void 0 ? void 0 : _local_onDismiss.call(local);\n        }\n    };\n    const onFocusOutside = (e2)=>{\n        var _local_onFocusOutside, _local_onInteractOutside;\n        (_local_onFocusOutside = local.onFocusOutside) === null || _local_onFocusOutside === void 0 ? void 0 : _local_onFocusOutside.call(local, e2);\n        (_local_onInteractOutside = local.onInteractOutside) === null || _local_onInteractOutside === void 0 ? void 0 : _local_onInteractOutside.call(local, e2);\n        if (!e2.defaultPrevented) {\n            var _local_onDismiss;\n            (_local_onDismiss = local.onDismiss) === null || _local_onDismiss === void 0 ? void 0 : _local_onDismiss.call(local);\n        }\n    };\n    createInteractOutside({\n        shouldExcludeElement,\n        onPointerDownOutside,\n        onFocusOutside\n    }, ()=>ref);\n    createEscapeKeyDown({\n        ownerDocument: ()=>getDocument(ref),\n        onEscapeKeyDown: (e2)=>{\n            var _local_onEscapeKeyDown;\n            if (!ref || !layerStack.isTopMostLayer(ref)) {\n                return;\n            }\n            (_local_onEscapeKeyDown = local.onEscapeKeyDown) === null || _local_onEscapeKeyDown === void 0 ? void 0 : _local_onEscapeKeyDown.call(local, e2);\n            if (!e2.defaultPrevented && local.onDismiss) {\n                e2.preventDefault();\n                local.onDismiss();\n            }\n        }\n    });\n    (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.onMount)(()=>{\n        if (!ref) {\n            return;\n        }\n        layerStack.addLayer({\n            node: ref,\n            isPointerBlocking: local.disableOutsidePointerEvents,\n            dismiss: local.onDismiss\n        });\n        const unregisterFromParentLayer = parentContext === null || parentContext === void 0 ? void 0 : parentContext.registerNestedLayer(ref);\n        layerStack.assignPointerEventToLayers();\n        layerStack.disableBodyPointerEvents(ref);\n        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.onCleanup)(()=>{\n            if (!ref) {\n                return;\n            }\n            layerStack.removeLayer(ref);\n            unregisterFromParentLayer === null || unregisterFromParentLayer === void 0 ? void 0 : unregisterFromParentLayer();\n            layerStack.assignPointerEventToLayers();\n            layerStack.restoreBodyPointerEvents(ref);\n        });\n    });\n    (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createEffect)((0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.on)([\n        ()=>ref,\n        ()=>local.disableOutsidePointerEvents\n    ], (param)=>{\n        let [ref2, disableOutsidePointerEvents] = param;\n        if (!ref2) {\n            return;\n        }\n        const layer = layerStack.find(ref2);\n        if (layer && layer.isPointerBlocking !== disableOutsidePointerEvents) {\n            layer.isPointerBlocking = disableOutsidePointerEvents;\n            layerStack.assignPointerEventToLayers();\n        }\n        if (disableOutsidePointerEvents) {\n            layerStack.disableBodyPointerEvents(ref2);\n        }\n        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.onCleanup)(()=>{\n            layerStack.restoreBodyPointerEvents(ref2);\n        });\n    }, {\n        defer: true\n    }));\n    const context = {\n        registerNestedLayer\n    };\n    return (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(DismissableLayerContext.Provider, {\n        value: context,\n        get children () {\n            return (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(Polymorphic, (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.mergeProps)({\n                as: \"div\",\n                ref (r$) {\n                    const _ref$ = mergeRefs((el)=>ref = el, local.ref);\n                    typeof _ref$ === \"function\" && _ref$(r$);\n                }\n            }, others));\n        }\n    });\n}\n_s16(DismissableLayer, \"JK5MHh8VueXJNRW0ii1pz65ep0o=\", false, function() {\n    return [\n        useOptionalDismissableLayerContext\n    ];\n});\n_c11 = DismissableLayer;\n// ../../node_modules/.pnpm/@kobalte+core@0.13.1_solid-js@1.8.17/node_modules/@kobalte/core/dist/chunk/7LCANGHD.js\nfunction createDisclosureState() {\n    let props = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    const [isOpen, setIsOpen] = createControllableBooleanSignal({\n        value: ()=>access(props.open),\n        defaultValue: ()=>!!access(props.defaultOpen),\n        onChange: (value)=>{\n            var _props_onOpenChange;\n            return (_props_onOpenChange = props.onOpenChange) === null || _props_onOpenChange === void 0 ? void 0 : _props_onOpenChange.call(props, value);\n        }\n    });\n    const open = ()=>{\n        setIsOpen(true);\n    };\n    const close = ()=>{\n        setIsOpen(false);\n    };\n    const toggle = ()=>{\n        isOpen() ? close() : open();\n    };\n    return {\n        isOpen,\n        setIsOpen,\n        open,\n        close,\n        toggle\n    };\n}\n// ../../node_modules/.pnpm/@kobalte+core@0.13.1_solid-js@1.8.17/node_modules/@kobalte/core/dist/chunk/YXI762UW.js\nvar radio_group_exports = {};\n__export(radio_group_exports, {\n    Description: ()=>FormControlDescription,\n    ErrorMessage: ()=>FormControlErrorMessage,\n    Item: ()=>RadioGroupItem,\n    ItemControl: ()=>RadioGroupItemControl,\n    ItemDescription: ()=>RadioGroupItemDescription,\n    ItemIndicator: ()=>RadioGroupItemIndicator,\n    ItemInput: ()=>RadioGroupItemInput,\n    ItemLabel: ()=>RadioGroupItemLabel,\n    Label: ()=>RadioGroupLabel,\n    RadioGroup: ()=>RadioGroup,\n    Root: ()=>RadioGroupRoot\n});\nvar RadioGroupContext = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createContext)();\nfunction useRadioGroupContext() {\n    _s17();\n    const context = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.useContext)(RadioGroupContext);\n    if (context === void 0) {\n        throw new Error(\"[kobalte]: `useRadioGroupContext` must be used within a `RadioGroup` component\");\n    }\n    return context;\n}\n_s17(useRadioGroupContext, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar RadioGroupItemContext = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createContext)();\nfunction useRadioGroupItemContext() {\n    _s18();\n    const context = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.useContext)(RadioGroupItemContext);\n    if (context === void 0) {\n        throw new Error(\"[kobalte]: `useRadioGroupItemContext` must be used within a `RadioGroup.Item` component\");\n    }\n    return context;\n}\n_s18(useRadioGroupItemContext, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nfunction RadioGroupItem(props) {\n    _s19();\n    const formControlContext = useFormControlContext();\n    const radioGroupContext = useRadioGroupContext();\n    const defaultId = \"\".concat(formControlContext.generateId(\"item\"), \"-\").concat((0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createUniqueId)());\n    const mergedProps = mergeDefaultProps({\n        id: defaultId\n    }, props);\n    const [local, others] = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.splitProps)(mergedProps, [\n        \"value\",\n        \"disabled\",\n        \"onPointerDown\"\n    ]);\n    const [inputId, setInputId] = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createSignal)();\n    const [labelId, setLabelId] = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createSignal)();\n    const [descriptionId, setDescriptionId] = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createSignal)();\n    const [inputRef, setInputRef] = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createSignal)();\n    const [isFocused, setIsFocused] = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createSignal)(false);\n    const isSelected = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(()=>{\n        return radioGroupContext.isSelectedValue(local.value);\n    });\n    const isDisabled = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(()=>{\n        return local.disabled || formControlContext.isDisabled() || false;\n    });\n    const onPointerDown = (e2)=>{\n        callHandler(e2, local.onPointerDown);\n        if (isFocused()) {\n            e2.preventDefault();\n        }\n    };\n    const dataset = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(()=>({\n            ...formControlContext.dataset(),\n            \"data-disabled\": isDisabled() ? \"\" : void 0,\n            \"data-checked\": isSelected() ? \"\" : void 0\n        }));\n    const context = {\n        value: ()=>local.value,\n        dataset,\n        isSelected,\n        isDisabled,\n        inputId,\n        labelId,\n        descriptionId,\n        inputRef,\n        select: ()=>radioGroupContext.setSelectedValue(local.value),\n        generateId: createGenerateId(()=>others.id),\n        registerInput: createRegisterId(setInputId),\n        registerLabel: createRegisterId(setLabelId),\n        registerDescription: createRegisterId(setDescriptionId),\n        setIsFocused,\n        setInputRef\n    };\n    return (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(RadioGroupItemContext.Provider, {\n        value: context,\n        get children () {\n            return (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(Polymorphic, (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.mergeProps)({\n                as: \"div\",\n                role: \"group\",\n                onPointerDown\n            }, dataset, others));\n        }\n    });\n}\n_s19(RadioGroupItem, \"hT5TzECb4cUtpd2k++6grbACbng=\", false, function() {\n    return [\n        useFormControlContext,\n        useRadioGroupContext\n    ];\n});\n_c12 = RadioGroupItem;\nfunction RadioGroupItemControl(props) {\n    _s20();\n    const context = useRadioGroupItemContext();\n    const mergedProps = mergeDefaultProps({\n        id: context.generateId(\"control\")\n    }, props);\n    const [local, others] = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.splitProps)(mergedProps, [\n        \"onClick\",\n        \"onKeyDown\"\n    ]);\n    const onClick = (e2)=>{\n        var _context_inputRef;\n        callHandler(e2, local.onClick);\n        context.select();\n        (_context_inputRef = context.inputRef()) === null || _context_inputRef === void 0 ? void 0 : _context_inputRef.focus();\n    };\n    const onKeyDown = (e2)=>{\n        callHandler(e2, local.onKeyDown);\n        if (e2.key === EventKey.Space) {\n            var _context_inputRef;\n            context.select();\n            (_context_inputRef = context.inputRef()) === null || _context_inputRef === void 0 ? void 0 : _context_inputRef.focus();\n        }\n    };\n    return (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(Polymorphic, (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.mergeProps)({\n        as: \"div\",\n        onClick,\n        onKeyDown\n    }, ()=>context.dataset(), others));\n}\n_s20(RadioGroupItemControl, \"qtY0hGLjM1hIv5IBZbHvE+h7XOw=\", false, function() {\n    return [\n        useRadioGroupItemContext\n    ];\n});\n_c13 = RadioGroupItemControl;\nfunction RadioGroupItemDescription(props) {\n    _s21();\n    const context = useRadioGroupItemContext();\n    const mergedProps = mergeDefaultProps({\n        id: context.generateId(\"description\")\n    }, props);\n    (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createEffect)(()=>(0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.onCleanup)(context.registerDescription(mergedProps.id)));\n    return (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(Polymorphic, (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.mergeProps)({\n        as: \"div\"\n    }, ()=>context.dataset(), mergedProps));\n}\n_s21(RadioGroupItemDescription, \"qtY0hGLjM1hIv5IBZbHvE+h7XOw=\", false, function() {\n    return [\n        useRadioGroupItemContext\n    ];\n});\n_c14 = RadioGroupItemDescription;\nfunction RadioGroupItemIndicator(props) {\n    _s22();\n    const context = useRadioGroupItemContext();\n    const mergedProps = mergeDefaultProps({\n        id: context.generateId(\"indicator\")\n    }, props);\n    const [local, others] = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.splitProps)(mergedProps, [\n        \"ref\",\n        \"forceMount\"\n    ]);\n    const presence = createPresence(()=>local.forceMount || context.isSelected());\n    return (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.Show, {\n        get when () {\n            return presence.isPresent();\n        },\n        get children () {\n            return (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(Polymorphic, (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.mergeProps)({\n                as: \"div\",\n                ref (r$) {\n                    const _ref$ = mergeRefs(presence.setRef, local.ref);\n                    typeof _ref$ === \"function\" && _ref$(r$);\n                }\n            }, ()=>context.dataset(), others));\n        }\n    });\n}\n_s22(RadioGroupItemIndicator, \"qtY0hGLjM1hIv5IBZbHvE+h7XOw=\", false, function() {\n    return [\n        useRadioGroupItemContext\n    ];\n});\n_c15 = RadioGroupItemIndicator;\nfunction RadioGroupItemInput(props) {\n    _s23();\n    const formControlContext = useFormControlContext();\n    const radioGroupContext = useRadioGroupContext();\n    const radioContext = useRadioGroupItemContext();\n    const mergedProps = mergeDefaultProps({\n        id: radioContext.generateId(\"input\")\n    }, props);\n    const [local, others] = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.splitProps)(mergedProps, [\n        \"ref\",\n        \"style\",\n        \"aria-labelledby\",\n        \"aria-describedby\",\n        \"onChange\",\n        \"onFocus\",\n        \"onBlur\"\n    ]);\n    const ariaLabelledBy = ()=>{\n        return [\n            local[\"aria-labelledby\"],\n            radioContext.labelId(),\n            // If there is both an aria-label and aria-labelledby, add the input itself has an aria-labelledby\n            local[\"aria-labelledby\"] != null && others[\"aria-label\"] != null ? others.id : void 0\n        ].filter(Boolean).join(\" \") || void 0;\n    };\n    const ariaDescribedBy = ()=>{\n        return [\n            local[\"aria-describedby\"],\n            radioContext.descriptionId(),\n            radioGroupContext.ariaDescribedBy()\n        ].filter(Boolean).join(\" \") || void 0;\n    };\n    const [isInternalChangeEvent, setIsInternalChangeEvent] = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createSignal)(false);\n    const onChange = (e2)=>{\n        callHandler(e2, local.onChange);\n        e2.stopPropagation();\n        if (!isInternalChangeEvent()) {\n            radioGroupContext.setSelectedValue(radioContext.value());\n            const target = e2.target;\n            target.checked = radioContext.isSelected();\n        }\n        setIsInternalChangeEvent(false);\n    };\n    const onFocus = (e2)=>{\n        callHandler(e2, local.onFocus);\n        radioContext.setIsFocused(true);\n    };\n    const onBlur = (e2)=>{\n        callHandler(e2, local.onBlur);\n        radioContext.setIsFocused(false);\n    };\n    (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createEffect)((0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.on)([\n        ()=>radioContext.isSelected(),\n        ()=>radioContext.value()\n    ], (c2)=>{\n        if (!c2[0] && c2[1] === radioContext.value()) return;\n        setIsInternalChangeEvent(true);\n        const ref = radioContext.inputRef();\n        ref === null || ref === void 0 ? void 0 : ref.dispatchEvent(new Event(\"input\", {\n            bubbles: true,\n            cancelable: true\n        }));\n        ref === null || ref === void 0 ? void 0 : ref.dispatchEvent(new Event(\"change\", {\n            bubbles: true,\n            cancelable: true\n        }));\n    }, {\n        defer: true\n    }));\n    (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createEffect)(()=>(0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.onCleanup)(radioContext.registerInput(others.id)));\n    return (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(Polymorphic, (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.mergeProps)({\n        as: \"input\",\n        ref (r$) {\n            const _ref$ = mergeRefs(radioContext.setInputRef, local.ref);\n            typeof _ref$ === \"function\" && _ref$(r$);\n        },\n        type: \"radio\",\n        get name () {\n            return formControlContext.name();\n        },\n        get value () {\n            return radioContext.value();\n        },\n        get checked () {\n            return radioContext.isSelected();\n        },\n        get required () {\n            return formControlContext.isRequired();\n        },\n        get disabled () {\n            return radioContext.isDisabled();\n        },\n        get readonly () {\n            return formControlContext.isReadOnly();\n        },\n        get style () {\n            return {\n                ...visuallyHiddenStyles,\n                ...local.style\n            };\n        },\n        get [\"aria-labelledby\"] () {\n            return ariaLabelledBy();\n        },\n        get [\"aria-describedby\"] () {\n            return ariaDescribedBy();\n        },\n        onChange,\n        onFocus,\n        onBlur\n    }, ()=>radioContext.dataset(), others));\n}\n_s23(RadioGroupItemInput, \"4BgCVUVSkIAtDzIuno+U3lr1r2A=\", false, function() {\n    return [\n        useFormControlContext,\n        useRadioGroupContext,\n        useRadioGroupItemContext\n    ];\n});\n_c16 = RadioGroupItemInput;\nfunction RadioGroupItemLabel(props) {\n    _s24();\n    const context = useRadioGroupItemContext();\n    const mergedProps = mergeDefaultProps({\n        id: context.generateId(\"label\")\n    }, props);\n    (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createEffect)(()=>(0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.onCleanup)(context.registerLabel(mergedProps.id)));\n    return (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(Polymorphic, (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.mergeProps)({\n        as: \"label\",\n        get [\"for\"] () {\n            return context.inputId();\n        }\n    }, ()=>context.dataset(), mergedProps));\n}\n_s24(RadioGroupItemLabel, \"qtY0hGLjM1hIv5IBZbHvE+h7XOw=\", false, function() {\n    return [\n        useRadioGroupItemContext\n    ];\n});\n_c17 = RadioGroupItemLabel;\nfunction RadioGroupLabel(props) {\n    return (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(FormControlLabel, (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.mergeProps)({\n        as: \"span\"\n    }, props));\n}\n_c18 = RadioGroupLabel;\nfunction RadioGroupRoot(props) {\n    let ref;\n    const defaultId = \"radiogroup-\".concat((0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createUniqueId)());\n    const mergedProps = mergeDefaultProps({\n        id: defaultId,\n        orientation: \"vertical\"\n    }, props);\n    const [local, formControlProps, others] = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.splitProps)(mergedProps, [\n        \"ref\",\n        \"value\",\n        \"defaultValue\",\n        \"onChange\",\n        \"orientation\",\n        \"aria-labelledby\",\n        \"aria-describedby\"\n    ], FORM_CONTROL_PROP_NAMES);\n    const [selected, setSelected] = createControllableSignal({\n        value: ()=>local.value,\n        defaultValue: ()=>local.defaultValue,\n        onChange: (value)=>{\n            var _local_onChange;\n            return (_local_onChange = local.onChange) === null || _local_onChange === void 0 ? void 0 : _local_onChange.call(local, value);\n        }\n    });\n    const { formControlContext } = createFormControl(formControlProps);\n    createFormResetListener(()=>ref, ()=>{\n        var _local_defaultValue;\n        return setSelected((_local_defaultValue = local.defaultValue) !== null && _local_defaultValue !== void 0 ? _local_defaultValue : \"\");\n    });\n    const ariaLabelledBy = ()=>{\n        return formControlContext.getAriaLabelledBy(access(formControlProps.id), others[\"aria-label\"], local[\"aria-labelledby\"]);\n    };\n    const ariaDescribedBy = ()=>{\n        return formControlContext.getAriaDescribedBy(local[\"aria-describedby\"]);\n    };\n    const isSelectedValue = (value)=>{\n        return value === selected();\n    };\n    const context = {\n        ariaDescribedBy,\n        isSelectedValue,\n        setSelectedValue: (value)=>{\n            if (formControlContext.isReadOnly() || formControlContext.isDisabled()) {\n                return;\n            }\n            setSelected(value);\n            if (ref) for (const el of ref.querySelectorAll(\"[type='radio']\")){\n                const radio = el;\n                radio.checked = isSelectedValue(radio.value);\n            }\n        }\n    };\n    return (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(FormControlContext.Provider, {\n        value: formControlContext,\n        get children () {\n            return (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(RadioGroupContext.Provider, {\n                value: context,\n                get children () {\n                    return (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(Polymorphic, (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.mergeProps)({\n                        as: \"div\",\n                        ref (r$) {\n                            const _ref$ = mergeRefs((el)=>ref = el, local.ref);\n                            typeof _ref$ === \"function\" && _ref$(r$);\n                        },\n                        role: \"radiogroup\",\n                        get id () {\n                            return access(formControlProps.id);\n                        },\n                        get [\"aria-invalid\"] () {\n                            return formControlContext.validationState() === \"invalid\" || void 0;\n                        },\n                        get [\"aria-required\"] () {\n                            return formControlContext.isRequired() || void 0;\n                        },\n                        get [\"aria-disabled\"] () {\n                            return formControlContext.isDisabled() || void 0;\n                        },\n                        get [\"aria-readonly\"] () {\n                            return formControlContext.isReadOnly() || void 0;\n                        },\n                        get [\"aria-orientation\"] () {\n                            return local.orientation;\n                        },\n                        get [\"aria-labelledby\"] () {\n                            return ariaLabelledBy();\n                        },\n                        get [\"aria-describedby\"] () {\n                            return ariaDescribedBy();\n                        }\n                    }, ()=>formControlContext.dataset(), others));\n                }\n            });\n        }\n    });\n}\n_c19 = RadioGroupRoot;\nvar RadioGroup = Object.assign(RadioGroupRoot, {\n    Description: FormControlDescription,\n    ErrorMessage: FormControlErrorMessage,\n    Item: RadioGroupItem,\n    ItemControl: RadioGroupItemControl,\n    ItemDescription: RadioGroupItemDescription,\n    ItemIndicator: RadioGroupItemIndicator,\n    ItemInput: RadioGroupItemInput,\n    ItemLabel: RadioGroupItemLabel,\n    Label: RadioGroupLabel\n});\n_c20 = RadioGroup;\n// ../../node_modules/.pnpm/@kobalte+core@0.13.1_solid-js@1.8.17/node_modules/@kobalte/core/dist/chunk/FHLXHFZN.js\nvar ListKeyboardDelegate = class {\n    getKeyBelow(key) {\n        let keyAfter = this.collection().getKeyAfter(key);\n        while(keyAfter != null){\n            const item = this.collection().getItem(keyAfter);\n            if (item && item.type === \"item\" && !item.disabled) {\n                return keyAfter;\n            }\n            keyAfter = this.collection().getKeyAfter(keyAfter);\n        }\n    }\n    getKeyAbove(key) {\n        let keyBefore = this.collection().getKeyBefore(key);\n        while(keyBefore != null){\n            const item = this.collection().getItem(keyBefore);\n            if (item && item.type === \"item\" && !item.disabled) {\n                return keyBefore;\n            }\n            keyBefore = this.collection().getKeyBefore(keyBefore);\n        }\n    }\n    getFirstKey() {\n        let key = this.collection().getFirstKey();\n        while(key != null){\n            const item = this.collection().getItem(key);\n            if (item && item.type === \"item\" && !item.disabled) {\n                return key;\n            }\n            key = this.collection().getKeyAfter(key);\n        }\n    }\n    getLastKey() {\n        let key = this.collection().getLastKey();\n        while(key != null){\n            const item = this.collection().getItem(key);\n            if (item && item.type === \"item\" && !item.disabled) {\n                return key;\n            }\n            key = this.collection().getKeyBefore(key);\n        }\n    }\n    getItem(key) {\n        var _this_ref, _this_ref1, _this;\n        var _this_ref_querySelector;\n        return (_this_ref_querySelector = (_this_ref1 = (_this = this).ref) === null || _this_ref1 === void 0 ? void 0 : (_this_ref = _this_ref1.call(_this)) === null || _this_ref === void 0 ? void 0 : _this_ref.querySelector('[data-key=\"'.concat(key, '\"]'))) !== null && _this_ref_querySelector !== void 0 ? _this_ref_querySelector : null;\n    }\n    // TODO: not working correctly\n    getKeyPageAbove(key) {\n        var _this_ref, _this;\n        const menu = (_this_ref = (_this = this).ref) === null || _this_ref === void 0 ? void 0 : _this_ref.call(_this);\n        let item = this.getItem(key);\n        if (!menu || !item) {\n            return;\n        }\n        const pageY = Math.max(0, item.offsetTop + item.offsetHeight - menu.offsetHeight);\n        let keyAbove = key;\n        while(keyAbove && item && item.offsetTop > pageY){\n            keyAbove = this.getKeyAbove(keyAbove);\n            item = keyAbove != null ? this.getItem(keyAbove) : null;\n        }\n        return keyAbove;\n    }\n    // TODO: not working correctly\n    getKeyPageBelow(key) {\n        var _this_ref, _this;\n        const menu = (_this_ref = (_this = this).ref) === null || _this_ref === void 0 ? void 0 : _this_ref.call(_this);\n        let item = this.getItem(key);\n        if (!menu || !item) {\n            return;\n        }\n        const pageY = Math.min(menu.scrollHeight, item.offsetTop - item.offsetHeight + menu.offsetHeight);\n        let keyBelow = key;\n        while(keyBelow && item && item.offsetTop < pageY){\n            keyBelow = this.getKeyBelow(keyBelow);\n            item = keyBelow != null ? this.getItem(keyBelow) : null;\n        }\n        return keyBelow;\n    }\n    getKeyForSearch(search, fromKey) {\n        var _this_collator, _this;\n        const collator = (_this_collator = (_this = this).collator) === null || _this_collator === void 0 ? void 0 : _this_collator.call(_this);\n        if (!collator) {\n            return;\n        }\n        let key = fromKey != null ? this.getKeyBelow(fromKey) : this.getFirstKey();\n        while(key != null){\n            const item = this.collection().getItem(key);\n            if (item) {\n                const substring = item.textValue.slice(0, search.length);\n                if (item.textValue && collator.compare(substring, search) === 0) {\n                    return key;\n                }\n            }\n            key = this.getKeyBelow(key);\n        }\n    }\n    constructor(collection, ref, collator){\n        this.collection = collection;\n        this.ref = ref;\n        this.collator = collator;\n    }\n};\nfunction createSelectableList(props, ref, scrollRef) {\n    const collator = createCollator({\n        usage: \"search\",\n        sensitivity: \"base\"\n    });\n    const delegate = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(()=>{\n        const keyboardDelegate = access(props.keyboardDelegate);\n        if (keyboardDelegate) {\n            return keyboardDelegate;\n        }\n        return new ListKeyboardDelegate(props.collection, ref, collator);\n    });\n    return createSelectableCollection({\n        selectionManager: ()=>access(props.selectionManager),\n        keyboardDelegate: delegate,\n        autoFocus: ()=>access(props.autoFocus),\n        deferAutoFocus: ()=>access(props.deferAutoFocus),\n        shouldFocusWrap: ()=>access(props.shouldFocusWrap),\n        disallowEmptySelection: ()=>access(props.disallowEmptySelection),\n        selectOnFocus: ()=>access(props.selectOnFocus),\n        disallowTypeAhead: ()=>access(props.disallowTypeAhead),\n        shouldUseVirtualFocus: ()=>access(props.shouldUseVirtualFocus),\n        allowsTabNavigation: ()=>access(props.allowsTabNavigation),\n        isVirtualized: ()=>access(props.isVirtualized),\n        scrollToKey: (key)=>{\n            var _access;\n            return (_access = access(props.scrollToKey)) === null || _access === void 0 ? void 0 : _access(key);\n        }\n    }, ref, scrollRef);\n}\n// ../../node_modules/.pnpm/@kobalte+core@0.13.1_solid-js@1.8.17/node_modules/@kobalte/core/dist/chunk/ISKHZMHS.js\nvar AUTOFOCUS_ON_MOUNT_EVENT = \"focusScope.autoFocusOnMount\";\nvar AUTOFOCUS_ON_UNMOUNT_EVENT = \"focusScope.autoFocusOnUnmount\";\nvar EVENT_OPTIONS = {\n    bubbles: false,\n    cancelable: true\n};\nvar focusScopeStack = {\n    /** A stack of focus scopes, with the active one at the top */ stack: [],\n    active () {\n        return this.stack[0];\n    },\n    add (scope) {\n        if (scope !== this.active()) {\n            var _this_active;\n            (_this_active = this.active()) === null || _this_active === void 0 ? void 0 : _this_active.pause();\n        }\n        this.stack = removeItemFromArray(this.stack, scope);\n        this.stack.unshift(scope);\n    },\n    remove (scope) {\n        var _this_active;\n        this.stack = removeItemFromArray(this.stack, scope);\n        (_this_active = this.active()) === null || _this_active === void 0 ? void 0 : _this_active.resume();\n    }\n};\nfunction createFocusScope(props, ref) {\n    const [isPaused, setIsPaused] = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createSignal)(false);\n    const focusScope = {\n        pause () {\n            setIsPaused(true);\n        },\n        resume () {\n            setIsPaused(false);\n        }\n    };\n    let lastFocusedElement = null;\n    const onMountAutoFocus = (e2)=>{\n        var _props_onMountAutoFocus;\n        return (_props_onMountAutoFocus = props.onMountAutoFocus) === null || _props_onMountAutoFocus === void 0 ? void 0 : _props_onMountAutoFocus.call(props, e2);\n    };\n    const onUnmountAutoFocus = (e2)=>{\n        var _props_onUnmountAutoFocus;\n        return (_props_onUnmountAutoFocus = props.onUnmountAutoFocus) === null || _props_onUnmountAutoFocus === void 0 ? void 0 : _props_onUnmountAutoFocus.call(props, e2);\n    };\n    const ownerDocument = ()=>getDocument(ref());\n    const createSentinel = ()=>{\n        const element = ownerDocument().createElement(\"span\");\n        element.setAttribute(\"data-focus-trap\", \"\");\n        element.tabIndex = 0;\n        Object.assign(element.style, visuallyHiddenStyles);\n        return element;\n    };\n    const tabbables = ()=>{\n        const container = ref();\n        if (!container) {\n            return [];\n        }\n        return getAllTabbableIn(container, true).filter((el)=>!el.hasAttribute(\"data-focus-trap\"));\n    };\n    const firstTabbable = ()=>{\n        const items = tabbables();\n        return items.length > 0 ? items[0] : null;\n    };\n    const lastTabbable = ()=>{\n        const items = tabbables();\n        return items.length > 0 ? items[items.length - 1] : null;\n    };\n    const shouldPreventUnmountAutoFocus = ()=>{\n        const container = ref();\n        if (!container) {\n            return false;\n        }\n        const activeElement = getActiveElement(container);\n        if (!activeElement) {\n            return false;\n        }\n        if (contains(container, activeElement)) {\n            return false;\n        }\n        return isFocusable(activeElement);\n    };\n    (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createEffect)(()=>{\n        if (_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.isServer) {\n            return;\n        }\n        const container = ref();\n        if (!container) {\n            return;\n        }\n        focusScopeStack.add(focusScope);\n        const previouslyFocusedElement = getActiveElement(container);\n        const hasFocusedCandidate = contains(container, previouslyFocusedElement);\n        if (!hasFocusedCandidate) {\n            const mountEvent = new CustomEvent(AUTOFOCUS_ON_MOUNT_EVENT, EVENT_OPTIONS);\n            container.addEventListener(AUTOFOCUS_ON_MOUNT_EVENT, onMountAutoFocus);\n            container.dispatchEvent(mountEvent);\n            if (!mountEvent.defaultPrevented) {\n                setTimeout(()=>{\n                    focusWithoutScrolling(firstTabbable());\n                    if (getActiveElement(container) === previouslyFocusedElement) {\n                        focusWithoutScrolling(container);\n                    }\n                }, 0);\n            }\n        }\n        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.onCleanup)(()=>{\n            container.removeEventListener(AUTOFOCUS_ON_MOUNT_EVENT, onMountAutoFocus);\n            setTimeout(()=>{\n                const unmountEvent = new CustomEvent(AUTOFOCUS_ON_UNMOUNT_EVENT, EVENT_OPTIONS);\n                if (shouldPreventUnmountAutoFocus()) {\n                    unmountEvent.preventDefault();\n                }\n                container.addEventListener(AUTOFOCUS_ON_UNMOUNT_EVENT, onUnmountAutoFocus);\n                container.dispatchEvent(unmountEvent);\n                if (!unmountEvent.defaultPrevented) {\n                    focusWithoutScrolling(previouslyFocusedElement !== null && previouslyFocusedElement !== void 0 ? previouslyFocusedElement : ownerDocument().body);\n                }\n                container.removeEventListener(AUTOFOCUS_ON_UNMOUNT_EVENT, onUnmountAutoFocus);\n                focusScopeStack.remove(focusScope);\n            }, 0);\n        });\n    });\n    (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createEffect)(()=>{\n        if (_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.isServer) {\n            return;\n        }\n        const container = ref();\n        if (!container || !access(props.trapFocus) || isPaused()) {\n            return;\n        }\n        const onFocusIn = (event)=>{\n            const target = event.target;\n            if (target === null || target === void 0 ? void 0 : target.closest(\"[\".concat(DATA_TOP_LAYER_ATTR, \"]\"))) {\n                return;\n            }\n            if (contains(container, target)) {\n                lastFocusedElement = target;\n            } else {\n                focusWithoutScrolling(lastFocusedElement);\n            }\n        };\n        const onFocusOut = (event)=>{\n            const relatedTarget = event.relatedTarget;\n            const target = relatedTarget !== null && relatedTarget !== void 0 ? relatedTarget : getActiveElement(container);\n            if (target === null || target === void 0 ? void 0 : target.closest(\"[\".concat(DATA_TOP_LAYER_ATTR, \"]\"))) {\n                return;\n            }\n            if (!contains(container, target)) {\n                focusWithoutScrolling(lastFocusedElement);\n            }\n        };\n        ownerDocument().addEventListener(\"focusin\", onFocusIn);\n        ownerDocument().addEventListener(\"focusout\", onFocusOut);\n        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.onCleanup)(()=>{\n            ownerDocument().removeEventListener(\"focusin\", onFocusIn);\n            ownerDocument().removeEventListener(\"focusout\", onFocusOut);\n        });\n    });\n    (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createEffect)(()=>{\n        if (_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.isServer) {\n            return;\n        }\n        const container = ref();\n        if (!container || !access(props.trapFocus) || isPaused()) {\n            return;\n        }\n        const startSentinel = createSentinel();\n        container.insertAdjacentElement(\"afterbegin\", startSentinel);\n        const endSentinel = createSentinel();\n        container.insertAdjacentElement(\"beforeend\", endSentinel);\n        function onFocus(event) {\n            const first = firstTabbable();\n            const last = lastTabbable();\n            if (event.relatedTarget === first) {\n                focusWithoutScrolling(last);\n            } else {\n                focusWithoutScrolling(first);\n            }\n        }\n        startSentinel.addEventListener(\"focusin\", onFocus);\n        endSentinel.addEventListener(\"focusin\", onFocus);\n        const observer = new MutationObserver((mutations)=>{\n            for (const mutation of mutations){\n                if (mutation.previousSibling === endSentinel) {\n                    endSentinel.remove();\n                    container.insertAdjacentElement(\"beforeend\", endSentinel);\n                }\n                if (mutation.nextSibling === startSentinel) {\n                    startSentinel.remove();\n                    container.insertAdjacentElement(\"afterbegin\", startSentinel);\n                }\n            }\n        });\n        observer.observe(container, {\n            childList: true,\n            subtree: false\n        });\n        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.onCleanup)(()=>{\n            startSentinel.removeEventListener(\"focusin\", onFocus);\n            endSentinel.removeEventListener(\"focusin\", onFocus);\n            startSentinel.remove();\n            endSentinel.remove();\n            observer.disconnect();\n        });\n    });\n}\n// ../../node_modules/.pnpm/@kobalte+core@0.13.1_solid-js@1.8.17/node_modules/@kobalte/core/dist/chunk/YA7DCYMB.js\nvar DATA_LIVE_ANNOUNCER_ATTR = \"data-live-announcer\";\n// ../../node_modules/.pnpm/@kobalte+core@0.13.1_solid-js@1.8.17/node_modules/@kobalte/core/dist/chunk/TZGE2AQH.js\nfunction createHideOutside(props) {\n    (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createEffect)(()=>{\n        if (access(props.isDisabled)) {\n            return;\n        }\n        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.onCleanup)(ariaHideOutside(access(props.targets), access(props.root)));\n    });\n}\nvar refCountMap = /* @__PURE__ */ new WeakMap();\nvar observerStack = [];\nfunction ariaHideOutside(targets) {\n    let root = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : document.body;\n    const visibleNodes = new Set(targets);\n    const hiddenNodes = /* @__PURE__ */ new Set();\n    const walk = (root2)=>{\n        for (const element of root2.querySelectorAll(\"[\".concat(DATA_LIVE_ANNOUNCER_ATTR, \"], [\").concat(DATA_TOP_LAYER_ATTR, \"]\"))){\n            visibleNodes.add(element);\n        }\n        const acceptNode = (node)=>{\n            if (visibleNodes.has(node) || node.parentElement && hiddenNodes.has(node.parentElement) && node.parentElement.getAttribute(\"role\") !== \"row\") {\n                return NodeFilter.FILTER_REJECT;\n            }\n            for (const target of visibleNodes){\n                if (node.contains(target)) {\n                    return NodeFilter.FILTER_SKIP;\n                }\n            }\n            return NodeFilter.FILTER_ACCEPT;\n        };\n        const walker = document.createTreeWalker(root2, NodeFilter.SHOW_ELEMENT, {\n            acceptNode\n        });\n        const acceptRoot = acceptNode(root2);\n        if (acceptRoot === NodeFilter.FILTER_ACCEPT) {\n            hide3(root2);\n        }\n        if (acceptRoot !== NodeFilter.FILTER_REJECT) {\n            let node = walker.nextNode();\n            while(node != null){\n                hide3(node);\n                node = walker.nextNode();\n            }\n        }\n    };\n    const hide3 = (node)=>{\n        var _refCountMap_get;\n        const refCount = (_refCountMap_get = refCountMap.get(node)) !== null && _refCountMap_get !== void 0 ? _refCountMap_get : 0;\n        if (node.getAttribute(\"aria-hidden\") === \"true\" && refCount === 0) {\n            return;\n        }\n        if (refCount === 0) {\n            node.setAttribute(\"aria-hidden\", \"true\");\n        }\n        hiddenNodes.add(node);\n        refCountMap.set(node, refCount + 1);\n    };\n    if (observerStack.length) {\n        observerStack[observerStack.length - 1].disconnect();\n    }\n    walk(root);\n    const observer = new MutationObserver((changes)=>{\n        for (const change of changes){\n            if (change.type !== \"childList\" || change.addedNodes.length === 0) {\n                continue;\n            }\n            if (![\n                ...visibleNodes,\n                ...hiddenNodes\n            ].some((node)=>node.contains(change.target))) {\n                for (const node of change.removedNodes){\n                    if (node instanceof Element) {\n                        visibleNodes.delete(node);\n                        hiddenNodes.delete(node);\n                    }\n                }\n                for (const node of change.addedNodes){\n                    if ((node instanceof HTMLElement || node instanceof SVGElement) && (node.dataset.liveAnnouncer === \"true\" || node.dataset.reactAriaTopLayer === \"true\")) {\n                        visibleNodes.add(node);\n                    } else if (node instanceof Element) {\n                        walk(node);\n                    }\n                }\n            }\n        }\n    });\n    observer.observe(root, {\n        childList: true,\n        subtree: true\n    });\n    const observerWrapper = {\n        observe () {\n            observer.observe(root, {\n                childList: true,\n                subtree: true\n            });\n        },\n        disconnect () {\n            observer.disconnect();\n        }\n    };\n    observerStack.push(observerWrapper);\n    return ()=>{\n        observer.disconnect();\n        for (const node of hiddenNodes){\n            const count = refCountMap.get(node);\n            if (count == null) {\n                return;\n            }\n            if (count === 1) {\n                node.removeAttribute(\"aria-hidden\");\n                refCountMap.delete(node);\n            } else {\n                refCountMap.set(node, count - 1);\n            }\n        }\n        if (observerWrapper === observerStack[observerStack.length - 1]) {\n            observerStack.pop();\n            if (observerStack.length) {\n                observerStack[observerStack.length - 1].observe();\n            }\n        } else {\n            observerStack.splice(observerStack.indexOf(observerWrapper), 1);\n        }\n    };\n}\n// ../../node_modules/.pnpm/@corvu+utils@0.2.0_solid-js@1.8.17/node_modules/@corvu/utils/dist/chunk/OZCI4NDN.js\nvar access2 = (v)=>typeof v === \"function\" ? v() : v;\n// ../../node_modules/.pnpm/@corvu+utils@0.2.0_solid-js@1.8.17/node_modules/@corvu/utils/dist/chunk/6PYUKSWQ.js\nvar activeStyles = /* @__PURE__ */ new Map();\nvar createStyle = (props)=>{\n    (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createEffect)(()=>{\n        var _access2;\n        const style = (_access2 = access2(props.style)) !== null && _access2 !== void 0 ? _access2 : {};\n        var _access21;\n        const properties = (_access21 = access2(props.properties)) !== null && _access21 !== void 0 ? _access21 : [];\n        const originalStyles = {};\n        for(const key in style){\n            originalStyles[key] = props.element.style[key];\n        }\n        const activeStyle = activeStyles.get(props.key);\n        if (activeStyle) {\n            activeStyle.activeCount++;\n        } else {\n            activeStyles.set(props.key, {\n                activeCount: 1,\n                originalStyles,\n                properties: properties.map((property)=>property.key)\n            });\n        }\n        Object.assign(props.element.style, props.style);\n        for (const property of properties){\n            props.element.style.setProperty(property.key, property.value);\n        }\n        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.onCleanup)(()=>{\n            var _props_cleanup;\n            const activeStyle2 = activeStyles.get(props.key);\n            if (!activeStyle2) return;\n            if (activeStyle2.activeCount !== 1) {\n                activeStyle2.activeCount--;\n                return;\n            }\n            activeStyles.delete(props.key);\n            for (const [key, value] of Object.entries(activeStyle2.originalStyles)){\n                props.element.style[key] = value;\n            }\n            for (const property of activeStyle2.properties){\n                props.element.style.removeProperty(property);\n            }\n            if (props.element.style.length === 0) {\n                props.element.removeAttribute(\"style\");\n            }\n            (_props_cleanup = props.cleanup) === null || _props_cleanup === void 0 ? void 0 : _props_cleanup.call(props);\n        });\n    });\n};\nvar style_default = createStyle;\n// ../../node_modules/.pnpm/@corvu+utils@0.2.0_solid-js@1.8.17/node_modules/@corvu/utils/dist/scroll/index.js\nvar getScrollDimensions = (element, axis)=>{\n    switch(axis){\n        case \"x\":\n            return [\n                element.clientWidth,\n                element.scrollLeft,\n                element.scrollWidth\n            ];\n        case \"y\":\n            return [\n                element.clientHeight,\n                element.scrollTop,\n                element.scrollHeight\n            ];\n    }\n};\nvar isScrollContainer = (element, axis)=>{\n    const styles = getComputedStyle(element);\n    const overflow = axis === \"x\" ? styles.overflowX : styles.overflowY;\n    return overflow === \"auto\" || overflow === \"scroll\" || // The HTML element is a scroll container if it has overflow visible\n    element.tagName === \"HTML\" && overflow === \"visible\";\n};\nvar getScrollAtLocation = (location, axis, stopAt)=>{\n    const directionFactor = axis === \"x\" && window.getComputedStyle(location).direction === \"rtl\" ? -1 : 1;\n    let currentElement = location;\n    let availableScroll = 0;\n    let availableScrollTop = 0;\n    let wrapperReached = false;\n    do {\n        const [clientSize, scrollOffset, scrollSize] = getScrollDimensions(currentElement, axis);\n        const scrolled = scrollSize - clientSize - directionFactor * scrollOffset;\n        if ((scrollOffset !== 0 || scrolled !== 0) && isScrollContainer(currentElement, axis)) {\n            availableScroll += scrolled;\n            availableScrollTop += scrollOffset;\n        }\n        if (currentElement === (stopAt !== null && stopAt !== void 0 ? stopAt : document.documentElement)) {\n            wrapperReached = true;\n        } else {\n            var _currentElement__$host;\n            currentElement = (_currentElement__$host = currentElement._$host) !== null && _currentElement__$host !== void 0 ? _currentElement__$host : currentElement.parentElement;\n        }\n    }while (currentElement && !wrapperReached);\n    return [\n        availableScroll,\n        availableScrollTop\n    ];\n};\n// ../../node_modules/.pnpm/solid-prevent-scroll@0.1.7_solid-js@1.8.17/node_modules/solid-prevent-scroll/dist/index.js\nvar [preventScrollStack, setPreventScrollStack] = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createSignal)([]);\nvar isActive = (id)=>preventScrollStack().indexOf(id) === preventScrollStack().length - 1;\nvar createPreventScroll = (props)=>{\n    const defaultedProps = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.mergeProps)({\n        element: null,\n        enabled: true,\n        hideScrollbar: true,\n        preventScrollbarShift: true,\n        preventScrollbarShiftMode: \"padding\",\n        allowPinchZoom: false\n    }, props);\n    const preventScrollId = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createUniqueId)();\n    let currentTouchStart = [\n        0,\n        0\n    ];\n    let currentTouchStartAxis = null;\n    let currentTouchStartDelta = null;\n    (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createEffect)(()=>{\n        if (!access2(defaultedProps.enabled)) return;\n        setPreventScrollStack((stack)=>[\n                ...stack,\n                preventScrollId\n            ]);\n        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.onCleanup)(()=>{\n            setPreventScrollStack((stack)=>stack.filter((id)=>id !== preventScrollId));\n        });\n    });\n    (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createEffect)(()=>{\n        if (!access2(defaultedProps.enabled) || !access2(defaultedProps.hideScrollbar)) return;\n        const { body } = document;\n        const scrollbarWidth = window.innerWidth - body.offsetWidth;\n        style_default({\n            key: \"prevent-scroll-overflow\",\n            element: body,\n            style: {\n                overflow: \"hidden\"\n            }\n        });\n        if (access2(defaultedProps.preventScrollbarShift)) {\n            const style = {};\n            const properties = [];\n            if (scrollbarWidth > 0) {\n                if (access2(defaultedProps.preventScrollbarShiftMode) === \"padding\") {\n                    style.paddingRight = \"calc(\".concat(window.getComputedStyle(body).paddingRight, \" + \").concat(scrollbarWidth, \"px)\");\n                } else {\n                    style.marginRight = \"calc(\".concat(window.getComputedStyle(body).marginRight, \" + \").concat(scrollbarWidth, \"px)\");\n                }\n                properties.push({\n                    key: \"--scrollbar-width\",\n                    value: \"\".concat(scrollbarWidth, \"px\")\n                });\n            }\n            const offsetTop = window.scrollY;\n            const offsetLeft = window.scrollX;\n            style_default({\n                key: \"prevent-scroll-scrollbar\",\n                element: body,\n                style,\n                properties,\n                cleanup: ()=>{\n                    if (scrollbarWidth > 0) {\n                        window.scrollTo(offsetLeft, offsetTop);\n                    }\n                }\n            });\n        }\n    });\n    (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createEffect)(()=>{\n        if (!isActive(preventScrollId) || !access2(defaultedProps.enabled)) return;\n        document.addEventListener(\"wheel\", maybePreventWheel, {\n            passive: false\n        });\n        document.addEventListener(\"touchstart\", logTouchStart, {\n            passive: false\n        });\n        document.addEventListener(\"touchmove\", maybePreventTouch, {\n            passive: false\n        });\n        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.onCleanup)(()=>{\n            document.removeEventListener(\"wheel\", maybePreventWheel);\n            document.removeEventListener(\"touchstart\", logTouchStart);\n            document.removeEventListener(\"touchmove\", maybePreventTouch);\n        });\n    });\n    const logTouchStart = (event)=>{\n        currentTouchStart = getTouchXY(event);\n        currentTouchStartAxis = null;\n        currentTouchStartDelta = null;\n    };\n    const maybePreventWheel = (event)=>{\n        const target = event.target;\n        const wrapper = access2(defaultedProps.element);\n        const delta = getDeltaXY(event);\n        const axis = Math.abs(delta[0]) > Math.abs(delta[1]) ? \"x\" : \"y\";\n        const axisDelta = axis === \"x\" ? delta[0] : delta[1];\n        const resultsInScroll = wouldScroll(target, axis, axisDelta, wrapper);\n        let shouldCancel;\n        if (wrapper && contains2(wrapper, target)) {\n            shouldCancel = !resultsInScroll;\n        } else {\n            shouldCancel = true;\n        }\n        if (shouldCancel && event.cancelable) {\n            event.preventDefault();\n        }\n    };\n    const maybePreventTouch = (event)=>{\n        const wrapper = access2(defaultedProps.element);\n        const target = event.target;\n        let shouldCancel;\n        if (event.touches.length === 2) {\n            shouldCancel = !access2(defaultedProps.allowPinchZoom);\n        } else {\n            if (currentTouchStartAxis == null || currentTouchStartDelta === null) {\n                const delta = getTouchXY(event).map((touch, i2)=>currentTouchStart[i2] - touch);\n                const axis = Math.abs(delta[0]) > Math.abs(delta[1]) ? \"x\" : \"y\";\n                currentTouchStartAxis = axis;\n                currentTouchStartDelta = axis === \"x\" ? delta[0] : delta[1];\n            }\n            if (target.type === \"range\") {\n                shouldCancel = false;\n            } else {\n                const wouldResultInScroll = wouldScroll(target, currentTouchStartAxis, currentTouchStartDelta, wrapper);\n                if (wrapper && contains2(wrapper, target)) {\n                    shouldCancel = !wouldResultInScroll;\n                } else {\n                    shouldCancel = true;\n                }\n            }\n        }\n        if (shouldCancel && event.cancelable) {\n            event.preventDefault();\n        }\n    };\n};\nvar getDeltaXY = (event)=>[\n        event.deltaX,\n        event.deltaY\n    ];\nvar getTouchXY = (event)=>event.changedTouches[0] ? [\n        event.changedTouches[0].clientX,\n        event.changedTouches[0].clientY\n    ] : [\n        0,\n        0\n    ];\nvar wouldScroll = (target, axis, delta, wrapper)=>{\n    const targetInWrapper = wrapper !== null && contains2(wrapper, target);\n    const [availableScroll, availableScrollTop] = getScrollAtLocation(target, axis, targetInWrapper ? wrapper : void 0);\n    if (delta > 0 && Math.abs(availableScroll) <= 1) {\n        return false;\n    }\n    if (delta < 0 && Math.abs(availableScrollTop) < 1) {\n        return false;\n    }\n    return true;\n};\nvar contains2 = (wrapper, target)=>{\n    if (wrapper.contains(target)) return true;\n    let currentElement = target;\n    while(currentElement){\n        if (currentElement === wrapper) return true;\n        var _currentElement__$host;\n        currentElement = (_currentElement__$host = currentElement._$host) !== null && _currentElement__$host !== void 0 ? _currentElement__$host : currentElement.parentElement;\n    }\n    return false;\n};\nvar preventScroll_default = createPreventScroll;\nvar src_default = preventScroll_default;\n// ../../node_modules/.pnpm/@kobalte+core@0.13.1_solid-js@1.8.17/node_modules/@kobalte/core/dist/chunk/FEWVDVRO.js\nvar MenuContext = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createContext)();\nfunction useOptionalMenuContext() {\n    _s25();\n    return (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.useContext)(MenuContext);\n}\n_s25(useOptionalMenuContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nfunction useMenuContext() {\n    _s26();\n    const context = useOptionalMenuContext();\n    if (context === void 0) {\n        throw new Error(\"[kobalte]: `useMenuContext` must be used within a `Menu` component\");\n    }\n    return context;\n}\n_s26(useMenuContext, \"KjB02SXLM2W9VP6FPa/qu1FB1DY=\", false, function() {\n    return [\n        useOptionalMenuContext\n    ];\n});\nvar MenuItemContext = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createContext)();\nfunction useMenuItemContext() {\n    _s27();\n    const context = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.useContext)(MenuItemContext);\n    if (context === void 0) {\n        throw new Error(\"[kobalte]: `useMenuItemContext` must be used within a `Menu.Item` component\");\n    }\n    return context;\n}\n_s27(useMenuItemContext, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar MenuRootContext = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createContext)();\nfunction useMenuRootContext() {\n    _s28();\n    const context = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.useContext)(MenuRootContext);\n    if (context === void 0) {\n        throw new Error(\"[kobalte]: `useMenuRootContext` must be used within a `MenuRoot` component\");\n    }\n    return context;\n}\n_s28(useMenuRootContext, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nfunction MenuItemBase(props) {\n    _s29();\n    let ref;\n    const rootContext = useMenuRootContext();\n    const menuContext = useMenuContext();\n    const mergedProps = mergeDefaultProps({\n        id: rootContext.generateId(\"item-\".concat((0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createUniqueId)()))\n    }, props);\n    const [local, others] = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.splitProps)(mergedProps, [\n        \"ref\",\n        \"textValue\",\n        \"disabled\",\n        \"closeOnSelect\",\n        \"checked\",\n        \"indeterminate\",\n        \"onSelect\",\n        \"onPointerMove\",\n        \"onPointerLeave\",\n        \"onPointerDown\",\n        \"onPointerUp\",\n        \"onClick\",\n        \"onKeyDown\",\n        \"onMouseDown\",\n        \"onFocus\"\n    ]);\n    const [labelId, setLabelId] = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createSignal)();\n    const [descriptionId, setDescriptionId] = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createSignal)();\n    const [labelRef, setLabelRef] = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createSignal)();\n    const selectionManager = ()=>menuContext.listState().selectionManager();\n    const key = ()=>others.id;\n    const isHighlighted = ()=>selectionManager().focusedKey() === key();\n    const onSelect = ()=>{\n        var _local_onSelect;\n        (_local_onSelect = local.onSelect) === null || _local_onSelect === void 0 ? void 0 : _local_onSelect.call(local);\n        if (local.closeOnSelect) {\n            setTimeout(()=>{\n                menuContext.close(true);\n            });\n        }\n    };\n    createDomCollectionItem({\n        getItem: ()=>{\n            var _labelRef;\n            var _local_textValue, _ref, _ref1, _local_disabled;\n            return {\n                ref: ()=>ref,\n                type: \"item\",\n                key: key(),\n                textValue: (_ref1 = (_ref = (_local_textValue = local.textValue) !== null && _local_textValue !== void 0 ? _local_textValue : (_labelRef = labelRef()) === null || _labelRef === void 0 ? void 0 : _labelRef.textContent) !== null && _ref !== void 0 ? _ref : ref === null || ref === void 0 ? void 0 : ref.textContent) !== null && _ref1 !== void 0 ? _ref1 : \"\",\n                disabled: (_local_disabled = local.disabled) !== null && _local_disabled !== void 0 ? _local_disabled : false\n            };\n        }\n    });\n    const selectableItem = createSelectableItem({\n        key,\n        selectionManager,\n        shouldSelectOnPressUp: true,\n        allowsDifferentPressOrigin: true,\n        disabled: ()=>local.disabled\n    }, ()=>ref);\n    const onPointerMove = (e2)=>{\n        callHandler(e2, local.onPointerMove);\n        if (e2.pointerType !== \"mouse\") {\n            return;\n        }\n        if (local.disabled) {\n            menuContext.onItemLeave(e2);\n        } else {\n            menuContext.onItemEnter(e2);\n            if (!e2.defaultPrevented) {\n                focusWithoutScrolling(e2.currentTarget);\n                menuContext.listState().selectionManager().setFocused(true);\n                menuContext.listState().selectionManager().setFocusedKey(key());\n            }\n        }\n    };\n    const onPointerLeave = (e2)=>{\n        callHandler(e2, local.onPointerLeave);\n        if (e2.pointerType !== \"mouse\") {\n            return;\n        }\n        menuContext.onItemLeave(e2);\n    };\n    const onPointerUp = (e2)=>{\n        callHandler(e2, local.onPointerUp);\n        if (!local.disabled && e2.button === 0) {\n            onSelect();\n        }\n    };\n    const onKeyDown = (e2)=>{\n        callHandler(e2, local.onKeyDown);\n        if (e2.repeat) {\n            return;\n        }\n        if (local.disabled) {\n            return;\n        }\n        switch(e2.key){\n            case \"Enter\":\n            case \" \":\n                onSelect();\n                break;\n        }\n    };\n    const ariaChecked = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(()=>{\n        if (local.indeterminate) {\n            return \"mixed\";\n        }\n        if (local.checked == null) {\n            return void 0;\n        }\n        return local.checked;\n    });\n    const dataset = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(()=>({\n            \"data-indeterminate\": local.indeterminate ? \"\" : void 0,\n            \"data-checked\": local.checked && !local.indeterminate ? \"\" : void 0,\n            \"data-disabled\": local.disabled ? \"\" : void 0,\n            \"data-highlighted\": isHighlighted() ? \"\" : void 0\n        }));\n    const context = {\n        isChecked: ()=>local.checked,\n        dataset,\n        setLabelRef,\n        generateId: createGenerateId(()=>others.id),\n        registerLabel: createRegisterId(setLabelId),\n        registerDescription: createRegisterId(setDescriptionId)\n    };\n    return (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(MenuItemContext.Provider, {\n        value: context,\n        get children () {\n            return (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(Polymorphic, (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.mergeProps)({\n                as: \"div\",\n                ref (r$) {\n                    const _ref$ = mergeRefs((el)=>ref = el, local.ref);\n                    typeof _ref$ === \"function\" && _ref$(r$);\n                },\n                get tabIndex () {\n                    return selectableItem.tabIndex();\n                },\n                get [\"aria-checked\"] () {\n                    return ariaChecked();\n                },\n                get [\"aria-disabled\"] () {\n                    return local.disabled;\n                },\n                get [\"aria-labelledby\"] () {\n                    return labelId();\n                },\n                get [\"aria-describedby\"] () {\n                    return descriptionId();\n                },\n                get [\"data-key\"] () {\n                    return selectableItem.dataKey();\n                },\n                get onPointerDown () {\n                    return composeEventHandlers([\n                        local.onPointerDown,\n                        selectableItem.onPointerDown\n                    ]);\n                },\n                get onPointerUp () {\n                    return composeEventHandlers([\n                        onPointerUp,\n                        selectableItem.onPointerUp\n                    ]);\n                },\n                get onClick () {\n                    return composeEventHandlers([\n                        local.onClick,\n                        selectableItem.onClick\n                    ]);\n                },\n                get onKeyDown () {\n                    return composeEventHandlers([\n                        onKeyDown,\n                        selectableItem.onKeyDown\n                    ]);\n                },\n                get onMouseDown () {\n                    return composeEventHandlers([\n                        local.onMouseDown,\n                        selectableItem.onMouseDown\n                    ]);\n                },\n                get onFocus () {\n                    return composeEventHandlers([\n                        local.onFocus,\n                        selectableItem.onFocus\n                    ]);\n                },\n                onPointerMove,\n                onPointerLeave\n            }, dataset, others));\n        }\n    });\n}\n_s29(MenuItemBase, \"WMdOE+XJ2mpzx5ulc1O3zwxgX2g=\", false, function() {\n    return [\n        useMenuRootContext,\n        useMenuContext\n    ];\n});\n_c21 = MenuItemBase;\nfunction MenuCheckboxItem(props) {\n    const mergedProps = mergeDefaultProps({\n        closeOnSelect: false\n    }, props);\n    const [local, others] = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.splitProps)(mergedProps, [\n        \"checked\",\n        \"defaultChecked\",\n        \"onChange\",\n        \"onSelect\"\n    ]);\n    const state = createToggleState({\n        isSelected: ()=>local.checked,\n        defaultIsSelected: ()=>local.defaultChecked,\n        onSelectedChange: (checked)=>{\n            var _local_onChange;\n            return (_local_onChange = local.onChange) === null || _local_onChange === void 0 ? void 0 : _local_onChange.call(local, checked);\n        },\n        isDisabled: ()=>others.disabled\n    });\n    const onSelect = ()=>{\n        var _local_onSelect;\n        (_local_onSelect = local.onSelect) === null || _local_onSelect === void 0 ? void 0 : _local_onSelect.call(local);\n        state.toggle();\n    };\n    return (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(MenuItemBase, (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.mergeProps)({\n        role: \"menuitemcheckbox\",\n        get checked () {\n            return state.isSelected();\n        },\n        onSelect\n    }, others));\n}\n_c22 = MenuCheckboxItem;\nvar MenubarContext = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createContext)();\nfunction useOptionalMenubarContext() {\n    _s30();\n    return (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.useContext)(MenubarContext);\n}\n_s30(useOptionalMenubarContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nfunction MenuContentBase(props) {\n    _s31();\n    let ref;\n    const rootContext = useMenuRootContext();\n    const context = useMenuContext();\n    const optionalMenubarContext = useOptionalMenubarContext();\n    const mergedProps = mergeDefaultProps({\n        id: rootContext.generateId(\"content-\".concat((0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createUniqueId)()))\n    }, props);\n    const [local, others] = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.splitProps)(mergedProps, [\n        \"ref\",\n        \"id\",\n        \"style\",\n        \"onOpenAutoFocus\",\n        \"onCloseAutoFocus\",\n        \"onEscapeKeyDown\",\n        \"onFocusOutside\",\n        \"onPointerEnter\",\n        \"onPointerMove\",\n        \"onKeyDown\",\n        \"onMouseDown\",\n        \"onFocusIn\",\n        \"onFocusOut\"\n    ]);\n    let lastPointerX = 0;\n    const isRootModalContent = ()=>{\n        return context.parentMenuContext() == null && optionalMenubarContext === void 0 && rootContext.isModal();\n    };\n    const selectableList = createSelectableList({\n        selectionManager: context.listState().selectionManager,\n        collection: context.listState().collection,\n        autoFocus: context.autoFocus,\n        deferAutoFocus: true,\n        // ensure all menu items are mounted and collection is not empty before trying to autofocus.\n        shouldFocusWrap: true,\n        disallowTypeAhead: ()=>!context.listState().selectionManager().isFocused()\n    }, ()=>ref);\n    createFocusScope({\n        trapFocus: ()=>isRootModalContent() && context.isOpen(),\n        onMountAutoFocus: (event)=>{\n            var _local_onOpenAutoFocus;\n            if (optionalMenubarContext === void 0) (_local_onOpenAutoFocus = local.onOpenAutoFocus) === null || _local_onOpenAutoFocus === void 0 ? void 0 : _local_onOpenAutoFocus.call(local, event);\n        },\n        onUnmountAutoFocus: local.onCloseAutoFocus\n    }, ()=>ref);\n    const onKeyDown = (e2)=>{\n        if (!contains(e2.currentTarget, e2.target)) {\n            return;\n        }\n        if (e2.key === \"Tab\" && context.isOpen()) {\n            e2.preventDefault();\n        }\n        if (optionalMenubarContext !== void 0) {\n            if (e2.currentTarget.getAttribute(\"aria-haspopup\") !== \"true\") switch(e2.key){\n                case \"ArrowRight\":\n                    e2.stopPropagation();\n                    e2.preventDefault();\n                    context.close(true);\n                    optionalMenubarContext.setAutoFocusMenu(true);\n                    optionalMenubarContext.nextMenu();\n                    break;\n                case \"ArrowLeft\":\n                    if (e2.currentTarget.hasAttribute(\"data-closed\")) break;\n                    e2.stopPropagation();\n                    e2.preventDefault();\n                    context.close(true);\n                    optionalMenubarContext.setAutoFocusMenu(true);\n                    optionalMenubarContext.previousMenu();\n                    break;\n            }\n        }\n    };\n    const onEscapeKeyDown = (e2)=>{\n        var _local_onEscapeKeyDown;\n        (_local_onEscapeKeyDown = local.onEscapeKeyDown) === null || _local_onEscapeKeyDown === void 0 ? void 0 : _local_onEscapeKeyDown.call(local, e2);\n        optionalMenubarContext === null || optionalMenubarContext === void 0 ? void 0 : optionalMenubarContext.setAutoFocusMenu(false);\n        context.close(true);\n    };\n    const onFocusOutside = (e2)=>{\n        var _local_onFocusOutside;\n        (_local_onFocusOutside = local.onFocusOutside) === null || _local_onFocusOutside === void 0 ? void 0 : _local_onFocusOutside.call(local, e2);\n        if (rootContext.isModal()) {\n            e2.preventDefault();\n        }\n    };\n    const onPointerEnter = (e2)=>{\n        var _context_parentMenuContext, _context_parentMenuContext1;\n        callHandler(e2, local.onPointerEnter);\n        if (!context.isOpen()) {\n            return;\n        }\n        (_context_parentMenuContext = context.parentMenuContext()) === null || _context_parentMenuContext === void 0 ? void 0 : _context_parentMenuContext.listState().selectionManager().setFocused(false);\n        (_context_parentMenuContext1 = context.parentMenuContext()) === null || _context_parentMenuContext1 === void 0 ? void 0 : _context_parentMenuContext1.listState().selectionManager().setFocusedKey(void 0);\n    };\n    const onPointerMove = (e2)=>{\n        callHandler(e2, local.onPointerMove);\n        if (e2.pointerType !== \"mouse\") {\n            return;\n        }\n        const target = e2.target;\n        const pointerXHasChanged = lastPointerX !== e2.clientX;\n        if (contains(e2.currentTarget, target) && pointerXHasChanged) {\n            context.setPointerDir(e2.clientX > lastPointerX ? \"right\" : \"left\");\n            lastPointerX = e2.clientX;\n        }\n    };\n    (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createEffect)(()=>(0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.onCleanup)(context.registerContentId(local.id)));\n    return (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.Show, {\n        get when () {\n            return context.contentPresence.isPresent();\n        },\n        get children () {\n            return (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(Popper.Positioner, {\n                get children () {\n                    return (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(DismissableLayer, (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.mergeProps)({\n                        ref (r$) {\n                            const _ref$ = mergeRefs((el)=>{\n                                context.setContentRef(el);\n                                context.contentPresence.setRef(el);\n                                ref = el;\n                            }, local.ref);\n                            typeof _ref$ === \"function\" && _ref$(r$);\n                        },\n                        role: \"menu\",\n                        get id () {\n                            return local.id;\n                        },\n                        get tabIndex () {\n                            return selectableList.tabIndex();\n                        },\n                        get disableOutsidePointerEvents () {\n                            return (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(()=>!!isRootModalContent())() && context.isOpen();\n                        },\n                        get excludedElements () {\n                            return [\n                                context.triggerRef\n                            ];\n                        },\n                        bypassTopMostLayerCheck: true,\n                        get style () {\n                            return {\n                                \"--kb-menu-content-transform-origin\": \"var(--kb-popper-content-transform-origin)\",\n                                position: \"relative\",\n                                ...local.style\n                            };\n                        },\n                        get [\"aria-labelledby\"] () {\n                            return context.triggerId();\n                        },\n                        onEscapeKeyDown,\n                        onFocusOutside,\n                        get onDismiss () {\n                            return context.close;\n                        },\n                        get onKeyDown () {\n                            return composeEventHandlers([\n                                local.onKeyDown,\n                                selectableList.onKeyDown,\n                                onKeyDown\n                            ]);\n                        },\n                        get onMouseDown () {\n                            return composeEventHandlers([\n                                local.onMouseDown,\n                                selectableList.onMouseDown\n                            ]);\n                        },\n                        get onFocusIn () {\n                            return composeEventHandlers([\n                                local.onFocusIn,\n                                selectableList.onFocusIn\n                            ]);\n                        },\n                        get onFocusOut () {\n                            return composeEventHandlers([\n                                local.onFocusOut,\n                                selectableList.onFocusOut\n                            ]);\n                        },\n                        onPointerEnter,\n                        onPointerMove\n                    }, ()=>context.dataset(), others));\n                }\n            });\n        }\n    });\n}\n_s31(MenuContentBase, \"tZeU081/2pJl8S3z4z0J5FRuG24=\", false, function() {\n    return [\n        useMenuRootContext,\n        useMenuContext,\n        useOptionalMenubarContext\n    ];\n});\n_c23 = MenuContentBase;\nfunction MenuContent(props) {\n    _s32();\n    let ref;\n    const rootContext = useMenuRootContext();\n    const context = useMenuContext();\n    const [local, others] = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.splitProps)(props, [\n        \"ref\"\n    ]);\n    src_default({\n        element: ()=>ref !== null && ref !== void 0 ? ref : null,\n        enabled: ()=>context.isOpen() && rootContext.preventScroll()\n    });\n    return (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(MenuContentBase, (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.mergeProps)({\n        ref (r$) {\n            const _ref$ = mergeRefs((el)=>{\n                ref = el;\n            }, local.ref);\n            typeof _ref$ === \"function\" && _ref$(r$);\n        }\n    }, others));\n}\n_s32(MenuContent, \"tz4qlGwl0Ehbw+9GFOejFuA5NQk=\", false, function() {\n    return [\n        useMenuRootContext,\n        useMenuContext\n    ];\n});\n_c24 = MenuContent;\nvar MenuGroupContext = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createContext)();\nfunction useMenuGroupContext() {\n    _s33();\n    const context = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.useContext)(MenuGroupContext);\n    if (context === void 0) {\n        throw new Error(\"[kobalte]: `useMenuGroupContext` must be used within a `Menu.Group` component\");\n    }\n    return context;\n}\n_s33(useMenuGroupContext, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nfunction MenuGroup(props) {\n    _s34();\n    const rootContext = useMenuRootContext();\n    const mergedProps = mergeDefaultProps({\n        id: rootContext.generateId(\"group-\".concat((0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createUniqueId)()))\n    }, props);\n    const [labelId, setLabelId] = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createSignal)();\n    const context = {\n        generateId: createGenerateId(()=>mergedProps.id),\n        registerLabelId: createRegisterId(setLabelId)\n    };\n    return (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(MenuGroupContext.Provider, {\n        value: context,\n        get children () {\n            return (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(Polymorphic, (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.mergeProps)({\n                as: \"div\",\n                role: \"group\",\n                get [\"aria-labelledby\"] () {\n                    return labelId();\n                }\n            }, mergedProps));\n        }\n    });\n}\n_s34(MenuGroup, \"7Qc6FRt9uV+prycXm1xbDOS8y+Y=\", false, function() {\n    return [\n        useMenuRootContext\n    ];\n});\n_c25 = MenuGroup;\nfunction MenuGroupLabel(props) {\n    _s35();\n    const context = useMenuGroupContext();\n    const mergedProps = mergeDefaultProps({\n        id: context.generateId(\"label\")\n    }, props);\n    const [local, others] = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.splitProps)(mergedProps, [\n        \"id\"\n    ]);\n    (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createEffect)(()=>(0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.onCleanup)(context.registerLabelId(local.id)));\n    return (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(Polymorphic, (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.mergeProps)({\n        as: \"span\",\n        get id () {\n            return local.id;\n        },\n        \"aria-hidden\": \"true\"\n    }, others));\n}\n_s35(MenuGroupLabel, \"p25NOyAS2DCeeBK9XrK3/WRuxBY=\", false, function() {\n    return [\n        useMenuGroupContext\n    ];\n});\n_c26 = MenuGroupLabel;\nfunction MenuIcon(props) {\n    _s36();\n    const context = useMenuContext();\n    const mergedProps = mergeDefaultProps({\n        children: \"▼\"\n    }, props);\n    return (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(Polymorphic, (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.mergeProps)({\n        as: \"span\",\n        \"aria-hidden\": \"true\"\n    }, ()=>context.dataset(), mergedProps));\n}\n_s36(MenuIcon, \"Jc8vKAvq94jPZkBJYIZO/X0jxQk=\", false, function() {\n    return [\n        useMenuContext\n    ];\n});\n_c27 = MenuIcon;\nfunction MenuItem(props) {\n    return (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(MenuItemBase, (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.mergeProps)({\n        role: \"menuitem\",\n        closeOnSelect: true\n    }, props));\n}\n_c28 = MenuItem;\nfunction MenuItemDescription(props) {\n    _s37();\n    const context = useMenuItemContext();\n    const mergedProps = mergeDefaultProps({\n        id: context.generateId(\"description\")\n    }, props);\n    const [local, others] = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.splitProps)(mergedProps, [\n        \"id\"\n    ]);\n    (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createEffect)(()=>(0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.onCleanup)(context.registerDescription(local.id)));\n    return (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(Polymorphic, (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.mergeProps)({\n        as: \"div\",\n        get id () {\n            return local.id;\n        }\n    }, ()=>context.dataset(), others));\n}\n_s37(MenuItemDescription, \"Ptxnc6sqhGRdo6qzxTP3Tu2J6EI=\", false, function() {\n    return [\n        useMenuItemContext\n    ];\n});\n_c29 = MenuItemDescription;\nfunction MenuItemIndicator(props) {\n    _s38();\n    const context = useMenuItemContext();\n    const mergedProps = mergeDefaultProps({\n        id: context.generateId(\"indicator\")\n    }, props);\n    const [local, others] = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.splitProps)(mergedProps, [\n        \"forceMount\"\n    ]);\n    return (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.Show, {\n        get when () {\n            return local.forceMount || context.isChecked();\n        },\n        get children () {\n            return (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(Polymorphic, (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.mergeProps)({\n                as: \"div\"\n            }, ()=>context.dataset(), others));\n        }\n    });\n}\n_s38(MenuItemIndicator, \"Ptxnc6sqhGRdo6qzxTP3Tu2J6EI=\", false, function() {\n    return [\n        useMenuItemContext\n    ];\n});\n_c30 = MenuItemIndicator;\nfunction MenuItemLabel(props) {\n    _s39();\n    const context = useMenuItemContext();\n    const mergedProps = mergeDefaultProps({\n        id: context.generateId(\"label\")\n    }, props);\n    const [local, others] = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.splitProps)(mergedProps, [\n        \"ref\",\n        \"id\"\n    ]);\n    (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createEffect)(()=>(0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.onCleanup)(context.registerLabel(local.id)));\n    return (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(Polymorphic, (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.mergeProps)({\n        as: \"div\",\n        ref (r$) {\n            const _ref$ = mergeRefs(context.setLabelRef, local.ref);\n            typeof _ref$ === \"function\" && _ref$(r$);\n        },\n        get id () {\n            return local.id;\n        }\n    }, ()=>context.dataset(), others));\n}\n_s39(MenuItemLabel, \"Ptxnc6sqhGRdo6qzxTP3Tu2J6EI=\", false, function() {\n    return [\n        useMenuItemContext\n    ];\n});\n_c31 = MenuItemLabel;\nfunction MenuPortal(props) {\n    _s40();\n    const context = useMenuContext();\n    return (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.Show, {\n        get when () {\n            return context.contentPresence.isPresent();\n        },\n        get children () {\n            return (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.Portal, props);\n        }\n    });\n}\n_s40(MenuPortal, \"Jc8vKAvq94jPZkBJYIZO/X0jxQk=\", false, function() {\n    return [\n        useMenuContext\n    ];\n});\n_c32 = MenuPortal;\nvar MenuRadioGroupContext = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createContext)();\nfunction useMenuRadioGroupContext() {\n    _s41();\n    const context = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.useContext)(MenuRadioGroupContext);\n    if (context === void 0) {\n        throw new Error(\"[kobalte]: `useMenuRadioGroupContext` must be used within a `Menu.RadioGroup` component\");\n    }\n    return context;\n}\n_s41(useMenuRadioGroupContext, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nfunction MenuRadioGroup(props) {\n    _s42();\n    const rootContext = useMenuRootContext();\n    const defaultId = rootContext.generateId(\"radiogroup-\".concat((0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createUniqueId)()));\n    const mergedProps = mergeDefaultProps({\n        id: defaultId\n    }, props);\n    const [local, others] = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.splitProps)(mergedProps, [\n        \"value\",\n        \"defaultValue\",\n        \"onChange\",\n        \"disabled\"\n    ]);\n    const [selected, setSelected] = createControllableSignal({\n        value: ()=>local.value,\n        defaultValue: ()=>local.defaultValue,\n        onChange: (value)=>{\n            var _local_onChange;\n            return (_local_onChange = local.onChange) === null || _local_onChange === void 0 ? void 0 : _local_onChange.call(local, value);\n        }\n    });\n    const context = {\n        isDisabled: ()=>local.disabled,\n        isSelectedValue: (value)=>value === selected(),\n        setSelectedValue: setSelected\n    };\n    return (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(MenuRadioGroupContext.Provider, {\n        value: context,\n        get children () {\n            return (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(MenuGroup, others);\n        }\n    });\n}\n_s42(MenuRadioGroup, \"7Qc6FRt9uV+prycXm1xbDOS8y+Y=\", false, function() {\n    return [\n        useMenuRootContext\n    ];\n});\n_c33 = MenuRadioGroup;\nfunction MenuRadioItem(props) {\n    _s43();\n    const context = useMenuRadioGroupContext();\n    const mergedProps = mergeDefaultProps({\n        closeOnSelect: false\n    }, props);\n    const [local, others] = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.splitProps)(mergedProps, [\n        \"value\",\n        \"onSelect\"\n    ]);\n    const onSelect = ()=>{\n        var _local_onSelect;\n        (_local_onSelect = local.onSelect) === null || _local_onSelect === void 0 ? void 0 : _local_onSelect.call(local);\n        context.setSelectedValue(local.value);\n    };\n    return (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(MenuItemBase, (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.mergeProps)({\n        role: \"menuitemradio\",\n        get checked () {\n            return context.isSelectedValue(local.value);\n        },\n        onSelect\n    }, others));\n}\n_s43(MenuRadioItem, \"8PKtRvZu032ocBEzoMI3bvq5f2k=\", false, function() {\n    return [\n        useMenuRadioGroupContext\n    ];\n});\n_c34 = MenuRadioItem;\nfunction getPointerGraceArea(placement, event, contentEl) {\n    const basePlacement = placement.split(\"-\")[0];\n    const contentRect = contentEl.getBoundingClientRect();\n    const polygon = [];\n    const pointerX = event.clientX;\n    const pointerY = event.clientY;\n    switch(basePlacement){\n        case \"top\":\n            polygon.push([\n                pointerX,\n                pointerY + 5\n            ]);\n            polygon.push([\n                contentRect.left,\n                contentRect.bottom\n            ]);\n            polygon.push([\n                contentRect.left,\n                contentRect.top\n            ]);\n            polygon.push([\n                contentRect.right,\n                contentRect.top\n            ]);\n            polygon.push([\n                contentRect.right,\n                contentRect.bottom\n            ]);\n            break;\n        case \"right\":\n            polygon.push([\n                pointerX - 5,\n                pointerY\n            ]);\n            polygon.push([\n                contentRect.left,\n                contentRect.top\n            ]);\n            polygon.push([\n                contentRect.right,\n                contentRect.top\n            ]);\n            polygon.push([\n                contentRect.right,\n                contentRect.bottom\n            ]);\n            polygon.push([\n                contentRect.left,\n                contentRect.bottom\n            ]);\n            break;\n        case \"bottom\":\n            polygon.push([\n                pointerX,\n                pointerY - 5\n            ]);\n            polygon.push([\n                contentRect.right,\n                contentRect.top\n            ]);\n            polygon.push([\n                contentRect.right,\n                contentRect.bottom\n            ]);\n            polygon.push([\n                contentRect.left,\n                contentRect.bottom\n            ]);\n            polygon.push([\n                contentRect.left,\n                contentRect.top\n            ]);\n            break;\n        case \"left\":\n            polygon.push([\n                pointerX + 5,\n                pointerY\n            ]);\n            polygon.push([\n                contentRect.right,\n                contentRect.bottom\n            ]);\n            polygon.push([\n                contentRect.left,\n                contentRect.bottom\n            ]);\n            polygon.push([\n                contentRect.left,\n                contentRect.top\n            ]);\n            polygon.push([\n                contentRect.right,\n                contentRect.top\n            ]);\n            break;\n    }\n    return polygon;\n}\nfunction isPointerInGraceArea(event, area) {\n    if (!area) {\n        return false;\n    }\n    return isPointInPolygon([\n        event.clientX,\n        event.clientY\n    ], area);\n}\nfunction Menu(props) {\n    _s44();\n    const rootContext = useMenuRootContext();\n    const parentDomCollectionContext = useOptionalDomCollectionContext();\n    const parentMenuContext = useOptionalMenuContext();\n    const mergedProps = mergeDefaultProps({\n        placement: \"bottom-start\"\n    }, props);\n    const [local, others] = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.splitProps)(mergedProps, [\n        \"open\",\n        \"defaultOpen\",\n        \"onOpenChange\"\n    ]);\n    let pointerGraceTimeoutId = 0;\n    let pointerGraceIntent = null;\n    let pointerDir = \"right\";\n    const [triggerId, setTriggerId] = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createSignal)();\n    const [contentId, setContentId] = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createSignal)();\n    const [triggerRef, setTriggerRef] = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createSignal)();\n    const [contentRef, setContentRef] = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createSignal)();\n    const [focusStrategy, setFocusStrategy] = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createSignal)(true);\n    const [currentPlacement, setCurrentPlacement] = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createSignal)(others.placement);\n    const [nestedMenus, setNestedMenus] = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createSignal)([]);\n    const [items, setItems] = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createSignal)([]);\n    const { DomCollectionProvider } = createDomCollection({\n        items,\n        onItemsChange: setItems\n    });\n    const disclosureState = createDisclosureState({\n        open: ()=>local.open,\n        defaultOpen: ()=>local.defaultOpen,\n        onOpenChange: (isOpen)=>{\n            var _local_onOpenChange;\n            return (_local_onOpenChange = local.onOpenChange) === null || _local_onOpenChange === void 0 ? void 0 : _local_onOpenChange.call(local, isOpen);\n        }\n    });\n    const contentPresence = createPresence(()=>rootContext.forceMount() || disclosureState.isOpen());\n    const listState = createListState({\n        selectionMode: \"none\",\n        dataSource: items\n    });\n    const open = (focusStrategy2)=>{\n        setFocusStrategy(focusStrategy2);\n        disclosureState.open();\n    };\n    const close = function() {\n        let recursively = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : false;\n        disclosureState.close();\n        if (recursively && parentMenuContext) {\n            parentMenuContext.close(true);\n        }\n    };\n    const toggle = (focusStrategy2)=>{\n        setFocusStrategy(focusStrategy2);\n        disclosureState.toggle();\n    };\n    const focusContent = ()=>{\n        const content = contentRef();\n        if (content) {\n            focusWithoutScrolling(content);\n            listState.selectionManager().setFocused(true);\n            listState.selectionManager().setFocusedKey(void 0);\n        }\n    };\n    const registerNestedMenu = (element)=>{\n        setNestedMenus((prev)=>[\n                ...prev,\n                element\n            ]);\n        const parentUnregister = parentMenuContext === null || parentMenuContext === void 0 ? void 0 : parentMenuContext.registerNestedMenu(element);\n        return ()=>{\n            setNestedMenus((prev)=>removeItemFromArray(prev, element));\n            parentUnregister === null || parentUnregister === void 0 ? void 0 : parentUnregister();\n        };\n    };\n    const isPointerMovingToSubmenu = (e2)=>{\n        const isMovingTowards = pointerDir === (pointerGraceIntent === null || pointerGraceIntent === void 0 ? void 0 : pointerGraceIntent.side);\n        return isMovingTowards && isPointerInGraceArea(e2, pointerGraceIntent === null || pointerGraceIntent === void 0 ? void 0 : pointerGraceIntent.area);\n    };\n    const onItemEnter = (e2)=>{\n        if (isPointerMovingToSubmenu(e2)) {\n            e2.preventDefault();\n        }\n    };\n    const onItemLeave = (e2)=>{\n        if (isPointerMovingToSubmenu(e2)) {\n            return;\n        }\n        focusContent();\n    };\n    const onTriggerLeave = (e2)=>{\n        if (isPointerMovingToSubmenu(e2)) {\n            e2.preventDefault();\n        }\n    };\n    createHideOutside({\n        isDisabled: ()=>{\n            return !(parentMenuContext == null && disclosureState.isOpen() && rootContext.isModal());\n        },\n        targets: ()=>[\n                contentRef(),\n                ...nestedMenus()\n            ].filter(Boolean)\n    });\n    (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createEffect)(()=>{\n        const contentEl = contentRef();\n        if (!contentEl || !parentMenuContext) {\n            return;\n        }\n        const parentUnregister = parentMenuContext.registerNestedMenu(contentEl);\n        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.onCleanup)(()=>{\n            parentUnregister();\n        });\n    });\n    const dataset = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(()=>({\n            \"data-expanded\": disclosureState.isOpen() ? \"\" : void 0,\n            \"data-closed\": !disclosureState.isOpen() ? \"\" : void 0\n        }));\n    const context = {\n        dataset,\n        isOpen: disclosureState.isOpen,\n        contentPresence,\n        nestedMenus,\n        currentPlacement,\n        pointerGraceTimeoutId: ()=>pointerGraceTimeoutId,\n        autoFocus: focusStrategy,\n        listState: ()=>listState,\n        parentMenuContext: ()=>parentMenuContext,\n        triggerRef,\n        contentRef,\n        triggerId,\n        contentId,\n        setTriggerRef,\n        setContentRef,\n        open,\n        close,\n        toggle,\n        focusContent,\n        onItemEnter,\n        onItemLeave,\n        onTriggerLeave,\n        setPointerDir: (dir)=>pointerDir = dir,\n        setPointerGraceTimeoutId: (id)=>pointerGraceTimeoutId = id,\n        setPointerGraceIntent: (intent)=>pointerGraceIntent = intent,\n        registerNestedMenu,\n        registerItemToParentDomCollection: parentDomCollectionContext === null || parentDomCollectionContext === void 0 ? void 0 : parentDomCollectionContext.registerItem,\n        registerTriggerId: createRegisterId(setTriggerId),\n        registerContentId: createRegisterId(setContentId)\n    };\n    return (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(DomCollectionProvider, {\n        get children () {\n            return (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(MenuContext.Provider, {\n                value: context,\n                get children () {\n                    return (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(Popper, (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.mergeProps)({\n                        anchorRef: triggerRef,\n                        contentRef,\n                        onCurrentPlacementChange: setCurrentPlacement\n                    }, others));\n                }\n            });\n        }\n    });\n}\n_s44(Menu, \"8kmHeTlacwYsovhaGx+N+rMwETw=\", false, function() {\n    return [\n        useMenuRootContext,\n        useOptionalDomCollectionContext,\n        useOptionalMenuContext\n    ];\n});\n_c35 = Menu;\nfunction MenuSub(props) {\n    _s45();\n    const { direction } = useLocale();\n    return (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(Menu, (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.mergeProps)({\n        get placement () {\n            return direction() === \"rtl\" ? \"left-start\" : \"right-start\";\n        },\n        flip: true\n    }, props));\n}\n_s45(MenuSub, \"wF7kuazRv875Ci8MQbx5obOHKLY=\", false, function() {\n    return [\n        useLocale\n    ];\n});\n_c36 = MenuSub;\nvar SUB_CLOSE_KEYS = {\n    ltr: [\n        \"ArrowLeft\"\n    ],\n    rtl: [\n        \"ArrowRight\"\n    ]\n};\nfunction MenuSubContent(props) {\n    _s46();\n    const context = useMenuContext();\n    const [local, others] = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.splitProps)(props, [\n        \"onFocusOutside\",\n        \"onKeyDown\"\n    ]);\n    const { direction } = useLocale();\n    const onOpenAutoFocus = (e2)=>{\n        e2.preventDefault();\n    };\n    const onCloseAutoFocus = (e2)=>{\n        e2.preventDefault();\n    };\n    const onFocusOutside = (e2)=>{\n        var _local_onFocusOutside;\n        (_local_onFocusOutside = local.onFocusOutside) === null || _local_onFocusOutside === void 0 ? void 0 : _local_onFocusOutside.call(local, e2);\n        const target = e2.target;\n        if (!contains(context.triggerRef(), target)) {\n            context.close();\n        }\n    };\n    const onKeyDown = (e2)=>{\n        callHandler(e2, local.onKeyDown);\n        const isKeyDownInside = contains(e2.currentTarget, e2.target);\n        const isCloseKey = SUB_CLOSE_KEYS[direction()].includes(e2.key);\n        const isSubMenu = context.parentMenuContext() != null;\n        if (isKeyDownInside && isCloseKey && isSubMenu) {\n            context.close();\n            focusWithoutScrolling(context.triggerRef());\n        }\n    };\n    return (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(MenuContentBase, (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.mergeProps)({\n        onOpenAutoFocus,\n        onCloseAutoFocus,\n        onFocusOutside,\n        onKeyDown\n    }, others));\n}\n_s46(MenuSubContent, \"haclY+wDwf1g0geeEoFnjEGuaaE=\", false, function() {\n    return [\n        useMenuContext,\n        useLocale\n    ];\n});\n_c37 = MenuSubContent;\nvar SELECTION_KEYS = [\n    \"Enter\",\n    \" \"\n];\nvar SUB_OPEN_KEYS = {\n    ltr: [\n        ...SELECTION_KEYS,\n        \"ArrowRight\"\n    ],\n    rtl: [\n        ...SELECTION_KEYS,\n        \"ArrowLeft\"\n    ]\n};\nfunction MenuSubTrigger(props) {\n    _s47();\n    let ref;\n    const rootContext = useMenuRootContext();\n    const context = useMenuContext();\n    const mergedProps = mergeDefaultProps({\n        id: rootContext.generateId(\"sub-trigger-\".concat((0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createUniqueId)()))\n    }, props);\n    const [local, others] = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.splitProps)(mergedProps, [\n        \"ref\",\n        \"id\",\n        \"textValue\",\n        \"disabled\",\n        \"onPointerMove\",\n        \"onPointerLeave\",\n        \"onPointerDown\",\n        \"onPointerUp\",\n        \"onClick\",\n        \"onKeyDown\",\n        \"onMouseDown\",\n        \"onFocus\"\n    ]);\n    let openTimeoutId = null;\n    const clearOpenTimeout = ()=>{\n        if (_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.isServer) {\n            return;\n        }\n        if (openTimeoutId) {\n            window.clearTimeout(openTimeoutId);\n        }\n        openTimeoutId = null;\n    };\n    const { direction } = useLocale();\n    const key = ()=>local.id;\n    const parentSelectionManager = ()=>{\n        const parentMenuContext = context.parentMenuContext();\n        if (parentMenuContext == null) {\n            throw new Error(\"[kobalte]: `Menu.SubTrigger` must be used within a `Menu.Sub` component\");\n        }\n        return parentMenuContext.listState().selectionManager();\n    };\n    const collection = ()=>context.listState().collection();\n    const isHighlighted = ()=>parentSelectionManager().focusedKey() === key();\n    const selectableItem = createSelectableItem({\n        key,\n        selectionManager: parentSelectionManager,\n        shouldSelectOnPressUp: true,\n        allowsDifferentPressOrigin: true,\n        disabled: ()=>local.disabled\n    }, ()=>ref);\n    const onClick = (e2)=>{\n        callHandler(e2, local.onClick);\n        if (!context.isOpen() && !local.disabled) {\n            context.open(true);\n        }\n    };\n    const onPointerMove = (e2)=>{\n        callHandler(e2, local.onPointerMove);\n        if (e2.pointerType !== \"mouse\") {\n            return;\n        }\n        const parentMenuContext = context.parentMenuContext();\n        parentMenuContext === null || parentMenuContext === void 0 ? void 0 : parentMenuContext.onItemEnter(e2);\n        if (e2.defaultPrevented) {\n            return;\n        }\n        if (local.disabled) {\n            parentMenuContext === null || parentMenuContext === void 0 ? void 0 : parentMenuContext.onItemLeave(e2);\n            return;\n        }\n        if (!context.isOpen() && !openTimeoutId) {\n            var _context_parentMenuContext;\n            (_context_parentMenuContext = context.parentMenuContext()) === null || _context_parentMenuContext === void 0 ? void 0 : _context_parentMenuContext.setPointerGraceIntent(null);\n            openTimeoutId = window.setTimeout(()=>{\n                context.open(false);\n                clearOpenTimeout();\n            }, 100);\n        }\n        parentMenuContext === null || parentMenuContext === void 0 ? void 0 : parentMenuContext.onItemEnter(e2);\n        if (!e2.defaultPrevented) {\n            if (context.listState().selectionManager().isFocused()) {\n                context.listState().selectionManager().setFocused(false);\n                context.listState().selectionManager().setFocusedKey(void 0);\n            }\n            focusWithoutScrolling(e2.currentTarget);\n            parentMenuContext === null || parentMenuContext === void 0 ? void 0 : parentMenuContext.listState().selectionManager().setFocused(true);\n            parentMenuContext === null || parentMenuContext === void 0 ? void 0 : parentMenuContext.listState().selectionManager().setFocusedKey(key());\n        }\n    };\n    const onPointerLeave = (e2)=>{\n        callHandler(e2, local.onPointerLeave);\n        if (e2.pointerType !== \"mouse\") {\n            return;\n        }\n        clearOpenTimeout();\n        const parentMenuContext = context.parentMenuContext();\n        const contentEl = context.contentRef();\n        if (contentEl) {\n            parentMenuContext === null || parentMenuContext === void 0 ? void 0 : parentMenuContext.setPointerGraceIntent({\n                area: getPointerGraceArea(context.currentPlacement(), e2, contentEl),\n                // Safe because sub menu always open \"left\" or \"right\".\n                side: context.currentPlacement().split(\"-\")[0]\n            });\n            window.clearTimeout(parentMenuContext === null || parentMenuContext === void 0 ? void 0 : parentMenuContext.pointerGraceTimeoutId());\n            const pointerGraceTimeoutId = window.setTimeout(()=>{\n                parentMenuContext === null || parentMenuContext === void 0 ? void 0 : parentMenuContext.setPointerGraceIntent(null);\n            }, 300);\n            parentMenuContext === null || parentMenuContext === void 0 ? void 0 : parentMenuContext.setPointerGraceTimeoutId(pointerGraceTimeoutId);\n        } else {\n            parentMenuContext === null || parentMenuContext === void 0 ? void 0 : parentMenuContext.onTriggerLeave(e2);\n            if (e2.defaultPrevented) {\n                return;\n            }\n            parentMenuContext === null || parentMenuContext === void 0 ? void 0 : parentMenuContext.setPointerGraceIntent(null);\n        }\n        parentMenuContext === null || parentMenuContext === void 0 ? void 0 : parentMenuContext.onItemLeave(e2);\n    };\n    const onKeyDown = (e2)=>{\n        callHandler(e2, local.onKeyDown);\n        if (e2.repeat) {\n            return;\n        }\n        if (local.disabled) {\n            return;\n        }\n        if (SUB_OPEN_KEYS[direction()].includes(e2.key)) {\n            e2.stopPropagation();\n            e2.preventDefault();\n            parentSelectionManager().setFocused(false);\n            parentSelectionManager().setFocusedKey(void 0);\n            if (!context.isOpen()) {\n                context.open(\"first\");\n            }\n            context.focusContent();\n            context.listState().selectionManager().setFocused(true);\n            context.listState().selectionManager().setFocusedKey(collection().getFirstKey());\n        }\n    };\n    (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createEffect)(()=>{\n        if (context.registerItemToParentDomCollection == null) {\n            throw new Error(\"[kobalte]: `Menu.SubTrigger` must be used within a `Menu.Sub` component\");\n        }\n        var _local_textValue, _ref, _local_disabled;\n        const unregister = context.registerItemToParentDomCollection({\n            ref: ()=>ref,\n            type: \"item\",\n            key: key(),\n            textValue: (_ref = (_local_textValue = local.textValue) !== null && _local_textValue !== void 0 ? _local_textValue : ref === null || ref === void 0 ? void 0 : ref.textContent) !== null && _ref !== void 0 ? _ref : \"\",\n            disabled: (_local_disabled = local.disabled) !== null && _local_disabled !== void 0 ? _local_disabled : false\n        });\n        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.onCleanup)(unregister);\n    });\n    (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createEffect)((0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.on)(()=>{\n        var _context_parentMenuContext;\n        return (_context_parentMenuContext = context.parentMenuContext()) === null || _context_parentMenuContext === void 0 ? void 0 : _context_parentMenuContext.pointerGraceTimeoutId();\n    }, (pointerGraceTimer)=>{\n        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.onCleanup)(()=>{\n            var _context_parentMenuContext;\n            window.clearTimeout(pointerGraceTimer);\n            (_context_parentMenuContext = context.parentMenuContext()) === null || _context_parentMenuContext === void 0 ? void 0 : _context_parentMenuContext.setPointerGraceIntent(null);\n        });\n    }));\n    (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createEffect)(()=>(0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.onCleanup)(context.registerTriggerId(local.id)));\n    (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.onCleanup)(()=>{\n        clearOpenTimeout();\n    });\n    return (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(Polymorphic, (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.mergeProps)({\n        as: \"div\",\n        ref (r$) {\n            const _ref$ = mergeRefs((el)=>{\n                context.setTriggerRef(el);\n                ref = el;\n            }, local.ref);\n            typeof _ref$ === \"function\" && _ref$(r$);\n        },\n        get id () {\n            return local.id;\n        },\n        role: \"menuitem\",\n        get tabIndex () {\n            return selectableItem.tabIndex();\n        },\n        \"aria-haspopup\": \"true\",\n        get [\"aria-expanded\"] () {\n            return context.isOpen();\n        },\n        get [\"aria-controls\"] () {\n            return (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(()=>!!context.isOpen())() ? context.contentId() : void 0;\n        },\n        get [\"aria-disabled\"] () {\n            return local.disabled;\n        },\n        get [\"data-key\"] () {\n            return selectableItem.dataKey();\n        },\n        get [\"data-highlighted\"] () {\n            return isHighlighted() ? \"\" : void 0;\n        },\n        get [\"data-disabled\"] () {\n            return local.disabled ? \"\" : void 0;\n        },\n        get onPointerDown () {\n            return composeEventHandlers([\n                local.onPointerDown,\n                selectableItem.onPointerDown\n            ]);\n        },\n        get onPointerUp () {\n            return composeEventHandlers([\n                local.onPointerUp,\n                selectableItem.onPointerUp\n            ]);\n        },\n        get onClick () {\n            return composeEventHandlers([\n                onClick,\n                selectableItem.onClick\n            ]);\n        },\n        get onKeyDown () {\n            return composeEventHandlers([\n                onKeyDown,\n                selectableItem.onKeyDown\n            ]);\n        },\n        get onMouseDown () {\n            return composeEventHandlers([\n                local.onMouseDown,\n                selectableItem.onMouseDown\n            ]);\n        },\n        get onFocus () {\n            return composeEventHandlers([\n                local.onFocus,\n                selectableItem.onFocus\n            ]);\n        },\n        onPointerMove,\n        onPointerLeave\n    }, ()=>context.dataset(), others));\n}\n_s47(MenuSubTrigger, \"MnUJzH6UO8p2hOOdTh2qZwinKsQ=\", false, function() {\n    return [\n        useMenuRootContext,\n        useMenuContext,\n        useLocale\n    ];\n});\n_c38 = MenuSubTrigger;\nfunction MenuRoot(props) {\n    const defaultId = \"menu-\".concat((0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createUniqueId)());\n    const mergedProps = mergeDefaultProps({\n        id: defaultId,\n        modal: true\n    }, props);\n    const [local, others] = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.splitProps)(mergedProps, [\n        \"id\",\n        \"modal\",\n        \"preventScroll\",\n        \"forceMount\",\n        \"open\",\n        \"defaultOpen\",\n        \"onOpenChange\",\n        \"value\"\n    ]);\n    const disclosureState = createDisclosureState({\n        open: ()=>local.open,\n        defaultOpen: ()=>local.defaultOpen,\n        onOpenChange: (isOpen)=>{\n            var _local_onOpenChange;\n            return (_local_onOpenChange = local.onOpenChange) === null || _local_onOpenChange === void 0 ? void 0 : _local_onOpenChange.call(local, isOpen);\n        }\n    });\n    const context = {\n        isModal: ()=>{\n            var _local_modal;\n            return (_local_modal = local.modal) !== null && _local_modal !== void 0 ? _local_modal : true;\n        },\n        preventScroll: ()=>{\n            var _local_preventScroll;\n            return (_local_preventScroll = local.preventScroll) !== null && _local_preventScroll !== void 0 ? _local_preventScroll : context.isModal();\n        },\n        forceMount: ()=>{\n            var _local_forceMount;\n            return (_local_forceMount = local.forceMount) !== null && _local_forceMount !== void 0 ? _local_forceMount : false;\n        },\n        generateId: createGenerateId(()=>local.id),\n        value: ()=>local.value\n    };\n    return (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(MenuRootContext.Provider, {\n        value: context,\n        get children () {\n            return (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(Menu, (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.mergeProps)({\n                get open () {\n                    return disclosureState.isOpen();\n                },\n                get onOpenChange () {\n                    return disclosureState.setIsOpen;\n                }\n            }, others));\n        }\n    });\n}\n_c39 = MenuRoot;\n// ../../node_modules/.pnpm/@kobalte+core@0.13.1_solid-js@1.8.17/node_modules/@kobalte/core/dist/chunk/7X66VFHP.js\nfunction MenuTrigger(props) {\n    _s48();\n    const rootContext = useMenuRootContext();\n    const context = useMenuContext();\n    const optionalMenubarContext = useOptionalMenubarContext();\n    const mergedProps = mergeDefaultProps({\n        id: rootContext.generateId(\"trigger\")\n    }, props);\n    const [local, others] = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.splitProps)(mergedProps, [\n        \"ref\",\n        \"id\",\n        \"disabled\",\n        \"onPointerDown\",\n        \"onClick\",\n        \"onKeyDown\",\n        \"onMouseOver\",\n        \"onFocus\"\n    ]);\n    let key;\n    if (optionalMenubarContext !== void 0) {\n        var _rootContext_value;\n        key = (_rootContext_value = rootContext.value()) !== null && _rootContext_value !== void 0 ? _rootContext_value : local.id;\n        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createEffect)(()=>{\n            optionalMenubarContext.registerMenu(key, [\n                context.contentRef(),\n                ...context.nestedMenus()\n            ]);\n        });\n        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createEffect)(()=>{\n            if (optionalMenubarContext.value() === key) {\n                var _context_triggerRef;\n                (_context_triggerRef = context.triggerRef()) === null || _context_triggerRef === void 0 ? void 0 : _context_triggerRef.focus();\n                if (optionalMenubarContext.autoFocusMenu()) context.open(true);\n            } else context.close(true);\n        });\n        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createEffect)(()=>{\n            if (context.isOpen()) optionalMenubarContext.setValue(key);\n        });\n        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.onCleanup)(()=>{\n            optionalMenubarContext.unregisterMenu(key);\n        });\n        if (optionalMenubarContext.lastValue() === void 0) optionalMenubarContext.setLastValue(key);\n    }\n    const tagName = createTagName(()=>context.triggerRef(), ()=>\"button\");\n    const isNativeLink = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(()=>{\n        var _context_triggerRef;\n        return tagName() === \"a\" && ((_context_triggerRef = context.triggerRef()) === null || _context_triggerRef === void 0 ? void 0 : _context_triggerRef.getAttribute(\"href\")) != null;\n    });\n    const handleClick = ()=>{\n        optionalMenubarContext === null || optionalMenubarContext === void 0 ? void 0 : optionalMenubarContext.setAutoFocusMenu(true);\n        if (optionalMenubarContext !== void 0) context.toggle(false);\n        else context.toggle(true);\n        if (optionalMenubarContext !== void 0 && !context.isOpen() && optionalMenubarContext.value() === key) {\n            optionalMenubarContext.closeMenu();\n        }\n    };\n    const onPointerDown = (e2)=>{\n        callHandler(e2, local.onPointerDown);\n        e2.currentTarget.dataset.pointerType = e2.pointerType;\n        if (!local.disabled && e2.pointerType !== \"touch\" && e2.button === 0) {\n            handleClick();\n        }\n    };\n    const onClick = (e2)=>{\n        callHandler(e2, local.onClick);\n        if (!local.disabled) {\n            if (e2.currentTarget.dataset.pointerType === \"touch\") handleClick();\n        }\n    };\n    const onKeyDown = (e2)=>{\n        callHandler(e2, local.onKeyDown);\n        if (local.disabled) {\n            return;\n        }\n        if (isNativeLink()) {\n            switch(e2.key){\n                case \"Enter\":\n                case \" \":\n                    return;\n            }\n        }\n        switch(e2.key){\n            case \"Enter\":\n            case \" \":\n            case \"ArrowDown\":\n                e2.stopPropagation();\n                e2.preventDefault();\n                scrollIntoViewport(e2.currentTarget);\n                context.toggle(\"first\");\n                break;\n            case \"ArrowUp\":\n                e2.stopPropagation();\n                e2.preventDefault();\n                context.toggle(\"last\");\n                break;\n            case \"ArrowRight\":\n                if (optionalMenubarContext === void 0) break;\n                e2.stopPropagation();\n                e2.preventDefault();\n                optionalMenubarContext.nextMenu();\n                break;\n            case \"ArrowLeft\":\n                if (optionalMenubarContext === void 0) break;\n                e2.stopPropagation();\n                e2.preventDefault();\n                optionalMenubarContext.previousMenu();\n                break;\n        }\n    };\n    const onMouseOver = (e2)=>{\n        callHandler(e2, local.onMouseOver);\n        if (!local.disabled && optionalMenubarContext !== void 0 && optionalMenubarContext.value() !== void 0) {\n            optionalMenubarContext.setValue(key);\n        }\n    };\n    const onFocus = (e2)=>{\n        callHandler(e2, local.onFocus);\n        if (optionalMenubarContext !== void 0) optionalMenubarContext.setValue(key);\n    };\n    (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createEffect)(()=>(0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.onCleanup)(context.registerTriggerId(local.id)));\n    return (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(ButtonRoot, (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.mergeProps)({\n        ref (r$) {\n            const _ref$ = mergeRefs(context.setTriggerRef, local.ref);\n            typeof _ref$ === \"function\" && _ref$(r$);\n        },\n        get id () {\n            return local.id;\n        },\n        get disabled () {\n            return local.disabled;\n        },\n        \"aria-haspopup\": \"true\",\n        get [\"aria-expanded\"] () {\n            return context.isOpen();\n        },\n        get [\"aria-controls\"] () {\n            return (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(()=>!!context.isOpen())() ? context.contentId() : void 0;\n        },\n        get [\"data-highlighted\"] () {\n            return key !== void 0 && (optionalMenubarContext === null || optionalMenubarContext === void 0 ? void 0 : optionalMenubarContext.value()) === key ? true : void 0;\n        },\n        get tabIndex () {\n            return optionalMenubarContext !== void 0 ? optionalMenubarContext.value() === key || optionalMenubarContext.lastValue() === key ? 0 : -1 : void 0;\n        },\n        onPointerDown,\n        onMouseOver,\n        onClick,\n        onKeyDown,\n        onFocus,\n        role: optionalMenubarContext !== void 0 ? \"menuitem\" : void 0\n    }, ()=>context.dataset(), others));\n}\n_s48(MenuTrigger, \"tZeU081/2pJl8S3z4z0J5FRuG24=\", false, function() {\n    return [\n        useMenuRootContext,\n        useMenuContext,\n        useOptionalMenubarContext\n    ];\n});\n_c40 = MenuTrigger;\n// ../../node_modules/.pnpm/@kobalte+core@0.13.1_solid-js@1.8.17/node_modules/@kobalte/core/dist/chunk/QXPEHVJD.js\nvar separator_exports = {};\n__export(separator_exports, {\n    Root: ()=>SeparatorRoot,\n    Separator: ()=>Separator\n});\nfunction SeparatorRoot(props) {\n    let ref;\n    const mergedProps = mergeDefaultProps({\n        orientation: \"horizontal\"\n    }, props);\n    const [local, others] = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.splitProps)(mergedProps, [\n        \"ref\",\n        \"orientation\"\n    ]);\n    const tagName = createTagName(()=>ref, ()=>\"hr\");\n    return (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(Polymorphic, (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.mergeProps)({\n        as: \"hr\",\n        ref (r$) {\n            const _ref$ = mergeRefs((el)=>ref = el, local.ref);\n            typeof _ref$ === \"function\" && _ref$(r$);\n        },\n        get role () {\n            return tagName() !== \"hr\" ? \"separator\" : void 0;\n        },\n        get [\"aria-orientation\"] () {\n            return local.orientation === \"vertical\" ? \"vertical\" : void 0;\n        },\n        get [\"data-orientation\"] () {\n            return local.orientation;\n        }\n    }, others));\n}\n_c41 = SeparatorRoot;\nvar Separator = SeparatorRoot;\n// ../../node_modules/.pnpm/@kobalte+core@0.13.1_solid-js@1.8.17/node_modules/@kobalte/core/dist/chunk/JTYXMUDU.js\nvar dropdown_menu_exports = {};\n__export(dropdown_menu_exports, {\n    Arrow: ()=>PopperArrow,\n    CheckboxItem: ()=>MenuCheckboxItem,\n    Content: ()=>DropdownMenuContent,\n    DropdownMenu: ()=>DropdownMenu,\n    Group: ()=>MenuGroup,\n    GroupLabel: ()=>MenuGroupLabel,\n    Icon: ()=>MenuIcon,\n    Item: ()=>MenuItem,\n    ItemDescription: ()=>MenuItemDescription,\n    ItemIndicator: ()=>MenuItemIndicator,\n    ItemLabel: ()=>MenuItemLabel,\n    Portal: ()=>MenuPortal,\n    RadioGroup: ()=>MenuRadioGroup,\n    RadioItem: ()=>MenuRadioItem,\n    Root: ()=>DropdownMenuRoot,\n    Separator: ()=>SeparatorRoot,\n    Sub: ()=>MenuSub,\n    SubContent: ()=>MenuSubContent,\n    SubTrigger: ()=>MenuSubTrigger,\n    Trigger: ()=>MenuTrigger\n});\nfunction DropdownMenuContent(props) {\n    _s49();\n    const rootContext = useMenuRootContext();\n    const context = useMenuContext();\n    const [local, others] = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.splitProps)(props, [\n        \"onCloseAutoFocus\",\n        \"onInteractOutside\"\n    ]);\n    let hasInteractedOutside = false;\n    const onCloseAutoFocus = (e2)=>{\n        var _local_onCloseAutoFocus;\n        (_local_onCloseAutoFocus = local.onCloseAutoFocus) === null || _local_onCloseAutoFocus === void 0 ? void 0 : _local_onCloseAutoFocus.call(local, e2);\n        if (!hasInteractedOutside) {\n            focusWithoutScrolling(context.triggerRef());\n        }\n        hasInteractedOutside = false;\n        e2.preventDefault();\n    };\n    const onInteractOutside = (e2)=>{\n        var _local_onInteractOutside;\n        (_local_onInteractOutside = local.onInteractOutside) === null || _local_onInteractOutside === void 0 ? void 0 : _local_onInteractOutside.call(local, e2);\n        if (!rootContext.isModal() || e2.detail.isContextMenu) {\n            hasInteractedOutside = true;\n        }\n    };\n    return (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(MenuContent, (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.mergeProps)({\n        onCloseAutoFocus,\n        onInteractOutside\n    }, others));\n}\n_s49(DropdownMenuContent, \"tz4qlGwl0Ehbw+9GFOejFuA5NQk=\", false, function() {\n    return [\n        useMenuRootContext,\n        useMenuContext\n    ];\n});\n_c42 = DropdownMenuContent;\nfunction DropdownMenuRoot(props) {\n    const defaultId = \"dropdownmenu-\".concat((0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createUniqueId)());\n    const mergedProps = mergeDefaultProps({\n        id: defaultId\n    }, props);\n    return (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(MenuRoot, mergedProps);\n}\n_c43 = DropdownMenuRoot;\nvar DropdownMenu = Object.assign(DropdownMenuRoot, {\n    Arrow: PopperArrow,\n    CheckboxItem: MenuCheckboxItem,\n    Content: DropdownMenuContent,\n    Group: MenuGroup,\n    GroupLabel: MenuGroupLabel,\n    Icon: MenuIcon,\n    Item: MenuItem,\n    ItemDescription: MenuItemDescription,\n    ItemIndicator: MenuItemIndicator,\n    ItemLabel: MenuItemLabel,\n    Portal: MenuPortal,\n    RadioGroup: MenuRadioGroup,\n    RadioItem: MenuRadioItem,\n    Separator: SeparatorRoot,\n    Sub: MenuSub,\n    SubContent: MenuSubContent,\n    SubTrigger: MenuSubTrigger,\n    Trigger: MenuTrigger\n});\n_c44 = DropdownMenu;\n// src/theme.ts\nvar tokens = {\n    colors: {\n        inherit: \"inherit\",\n        current: \"currentColor\",\n        transparent: \"transparent\",\n        black: \"#000000\",\n        white: \"#ffffff\",\n        neutral: {\n            50: \"#f9fafb\",\n            100: \"#f2f4f7\",\n            200: \"#eaecf0\",\n            300: \"#d0d5dd\",\n            400: \"#98a2b3\",\n            500: \"#667085\",\n            600: \"#475467\",\n            700: \"#344054\",\n            800: \"#1d2939\",\n            900: \"#101828\"\n        },\n        darkGray: {\n            50: \"#525c7a\",\n            100: \"#49536e\",\n            200: \"#414962\",\n            300: \"#394056\",\n            400: \"#313749\",\n            500: \"#292e3d\",\n            600: \"#212530\",\n            700: \"#191c24\",\n            800: \"#111318\",\n            900: \"#0b0d10\"\n        },\n        gray: {\n            50: \"#f9fafb\",\n            100: \"#f2f4f7\",\n            200: \"#eaecf0\",\n            300: \"#d0d5dd\",\n            400: \"#98a2b3\",\n            500: \"#667085\",\n            600: \"#475467\",\n            700: \"#344054\",\n            800: \"#1d2939\",\n            900: \"#101828\"\n        },\n        blue: {\n            25: \"#F5FAFF\",\n            50: \"#EFF8FF\",\n            100: \"#D1E9FF\",\n            200: \"#B2DDFF\",\n            300: \"#84CAFF\",\n            400: \"#53B1FD\",\n            500: \"#2E90FA\",\n            600: \"#1570EF\",\n            700: \"#175CD3\",\n            800: \"#1849A9\",\n            900: \"#194185\"\n        },\n        green: {\n            25: \"#F6FEF9\",\n            50: \"#ECFDF3\",\n            100: \"#D1FADF\",\n            200: \"#A6F4C5\",\n            300: \"#6CE9A6\",\n            400: \"#32D583\",\n            500: \"#12B76A\",\n            600: \"#039855\",\n            700: \"#027A48\",\n            800: \"#05603A\",\n            900: \"#054F31\"\n        },\n        red: {\n            50: \"#fef2f2\",\n            100: \"#fee2e2\",\n            200: \"#fecaca\",\n            300: \"#fca5a5\",\n            400: \"#f87171\",\n            500: \"#ef4444\",\n            600: \"#dc2626\",\n            700: \"#b91c1c\",\n            800: \"#991b1b\",\n            900: \"#7f1d1d\",\n            950: \"#450a0a\"\n        },\n        yellow: {\n            25: \"#FFFCF5\",\n            50: \"#FFFAEB\",\n            100: \"#FEF0C7\",\n            200: \"#FEDF89\",\n            300: \"#FEC84B\",\n            400: \"#FDB022\",\n            500: \"#F79009\",\n            600: \"#DC6803\",\n            700: \"#B54708\",\n            800: \"#93370D\",\n            900: \"#7A2E0E\"\n        },\n        purple: {\n            25: \"#FAFAFF\",\n            50: \"#F4F3FF\",\n            100: \"#EBE9FE\",\n            200: \"#D9D6FE\",\n            300: \"#BDB4FE\",\n            400: \"#9B8AFB\",\n            500: \"#7A5AF8\",\n            600: \"#6938EF\",\n            700: \"#5925DC\",\n            800: \"#4A1FB8\",\n            900: \"#3E1C96\"\n        },\n        teal: {\n            25: \"#F6FEFC\",\n            50: \"#F0FDF9\",\n            100: \"#CCFBEF\",\n            200: \"#99F6E0\",\n            300: \"#5FE9D0\",\n            400: \"#2ED3B7\",\n            500: \"#15B79E\",\n            600: \"#0E9384\",\n            700: \"#107569\",\n            800: \"#125D56\",\n            900: \"#134E48\"\n        },\n        pink: {\n            25: \"#fdf2f8\",\n            50: \"#fce7f3\",\n            100: \"#fbcfe8\",\n            200: \"#f9a8d4\",\n            300: \"#f472b6\",\n            400: \"#ec4899\",\n            500: \"#db2777\",\n            600: \"#be185d\",\n            700: \"#9d174d\",\n            800: \"#831843\",\n            900: \"#500724\"\n        },\n        cyan: {\n            25: \"#ecfeff\",\n            50: \"#cffafe\",\n            100: \"#a5f3fc\",\n            200: \"#67e8f9\",\n            300: \"#22d3ee\",\n            400: \"#06b6d4\",\n            500: \"#0891b2\",\n            600: \"#0e7490\",\n            700: \"#155e75\",\n            800: \"#164e63\",\n            900: \"#083344\"\n        }\n    },\n    alpha: {\n        100: \"ff\",\n        90: \"e5\",\n        80: \"cc\",\n        70: \"b3\",\n        60: \"99\",\n        50: \"80\",\n        40: \"66\",\n        30: \"4d\",\n        20: \"33\",\n        10: \"1a\",\n        0: \"00\"\n    },\n    font: {\n        size: {\n            \"2xs\": \"calc(var(--tsqd-font-size) * 0.625)\",\n            xs: \"calc(var(--tsqd-font-size) * 0.75)\",\n            sm: \"calc(var(--tsqd-font-size) * 0.875)\",\n            md: \"var(--tsqd-font-size)\",\n            lg: \"calc(var(--tsqd-font-size) * 1.125)\",\n            xl: \"calc(var(--tsqd-font-size) * 1.25)\",\n            \"2xl\": \"calc(var(--tsqd-font-size) * 1.5)\",\n            \"3xl\": \"calc(var(--tsqd-font-size) * 1.875)\",\n            \"4xl\": \"calc(var(--tsqd-font-size) * 2.25)\",\n            \"5xl\": \"calc(var(--tsqd-font-size) * 3)\",\n            \"6xl\": \"calc(var(--tsqd-font-size) * 3.75)\",\n            \"7xl\": \"calc(var(--tsqd-font-size) * 4.5)\",\n            \"8xl\": \"calc(var(--tsqd-font-size) * 6)\",\n            \"9xl\": \"calc(var(--tsqd-font-size) * 8)\"\n        },\n        lineHeight: {\n            xs: \"calc(var(--tsqd-font-size) * 1)\",\n            sm: \"calc(var(--tsqd-font-size) * 1.25)\",\n            md: \"calc(var(--tsqd-font-size) * 1.5)\",\n            lg: \"calc(var(--tsqd-font-size) * 1.75)\",\n            xl: \"calc(var(--tsqd-font-size) * 2)\",\n            \"2xl\": \"calc(var(--tsqd-font-size) * 2.25)\",\n            \"3xl\": \"calc(var(--tsqd-font-size) * 2.5)\",\n            \"4xl\": \"calc(var(--tsqd-font-size) * 2.75)\",\n            \"5xl\": \"calc(var(--tsqd-font-size) * 3)\",\n            \"6xl\": \"calc(var(--tsqd-font-size) * 3.25)\",\n            \"7xl\": \"calc(var(--tsqd-font-size) * 3.5)\",\n            \"8xl\": \"calc(var(--tsqd-font-size) * 3.75)\",\n            \"9xl\": \"calc(var(--tsqd-font-size) * 4)\"\n        },\n        weight: {\n            thin: \"100\",\n            extralight: \"200\",\n            light: \"300\",\n            normal: \"400\",\n            medium: \"500\",\n            semibold: \"600\",\n            bold: \"700\",\n            extrabold: \"800\",\n            black: \"900\"\n        }\n    },\n    breakpoints: {\n        xs: \"320px\",\n        sm: \"640px\",\n        md: \"768px\",\n        lg: \"1024px\",\n        xl: \"1280px\",\n        \"2xl\": \"1536px\"\n    },\n    border: {\n        radius: {\n            none: \"0px\",\n            xs: \"calc(var(--tsqd-font-size) * 0.125)\",\n            sm: \"calc(var(--tsqd-font-size) * 0.25)\",\n            md: \"calc(var(--tsqd-font-size) * 0.375)\",\n            lg: \"calc(var(--tsqd-font-size) * 0.5)\",\n            xl: \"calc(var(--tsqd-font-size) * 0.75)\",\n            \"2xl\": \"calc(var(--tsqd-font-size) * 1)\",\n            \"3xl\": \"calc(var(--tsqd-font-size) * 1.5)\",\n            full: \"9999px\"\n        }\n    },\n    size: {\n        0: \"0px\",\n        0.25: \"calc(var(--tsqd-font-size) * 0.0625)\",\n        0.5: \"calc(var(--tsqd-font-size) * 0.125)\",\n        1: \"calc(var(--tsqd-font-size) * 0.25)\",\n        1.5: \"calc(var(--tsqd-font-size) * 0.375)\",\n        2: \"calc(var(--tsqd-font-size) * 0.5)\",\n        2.5: \"calc(var(--tsqd-font-size) * 0.625)\",\n        3: \"calc(var(--tsqd-font-size) * 0.75)\",\n        3.5: \"calc(var(--tsqd-font-size) * 0.875)\",\n        4: \"calc(var(--tsqd-font-size) * 1)\",\n        4.5: \"calc(var(--tsqd-font-size) * 1.125)\",\n        5: \"calc(var(--tsqd-font-size) * 1.25)\",\n        5.5: \"calc(var(--tsqd-font-size) * 1.375)\",\n        6: \"calc(var(--tsqd-font-size) * 1.5)\",\n        6.5: \"calc(var(--tsqd-font-size) * 1.625)\",\n        7: \"calc(var(--tsqd-font-size) * 1.75)\",\n        8: \"calc(var(--tsqd-font-size) * 2)\",\n        9: \"calc(var(--tsqd-font-size) * 2.25)\",\n        10: \"calc(var(--tsqd-font-size) * 2.5)\",\n        11: \"calc(var(--tsqd-font-size) * 2.75)\",\n        12: \"calc(var(--tsqd-font-size) * 3)\",\n        14: \"calc(var(--tsqd-font-size) * 3.5)\",\n        16: \"calc(var(--tsqd-font-size) * 4)\",\n        20: \"calc(var(--tsqd-font-size) * 5)\",\n        24: \"calc(var(--tsqd-font-size) * 6)\",\n        28: \"calc(var(--tsqd-font-size) * 7)\",\n        32: \"calc(var(--tsqd-font-size) * 8)\",\n        36: \"calc(var(--tsqd-font-size) * 9)\",\n        40: \"calc(var(--tsqd-font-size) * 10)\",\n        44: \"calc(var(--tsqd-font-size) * 11)\",\n        48: \"calc(var(--tsqd-font-size) * 12)\",\n        52: \"calc(var(--tsqd-font-size) * 13)\",\n        56: \"calc(var(--tsqd-font-size) * 14)\",\n        60: \"calc(var(--tsqd-font-size) * 15)\",\n        64: \"calc(var(--tsqd-font-size) * 16)\",\n        72: \"calc(var(--tsqd-font-size) * 18)\",\n        80: \"calc(var(--tsqd-font-size) * 20)\",\n        96: \"calc(var(--tsqd-font-size) * 24)\"\n    },\n    shadow: {\n        xs: function() {\n            let _ = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : \"rgb(0 0 0 / 0.1)\";\n            return \"0 1px 2px 0 rgb(0 0 0 / 0.05)\";\n        },\n        sm: function() {\n            let color = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : \"rgb(0 0 0 / 0.1)\";\n            return \"0 1px 3px 0 \".concat(color, \", 0 1px 2px -1px \").concat(color);\n        },\n        md: function() {\n            let color = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : \"rgb(0 0 0 / 0.1)\";\n            return \"0 4px 6px -1px \".concat(color, \", 0 2px 4px -2px \").concat(color);\n        },\n        lg: function() {\n            let color = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : \"rgb(0 0 0 / 0.1)\";\n            return \"0 10px 15px -3px \".concat(color, \", 0 4px 6px -4px \").concat(color);\n        },\n        xl: function() {\n            let color = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : \"rgb(0 0 0 / 0.1)\";\n            return \"0 20px 25px -5px \".concat(color, \", 0 8px 10px -6px \").concat(color);\n        },\n        \"2xl\": function() {\n            let color = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : \"rgb(0 0 0 / 0.25)\";\n            return \"0 25px 50px -12px \".concat(color);\n        },\n        inner: function() {\n            let color = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : \"rgb(0 0 0 / 0.05)\";\n            return \"inset 0 2px 4px 0 \".concat(color);\n        },\n        none: ()=>\"none\"\n    },\n    zIndices: {\n        hide: -1,\n        auto: \"auto\",\n        base: 0,\n        docked: 10,\n        dropdown: 1e3,\n        sticky: 1100,\n        banner: 1200,\n        overlay: 1300,\n        modal: 1400,\n        popover: 1500,\n        skipLink: 1600,\n        toast: 1700,\n        tooltip: 1800\n    }\n};\n// src/icons/index.tsx\nvar _tmpl$2 = /* @__PURE__ */ (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.template)('<svg width=14 height=14 viewBox=\"0 0 14 14\"fill=none xmlns=http://www.w3.org/2000/svg><path d=\"M13 13L9.00007 9M10.3333 5.66667C10.3333 8.244 8.244 10.3333 5.66667 10.3333C3.08934 10.3333 1 8.244 1 5.66667C1 3.08934 3.08934 1 5.66667 1C8.244 1 10.3333 3.08934 10.3333 5.66667Z\"stroke=currentColor stroke-width=1.66667 stroke-linecap=round stroke-linejoin=round>');\nvar _tmpl$22 = /* @__PURE__ */ (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.template)('<svg width=24 height=24 viewBox=\"0 0 24 24\"fill=none xmlns=http://www.w3.org/2000/svg><path d=\"M9 3H15M3 6H21M19 6L18.2987 16.5193C18.1935 18.0975 18.1409 18.8867 17.8 19.485C17.4999 20.0118 17.0472 20.4353 16.5017 20.6997C15.882 21 15.0911 21 13.5093 21H10.4907C8.90891 21 8.11803 21 7.49834 20.6997C6.95276 20.4353 6.50009 20.0118 6.19998 19.485C5.85911 18.8867 5.8065 18.0975 5.70129 16.5193L5 6M10 10.5V15.5M14 10.5V15.5\"stroke=currentColor stroke-width=2 stroke-linecap=round stroke-linejoin=round>');\nvar _tmpl$3 = /* @__PURE__ */ (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.template)('<svg width=10 height=6 viewBox=\"0 0 10 6\"fill=none xmlns=http://www.w3.org/2000/svg><path d=\"M1 1L5 5L9 1\"stroke=currentColor stroke-width=1.66667 stroke-linecap=round stroke-linejoin=round>');\nvar _tmpl$4 = /* @__PURE__ */ (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.template)('<svg width=12 height=12 viewBox=\"0 0 16 16\"fill=none xmlns=http://www.w3.org/2000/svg><path d=\"M8 13.3333V2.66667M8 2.66667L4 6.66667M8 2.66667L12 6.66667\"stroke=currentColor stroke-width=1.66667 stroke-linecap=round stroke-linejoin=round>');\nvar _tmpl$5 = /* @__PURE__ */ (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.template)('<svg width=12 height=12 viewBox=\"0 0 16 16\"fill=none xmlns=http://www.w3.org/2000/svg><path d=\"M8 2.66667V13.3333M8 13.3333L4 9.33333M8 13.3333L12 9.33333\"stroke=currentColor stroke-width=1.66667 stroke-linecap=round stroke-linejoin=round>');\nvar _tmpl$6 = /* @__PURE__ */ (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.template)('<svg viewBox=\"0 0 24 24\"height=12 width=12 fill=none xmlns=http://www.w3.org/2000/svg><path d=\"M12 2v2m0 16v2M4 12H2m4.314-5.686L4.9 4.9m12.786 1.414L19.1 4.9M6.314 17.69 4.9 19.104m12.786-1.414 1.414 1.414M22 12h-2m-3 0a5 5 0 1 1-10 0 5 5 0 0 1 10 0Z\"stroke=currentColor stroke-width=2 stroke-linecap=round stroke-linejoin=round>');\nvar _tmpl$7 = /* @__PURE__ */ (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.template)('<svg viewBox=\"0 0 24 24\"height=12 width=12 fill=none xmlns=http://www.w3.org/2000/svg><path d=\"M22 15.844a10.424 10.424 0 0 1-4.306.925c-5.779 0-10.463-4.684-10.463-10.462 0-1.536.33-2.994.925-4.307A10.464 10.464 0 0 0 2 11.538C2 17.316 6.684 22 12.462 22c4.243 0 7.896-2.526 9.538-6.156Z\"stroke=currentColor stroke-width=2 stroke-linecap=round stroke-linejoin=round>');\nvar _tmpl$8 = /* @__PURE__ */ (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.template)('<svg viewBox=\"0 0 24 24\"height=12 width=12 fill=none xmlns=http://www.w3.org/2000/svg><path d=\"M8 21h8m-4-4v4m-5.2-4h10.4c1.68 0 2.52 0 3.162-.327a3 3 0 0 0 1.311-1.311C22 14.72 22 13.88 22 12.2V7.8c0-1.68 0-2.52-.327-3.162a3 3 0 0 0-1.311-1.311C19.72 3 18.88 3 17.2 3H6.8c-1.68 0-2.52 0-3.162.327a3 3 0 0 0-1.311 1.311C2 5.28 2 6.12 2 7.8v4.4c0 1.68 0 2.52.327 3.162a3 3 0 0 0 1.311 1.311C4.28 17 5.12 17 6.8 17Z\"stroke=currentColor stroke-width=2 stroke-linecap=round stroke-linejoin=round>');\nvar _tmpl$9 = /* @__PURE__ */ (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.template)('<svg stroke=currentColor fill=currentColor stroke-width=0 viewBox=\"0 0 24 24\"height=1em width=1em xmlns=http://www.w3.org/2000/svg><path fill=none d=\"M0 0h24v24H0z\"></path><path d=\"M1 9l2 2c4.97-4.97 13.03-4.97 18 0l2-2C16.93 2.93 7.08 2.93 1 9zm8 8l3 3 3-3a4.237 4.237 0 00-6 0zm-4-4l2 2a7.074 7.074 0 0110 0l2-2C15.14 9.14 8.87 9.14 5 13z\">');\nvar _tmpl$10 = /* @__PURE__ */ (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.template)('<svg stroke-width=0 viewBox=\"0 0 24 24\"height=1em width=1em xmlns=http://www.w3.org/2000/svg><path fill=none d=\"M24 .01c0-.01 0-.01 0 0L0 0v24h24V.01zM0 0h24v24H0V0zm0 0h24v24H0V0z\"></path><path d=\"M22.99 9C19.15 5.16 13.8 3.76 8.84 4.78l2.52 2.52c3.47-.17 6.99 1.05 9.63 3.7l2-2zm-4 4a9.793 9.793 0 00-4.49-2.56l3.53 3.53.96-.97zM2 3.05L5.07 6.1C3.6 6.82 2.22 7.78 1 9l1.99 2c1.24-1.24 2.67-2.16 4.2-2.77l2.24 2.24A9.684 9.684 0 005 13v.01L6.99 15a7.042 7.042 0 014.92-2.06L18.98 20l1.27-1.26L3.29 1.79 2 3.05zM9 17l3 3 3-3a4.237 4.237 0 00-6 0z\">');\nvar _tmpl$11 = /* @__PURE__ */ (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.template)('<svg width=24 height=24 viewBox=\"0 0 24 24\"fill=none xmlns=http://www.w3.org/2000/svg><path d=\"M9.3951 19.3711L9.97955 20.6856C10.1533 21.0768 10.4368 21.4093 10.7958 21.6426C11.1547 21.8759 11.5737 22.0001 12.0018 22C12.4299 22.0001 12.8488 21.8759 13.2078 21.6426C13.5667 21.4093 13.8503 21.0768 14.024 20.6856L14.6084 19.3711C14.8165 18.9047 15.1664 18.5159 15.6084 18.26C16.0532 18.0034 16.5678 17.8941 17.0784 17.9478L18.5084 18.1C18.9341 18.145 19.3637 18.0656 19.7451 17.8713C20.1265 17.6771 20.4434 17.3763 20.6573 17.0056C20.8715 16.635 20.9735 16.2103 20.9511 15.7829C20.9286 15.3555 20.7825 14.9438 20.5307 14.5978L19.684 13.4344C19.3825 13.0171 19.2214 12.5148 19.224 12C19.2239 11.4866 19.3865 10.9864 19.6884 10.5711L20.5351 9.40778C20.787 9.06175 20.933 8.65007 20.9555 8.22267C20.978 7.79528 20.8759 7.37054 20.6618 7C20.4479 6.62923 20.131 6.32849 19.7496 6.13423C19.3681 5.93997 18.9386 5.86053 18.5129 5.90556L17.0829 6.05778C16.5722 6.11141 16.0577 6.00212 15.6129 5.74556C15.17 5.48825 14.82 5.09736 14.6129 4.62889L14.024 3.31444C13.8503 2.92317 13.5667 2.59072 13.2078 2.3574C12.8488 2.12408 12.4299 1.99993 12.0018 2C11.5737 1.99993 11.1547 2.12408 10.7958 2.3574C10.4368 2.59072 10.1533 2.92317 9.97955 3.31444L9.3951 4.62889C9.18803 5.09736 8.83798 5.48825 8.3951 5.74556C7.95032 6.00212 7.43577 6.11141 6.9251 6.05778L5.49066 5.90556C5.06499 5.86053 4.6354 5.93997 4.25397 6.13423C3.87255 6.32849 3.55567 6.62923 3.34177 7C3.12759 7.37054 3.02555 7.79528 3.04804 8.22267C3.07052 8.65007 3.21656 9.06175 3.46844 9.40778L4.3151 10.5711C4.61704 10.9864 4.77964 11.4866 4.77955 12C4.77964 12.5134 4.61704 13.0137 4.3151 13.4289L3.46844 14.5922C3.21656 14.9382 3.07052 15.3499 3.04804 15.7773C3.02555 16.2047 3.12759 16.6295 3.34177 17C3.55589 17.3706 3.8728 17.6712 4.25417 17.8654C4.63554 18.0596 5.06502 18.1392 5.49066 18.0944L6.92066 17.9422C7.43133 17.8886 7.94587 17.9979 8.39066 18.2544C8.83519 18.511 9.18687 18.902 9.3951 19.3711Z\"stroke=currentColor stroke-width=2 stroke-linecap=round stroke-linejoin=round></path><path d=\"M12 15C13.6568 15 15 13.6569 15 12C15 10.3431 13.6568 9 12 9C10.3431 9 8.99998 10.3431 8.99998 12C8.99998 13.6569 10.3431 15 12 15Z\"stroke=currentColor stroke-width=2 stroke-linecap=round stroke-linejoin=round>');\nvar _tmpl$12 = /* @__PURE__ */ (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.template)('<svg width=24 height=24 viewBox=\"0 0 24 24\"fill=none xmlns=http://www.w3.org/2000/svg><path d=\"M16 21H16.2C17.8802 21 18.7202 21 19.362 20.673C19.9265 20.3854 20.3854 19.9265 20.673 19.362C21 18.7202 21 17.8802 21 16.2V7.8C21 6.11984 21 5.27976 20.673 4.63803C20.3854 4.07354 19.9265 3.6146 19.362 3.32698C18.7202 3 17.8802 3 16.2 3H7.8C6.11984 3 5.27976 3 4.63803 3.32698C4.07354 3.6146 3.6146 4.07354 3.32698 4.63803C3 5.27976 3 6.11984 3 7.8V8M11.5 12.5L17 7M17 7H12M17 7V12M6.2 21H8.8C9.9201 21 10.4802 21 10.908 20.782C11.2843 20.5903 11.5903 20.2843 11.782 19.908C12 19.4802 12 18.9201 12 17.8V15.2C12 14.0799 12 13.5198 11.782 13.092C11.5903 12.7157 11.2843 12.4097 10.908 12.218C10.4802 12 9.92011 12 8.8 12H6.2C5.0799 12 4.51984 12 4.09202 12.218C3.71569 12.4097 3.40973 12.7157 3.21799 13.092C3 13.5198 3 14.0799 3 15.2V17.8C3 18.9201 3 19.4802 3.21799 19.908C3.40973 20.2843 3.71569 20.5903 4.09202 20.782C4.51984 21 5.07989 21 6.2 21Z\"stroke=currentColor stroke-width=2 stroke-linecap=round stroke-linejoin=round>');\nvar _tmpl$13 = /* @__PURE__ */ (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.template)('<svg width=24 height=24 viewBox=\"0 0 24 24\"fill=none xmlns=http://www.w3.org/2000/svg><path class=copier d=\"M8 8V5.2C8 4.0799 8 3.51984 8.21799 3.09202C8.40973 2.71569 8.71569 2.40973 9.09202 2.21799C9.51984 2 10.0799 2 11.2 2H18.8C19.9201 2 20.4802 2 20.908 2.21799C21.2843 2.40973 21.5903 2.71569 21.782 3.09202C22 3.51984 22 4.0799 22 5.2V12.8C22 13.9201 22 14.4802 21.782 14.908C21.5903 15.2843 21.2843 15.5903 20.908 15.782C20.4802 16 19.9201 16 18.8 16H16M5.2 22H12.8C13.9201 22 14.4802 22 14.908 21.782C15.2843 21.5903 15.5903 21.2843 15.782 20.908C16 20.4802 16 19.9201 16 18.8V11.2C16 10.0799 16 9.51984 15.782 9.09202C15.5903 8.71569 15.2843 8.40973 14.908 8.21799C14.4802 8 13.9201 8 12.8 8H5.2C4.0799 8 3.51984 8 3.09202 8.21799C2.71569 8.40973 2.40973 8.71569 2.21799 9.09202C2 9.51984 2 10.0799 2 11.2V18.8C2 19.9201 2 20.4802 2.21799 20.908C2.40973 21.2843 2.71569 21.5903 3.09202 21.782C3.51984 22 4.07989 22 5.2 22Z\"stroke-width=2 stroke-linecap=round stroke-linejoin=round stroke=currentColor>');\nvar _tmpl$14 = /* @__PURE__ */ (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.template)('<svg width=24 height=24 viewBox=\"0 0 24 24\"fill=none xmlns=http://www.w3.org/2000/svg><path d=\"M7.5 12L10.5 15L16.5 9M7.8 21H16.2C17.8802 21 18.7202 21 19.362 20.673C19.9265 20.3854 20.3854 19.9265 20.673 19.362C21 18.7202 21 17.8802 21 16.2V7.8C21 6.11984 21 5.27976 20.673 4.63803C20.3854 4.07354 19.9265 3.6146 19.362 3.32698C18.7202 3 17.8802 3 16.2 3H7.8C6.11984 3 5.27976 3 4.63803 3.32698C4.07354 3.6146 3.6146 4.07354 3.32698 4.63803C3 5.27976 3 6.11984 3 7.8V16.2C3 17.8802 3 18.7202 3.32698 19.362C3.6146 19.9265 4.07354 20.3854 4.63803 20.673C5.27976 21 6.11984 21 7.8 21Z\"stroke-width=2 stroke-linecap=round stroke-linejoin=round>');\nvar _tmpl$15 = /* @__PURE__ */ (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.template)('<svg width=24 height=24 viewBox=\"0 0 24 24\"fill=none xmlns=http://www.w3.org/2000/svg><path d=\"M9 9L15 15M15 9L9 15M7.8 21H16.2C17.8802 21 18.7202 21 19.362 20.673C19.9265 20.3854 20.3854 19.9265 20.673 19.362C21 18.7202 21 17.8802 21 16.2V7.8C21 6.11984 21 5.27976 20.673 4.63803C20.3854 4.07354 19.9265 3.6146 19.362 3.32698C18.7202 3 17.8802 3 16.2 3H7.8C6.11984 3 5.27976 3 4.63803 3.32698C4.07354 3.6146 3.6146 4.07354 3.32698 4.63803C3 5.27976 3 6.11984 3 7.8V16.2C3 17.8802 3 18.7202 3.32698 19.362C3.6146 19.9265 4.07354 20.3854 4.63803 20.673C5.27976 21 6.11984 21 7.8 21Z\"stroke=#F04438 stroke-width=2 stroke-linecap=round stroke-linejoin=round>');\nvar _tmpl$16 = /* @__PURE__ */ (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.template)('<svg width=24 height=24 viewBox=\"0 0 24 24\"fill=none stroke=currentColor stroke-width=2 xmlns=http://www.w3.org/2000/svg><rect class=list width=20 height=20 y=2 x=2 rx=2></rect><line class=list-item y1=7 y2=7 x1=6 x2=18></line><line class=list-item y2=12 y1=12 x1=6 x2=18></line><line class=list-item y1=17 y2=17 x1=6 x2=18>');\nvar _tmpl$17 = /* @__PURE__ */ (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.template)('<svg viewBox=\"0 0 24 24\"height=20 width=20 fill=none xmlns=http://www.w3.org/2000/svg><path d=\"M3 7.8c0-1.68 0-2.52.327-3.162a3 3 0 0 1 1.311-1.311C5.28 3 6.12 3 7.8 3h8.4c1.68 0 2.52 0 3.162.327a3 3 0 0 1 1.311 1.311C21 5.28 21 6.12 21 7.8v8.4c0 1.68 0 2.52-.327 3.162a3 3 0 0 1-1.311 1.311C18.72 21 17.88 21 16.2 21H7.8c-1.68 0-2.52 0-3.162-.327a3 3 0 0 1-1.311-1.311C3 18.72 3 17.88 3 16.2V7.8Z\"stroke-width=2 stroke-linecap=round stroke-linejoin=round>');\nvar _tmpl$18 = /* @__PURE__ */ (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.template)('<svg width=14 height=14 viewBox=\"0 0 24 24\"fill=none xmlns=http://www.w3.org/2000/svg><path d=\"M7.5 12L10.5 15L16.5 9M22 12C22 17.5228 17.5228 22 12 22C6.47715 22 2 17.5228 2 12C2 6.47715 6.47715 2 12 2C17.5228 2 22 6.47715 22 12Z\"stroke=currentColor stroke-width=2 stroke-linecap=round stroke-linejoin=round>');\nvar _tmpl$19 = /* @__PURE__ */ (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.template)('<svg width=14 height=14 viewBox=\"0 0 24 24\"fill=none xmlns=http://www.w3.org/2000/svg><path d=\"M12 2V6M12 18V22M6 12H2M22 12H18M19.0784 19.0784L16.25 16.25M19.0784 4.99994L16.25 7.82837M4.92157 19.0784L7.75 16.25M4.92157 4.99994L7.75 7.82837\"stroke=currentColor stroke-width=2 stroke-linecap=round stroke-linejoin=round></path><animateTransform attributeName=transform attributeType=XML type=rotate from=0 to=360 dur=2s repeatCount=indefinite>');\nvar _tmpl$20 = /* @__PURE__ */ (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.template)('<svg width=14 height=14 viewBox=\"0 0 24 24\"fill=none xmlns=http://www.w3.org/2000/svg><path d=\"M15 9L9 15M9 9L15 15M22 12C22 17.5228 17.5228 22 12 22C6.47715 22 2 17.5228 2 12C2 6.47715 6.47715 2 12 2C17.5228 2 22 6.47715 22 12Z\"stroke=currentColor stroke-width=2 stroke-linecap=round stroke-linejoin=round>');\nvar _tmpl$21 = /* @__PURE__ */ (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.template)('<svg width=14 height=14 viewBox=\"0 0 24 24\"fill=none xmlns=http://www.w3.org/2000/svg><path d=\"M9.5 15V9M14.5 15V9M22 12C22 17.5228 17.5228 22 12 22C6.47715 22 2 17.5228 2 12C2 6.47715 6.47715 2 12 2C17.5228 2 22 6.47715 22 12Z\"stroke=currentColor stroke-width=2 stroke-linecap=round stroke-linejoin=round>');\nvar _tmpl$222 = /* @__PURE__ */ (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.template)('<svg version=1.0 viewBox=\"0 0 633 633\"><linearGradient x1=-666.45 x2=-666.45 y1=163.28 y2=163.99 gradientTransform=\"matrix(633 0 0 633 422177 -103358)\"gradientUnits=userSpaceOnUse><stop stop-color=#6BDAFF offset=0></stop><stop stop-color=#F9FFB5 offset=.32></stop><stop stop-color=#FFA770 offset=.71></stop><stop stop-color=#FF7373 offset=1></stop></linearGradient><circle cx=316.5 cy=316.5 r=316.5></circle><defs><filter x=-137.5 y=412 width=454 height=396.9 filterUnits=userSpaceOnUse><feColorMatrix values=\"1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 1 0\"></feColorMatrix></filter></defs><mask x=-137.5 y=412 width=454 height=396.9 maskUnits=userSpaceOnUse><g><circle cx=316.5 cy=316.5 r=316.5 fill=#fff></circle></g></mask><g><ellipse cx=89.5 cy=610.5 rx=214.5 ry=186 fill=#015064 stroke=#00CFE2 stroke-width=25></ellipse></g><defs><filter x=316.5 y=412 width=454 height=396.9 filterUnits=userSpaceOnUse><feColorMatrix values=\"1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 1 0\"></feColorMatrix></filter></defs><mask x=316.5 y=412 width=454 height=396.9 maskUnits=userSpaceOnUse><g><circle cx=316.5 cy=316.5 r=316.5 fill=#fff></circle></g></mask><g><ellipse cx=543.5 cy=610.5 rx=214.5 ry=186 fill=#015064 stroke=#00CFE2 stroke-width=25></ellipse></g><defs><filter x=-137.5 y=450 width=454 height=396.9 filterUnits=userSpaceOnUse><feColorMatrix values=\"1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 1 0\"></feColorMatrix></filter></defs><mask x=-137.5 y=450 width=454 height=396.9 maskUnits=userSpaceOnUse><g><circle cx=316.5 cy=316.5 r=316.5 fill=#fff></circle></g></mask><g><ellipse cx=89.5 cy=648.5 rx=214.5 ry=186 fill=#015064 stroke=#00A8B8 stroke-width=25></ellipse></g><defs><filter x=316.5 y=450 width=454 height=396.9 filterUnits=userSpaceOnUse><feColorMatrix values=\"1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 1 0\"></feColorMatrix></filter></defs><mask x=316.5 y=450 width=454 height=396.9 maskUnits=userSpaceOnUse><g><circle cx=316.5 cy=316.5 r=316.5 fill=#fff></circle></g></mask><g><ellipse cx=543.5 cy=648.5 rx=214.5 ry=186 fill=#015064 stroke=#00A8B8 stroke-width=25></ellipse></g><defs><filter x=-137.5 y=486 width=454 height=396.9 filterUnits=userSpaceOnUse><feColorMatrix values=\"1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 1 0\"></feColorMatrix></filter></defs><mask x=-137.5 y=486 width=454 height=396.9 maskUnits=userSpaceOnUse><g><circle cx=316.5 cy=316.5 r=316.5 fill=#fff></circle></g></mask><g><ellipse cx=89.5 cy=684.5 rx=214.5 ry=186 fill=#015064 stroke=#007782 stroke-width=25></ellipse></g><defs><filter x=316.5 y=486 width=454 height=396.9 filterUnits=userSpaceOnUse><feColorMatrix values=\"1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 1 0\"></feColorMatrix></filter></defs><mask x=316.5 y=486 width=454 height=396.9 maskUnits=userSpaceOnUse><g><circle cx=316.5 cy=316.5 r=316.5 fill=#fff></circle></g></mask><g><ellipse cx=543.5 cy=684.5 rx=214.5 ry=186 fill=#015064 stroke=#007782 stroke-width=25></ellipse></g><defs><filter x=272.2 y=308 width=176.9 height=129.3 filterUnits=userSpaceOnUse><feColorMatrix values=\"1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 1 0\"></feColorMatrix></filter></defs><mask x=272.2 y=308 width=176.9 height=129.3 maskUnits=userSpaceOnUse><g><circle cx=316.5 cy=316.5 r=316.5 fill=#fff></circle></g></mask><g><line x1=436 x2=431 y1=403.2 y2=431.8 fill=none stroke=#000 stroke-linecap=round stroke-linejoin=bevel stroke-width=11></line><line x1=291 x2=280 y1=341.5 y2=403.5 fill=none stroke=#000 stroke-linecap=round stroke-linejoin=bevel stroke-width=11></line><line x1=332.9 x2=328.6 y1=384.1 y2=411.2 fill=none stroke=#000 stroke-linecap=round stroke-linejoin=bevel stroke-width=11></line><linearGradient x1=-670.75 x2=-671.59 y1=164.4 y2=164.49 gradientTransform=\"matrix(-184.16 -32.472 -11.461 64.997 -121359 -32126)\"gradientUnits=userSpaceOnUse><stop stop-color=#EE2700 offset=0></stop><stop stop-color=#FF008E offset=1></stop></linearGradient><path d=\"m344.1 363 97.7 17.2c5.8 2.1 8.2 6.1 7.1 12.1s-4.7 9.2-11 9.9l-106-18.7-57.5-59.2c-3.2-4.8-2.9-9.1 0.8-12.8s8.3-4.4 13.7-2.1l55.2 53.6z\"clip-rule=evenodd fill-rule=evenodd></path><line x1=428.2 x2=429.1 y1=384.5 y2=378 fill=none stroke=#fff stroke-linecap=round stroke-linejoin=bevel stroke-width=7></line><line x1=395.2 x2=396.1 y1=379.5 y2=373 fill=none stroke=#fff stroke-linecap=round stroke-linejoin=bevel stroke-width=7></line><line x1=362.2 x2=363.1 y1=373.5 y2=367.4 fill=none stroke=#fff stroke-linecap=round stroke-linejoin=bevel stroke-width=7></line><line x1=324.2 x2=328.4 y1=351.3 y2=347.4 fill=none stroke=#fff stroke-linecap=round stroke-linejoin=bevel stroke-width=7></line><line x1=303.2 x2=307.4 y1=331.3 y2=327.4 fill=none stroke=#fff stroke-linecap=round stroke-linejoin=bevel stroke-width=7></line></g><defs><filter x=73.2 y=113.8 width=280.6 height=317.4 filterUnits=userSpaceOnUse><feColorMatrix values=\"1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 1 0\"></feColorMatrix></filter></defs><mask x=73.2 y=113.8 width=280.6 height=317.4 maskUnits=userSpaceOnUse><g><circle cx=316.5 cy=316.5 r=316.5 fill=#fff></circle></g></mask><g><linearGradient x1=-672.16 x2=-672.16 y1=165.03 y2=166.03 gradientTransform=\"matrix(-100.18 48.861 97.976 200.88 -83342 -93.059)\"gradientUnits=userSpaceOnUse><stop stop-color=#A17500 offset=0></stop><stop stop-color=#5D2100 offset=1></stop></linearGradient><path d=\"m192.3 203c8.1 37.3 14 73.6 17.8 109.1 3.8 35.4 2.8 75.1-3 119.2l61.2-16.7c-15.6-59-25.2-97.9-28.6-116.6s-10.8-51.9-22.1-99.6l-25.3 4.6\"clip-rule=evenodd fill-rule=evenodd></path><g stroke=#2F8A00><linearGradient x1=-660.23 x2=-660.23 y1=166.72 y2=167.72 gradientTransform=\"matrix(92.683 4.8573 -2.0259 38.657 61680 -3088.6)\"gradientUnits=userSpaceOnUse><stop stop-color=#2F8A00 offset=0></stop><stop stop-color=#90FF57 offset=1></stop></linearGradient><path d=\"m195 183.9s-12.6-22.1-36.5-29.9c-15.9-5.2-34.4-1.5-55.5 11.1 15.9 14.3 29.5 22.6 40.7 24.9 16.8 3.6 51.3-6.1 51.3-6.1z\"clip-rule=evenodd fill-rule=evenodd stroke-width=13></path><linearGradient x1=-661.36 x2=-661.36 y1=164.18 y2=165.18 gradientTransform=\"matrix(110 5.7648 -6.3599 121.35 73933 -15933)\"gradientUnits=userSpaceOnUse><stop stop-color=#2F8A00 offset=0></stop><stop stop-color=#90FF57 offset=1></stop></linearGradient><path d=\"m194.9 184.5s-47.5-8.5-83.2 15.7c-23.8 16.2-34.3 49.3-31.6 99.4 30.3-27.8 52.1-48.5 65.2-61.9 19.8-20.2 49.6-53.2 49.6-53.2z\"clip-rule=evenodd fill-rule=evenodd stroke-width=13></path><linearGradient x1=-656.79 x2=-656.79 y1=165.15 y2=166.15 gradientTransform=\"matrix(62.954 3.2993 -3.5023 66.828 42156 -8754.1)\"gradientUnits=userSpaceOnUse><stop stop-color=#2F8A00 offset=0></stop><stop stop-color=#90FF57 offset=1></stop></linearGradient><path d=\"m195 183.9c-0.8-21.9 6-38 20.6-48.2s29.8-15.4 45.5-15.3c-6.1 21.4-14.5 35.8-25.2 43.4s-24.4 14.2-40.9 20.1z\"clip-rule=evenodd fill-rule=evenodd stroke-width=13></path><linearGradient x1=-663.07 x2=-663.07 y1=165.44 y2=166.44 gradientTransform=\"matrix(152.47 7.9907 -3.0936 59.029 101884 -4318.7)\"gradientUnits=userSpaceOnUse><stop stop-color=#2F8A00 offset=0></stop><stop stop-color=#90FF57 offset=1></stop></linearGradient><path d=\"m194.9 184.5c31.9-30 64.1-39.7 96.7-29s50.8 30.4 54.6 59.1c-35.2-5.5-60.4-9.6-75.8-12.1-15.3-2.6-40.5-8.6-75.5-18z\"clip-rule=evenodd fill-rule=evenodd stroke-width=13></path><linearGradient x1=-662.57 x2=-662.57 y1=164.44 y2=165.44 gradientTransform=\"matrix(136.46 7.1517 -5.2163 99.533 91536 -11442)\"gradientUnits=userSpaceOnUse><stop stop-color=#2F8A00 offset=0></stop><stop stop-color=#90FF57 offset=1></stop></linearGradient><path d=\"m194.9 184.5c35.8-7.6 65.6-0.2 89.2 22s37.7 49 42.3 80.3c-39.8-9.7-68.3-23.8-85.5-42.4s-32.5-38.5-46-59.9z\"clip-rule=evenodd fill-rule=evenodd stroke-width=13></path><linearGradient x1=-656.43 x2=-656.43 y1=163.86 y2=164.86 gradientTransform=\"matrix(60.866 3.1899 -8.7773 167.48 41560 -25168)\"gradientUnits=userSpaceOnUse><stop stop-color=#2F8A00 offset=0></stop><stop stop-color=#90FF57 offset=1></stop></linearGradient><path d=\"m194.9 184.5c-33.6 13.8-53.6 35.7-60.1 65.6s-3.6 63.1 8.7 99.6c27.4-40.3 43.2-69.6 47.4-88s5.6-44.1 4-77.2z\"clip-rule=evenodd fill-rule=evenodd stroke-width=13></path><path d=\"m196.5 182.3c-14.8 21.6-25.1 41.4-30.8 59.4s-9.5 33-11.1 45.1\"fill=none stroke-linecap=round stroke-width=8></path><path d=\"m194.9 185.7c-24.4 1.7-43.8 9-58.1 21.8s-24.7 25.4-31.3 37.8\"fill=none stroke-linecap=round stroke-width=8></path><path d=\"m204.5 176.4c29.7-6.7 52-8.4 67-5.1s26.9 8.6 35.8 15.9\"fill=none stroke-linecap=round stroke-width=8></path><path d=\"m196.5 181.4c20.3 9.9 38.2 20.5 53.9 31.9s27.4 22.1 35.1 32\"fill=none stroke-linecap=round stroke-width=8></path></g></g><defs><filter x=50.5 y=399 width=532 height=633 filterUnits=userSpaceOnUse><feColorMatrix values=\"1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 1 0\"></feColorMatrix></filter></defs><mask x=50.5 y=399 width=532 height=633 maskUnits=userSpaceOnUse><g><circle cx=316.5 cy=316.5 r=316.5 fill=#fff></circle></g></mask><g><linearGradient x1=-666.06 x2=-666.23 y1=163.36 y2=163.75 gradientTransform=\"matrix(532 0 0 633 354760 -102959)\"gradientUnits=userSpaceOnUse><stop stop-color=#FFF400 offset=0></stop><stop stop-color=#3C8700 offset=1></stop></linearGradient><ellipse cx=316.5 cy=715.5 rx=266 ry=316.5></ellipse></g><defs><filter x=391 y=-24 width=288 height=283 filterUnits=userSpaceOnUse><feColorMatrix values=\"1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 1 0\"></feColorMatrix></filter></defs><mask x=391 y=-24 width=288 height=283 maskUnits=userSpaceOnUse><g><circle cx=316.5 cy=316.5 r=316.5 fill=#fff></circle></g></mask><g><linearGradient x1=-664.56 x2=-664.56 y1=163.79 y2=164.79 gradientTransform=\"matrix(227 0 0 227 151421 -37204)\"gradientUnits=userSpaceOnUse><stop stop-color=#FFDF00 offset=0></stop><stop stop-color=#FF9D00 offset=1></stop></linearGradient><circle cx=565.5 cy=89.5 r=113.5></circle><linearGradient x1=-644.5 x2=-645.77 y1=342 y2=342 gradientTransform=\"matrix(30 0 0 1 19770 -253)\"gradientUnits=userSpaceOnUse><stop stop-color=#FFA400 offset=0></stop><stop stop-color=#FF5E00 offset=1></stop></linearGradient><line x1=427 x2=397 y1=89 y2=89 fill=none stroke-linecap=round stroke-linejoin=bevel stroke-width=12></line><linearGradient x1=-641.56 x2=-642.83 y1=196.02 y2=196.07 gradientTransform=\"matrix(26.5 0 0 5.5 17439 -1025.5)\"gradientUnits=userSpaceOnUse><stop stop-color=#FFA400 offset=0></stop><stop stop-color=#FF5E00 offset=1></stop></linearGradient><line x1=430.5 x2=404 y1=55.5 y2=50 fill=none stroke-linecap=round stroke-linejoin=bevel stroke-width=12></line><linearGradient x1=-643.73 x2=-645 y1=185.83 y2=185.9 gradientTransform=\"matrix(29 0 0 8 19107 -1361)\"gradientUnits=userSpaceOnUse><stop stop-color=#FFA400 offset=0></stop><stop stop-color=#FF5E00 offset=1></stop></linearGradient><line x1=431 x2=402 y1=122 y2=130 fill=none stroke-linecap=round stroke-linejoin=bevel stroke-width=12></line><linearGradient x1=-638.94 x2=-640.22 y1=177.09 y2=177.39 gradientTransform=\"matrix(24 0 0 13 15783 -2145)\"gradientUnits=userSpaceOnUse><stop stop-color=#FFA400 offset=0></stop><stop stop-color=#FF5E00 offset=1></stop></linearGradient><line x1=442 x2=418 y1=153 y2=166 fill=none stroke-linecap=round stroke-linejoin=bevel stroke-width=12></line><linearGradient x1=-633.42 x2=-634.7 y1=172.41 y2=173.31 gradientTransform=\"matrix(20 0 0 19 13137 -3096)\"gradientUnits=userSpaceOnUse><stop stop-color=#FFA400 offset=0></stop><stop stop-color=#FF5E00 offset=1></stop></linearGradient><line x1=464 x2=444 y1=180 y2=199 fill=none stroke-linecap=round stroke-linejoin=bevel stroke-width=12></line><linearGradient x1=-619.05 x2=-619.52 y1=170.82 y2=171.82 gradientTransform=\"matrix(13.83 0 0 22.85 9050 -3703.4)\"gradientUnits=userSpaceOnUse><stop stop-color=#FFA400 offset=0></stop><stop stop-color=#FF5E00 offset=1></stop></linearGradient><line x1=491.4 x2=477.5 y1=203 y2=225.9 fill=none stroke-linecap=round stroke-linejoin=bevel stroke-width=12></line><linearGradient x1=-578.5 x2=-578.63 y1=170.31 y2=171.31 gradientTransform=\"matrix(7.5 0 0 24.5 4860 -3953)\"gradientUnits=userSpaceOnUse><stop stop-color=#FFA400 offset=0></stop><stop stop-color=#FF5E00 offset=1></stop></linearGradient><line x1=524.5 x2=517 y1=219.5 y2=244 fill=none stroke-linecap=round stroke-linejoin=bevel stroke-width=12></line><linearGradient x1=666.5 x2=666.5 y1=170.31 y2=171.31 gradientTransform=\"matrix(.5 0 0 24.5 231.5 -3944)\"gradientUnits=userSpaceOnUse><stop stop-color=#FFA400 offset=0></stop><stop stop-color=#FF5E00 offset=1></stop></linearGradient><line x1=564.5 x2=565 y1=228.5 y2=253 fill=none stroke-linecap=round stroke-linejoin=bevel stroke-width=12>');\nfunction Search() {\n    return _tmpl$2();\n}\n_c45 = Search;\nfunction Trash() {\n    return _tmpl$22();\n}\n_c46 = Trash;\nfunction ChevronDown() {\n    return _tmpl$3();\n}\n_c47 = ChevronDown;\nfunction ArrowUp() {\n    return _tmpl$4();\n}\n_c48 = ArrowUp;\nfunction ArrowDown() {\n    return _tmpl$5();\n}\n_c49 = ArrowDown;\nfunction ArrowLeft() {\n    return (()=>{\n        const _el$6 = _tmpl$5();\n        _el$6.style.setProperty(\"transform\", \"rotate(90deg)\");\n        return _el$6;\n    })();\n}\n_c50 = ArrowLeft;\nfunction ArrowRight() {\n    return (()=>{\n        const _el$7 = _tmpl$5();\n        _el$7.style.setProperty(\"transform\", \"rotate(-90deg)\");\n        return _el$7;\n    })();\n}\n_c51 = ArrowRight;\nfunction Sun() {\n    return _tmpl$6();\n}\n_c52 = Sun;\nfunction Moon() {\n    return _tmpl$7();\n}\n_c53 = Moon;\nfunction Monitor() {\n    return _tmpl$8();\n}\n_c54 = Monitor;\nfunction Wifi() {\n    return _tmpl$9();\n}\n_c55 = Wifi;\nfunction Offline() {\n    return _tmpl$10();\n}\n_c56 = Offline;\nfunction Settings() {\n    return _tmpl$11();\n}\n_c57 = Settings;\nfunction PiPIcon() {\n    return _tmpl$12();\n}\n_c58 = PiPIcon;\nfunction Copier() {\n    return _tmpl$13();\n}\n_c59 = Copier;\nfunction CopiedCopier(props) {\n    return (()=>{\n        const _el$16 = _tmpl$14(), _el$17 = _el$16.firstChild;\n        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createRenderEffect)(()=>(0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$17, \"stroke\", props.theme === \"dark\" ? \"#12B76A\" : \"#027A48\"));\n        return _el$16;\n    })();\n}\n_c60 = CopiedCopier;\nfunction ErrorCopier() {\n    return _tmpl$15();\n}\n_c61 = ErrorCopier;\nfunction List() {\n    return _tmpl$16();\n}\n_c62 = List;\nfunction Check(props) {\n    return [\n        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.Show, {\n            get when () {\n                return props.checked;\n            },\n            get children () {\n                const _el$20 = _tmpl$14(), _el$21 = _el$20.firstChild;\n                (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createRenderEffect)(()=>(0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$21, \"stroke\", props.theme === \"dark\" ? \"#9B8AFB\" : \"#6938EF\"));\n                return _el$20;\n            }\n        }),\n        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.Show, {\n            get when () {\n                return !props.checked;\n            },\n            get children () {\n                const _el$22 = _tmpl$17(), _el$23 = _el$22.firstChild;\n                (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createRenderEffect)(()=>(0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$23, \"stroke\", props.theme === \"dark\" ? \"#9B8AFB\" : \"#6938EF\"));\n                return _el$22;\n            }\n        })\n    ];\n}\n_c63 = Check;\nfunction CheckCircle() {\n    return _tmpl$18();\n}\n_c64 = CheckCircle;\nfunction LoadingCircle() {\n    return _tmpl$19();\n}\n_c65 = LoadingCircle;\nfunction XCircle() {\n    return _tmpl$20();\n}\n_c66 = XCircle;\nfunction PauseCircle() {\n    return _tmpl$21();\n}\n_c67 = PauseCircle;\nfunction TanstackLogo() {\n    const id = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createUniqueId)();\n    return (()=>{\n        const _el$28 = _tmpl$222(), _el$29 = _el$28.firstChild, _el$30 = _el$29.nextSibling, _el$31 = _el$30.nextSibling, _el$32 = _el$31.firstChild, _el$33 = _el$31.nextSibling, _el$34 = _el$33.firstChild, _el$35 = _el$33.nextSibling, _el$36 = _el$35.nextSibling, _el$37 = _el$36.firstChild, _el$38 = _el$36.nextSibling, _el$39 = _el$38.firstChild, _el$40 = _el$38.nextSibling, _el$41 = _el$40.nextSibling, _el$42 = _el$41.firstChild, _el$43 = _el$41.nextSibling, _el$44 = _el$43.firstChild, _el$45 = _el$43.nextSibling, _el$46 = _el$45.nextSibling, _el$47 = _el$46.firstChild, _el$48 = _el$46.nextSibling, _el$49 = _el$48.firstChild, _el$50 = _el$48.nextSibling, _el$51 = _el$50.nextSibling, _el$52 = _el$51.firstChild, _el$53 = _el$51.nextSibling, _el$54 = _el$53.firstChild, _el$55 = _el$53.nextSibling, _el$56 = _el$55.nextSibling, _el$57 = _el$56.firstChild, _el$58 = _el$56.nextSibling, _el$59 = _el$58.firstChild, _el$60 = _el$58.nextSibling, _el$61 = _el$60.nextSibling, _el$62 = _el$61.firstChild, _el$63 = _el$61.nextSibling, _el$64 = _el$63.firstChild, _el$65 = _el$63.nextSibling, _el$66 = _el$65.firstChild, _el$67 = _el$66.nextSibling, _el$68 = _el$67.nextSibling, _el$69 = _el$68.nextSibling, _el$70 = _el$69.nextSibling, _el$71 = _el$65.nextSibling, _el$72 = _el$71.firstChild, _el$73 = _el$71.nextSibling, _el$74 = _el$73.firstChild, _el$75 = _el$73.nextSibling, _el$76 = _el$75.firstChild, _el$77 = _el$76.nextSibling, _el$78 = _el$77.nextSibling, _el$79 = _el$78.firstChild, _el$80 = _el$79.nextSibling, _el$81 = _el$80.nextSibling, _el$82 = _el$81.nextSibling, _el$83 = _el$82.nextSibling, _el$84 = _el$83.nextSibling, _el$85 = _el$84.nextSibling, _el$86 = _el$85.nextSibling, _el$87 = _el$86.nextSibling, _el$88 = _el$87.nextSibling, _el$89 = _el$88.nextSibling, _el$90 = _el$89.nextSibling, _el$91 = _el$75.nextSibling, _el$92 = _el$91.firstChild, _el$93 = _el$91.nextSibling, _el$94 = _el$93.firstChild, _el$95 = _el$93.nextSibling, _el$96 = _el$95.firstChild, _el$97 = _el$96.nextSibling, _el$98 = _el$95.nextSibling, _el$99 = _el$98.firstChild, _el$100 = _el$98.nextSibling, _el$101 = _el$100.firstChild, _el$102 = _el$100.nextSibling, _el$103 = _el$102.firstChild, _el$104 = _el$103.nextSibling, _el$105 = _el$104.nextSibling, _el$106 = _el$105.nextSibling, _el$107 = _el$106.nextSibling, _el$108 = _el$107.nextSibling, _el$109 = _el$108.nextSibling, _el$110 = _el$109.nextSibling, _el$111 = _el$110.nextSibling, _el$112 = _el$111.nextSibling, _el$113 = _el$112.nextSibling, _el$114 = _el$113.nextSibling, _el$115 = _el$114.nextSibling, _el$116 = _el$115.nextSibling, _el$117 = _el$116.nextSibling, _el$118 = _el$117.nextSibling, _el$119 = _el$118.nextSibling, _el$120 = _el$119.nextSibling;\n        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$29, \"id\", \"a-\".concat(id));\n        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$30, \"fill\", \"url(#a-\".concat(id, \")\"));\n        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$32, \"id\", \"am-\".concat(id));\n        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$33, \"id\", \"b-\".concat(id));\n        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$34, \"filter\", \"url(#am-\".concat(id, \")\"));\n        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$35, \"mask\", \"url(#b-\".concat(id, \")\"));\n        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$37, \"id\", \"ah-\".concat(id));\n        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$38, \"id\", \"k-\".concat(id));\n        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$39, \"filter\", \"url(#ah-\".concat(id, \")\"));\n        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$40, \"mask\", \"url(#k-\".concat(id, \")\"));\n        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$42, \"id\", \"ae-\".concat(id));\n        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$43, \"id\", \"j-\".concat(id));\n        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$44, \"filter\", \"url(#ae-\".concat(id, \")\"));\n        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$45, \"mask\", \"url(#j-\".concat(id, \")\"));\n        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$47, \"id\", \"ai-\".concat(id));\n        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$48, \"id\", \"i-\".concat(id));\n        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$49, \"filter\", \"url(#ai-\".concat(id, \")\"));\n        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$50, \"mask\", \"url(#i-\".concat(id, \")\"));\n        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$52, \"id\", \"aj-\".concat(id));\n        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$53, \"id\", \"h-\".concat(id));\n        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$54, \"filter\", \"url(#aj-\".concat(id, \")\"));\n        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$55, \"mask\", \"url(#h-\".concat(id, \")\"));\n        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$57, \"id\", \"ag-\".concat(id));\n        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$58, \"id\", \"g-\".concat(id));\n        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$59, \"filter\", \"url(#ag-\".concat(id, \")\"));\n        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$60, \"mask\", \"url(#g-\".concat(id, \")\"));\n        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$62, \"id\", \"af-\".concat(id));\n        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$63, \"id\", \"f-\".concat(id));\n        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$64, \"filter\", \"url(#af-\".concat(id, \")\"));\n        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$65, \"mask\", \"url(#f-\".concat(id, \")\"));\n        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$69, \"id\", \"m-\".concat(id));\n        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$70, \"fill\", \"url(#m-\".concat(id, \")\"));\n        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$72, \"id\", \"ak-\".concat(id));\n        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$73, \"id\", \"e-\".concat(id));\n        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$74, \"filter\", \"url(#ak-\".concat(id, \")\"));\n        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$75, \"mask\", \"url(#e-\".concat(id, \")\"));\n        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$76, \"id\", \"n-\".concat(id));\n        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$77, \"fill\", \"url(#n-\".concat(id, \")\"));\n        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$79, \"id\", \"r-\".concat(id));\n        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$80, \"fill\", \"url(#r-\".concat(id, \")\"));\n        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$81, \"id\", \"s-\".concat(id));\n        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$82, \"fill\", \"url(#s-\".concat(id, \")\"));\n        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$83, \"id\", \"q-\".concat(id));\n        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$84, \"fill\", \"url(#q-\".concat(id, \")\"));\n        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$85, \"id\", \"p-\".concat(id));\n        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$86, \"fill\", \"url(#p-\".concat(id, \")\"));\n        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$87, \"id\", \"o-\".concat(id));\n        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$88, \"fill\", \"url(#o-\".concat(id, \")\"));\n        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$89, \"id\", \"l-\".concat(id));\n        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$90, \"fill\", \"url(#l-\".concat(id, \")\"));\n        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$92, \"id\", \"al-\".concat(id));\n        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$93, \"id\", \"d-\".concat(id));\n        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$94, \"filter\", \"url(#al-\".concat(id, \")\"));\n        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$95, \"mask\", \"url(#d-\".concat(id, \")\"));\n        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$96, \"id\", \"u-\".concat(id));\n        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$97, \"fill\", \"url(#u-\".concat(id, \")\"));\n        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$99, \"id\", \"ad-\".concat(id));\n        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$100, \"id\", \"c-\".concat(id));\n        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$101, \"filter\", \"url(#ad-\".concat(id, \")\"));\n        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$102, \"mask\", \"url(#c-\".concat(id, \")\"));\n        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$103, \"id\", \"t-\".concat(id));\n        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$104, \"fill\", \"url(#t-\".concat(id, \")\"));\n        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$105, \"id\", \"v-\".concat(id));\n        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$106, \"stroke\", \"url(#v-\".concat(id, \")\"));\n        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$107, \"id\", \"aa-\".concat(id));\n        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$108, \"stroke\", \"url(#aa-\".concat(id, \")\"));\n        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$109, \"id\", \"w-\".concat(id));\n        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$110, \"stroke\", \"url(#w-\".concat(id, \")\"));\n        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$111, \"id\", \"ac-\".concat(id));\n        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$112, \"stroke\", \"url(#ac-\".concat(id, \")\"));\n        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$113, \"id\", \"ab-\".concat(id));\n        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$114, \"stroke\", \"url(#ab-\".concat(id, \")\"));\n        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$115, \"id\", \"y-\".concat(id));\n        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$116, \"stroke\", \"url(#y-\".concat(id, \")\"));\n        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$117, \"id\", \"x-\".concat(id));\n        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$118, \"stroke\", \"url(#x-\".concat(id, \")\"));\n        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$119, \"id\", \"z-\".concat(id));\n        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$120, \"stroke\", \"url(#z-\".concat(id, \")\"));\n        return _el$28;\n    })();\n}\n_c68 = TanstackLogo;\n// src/Context.ts\nvar QueryDevtoolsContext = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createContext)({\n    client: void 0,\n    onlineManager: void 0,\n    queryFlavor: \"\",\n    version: \"\",\n    shadowDOMTarget: void 0\n});\nfunction useQueryDevtoolsContext() {\n    _s50();\n    return (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.useContext)(QueryDevtoolsContext);\n}\n_s50(useQueryDevtoolsContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar ThemeContext = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createContext)(_c69 = ()=>\"dark\");\n_c70 = ThemeContext;\nfunction useTheme() {\n    _s51();\n    return (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.useContext)(ThemeContext);\n}\n_s51(useTheme, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n// src/Explorer.tsx\nvar _tmpl$23 = /* @__PURE__ */ (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.template)('<span><svg width=16 height=16 viewBox=\"0 0 16 16\"fill=none xmlns=http://www.w3.org/2000/svg><path d=\"M6 12L10 8L6 4\"stroke-width=2 stroke-linecap=round stroke-linejoin=round>');\nvar _tmpl$24 = /* @__PURE__ */ (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.template)('<button title=\"Copy object to clipboard\">');\nvar _tmpl$32 = /* @__PURE__ */ (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.template)('<button title=\"Remove all items\"aria-label=\"Remove all items\">');\nvar _tmpl$42 = /* @__PURE__ */ (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.template)('<button title=\"Delete item\"aria-label=\"Delete item\">');\nvar _tmpl$52 = /* @__PURE__ */ (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.template)('<button title=\"Toggle value\"aria-label=\"Toggle value\">');\nvar _tmpl$62 = /* @__PURE__ */ (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.template)(\"<div>\");\nvar _tmpl$72 = /* @__PURE__ */ (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.template)(\"<div><button> <span></span> <span> \");\nvar _tmpl$82 = /* @__PURE__ */ (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.template)(\"<input>\");\nvar _tmpl$92 = /* @__PURE__ */ (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.template)(\"<span>\");\nvar _tmpl$102 = /* @__PURE__ */ (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.template)(\"<div><span>:\");\nvar _tmpl$112 = /* @__PURE__ */ (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.template)(\"<div><div><button> [<!>...<!>]\");\nfunction chunkArray(array, size3) {\n    if (size3 < 1) return [];\n    let i2 = 0;\n    const result = [];\n    while(i2 < array.length){\n        result.push(array.slice(i2, i2 + size3));\n        i2 = i2 + size3;\n    }\n    return result;\n}\nvar Expander = (props)=>{\n    _s52();\n    const theme = useTheme();\n    const css = useQueryDevtoolsContext().shadowDOMTarget ? u.bind({\n        target: useQueryDevtoolsContext().shadowDOMTarget\n    }) : u;\n    const styles = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(()=>{\n        return theme() === \"dark\" ? darkStyles(css) : lightStyles(css);\n    });\n    return (()=>{\n        const _el$ = _tmpl$23();\n        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createRenderEffect)(()=>(0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$, clsx(styles().expander, css(_templateObject(), props.expanded ? 90 : 0), props.expanded && css(_templateObject1()))));\n        return _el$;\n    })();\n};\n_s52(Expander, \"VKgnQsxEx0TB9skZoFPDc+w6VUc=\", false, function() {\n    return [\n        useTheme,\n        useQueryDevtoolsContext,\n        useQueryDevtoolsContext\n    ];\n});\n_c71 = Expander;\nvar CopyButton = (props)=>{\n    _s53();\n    const theme = useTheme();\n    const css = useQueryDevtoolsContext().shadowDOMTarget ? u.bind({\n        target: useQueryDevtoolsContext().shadowDOMTarget\n    }) : u;\n    const styles = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(()=>{\n        return theme() === \"dark\" ? darkStyles(css) : lightStyles(css);\n    });\n    const [copyState, setCopyState] = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createSignal)(\"NoCopy\");\n    return (()=>{\n        const _el$2 = _tmpl$24();\n        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.addEventListener)(_el$2, \"click\", copyState() === \"NoCopy\" ? ()=>{\n            navigator.clipboard.writeText((0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.stringify)(props.value)).then(()=>{\n                setCopyState(\"SuccessCopy\");\n                setTimeout(()=>{\n                    setCopyState(\"NoCopy\");\n                }, 1500);\n            }, (err)=>{\n                console.error(\"Failed to copy: \", err);\n                setCopyState(\"ErrorCopy\");\n                setTimeout(()=>{\n                    setCopyState(\"NoCopy\");\n                }, 1500);\n            });\n        } : void 0, true);\n        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$2, (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.Switch, {\n            get children () {\n                return [\n                    (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.Match, {\n                        get when () {\n                            return copyState() === \"NoCopy\";\n                        },\n                        get children () {\n                            return (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(Copier, {});\n                        }\n                    }),\n                    (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.Match, {\n                        get when () {\n                            return copyState() === \"SuccessCopy\";\n                        },\n                        get children () {\n                            return (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(CopiedCopier, {\n                                get theme () {\n                                    return theme();\n                                }\n                            });\n                        }\n                    }),\n                    (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.Match, {\n                        get when () {\n                            return copyState() === \"ErrorCopy\";\n                        },\n                        get children () {\n                            return (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(ErrorCopier, {});\n                        }\n                    })\n                ];\n            }\n        }));\n        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createRenderEffect)((_p$)=>{\n            const _v$ = styles().actionButton, _v$2 = \"\".concat(copyState() === \"NoCopy\" ? \"Copy object to clipboard\" : copyState() === \"SuccessCopy\" ? \"Object copied to clipboard\" : \"Error copying object to clipboard\");\n            _v$ !== _p$._v$ && (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$2, _p$._v$ = _v$);\n            _v$2 !== _p$._v$2 && (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$2, \"aria-label\", _p$._v$2 = _v$2);\n            return _p$;\n        }, {\n            _v$: void 0,\n            _v$2: void 0\n        });\n        return _el$2;\n    })();\n};\n_s53(CopyButton, \"VKgnQsxEx0TB9skZoFPDc+w6VUc=\", false, function() {\n    return [\n        useTheme,\n        useQueryDevtoolsContext,\n        useQueryDevtoolsContext\n    ];\n});\n_c72 = CopyButton;\nvar ClearArrayButton = (props)=>{\n    _s54();\n    const theme = useTheme();\n    const css = useQueryDevtoolsContext().shadowDOMTarget ? u.bind({\n        target: useQueryDevtoolsContext().shadowDOMTarget\n    }) : u;\n    const styles = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(()=>{\n        return theme() === \"dark\" ? darkStyles(css) : lightStyles(css);\n    });\n    const queryClient = useQueryDevtoolsContext().client;\n    return (()=>{\n        const _el$3 = _tmpl$32();\n        _el$3.$$click = ()=>{\n            const oldData = props.activeQuery.state.data;\n            const newData = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.updateNestedDataByPath)(oldData, props.dataPath, []);\n            queryClient.setQueryData(props.activeQuery.queryKey, newData);\n        };\n        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$3, (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(List, {}));\n        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createRenderEffect)(()=>(0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$3, styles().actionButton));\n        return _el$3;\n    })();\n};\n_s54(ClearArrayButton, \"bdrA9ToaP9TDZuQDD0vhjyGEaUs=\", false, function() {\n    return [\n        useTheme,\n        useQueryDevtoolsContext,\n        useQueryDevtoolsContext,\n        useQueryDevtoolsContext\n    ];\n});\n_c73 = ClearArrayButton;\nvar DeleteItemButton = (props)=>{\n    _s55();\n    const theme = useTheme();\n    const css = useQueryDevtoolsContext().shadowDOMTarget ? u.bind({\n        target: useQueryDevtoolsContext().shadowDOMTarget\n    }) : u;\n    const styles = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(()=>{\n        return theme() === \"dark\" ? darkStyles(css) : lightStyles(css);\n    });\n    const queryClient = useQueryDevtoolsContext().client;\n    return (()=>{\n        const _el$4 = _tmpl$42();\n        _el$4.$$click = ()=>{\n            const oldData = props.activeQuery.state.data;\n            const newData = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.deleteNestedDataByPath)(oldData, props.dataPath);\n            queryClient.setQueryData(props.activeQuery.queryKey, newData);\n        };\n        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$4, (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(Trash, {}));\n        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createRenderEffect)(()=>(0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$4, clsx(styles().actionButton)));\n        return _el$4;\n    })();\n};\n_s55(DeleteItemButton, \"bdrA9ToaP9TDZuQDD0vhjyGEaUs=\", false, function() {\n    return [\n        useTheme,\n        useQueryDevtoolsContext,\n        useQueryDevtoolsContext,\n        useQueryDevtoolsContext\n    ];\n});\n_c74 = DeleteItemButton;\nvar ToggleValueButton = (props)=>{\n    _s56();\n    const theme = useTheme();\n    const css = useQueryDevtoolsContext().shadowDOMTarget ? u.bind({\n        target: useQueryDevtoolsContext().shadowDOMTarget\n    }) : u;\n    const styles = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(()=>{\n        return theme() === \"dark\" ? darkStyles(css) : lightStyles(css);\n    });\n    const queryClient = useQueryDevtoolsContext().client;\n    return (()=>{\n        const _el$5 = _tmpl$52();\n        _el$5.$$click = ()=>{\n            const oldData = props.activeQuery.state.data;\n            const newData = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.updateNestedDataByPath)(oldData, props.dataPath, !props.value);\n            queryClient.setQueryData(props.activeQuery.queryKey, newData);\n        };\n        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$5, (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(Check, {\n            get theme () {\n                return theme();\n            },\n            get checked () {\n                return props.value;\n            }\n        }));\n        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createRenderEffect)(()=>(0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$5, clsx(styles().actionButton, css(_templateObject2(), tokens.size[3.5], tokens.size[3.5]))));\n        return _el$5;\n    })();\n};\n_s56(ToggleValueButton, \"bdrA9ToaP9TDZuQDD0vhjyGEaUs=\", false, function() {\n    return [\n        useTheme,\n        useQueryDevtoolsContext,\n        useQueryDevtoolsContext,\n        useQueryDevtoolsContext\n    ];\n});\n_c75 = ToggleValueButton;\nfunction isIterable(x) {\n    return Symbol.iterator in x;\n}\nfunction Explorer(props) {\n    _s57();\n    const theme = useTheme();\n    const css = useQueryDevtoolsContext().shadowDOMTarget ? u.bind({\n        target: useQueryDevtoolsContext().shadowDOMTarget\n    }) : u;\n    const styles = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(()=>{\n        return theme() === \"dark\" ? darkStyles(css) : lightStyles(css);\n    });\n    const queryClient = useQueryDevtoolsContext().client;\n    const [expanded, setExpanded] = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createSignal)((props.defaultExpanded || []).includes(props.label));\n    const toggleExpanded = ()=>setExpanded((old)=>!old);\n    const [expandedPages, setExpandedPages] = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createSignal)([]);\n    const subEntries = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(()=>{\n        if (Array.isArray(props.value)) {\n            return props.value.map((d, i2)=>({\n                    label: i2.toString(),\n                    value: d\n                }));\n        } else if (props.value !== null && typeof props.value === \"object\" && isIterable(props.value) && typeof props.value[Symbol.iterator] === \"function\") {\n            if (props.value instanceof Map) {\n                return Array.from(props.value, (param)=>{\n                    let [key, val] = param;\n                    return {\n                        label: key,\n                        value: val\n                    };\n                });\n            }\n            return Array.from(props.value, (val, i2)=>({\n                    label: i2.toString(),\n                    value: val\n                }));\n        } else if (typeof props.value === \"object\" && props.value !== null) {\n            return Object.entries(props.value).map((param)=>{\n                let [key, val] = param;\n                return {\n                    label: key,\n                    value: val\n                };\n            });\n        }\n        return [];\n    });\n    const type = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(()=>{\n        if (Array.isArray(props.value)) {\n            return \"array\";\n        } else if (props.value !== null && typeof props.value === \"object\" && isIterable(props.value) && typeof props.value[Symbol.iterator] === \"function\") {\n            return \"Iterable\";\n        } else if (typeof props.value === \"object\" && props.value !== null) {\n            return \"object\";\n        }\n        return typeof props.value;\n    });\n    const subEntryPages = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(()=>chunkArray(subEntries(), 100));\n    var _props_dataPath;\n    const currentDataPath = (_props_dataPath = props.dataPath) !== null && _props_dataPath !== void 0 ? _props_dataPath : [];\n    return (()=>{\n        const _el$6 = _tmpl$62();\n        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$6, (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.Show, {\n            get when () {\n                return subEntryPages().length;\n            },\n            get children () {\n                return [\n                    (()=>{\n                        const _el$7 = _tmpl$72(), _el$8 = _el$7.firstChild, _el$9 = _el$8.firstChild, _el$10 = _el$9.nextSibling, _el$11 = _el$10.nextSibling, _el$12 = _el$11.nextSibling, _el$13 = _el$12.firstChild;\n                        _el$8.$$click = ()=>toggleExpanded();\n                        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$8, (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(Expander, {\n                            get expanded () {\n                                return expanded();\n                            }\n                        }), _el$9);\n                        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$10, ()=>props.label);\n                        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$12, ()=>String(type()).toLowerCase() === \"iterable\" ? \"(Iterable) \" : \"\", _el$13);\n                        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$12, ()=>subEntries().length, _el$13);\n                        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$12, ()=>subEntries().length > 1 ? \"items\" : \"item\", null);\n                        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$7, (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.Show, {\n                            get when () {\n                                return props.editable;\n                            },\n                            get children () {\n                                const _el$14 = _tmpl$62();\n                                (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$14, (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(CopyButton, {\n                                    get value () {\n                                        return props.value;\n                                    }\n                                }), null);\n                                (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$14, (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.Show, {\n                                    get when () {\n                                        return props.itemsDeletable && props.activeQuery !== void 0;\n                                    },\n                                    get children () {\n                                        return (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(DeleteItemButton, {\n                                            get activeQuery () {\n                                                return props.activeQuery;\n                                            },\n                                            dataPath: currentDataPath\n                                        });\n                                    }\n                                }), null);\n                                (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$14, (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.Show, {\n                                    get when () {\n                                        return type() === \"array\" && props.activeQuery !== void 0;\n                                    },\n                                    get children () {\n                                        return (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(ClearArrayButton, {\n                                            get activeQuery () {\n                                                return props.activeQuery;\n                                            },\n                                            dataPath: currentDataPath\n                                        });\n                                    }\n                                }), null);\n                                (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createRenderEffect)(()=>(0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$14, styles().actions));\n                                return _el$14;\n                            }\n                        }), null);\n                        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createRenderEffect)((_p$)=>{\n                            const _v$3 = styles().expanderButtonContainer, _v$4 = styles().expanderButton, _v$5 = styles().info;\n                            _v$3 !== _p$._v$3 && (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$7, _p$._v$3 = _v$3);\n                            _v$4 !== _p$._v$4 && (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$8, _p$._v$4 = _v$4);\n                            _v$5 !== _p$._v$5 && (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$12, _p$._v$5 = _v$5);\n                            return _p$;\n                        }, {\n                            _v$3: void 0,\n                            _v$4: void 0,\n                            _v$5: void 0\n                        });\n                        return _el$7;\n                    })(),\n                    (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.Show, {\n                        get when () {\n                            return expanded();\n                        },\n                        get children () {\n                            return [\n                                (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.Show, {\n                                    get when () {\n                                        return subEntryPages().length === 1;\n                                    },\n                                    get children () {\n                                        const _el$15 = _tmpl$62();\n                                        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$15, (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(Key, {\n                                            get each () {\n                                                return subEntries();\n                                            },\n                                            by: (item)=>item.label,\n                                            children: (entry)=>{\n                                                return (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(Explorer, {\n                                                    get defaultExpanded () {\n                                                        return props.defaultExpanded;\n                                                    },\n                                                    get label () {\n                                                        return entry().label;\n                                                    },\n                                                    get value () {\n                                                        return entry().value;\n                                                    },\n                                                    get editable () {\n                                                        return props.editable;\n                                                    },\n                                                    get dataPath () {\n                                                        return [\n                                                            ...currentDataPath,\n                                                            entry().label\n                                                        ];\n                                                    },\n                                                    get activeQuery () {\n                                                        return props.activeQuery;\n                                                    },\n                                                    get itemsDeletable () {\n                                                        return type() === \"array\" || type() === \"Iterable\" || type() === \"object\";\n                                                    }\n                                                });\n                                            }\n                                        }));\n                                        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createRenderEffect)(()=>(0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$15, styles().subEntry));\n                                        return _el$15;\n                                    }\n                                }),\n                                (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.Show, {\n                                    get when () {\n                                        return subEntryPages().length > 1;\n                                    },\n                                    get children () {\n                                        const _el$16 = _tmpl$62();\n                                        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$16, (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.Index, {\n                                            get each () {\n                                                return subEntryPages();\n                                            },\n                                            children: (entries2, index)=>(()=>{\n                                                    const _el$22 = _tmpl$112(), _el$23 = _el$22.firstChild, _el$24 = _el$23.firstChild, _el$25 = _el$24.firstChild, _el$29 = _el$25.nextSibling, _el$27 = _el$29.nextSibling, _el$30 = _el$27.nextSibling;\n                                                    _el$30.nextSibling;\n                                                    _el$24.$$click = ()=>setExpandedPages((old)=>old.includes(index) ? old.filter((d)=>d !== index) : [\n                                                                ...old,\n                                                                index\n                                                            ]);\n                                                    (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$24, (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(Expander, {\n                                                        get expanded () {\n                                                            return expandedPages().includes(index);\n                                                        }\n                                                    }), _el$25);\n                                                    (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$24, index * 100, _el$29);\n                                                    (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$24, index * 100 + 100 - 1, _el$30);\n                                                    (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$23, (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.Show, {\n                                                        get when () {\n                                                            return expandedPages().includes(index);\n                                                        },\n                                                        get children () {\n                                                            const _el$31 = _tmpl$62();\n                                                            (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$31, (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(Key, {\n                                                                get each () {\n                                                                    return entries2();\n                                                                },\n                                                                by: (entry)=>entry.label,\n                                                                children: (entry)=>(0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(Explorer, {\n                                                                        get defaultExpanded () {\n                                                                            return props.defaultExpanded;\n                                                                        },\n                                                                        get label () {\n                                                                            return entry().label;\n                                                                        },\n                                                                        get value () {\n                                                                            return entry().value;\n                                                                        },\n                                                                        get editable () {\n                                                                            return props.editable;\n                                                                        },\n                                                                        get dataPath () {\n                                                                            return [\n                                                                                ...currentDataPath,\n                                                                                entry().label\n                                                                            ];\n                                                                        },\n                                                                        get activeQuery () {\n                                                                            return props.activeQuery;\n                                                                        }\n                                                                    })\n                                                            }));\n                                                            (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createRenderEffect)(()=>(0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$31, styles().subEntry));\n                                                            return _el$31;\n                                                        }\n                                                    }), null);\n                                                    (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createRenderEffect)((_p$)=>{\n                                                        const _v$10 = styles().entry, _v$11 = styles().expanderButton;\n                                                        _v$10 !== _p$._v$10 && (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$23, _p$._v$10 = _v$10);\n                                                        _v$11 !== _p$._v$11 && (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$24, _p$._v$11 = _v$11);\n                                                        return _p$;\n                                                    }, {\n                                                        _v$10: void 0,\n                                                        _v$11: void 0\n                                                    });\n                                                    return _el$22;\n                                                })()\n                                        }));\n                                        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createRenderEffect)(()=>(0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$16, styles().subEntry));\n                                        return _el$16;\n                                    }\n                                })\n                            ];\n                        }\n                    })\n                ];\n            }\n        }), null);\n        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$6, (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.Show, {\n            get when () {\n                return subEntryPages().length === 0;\n            },\n            get children () {\n                const _el$17 = _tmpl$102(), _el$18 = _el$17.firstChild, _el$19 = _el$18.firstChild;\n                (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$18, ()=>props.label, _el$19);\n                (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$17, (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.Show, {\n                    get when () {\n                        return (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(()=>!!(props.editable && props.activeQuery !== void 0))() && (type() === \"string\" || type() === \"number\" || type() === \"boolean\");\n                    },\n                    get fallback () {\n                        return (()=>{\n                            const _el$32 = _tmpl$92();\n                            (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$32, ()=>(0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.displayValue)(props.value));\n                            (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createRenderEffect)(()=>(0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$32, styles().value));\n                            return _el$32;\n                        })();\n                    },\n                    get children () {\n                        return [\n                            (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.Show, {\n                                get when () {\n                                    return (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(()=>!!(props.editable && props.activeQuery !== void 0))() && (type() === \"string\" || type() === \"number\");\n                                },\n                                get children () {\n                                    const _el$20 = _tmpl$82();\n                                    _el$20.addEventListener(\"change\", (changeEvent)=>{\n                                        const oldData = props.activeQuery.state.data;\n                                        const newData = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.updateNestedDataByPath)(oldData, currentDataPath, type() === \"number\" ? changeEvent.target.valueAsNumber : changeEvent.target.value);\n                                        queryClient.setQueryData(props.activeQuery.queryKey, newData);\n                                    });\n                                    (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createRenderEffect)((_p$)=>{\n                                        const _v$6 = type() === \"number\" ? \"number\" : \"text\", _v$7 = clsx(styles().value, styles().editableInput);\n                                        _v$6 !== _p$._v$6 && (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$20, \"type\", _p$._v$6 = _v$6);\n                                        _v$7 !== _p$._v$7 && (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$20, _p$._v$7 = _v$7);\n                                        return _p$;\n                                    }, {\n                                        _v$6: void 0,\n                                        _v$7: void 0\n                                    });\n                                    (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createRenderEffect)(()=>_el$20.value = props.value);\n                                    return _el$20;\n                                }\n                            }),\n                            (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.Show, {\n                                get when () {\n                                    return type() === \"boolean\";\n                                },\n                                get children () {\n                                    const _el$21 = _tmpl$92();\n                                    (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$21, (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(ToggleValueButton, {\n                                        get activeQuery () {\n                                            return props.activeQuery;\n                                        },\n                                        dataPath: currentDataPath,\n                                        get value () {\n                                            return props.value;\n                                        }\n                                    }), null);\n                                    (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$21, ()=>(0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.displayValue)(props.value), null);\n                                    (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createRenderEffect)(()=>(0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$21, clsx(styles().value, styles().actions, styles().editableInput)));\n                                    return _el$21;\n                                }\n                            })\n                        ];\n                    }\n                }), null);\n                (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$17, (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.Show, {\n                    get when () {\n                        return props.editable && props.itemsDeletable && props.activeQuery !== void 0;\n                    },\n                    get children () {\n                        return (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(DeleteItemButton, {\n                            get activeQuery () {\n                                return props.activeQuery;\n                            },\n                            dataPath: currentDataPath\n                        });\n                    }\n                }), null);\n                (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createRenderEffect)((_p$)=>{\n                    const _v$8 = styles().row, _v$9 = styles().label;\n                    _v$8 !== _p$._v$8 && (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$17, _p$._v$8 = _v$8);\n                    _v$9 !== _p$._v$9 && (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$18, _p$._v$9 = _v$9);\n                    return _p$;\n                }, {\n                    _v$8: void 0,\n                    _v$9: void 0\n                });\n                return _el$17;\n            }\n        }), null);\n        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createRenderEffect)(()=>(0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$6, styles().entry));\n        return _el$6;\n    })();\n}\n_s57(Explorer, \"bdrA9ToaP9TDZuQDD0vhjyGEaUs=\", false, function() {\n    return [\n        useTheme,\n        useQueryDevtoolsContext,\n        useQueryDevtoolsContext,\n        useQueryDevtoolsContext\n    ];\n});\n_c76 = Explorer;\nvar stylesFactory = (theme, css)=>{\n    const { colors, font, size: size3, border } = tokens;\n    const t2 = (light, dark)=>theme === \"light\" ? light : dark;\n    return {\n        entry: css(_templateObject3(), font.size.xs),\n        subEntry: css(_templateObject4(), t2(colors.gray[300], colors.darkGray[400]), colors.teal[400]),\n        expander: css(_templateObject5(), colors.gray[400], size3[3], size3[3], colors.blue[400]),\n        expanderButtonContainer: css(_templateObject6(), size3[4], size3[4], size3[2]),\n        expanderButton: css(_templateObject7(), size3[5], size3[1], colors.green[400], border.radius.xs, colors.blue[800]),\n        info: css(_templateObject8(), t2(colors.gray[500], colors.gray[500]), font.size.xs, size3[1], colors.yellow[400]),\n        label: css(_templateObject9(), t2(colors.gray[700], colors.gray[300])),\n        value: css(_templateObject10(), t2(colors.purple[600], colors.purple[400])),\n        actions: css(_templateObject11(), size3[2]),\n        row: css(_templateObject12(), size3[2], size3[0.25], size3[4.5]),\n        editableInput: css(_templateObject13(), size3[0.5], size3[1], size3[0.5], size3[1.5], border.radius.xs, t2(colors.gray[200], colors.darkGray[500]), t2(colors.gray[300], colors.darkGray[600])),\n        actionButton: css(_templateObject14(), t2(colors.gray[500], colors.gray[500]), size3[3], size3[3], t2(colors.gray[600], colors.gray[400]), border.radius.xs, colors.blue[800])\n    };\n};\nvar lightStyles = (css)=>stylesFactory(\"light\", css);\nvar darkStyles = (css)=>stylesFactory(\"dark\", css);\n(0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.delegateEvents)([\n    \"click\"\n]);\n// src/Devtools.tsx\nvar _tmpl$25 = /* @__PURE__ */ (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.template)('<div><div aria-hidden=true></div><button aria-label=\"Open Tanstack query devtools\"class=tsqd-open-btn>');\nvar _tmpl$26 = /* @__PURE__ */ (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.template)(\"<div>\");\nvar _tmpl$33 = /* @__PURE__ */ (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.template)('<aside aria-label=\"Tanstack query devtools\"><div></div><button aria-label=\"Close tanstack query devtools\">');\nvar _tmpl$43 = /* @__PURE__ */ (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.template)(\"<select name=tsqd-queries-filter-sort>\");\nvar _tmpl$53 = /* @__PURE__ */ (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.template)(\"<select name=tsqd-mutations-filter-sort>\");\nvar _tmpl$63 = /* @__PURE__ */ (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.template)(\"<span>Asc\");\nvar _tmpl$73 = /* @__PURE__ */ (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.template)(\"<span>Desc\");\nvar _tmpl$83 = /* @__PURE__ */ (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.template)('<button aria-label=\"Open in picture-in-picture mode\"title=\"Open in picture-in-picture mode\">');\nvar _tmpl$93 = /* @__PURE__ */ (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.template)(\"<div>Settings\");\nvar _tmpl$103 = /* @__PURE__ */ (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.template)(\"<span>Position\");\nvar _tmpl$113 = /* @__PURE__ */ (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.template)(\"<span>Top\");\nvar _tmpl$122 = /* @__PURE__ */ (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.template)(\"<span>Bottom\");\nvar _tmpl$132 = /* @__PURE__ */ (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.template)(\"<span>Left\");\nvar _tmpl$142 = /* @__PURE__ */ (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.template)(\"<span>Right\");\nvar _tmpl$152 = /* @__PURE__ */ (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.template)(\"<span>Theme\");\nvar _tmpl$162 = /* @__PURE__ */ (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.template)(\"<span>Light\");\nvar _tmpl$172 = /* @__PURE__ */ (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.template)(\"<span>Dark\");\nvar _tmpl$182 = /* @__PURE__ */ (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.template)(\"<span>System\");\nvar _tmpl$192 = /* @__PURE__ */ (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.template)(\"<div><div class=tsqd-queries-container>\");\nvar _tmpl$202 = /* @__PURE__ */ (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.template)(\"<div><div class=tsqd-mutations-container>\");\nvar _tmpl$212 = /* @__PURE__ */ (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.template)('<div><div><div><button aria-label=\"Close Tanstack query devtools\"><span>TANSTACK</span><span> v</span></button></div></div><div><div><div><input aria-label=\"Filter queries by query key\"type=text placeholder=Filter name=tsqd-query-filter-input></div><div></div><button class=tsqd-query-filter-sort-order-btn></button></div><div><button aria-label=\"Clear query cache\"></button><button>');\nvar _tmpl$223 = /* @__PURE__ */ (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.template)(\"<option>Sort by \");\nvar _tmpl$232 = /* @__PURE__ */ (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.template)(\"<div class=tsqd-query-disabled-indicator>disabled\");\nvar _tmpl$242 = /* @__PURE__ */ (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.template)(\"<button><div></div><code class=tsqd-query-hash>\");\nvar _tmpl$252 = /* @__PURE__ */ (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.template)(\"<div role=tooltip id=tsqd-status-tooltip>\");\nvar _tmpl$262 = /* @__PURE__ */ (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.template)(\"<span>\");\nvar _tmpl$27 = /* @__PURE__ */ (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.template)(\"<button><span></span><span>\");\nvar _tmpl$28 = /* @__PURE__ */ (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.template)(\"<button><span></span> Error\");\nvar _tmpl$29 = /* @__PURE__ */ (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.template)('<div><span></span>Trigger Error<select><option value=\"\"disabled selected>');\nvar _tmpl$30 = /* @__PURE__ */ (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.template)('<div><div>Query Details</div><div><div class=tsqd-query-details-summary><pre><code></code></pre><span></span></div><div class=tsqd-query-details-observers-count><span>Observers:</span><span></span></div><div class=tsqd-query-details-last-updated><span>Last Updated:</span><span></span></div></div><div>Actions</div><div><button><span></span>Refetch</button><button><span></span>Invalidate</button><button><span></span>Reset</button><button><span></span>Remove</button><button><span></span> Loading</button></div><div>Data Explorer</div><div class=\"tsqd-query-details-explorer-container tsqd-query-details-data-explorer\"></div><div>Query Explorer</div><div class=\"tsqd-query-details-explorer-container tsqd-query-details-query-explorer\">');\nvar _tmpl$31 = /* @__PURE__ */ (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.template)(\"<option>\");\nvar _tmpl$322 = /* @__PURE__ */ (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.template)('<div><div>Mutation Details</div><div><div class=tsqd-query-details-summary><pre><code></code></pre><span></span></div><div class=tsqd-query-details-last-updated><span>Submitted At:</span><span></span></div></div><div>Variables Details</div><div class=\"tsqd-query-details-explorer-container tsqd-query-details-query-explorer\"></div><div>Context Details</div><div class=\"tsqd-query-details-explorer-container tsqd-query-details-query-explorer\"></div><div>Data Explorer</div><div class=\"tsqd-query-details-explorer-container tsqd-query-details-query-explorer\"></div><div>Mutations Explorer</div><div class=\"tsqd-query-details-explorer-container tsqd-query-details-query-explorer\">');\nvar firstBreakpoint = 1024;\nvar secondBreakpoint = 796;\nvar thirdBreakpoint = 700;\nvar BUTTON_POSITION = \"bottom-right\";\nvar POSITION = \"bottom\";\nvar THEME_PREFERENCE = \"system\";\nvar INITIAL_IS_OPEN = false;\nvar DEFAULT_HEIGHT = 500;\nvar DEFAULT_WIDTH = 500;\nvar DEFAULT_SORT_FN_NAME = Object.keys(_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.sortFns)[0];\nvar DEFAULT_SORT_ORDER = 1;\nvar DEFAULT_MUTATION_SORT_FN_NAME = Object.keys(_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.mutationSortFns)[0];\nvar [selectedQueryHash, setSelectedQueryHash] = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createSignal)(null);\nvar [selectedMutationId, setSelectedMutationId] = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createSignal)(null);\nvar [panelWidth, setPanelWidth] = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createSignal)(0);\nvar [offline, setOffline] = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createSignal)(false);\nvar PiPContext = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createContext)(void 0);\nvar PiPProvider = (props)=>{\n    var _s = $RefreshSig$(), _s1 = $RefreshSig$();\n    const [pipWindow, setPipWindow] = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createSignal)(null);\n    const closePipWindow = ()=>{\n        const w = pipWindow();\n        if (w != null) {\n            w.close();\n            setPipWindow(null);\n        }\n    };\n    const requestPipWindow = async (width, height)=>{\n        _s();\n        if (pipWindow() != null) {\n            return;\n        }\n        const pip = window.open(\"\", \"TSQD-Devtools-Panel\", \"width=\".concat(width, \",height=\").concat(height, \",popup\"));\n        if (!pip) {\n            throw new Error(\"Failed to open popup. Please allow popups for this site to view the devtools in picture-in-picture mode.\");\n        }\n        pip.document.head.innerHTML = \"\";\n        pip.document.body.innerHTML = \"\";\n        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.clearDelegatedEvents)(pip.document);\n        pip.document.title = \"TanStack Query Devtools\";\n        pip.document.body.style.margin = \"0\";\n        pip.addEventListener(\"pagehide\", ()=>{\n            props.setLocalStore(\"pip_open\", \"false\");\n            setPipWindow(null);\n        });\n        [\n            ...(useQueryDevtoolsContext().shadowDOMTarget || document).styleSheets\n        ].forEach((styleSheet)=>{\n            try {\n                const cssRules = [\n                    ...styleSheet.cssRules\n                ].map((rule)=>rule.cssText).join(\"\");\n                const style = document.createElement(\"style\");\n                const style_node = styleSheet.ownerNode;\n                let style_id = \"\";\n                if (style_node && \"id\" in style_node) {\n                    style_id = style_node.id;\n                }\n                if (style_id) {\n                    style.setAttribute(\"id\", style_id);\n                }\n                style.textContent = cssRules;\n                pip.document.head.appendChild(style);\n            } catch (e2) {\n                const link = document.createElement(\"link\");\n                if (styleSheet.href == null) {\n                    return;\n                }\n                link.rel = \"stylesheet\";\n                link.type = styleSheet.type;\n                link.media = styleSheet.media.toString();\n                link.href = styleSheet.href;\n                pip.document.head.appendChild(link);\n            }\n        });\n        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.delegateEvents)([\n            \"focusin\",\n            \"focusout\",\n            \"pointermove\",\n            \"keydown\",\n            \"pointerdown\",\n            \"pointerup\",\n            \"click\",\n            \"mousedown\",\n            \"input\"\n        ], pip.document);\n        props.setLocalStore(\"pip_open\", \"true\");\n        setPipWindow(pip);\n    };\n    _s(requestPipWindow, \"yurpmIDLi492InJlcUnt6fCmTL4=\", false, function() {\n        return [\n            useQueryDevtoolsContext\n        ];\n    });\n    (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createEffect)(()=>{\n        var _props_localStore_pip_open;\n        const pip_open = (_props_localStore_pip_open = props.localStore.pip_open) !== null && _props_localStore_pip_open !== void 0 ? _props_localStore_pip_open : \"false\";\n        if (pip_open === \"true\") {\n            requestPipWindow(Number(window.innerWidth), Number(props.localStore.height || DEFAULT_HEIGHT));\n        }\n    });\n    (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createEffect)(_s1(()=>{\n        _s1();\n        const gooberStyles = (useQueryDevtoolsContext().shadowDOMTarget || document).querySelector(\"#_goober\");\n        const w = pipWindow();\n        if (gooberStyles && w) {\n            var _s = $RefreshSig$();\n            const observer = new MutationObserver(_s(()=>{\n                _s();\n                const pip_style = (useQueryDevtoolsContext().shadowDOMTarget || w.document).querySelector(\"#_goober\");\n                if (pip_style) {\n                    pip_style.textContent = gooberStyles.textContent;\n                }\n            }, \"yurpmIDLi492InJlcUnt6fCmTL4=\", false, function() {\n                return [\n                    useQueryDevtoolsContext\n                ];\n            }));\n            observer.observe(gooberStyles, {\n                childList: true,\n                // observe direct children\n                subtree: true,\n                // and lower descendants too\n                characterDataOldValue: true\n            });\n            (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.onCleanup)(()=>{\n                observer.disconnect();\n            });\n        }\n    }, \"yurpmIDLi492InJlcUnt6fCmTL4=\", false, function() {\n        return [\n            useQueryDevtoolsContext\n        ];\n    }));\n    const value = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(()=>({\n            pipWindow: pipWindow(),\n            requestPipWindow,\n            closePipWindow\n        }));\n    return (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(PiPContext.Provider, {\n        value,\n        get children () {\n            return props.children;\n        }\n    });\n};\n_c77 = PiPProvider;\nvar usePiPWindow = ()=>{\n    var _s = $RefreshSig$();\n    const context = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(_s(()=>{\n        _s();\n        const ctx = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.useContext)(PiPContext);\n        if (!ctx) {\n            throw new Error(\"usePiPWindow must be used within a PiPProvider\");\n        }\n        return ctx();\n    }, \"/dMy7t63NXD4eYACoT93CePwGrg=\"));\n    return context;\n};\nvar DevtoolsComponent = (props)=>{\n    const [localStore, setLocalStore] = createLocalStorage({\n        prefix: \"TanstackQueryDevtools\"\n    });\n    const colorScheme = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.getPreferredColorScheme)();\n    const theme = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(()=>{\n        const preference = localStore.theme_preference || THEME_PREFERENCE;\n        if (preference !== \"system\") return preference;\n        return colorScheme();\n    });\n    return (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(QueryDevtoolsContext.Provider, {\n        value: props,\n        get children () {\n            return (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(PiPProvider, {\n                localStore,\n                setLocalStore,\n                get children () {\n                    return (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(ThemeContext.Provider, {\n                        value: theme,\n                        get children () {\n                            return (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(Devtools, {\n                                localStore,\n                                setLocalStore\n                            });\n                        }\n                    });\n                }\n            });\n        }\n    });\n};\n_c78 = DevtoolsComponent;\nvar Devtools_default = DevtoolsComponent;\nvar Devtools = (props)=>{\n    _s58();\n    var _s = $RefreshSig$(), _s1 = $RefreshSig$(), _s2 = $RefreshSig$();\n    const theme = useTheme();\n    const css = useQueryDevtoolsContext().shadowDOMTarget ? u.bind({\n        target: useQueryDevtoolsContext().shadowDOMTarget\n    }) : u;\n    const styles = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(()=>{\n        return theme() === \"dark\" ? darkStyles2(css) : lightStyles2(css);\n    });\n    const pip = usePiPWindow();\n    const buttonPosition = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(_s(()=>{\n        _s();\n        return useQueryDevtoolsContext().buttonPosition || BUTTON_POSITION;\n    }, \"yurpmIDLi492InJlcUnt6fCmTL4=\", false, function() {\n        return [\n            useQueryDevtoolsContext\n        ];\n    }));\n    const isOpen = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(_s1(()=>{\n        _s1();\n        return props.localStore.open === \"true\" ? true : props.localStore.open === \"false\" ? false : useQueryDevtoolsContext().initialIsOpen || INITIAL_IS_OPEN;\n    }, \"yurpmIDLi492InJlcUnt6fCmTL4=\", false, function() {\n        return [\n            useQueryDevtoolsContext\n        ];\n    }));\n    const position = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(_s2(()=>{\n        _s2();\n        return props.localStore.position || useQueryDevtoolsContext().position || POSITION;\n    }, \"yurpmIDLi492InJlcUnt6fCmTL4=\", false, function() {\n        return [\n            useQueryDevtoolsContext\n        ];\n    }));\n    let transitionsContainerRef;\n    (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createEffect)(()=>{\n        const root = transitionsContainerRef.parentElement;\n        const height = props.localStore.height || DEFAULT_HEIGHT;\n        const width = props.localStore.width || DEFAULT_WIDTH;\n        const panelPosition = position();\n        root.style.setProperty(\"--tsqd-panel-height\", \"\".concat(panelPosition === \"top\" ? \"-\" : \"\").concat(height, \"px\"));\n        root.style.setProperty(\"--tsqd-panel-width\", \"\".concat(panelPosition === \"left\" ? \"-\" : \"\").concat(width, \"px\"));\n    });\n    (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.onMount)(()=>{\n        const onFocus = ()=>{\n            const root = transitionsContainerRef.parentElement;\n            const fontSize = getComputedStyle(root).fontSize;\n            root.style.setProperty(\"--tsqd-font-size\", fontSize);\n        };\n        onFocus();\n        window.addEventListener(\"focus\", onFocus);\n        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.onCleanup)(()=>{\n            window.removeEventListener(\"focus\", onFocus);\n        });\n    });\n    const pip_open = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(()=>{\n        var _props_localStore_pip_open;\n        return (_props_localStore_pip_open = props.localStore.pip_open) !== null && _props_localStore_pip_open !== void 0 ? _props_localStore_pip_open : \"false\";\n    });\n    return [\n        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.Show, {\n            get when () {\n                return (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(()=>!!pip().pipWindow)() && pip_open() == \"true\";\n            },\n            get children () {\n                return (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.Portal, {\n                    get mount () {\n                        var _pip_pipWindow;\n                        return (_pip_pipWindow = pip().pipWindow) === null || _pip_pipWindow === void 0 ? void 0 : _pip_pipWindow.document.body;\n                    },\n                    get children () {\n                        return (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(PiPPanel, {\n                            get children () {\n                                return (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(ContentView, {\n                                    get localStore () {\n                                        return props.localStore;\n                                    },\n                                    get setLocalStore () {\n                                        return props.setLocalStore;\n                                    }\n                                });\n                            }\n                        });\n                    }\n                });\n            }\n        }),\n        (()=>{\n            const _el$ = _tmpl$26();\n            const _ref$ = transitionsContainerRef;\n            typeof _ref$ === \"function\" ? (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.use)(_ref$, _el$) : transitionsContainerRef = _el$;\n            (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$, (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(TransitionGroup, {\n                name: \"tsqd-panel-transition\",\n                get children () {\n                    return (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.Show, {\n                        get when () {\n                            return (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(()=>!!(isOpen() && !pip().pipWindow))() && pip_open() == \"false\";\n                        },\n                        get children () {\n                            return (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(DevtoolsPanel, {\n                                get localStore () {\n                                    return props.localStore;\n                                },\n                                get setLocalStore () {\n                                    return props.setLocalStore;\n                                }\n                            });\n                        }\n                    });\n                }\n            }), null);\n            (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$, (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(TransitionGroup, {\n                name: \"tsqd-button-transition\",\n                get children () {\n                    return (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.Show, {\n                        get when () {\n                            return !isOpen();\n                        },\n                        get children () {\n                            const _el$2 = _tmpl$25(), _el$3 = _el$2.firstChild, _el$4 = _el$3.nextSibling;\n                            (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$3, (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(TanstackLogo, {}));\n                            _el$4.$$click = ()=>props.setLocalStore(\"open\", \"true\");\n                            (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$4, (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(TanstackLogo, {}));\n                            (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createRenderEffect)(()=>(0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$2, clsx(styles().devtoolsBtn, styles()[\"devtoolsBtn-position-\".concat(buttonPosition())], \"tsqd-open-btn-container\")));\n                            return _el$2;\n                        }\n                    });\n                }\n            }), null);\n            (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createRenderEffect)(()=>(0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$, clsx(css(_templateObject15(), position() === \"top\" || position() === \"bottom\" ? \"transform: translateY(var(--tsqd-panel-height));\" : \"transform: translateX(var(--tsqd-panel-width));\", buttonPosition() === \"relative\" ? \"none;\" : buttonPosition() === \"top-left\" ? \"translateX(-72px);\" : buttonPosition() === \"top-right\" ? \"translateX(72px);\" : \"translateY(72px);\"), \"tsqd-transitions-container\")));\n            return _el$;\n        })()\n    ];\n};\n_s58(Devtools, \"XrBe0K5u4eAYuoLniG+H1qudW1w=\", false, function() {\n    return [\n        useTheme,\n        useQueryDevtoolsContext,\n        useQueryDevtoolsContext,\n        usePiPWindow\n    ];\n});\n_c79 = Devtools;\nvar PiPPanel = (props)=>{\n    _s59();\n    const pip = usePiPWindow();\n    const theme = useTheme();\n    const css = useQueryDevtoolsContext().shadowDOMTarget ? u.bind({\n        target: useQueryDevtoolsContext().shadowDOMTarget\n    }) : u;\n    const styles = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(()=>{\n        return theme() === \"dark\" ? darkStyles2(css) : lightStyles2(css);\n    });\n    const getPanelDynamicStyles = ()=>{\n        const { colors } = tokens;\n        const t2 = (light, dark)=>theme() === \"dark\" ? dark : light;\n        if (panelWidth() < secondBreakpoint) {\n            return css(_templateObject16(), t2(colors.gray[300], colors.gray[600]));\n        }\n        return css(_templateObject17(), t2(colors.gray[200], colors.darkGray[900]));\n    };\n    (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createEffect)(()=>{\n        const win = pip().pipWindow;\n        const resizeCB = ()=>{\n            if (!win) return;\n            setPanelWidth(win.innerWidth);\n        };\n        if (win) {\n            win.addEventListener(\"resize\", resizeCB);\n            resizeCB();\n        }\n        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.onCleanup)(()=>{\n            if (win) {\n                win.removeEventListener(\"resize\", resizeCB);\n            }\n        });\n    });\n    return (()=>{\n        const _el$5 = _tmpl$26();\n        _el$5.style.setProperty(\"--tsqd-font-size\", \"16px\");\n        _el$5.style.setProperty(\"max-height\", \"100vh\");\n        _el$5.style.setProperty(\"height\", \"100vh\");\n        _el$5.style.setProperty(\"width\", \"100vw\");\n        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$5, ()=>props.children);\n        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createRenderEffect)(()=>(0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$5, clsx(styles().panel, getPanelDynamicStyles(), {\n                [css(_templateObject18())]: panelWidth() < thirdBreakpoint\n            }, \"tsqd-main-panel\")));\n        return _el$5;\n    })();\n};\n_s59(PiPPanel, \"DvTdLguNF31vEGdVzhZvCUa0Roc=\", false, function() {\n    return [\n        usePiPWindow,\n        useTheme,\n        useQueryDevtoolsContext,\n        useQueryDevtoolsContext\n    ];\n});\n_c80 = PiPPanel;\nvar DevtoolsPanel = (props)=>{\n    _s60();\n    var _s = $RefreshSig$();\n    const theme = useTheme();\n    const css = useQueryDevtoolsContext().shadowDOMTarget ? u.bind({\n        target: useQueryDevtoolsContext().shadowDOMTarget\n    }) : u;\n    const styles = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(()=>{\n        return theme() === \"dark\" ? darkStyles2(css) : lightStyles2(css);\n    });\n    const [isResizing, setIsResizing] = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createSignal)(false);\n    const position = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(_s(()=>{\n        _s();\n        return props.localStore.position || useQueryDevtoolsContext().position || POSITION;\n    }, \"yurpmIDLi492InJlcUnt6fCmTL4=\", false, function() {\n        return [\n            useQueryDevtoolsContext\n        ];\n    }));\n    const handleDragStart = (event)=>{\n        const panelElement = event.currentTarget.parentElement;\n        if (!panelElement) return;\n        setIsResizing(true);\n        const { height, width } = panelElement.getBoundingClientRect();\n        const startX = event.clientX;\n        const startY = event.clientY;\n        let newSize = 0;\n        const minHeight = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.convertRemToPixels)(3.5);\n        const minWidth = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.convertRemToPixels)(12);\n        const runDrag = (moveEvent)=>{\n            moveEvent.preventDefault();\n            if (position() === \"left\" || position() === \"right\") {\n                const valToAdd = position() === \"right\" ? startX - moveEvent.clientX : moveEvent.clientX - startX;\n                newSize = Math.round(width + valToAdd);\n                if (newSize < minWidth) {\n                    newSize = minWidth;\n                }\n                props.setLocalStore(\"width\", String(Math.round(newSize)));\n                const newWidth = panelElement.getBoundingClientRect().width;\n                if (Number(props.localStore.width) < newWidth) {\n                    props.setLocalStore(\"width\", String(newWidth));\n                }\n            } else {\n                const valToAdd = position() === \"bottom\" ? startY - moveEvent.clientY : moveEvent.clientY - startY;\n                newSize = Math.round(height + valToAdd);\n                if (newSize < minHeight) {\n                    newSize = minHeight;\n                    setSelectedQueryHash(null);\n                }\n                props.setLocalStore(\"height\", String(Math.round(newSize)));\n            }\n        };\n        const unsubscribe = ()=>{\n            if (isResizing()) {\n                setIsResizing(false);\n            }\n            document.removeEventListener(\"mousemove\", runDrag, false);\n            document.removeEventListener(\"mouseUp\", unsubscribe, false);\n        };\n        document.addEventListener(\"mousemove\", runDrag, false);\n        document.addEventListener(\"mouseup\", unsubscribe, false);\n    };\n    let panelRef;\n    (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.onMount)(()=>{\n        createResizeObserver(panelRef, (param, el)=>{\n            let { width } = param;\n            if (el === panelRef) {\n                setPanelWidth(width);\n            }\n        });\n    });\n    (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createEffect)(()=>{\n        var _panelRef_parentElement_parentElement, _panelRef_parentElement;\n        const rootContainer = (_panelRef_parentElement = panelRef.parentElement) === null || _panelRef_parentElement === void 0 ? void 0 : (_panelRef_parentElement_parentElement = _panelRef_parentElement.parentElement) === null || _panelRef_parentElement_parentElement === void 0 ? void 0 : _panelRef_parentElement_parentElement.parentElement;\n        if (!rootContainer) return;\n        const currentPosition = props.localStore.position || POSITION;\n        const styleProp = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.getSidedProp)(\"padding\", currentPosition);\n        const isVertical = props.localStore.position === \"left\" || props.localStore.position === \"right\";\n        const previousPaddings = ((param)=>{\n            let { padding, paddingTop, paddingBottom, paddingLeft, paddingRight } = param;\n            return {\n                padding,\n                paddingTop,\n                paddingBottom,\n                paddingLeft,\n                paddingRight\n            };\n        })(rootContainer.style);\n        rootContainer.style[styleProp] = \"\".concat(isVertical ? props.localStore.width : props.localStore.height, \"px\");\n        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.onCleanup)(()=>{\n            Object.entries(previousPaddings).forEach((param)=>{\n                let [property, previousValue] = param;\n                rootContainer.style[property] = previousValue;\n            });\n        });\n    });\n    const getPanelDynamicStyles = ()=>{\n        const { colors } = tokens;\n        const t2 = (light, dark)=>theme() === \"dark\" ? dark : light;\n        if (panelWidth() < secondBreakpoint) {\n            return css(_templateObject19(), t2(colors.gray[300], colors.gray[600]));\n        }\n        return css(_templateObject20(), t2(colors.gray[200], colors.darkGray[900]));\n    };\n    return (()=>{\n        const _el$6 = _tmpl$33(), _el$7 = _el$6.firstChild, _el$8 = _el$7.nextSibling;\n        const _ref$2 = panelRef;\n        typeof _ref$2 === \"function\" ? (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.use)(_ref$2, _el$6) : panelRef = _el$6;\n        _el$7.$$mousedown = handleDragStart;\n        _el$8.$$click = ()=>props.setLocalStore(\"open\", \"false\");\n        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$8, (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(ChevronDown, {}));\n        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$6, (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(ContentView, {\n            get localStore () {\n                return props.localStore;\n            },\n            get setLocalStore () {\n                return props.setLocalStore;\n            }\n        }), null);\n        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createRenderEffect)((_p$)=>{\n            const _v$ = clsx(styles().panel, styles()[\"panel-position-\".concat(position())], getPanelDynamicStyles(), {\n                [css(_templateObject21())]: panelWidth() < thirdBreakpoint && (position() === \"right\" || position() === \"left\")\n            }, \"tsqd-main-panel\"), _v$2 = position() === \"bottom\" || position() === \"top\" ? \"\".concat(props.localStore.height || DEFAULT_HEIGHT, \"px\") : \"auto\", _v$3 = position() === \"right\" || position() === \"left\" ? \"\".concat(props.localStore.width || DEFAULT_WIDTH, \"px\") : \"auto\", _v$4 = clsx(styles().dragHandle, styles()[\"dragHandle-position-\".concat(position())], \"tsqd-drag-handle\"), _v$5 = clsx(styles().closeBtn, styles()[\"closeBtn-position-\".concat(position())], \"tsqd-minimize-btn\");\n            _v$ !== _p$._v$ && (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$6, _p$._v$ = _v$);\n            _v$2 !== _p$._v$2 && ((_p$._v$2 = _v$2) != null ? _el$6.style.setProperty(\"height\", _v$2) : _el$6.style.removeProperty(\"height\"));\n            _v$3 !== _p$._v$3 && ((_p$._v$3 = _v$3) != null ? _el$6.style.setProperty(\"width\", _v$3) : _el$6.style.removeProperty(\"width\"));\n            _v$4 !== _p$._v$4 && (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$7, _p$._v$4 = _v$4);\n            _v$5 !== _p$._v$5 && (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$8, _p$._v$5 = _v$5);\n            return _p$;\n        }, {\n            _v$: void 0,\n            _v$2: void 0,\n            _v$3: void 0,\n            _v$4: void 0,\n            _v$5: void 0\n        });\n        return _el$6;\n    })();\n};\n_s60(DevtoolsPanel, \"VKgnQsxEx0TB9skZoFPDc+w6VUc=\", false, function() {\n    return [\n        useTheme,\n        useQueryDevtoolsContext,\n        useQueryDevtoolsContext\n    ];\n});\n_c81 = DevtoolsPanel;\nvar ContentView = (props)=>{\n    _s61();\n    var _s = $RefreshSig$(), _s1 = $RefreshSig$(), _s2 = $RefreshSig$();\n    setupQueryCacheSubscription();\n    setupMutationCacheSubscription();\n    let containerRef;\n    const theme = useTheme();\n    const css = useQueryDevtoolsContext().shadowDOMTarget ? u.bind({\n        target: useQueryDevtoolsContext().shadowDOMTarget\n    }) : u;\n    const styles = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(()=>{\n        return theme() === \"dark\" ? darkStyles2(css) : lightStyles2(css);\n    });\n    const pip = usePiPWindow();\n    const [selectedView, setSelectedView] = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createSignal)(\"queries\");\n    const sort = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(()=>props.localStore.sort || DEFAULT_SORT_FN_NAME);\n    const sortOrder = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(()=>Number(props.localStore.sortOrder) || DEFAULT_SORT_ORDER);\n    const mutationSort = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(()=>props.localStore.mutationSort || DEFAULT_MUTATION_SORT_FN_NAME);\n    const mutationSortOrder = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(()=>Number(props.localStore.mutationSortOrder) || DEFAULT_SORT_ORDER);\n    const sortFn = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(()=>_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.sortFns[sort()]);\n    const mutationSortFn = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(()=>_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.mutationSortFns[mutationSort()]);\n    const onlineManager = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(_s(()=>{\n        _s();\n        return useQueryDevtoolsContext().onlineManager;\n    }, \"yurpmIDLi492InJlcUnt6fCmTL4=\", false, function() {\n        return [\n            useQueryDevtoolsContext\n        ];\n    }));\n    const query_cache = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(_s1(()=>{\n        _s1();\n        return useQueryDevtoolsContext().client.getQueryCache();\n    }, \"yurpmIDLi492InJlcUnt6fCmTL4=\", false, function() {\n        return [\n            useQueryDevtoolsContext\n        ];\n    }));\n    const mutation_cache = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(_s2(()=>{\n        _s2();\n        return useQueryDevtoolsContext().client.getMutationCache();\n    }, \"yurpmIDLi492InJlcUnt6fCmTL4=\", false, function() {\n        return [\n            useQueryDevtoolsContext\n        ];\n    }));\n    const queryCount = createSubscribeToQueryCacheBatcher((queryCache)=>{\n        return queryCache().getAll().length;\n    }, false);\n    const queries = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)((0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.on)(()=>[\n            queryCount(),\n            props.localStore.filter,\n            sort(),\n            sortOrder()\n        ], ()=>{\n        const curr = query_cache().getAll();\n        const filtered = props.localStore.filter ? curr.filter((item)=>rankItem(item.queryHash, props.localStore.filter || \"\").passed) : [\n            ...curr\n        ];\n        const sorted = sortFn() ? filtered.sort((a2, b2)=>sortFn()(a2, b2) * sortOrder()) : filtered;\n        return sorted;\n    }));\n    const mutationCount = createSubscribeToMutationCacheBatcher((mutationCache)=>{\n        return mutationCache().getAll().length;\n    }, false);\n    const mutations = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)((0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.on)(()=>[\n            mutationCount(),\n            props.localStore.mutationFilter,\n            mutationSort(),\n            mutationSortOrder()\n        ], ()=>{\n        const curr = mutation_cache().getAll();\n        const filtered = props.localStore.mutationFilter ? curr.filter((item)=>{\n            const value = \"\".concat(item.options.mutationKey ? JSON.stringify(item.options.mutationKey) + \" - \" : \"\").concat(new Date(item.state.submittedAt).toLocaleString());\n            return rankItem(value, props.localStore.mutationFilter || \"\").passed;\n        }) : [\n            ...curr\n        ];\n        const sorted = mutationSortFn() ? filtered.sort((a2, b2)=>mutationSortFn()(a2, b2) * mutationSortOrder()) : filtered;\n        return sorted;\n    }));\n    const setDevtoolsPosition = (pos)=>{\n        props.setLocalStore(\"position\", pos);\n    };\n    const setComputedVariables = (el)=>{\n        const computedStyle = getComputedStyle(containerRef);\n        const variable = computedStyle.getPropertyValue(\"--tsqd-font-size\");\n        el.style.setProperty(\"--tsqd-font-size\", variable);\n    };\n    return [\n        (()=>{\n            var _s = $RefreshSig$(), _s1 = $RefreshSig$();\n            const _el$9 = _tmpl$212(), _el$10 = _el$9.firstChild, _el$11 = _el$10.firstChild, _el$12 = _el$11.firstChild, _el$13 = _el$12.firstChild, _el$14 = _el$13.nextSibling, _el$15 = _el$14.firstChild, _el$16 = _el$10.nextSibling, _el$17 = _el$16.firstChild, _el$18 = _el$17.firstChild, _el$19 = _el$18.firstChild, _el$20 = _el$18.nextSibling, _el$23 = _el$20.nextSibling, _el$26 = _el$17.nextSibling, _el$27 = _el$26.firstChild, _el$28 = _el$27.nextSibling;\n            const _ref$3 = containerRef;\n            typeof _ref$3 === \"function\" ? (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.use)(_ref$3, _el$9) : containerRef = _el$9;\n            _el$12.$$click = ()=>{\n                if (!pip().pipWindow) {\n                    props.setLocalStore(\"open\", \"false\");\n                }\n            };\n            (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$14, _s(()=>{\n                _s();\n                return useQueryDevtoolsContext().queryFlavor;\n            }, \"yurpmIDLi492InJlcUnt6fCmTL4=\", false, function() {\n                return [\n                    useQueryDevtoolsContext\n                ];\n            }), _el$15);\n            (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$14, _s1(()=>{\n                _s1();\n                return useQueryDevtoolsContext().version;\n            }, \"yurpmIDLi492InJlcUnt6fCmTL4=\", false, function() {\n                return [\n                    useQueryDevtoolsContext\n                ];\n            }), null);\n            (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$11, (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(radio_group_exports.Root, {\n                get [\"class\"] () {\n                    return clsx(styles().viewToggle);\n                },\n                get value () {\n                    return selectedView();\n                },\n                onChange: (value)=>{\n                    setSelectedView(value);\n                    setSelectedQueryHash(null);\n                    setSelectedMutationId(null);\n                },\n                get children () {\n                    return [\n                        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(radio_group_exports.Item, {\n                            value: \"queries\",\n                            \"class\": \"tsqd-radio-toggle\",\n                            get children () {\n                                return [\n                                    (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(radio_group_exports.ItemInput, {}),\n                                    (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(radio_group_exports.ItemControl, {\n                                        get children () {\n                                            return (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(radio_group_exports.ItemIndicator, {});\n                                        }\n                                    }),\n                                    (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(radio_group_exports.ItemLabel, {\n                                        title: \"Toggle Queries View\",\n                                        children: \"Queries\"\n                                    })\n                                ];\n                            }\n                        }),\n                        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(radio_group_exports.Item, {\n                            value: \"mutations\",\n                            \"class\": \"tsqd-radio-toggle\",\n                            get children () {\n                                return [\n                                    (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(radio_group_exports.ItemInput, {}),\n                                    (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(radio_group_exports.ItemControl, {\n                                        get children () {\n                                            return (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(radio_group_exports.ItemIndicator, {});\n                                        }\n                                    }),\n                                    (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(radio_group_exports.ItemLabel, {\n                                        title: \"Toggle Mutations View\",\n                                        children: \"Mutations\"\n                                    })\n                                ];\n                            }\n                        })\n                    ];\n                }\n            }), null);\n            (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$10, (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.Show, {\n                get when () {\n                    return selectedView() === \"queries\";\n                },\n                get children () {\n                    return (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(QueryStatusCount, {});\n                }\n            }), null);\n            (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$10, (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.Show, {\n                get when () {\n                    return selectedView() === \"mutations\";\n                },\n                get children () {\n                    return (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(MutationStatusCount, {});\n                }\n            }), null);\n            (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$18, (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(Search, {}), _el$19);\n            _el$19.$$input = (e2)=>{\n                if (selectedView() === \"queries\") {\n                    props.setLocalStore(\"filter\", e2.currentTarget.value);\n                } else {\n                    props.setLocalStore(\"mutationFilter\", e2.currentTarget.value);\n                }\n            };\n            (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$20, (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.Show, {\n                get when () {\n                    return selectedView() === \"queries\";\n                },\n                get children () {\n                    const _el$21 = _tmpl$43();\n                    _el$21.addEventListener(\"change\", (e2)=>{\n                        props.setLocalStore(\"sort\", e2.currentTarget.value);\n                    });\n                    (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$21, ()=>Object.keys(_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.sortFns).map((key)=>(()=>{\n                                const _el$44 = _tmpl$223();\n                                _el$44.firstChild;\n                                _el$44.value = key;\n                                (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$44, key, null);\n                                return _el$44;\n                            })()));\n                    (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createRenderEffect)(()=>_el$21.value = sort());\n                    return _el$21;\n                }\n            }), null);\n            (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$20, (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.Show, {\n                get when () {\n                    return selectedView() === \"mutations\";\n                },\n                get children () {\n                    const _el$22 = _tmpl$53();\n                    _el$22.addEventListener(\"change\", (e2)=>{\n                        props.setLocalStore(\"mutationSort\", e2.currentTarget.value);\n                    });\n                    (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$22, ()=>Object.keys(_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.mutationSortFns).map((key)=>(()=>{\n                                const _el$46 = _tmpl$223();\n                                _el$46.firstChild;\n                                _el$46.value = key;\n                                (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$46, key, null);\n                                return _el$46;\n                            })()));\n                    (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createRenderEffect)(()=>_el$22.value = mutationSort());\n                    return _el$22;\n                }\n            }), null);\n            (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$20, (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(ChevronDown, {}), null);\n            _el$23.$$click = ()=>{\n                if (selectedView() === \"queries\") {\n                    props.setLocalStore(\"sortOrder\", String(sortOrder() * -1));\n                } else {\n                    props.setLocalStore(\"mutationSortOrder\", String(mutationSortOrder() * -1));\n                }\n            };\n            (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$23, (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.Show, {\n                get when () {\n                    return (selectedView() === \"queries\" ? sortOrder() : mutationSortOrder()) === 1;\n                },\n                get children () {\n                    return [\n                        _tmpl$63(),\n                        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(ArrowUp, {})\n                    ];\n                }\n            }), null);\n            (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$23, (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.Show, {\n                get when () {\n                    return (selectedView() === \"queries\" ? sortOrder() : mutationSortOrder()) === -1;\n                },\n                get children () {\n                    return [\n                        _tmpl$73(),\n                        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(ArrowDown, {})\n                    ];\n                }\n            }), null);\n            _el$27.$$click = ()=>{\n                if (selectedView() === \"queries\") {\n                    query_cache().clear();\n                } else {\n                    mutation_cache().clear();\n                }\n            };\n            (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$27, (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(Trash, {}));\n            _el$28.$$click = ()=>{\n                if (offline()) {\n                    onlineManager().setOnline(true);\n                    setOffline(false);\n                } else {\n                    onlineManager().setOnline(false);\n                    setOffline(true);\n                }\n            };\n            (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$28, (()=>{\n                const _c$ = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(()=>!!offline());\n                return ()=>_c$() ? (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(Offline, {}) : (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(Wifi, {});\n            })());\n            (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$26, (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.Show, {\n                get when () {\n                    return !pip().pipWindow;\n                },\n                get children () {\n                    const _el$29 = _tmpl$83();\n                    _el$29.$$click = ()=>{\n                        var _props_localStore_height;\n                        pip().requestPipWindow(Number(window.innerWidth), Number((_props_localStore_height = props.localStore.height) !== null && _props_localStore_height !== void 0 ? _props_localStore_height : 500));\n                    };\n                    (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$29, (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(PiPIcon, {}));\n                    (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createRenderEffect)(()=>(0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$29, clsx(styles().actionsBtn, \"tsqd-actions-btn\", \"tsqd-action-open-pip\")));\n                    return _el$29;\n                }\n            }), null);\n            (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$26, (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(dropdown_menu_exports.Root, {\n                gutter: 4,\n                get children () {\n                    return [\n                        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(dropdown_menu_exports.Trigger, {\n                            get [\"class\"] () {\n                                return clsx(styles().actionsBtn, \"tsqd-actions-btn\", \"tsqd-action-settings\");\n                            },\n                            get children () {\n                                return (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(Settings, {});\n                            }\n                        }),\n                        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(dropdown_menu_exports.Portal, {\n                            ref: (el)=>setComputedVariables(el),\n                            get mount () {\n                                return (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(()=>!!pip().pipWindow)() ? pip().pipWindow.document.body : document.body;\n                            },\n                            get children () {\n                                return (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(dropdown_menu_exports.Content, {\n                                    get [\"class\"] () {\n                                        return clsx(styles().settingsMenu, \"tsqd-settings-menu\");\n                                    },\n                                    get children () {\n                                        return [\n                                            (()=>{\n                                                const _el$30 = _tmpl$93();\n                                                (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createRenderEffect)(()=>(0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$30, clsx(styles().settingsMenuHeader, \"tsqd-settings-menu-header\")));\n                                                return _el$30;\n                                            })(),\n                                            (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(dropdown_menu_exports.Sub, {\n                                                overlap: true,\n                                                gutter: 8,\n                                                shift: -4,\n                                                get children () {\n                                                    return [\n                                                        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(dropdown_menu_exports.SubTrigger, {\n                                                            get [\"class\"] () {\n                                                                return clsx(styles().settingsSubTrigger, \"tsqd-settings-menu-sub-trigger\", \"tsqd-settings-menu-sub-trigger-position\");\n                                                            },\n                                                            get children () {\n                                                                return [\n                                                                    _tmpl$103(),\n                                                                    (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(ChevronDown, {})\n                                                                ];\n                                                            }\n                                                        }),\n                                                        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(dropdown_menu_exports.Portal, {\n                                                            ref: (el)=>setComputedVariables(el),\n                                                            get mount () {\n                                                                return (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(()=>!!pip().pipWindow)() ? pip().pipWindow.document.body : document.body;\n                                                            },\n                                                            get children () {\n                                                                return (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(dropdown_menu_exports.SubContent, {\n                                                                    get [\"class\"] () {\n                                                                        return clsx(styles().settingsMenu, \"tsqd-settings-submenu\");\n                                                                    },\n                                                                    get children () {\n                                                                        return [\n                                                                            (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(dropdown_menu_exports.Item, {\n                                                                                onSelect: ()=>{\n                                                                                    setDevtoolsPosition(\"top\");\n                                                                                },\n                                                                                as: \"button\",\n                                                                                get [\"class\"] () {\n                                                                                    return clsx(styles().settingsSubButton, \"tsqd-settings-menu-position-btn\", \"tsqd-settings-menu-position-btn-top\");\n                                                                                },\n                                                                                get children () {\n                                                                                    return [\n                                                                                        _tmpl$113(),\n                                                                                        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(ArrowUp, {})\n                                                                                    ];\n                                                                                }\n                                                                            }),\n                                                                            (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(dropdown_menu_exports.Item, {\n                                                                                onSelect: ()=>{\n                                                                                    setDevtoolsPosition(\"bottom\");\n                                                                                },\n                                                                                as: \"button\",\n                                                                                get [\"class\"] () {\n                                                                                    return clsx(styles().settingsSubButton, \"tsqd-settings-menu-position-btn\", \"tsqd-settings-menu-position-btn-bottom\");\n                                                                                },\n                                                                                get children () {\n                                                                                    return [\n                                                                                        _tmpl$122(),\n                                                                                        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(ArrowDown, {})\n                                                                                    ];\n                                                                                }\n                                                                            }),\n                                                                            (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(dropdown_menu_exports.Item, {\n                                                                                onSelect: ()=>{\n                                                                                    setDevtoolsPosition(\"left\");\n                                                                                },\n                                                                                as: \"button\",\n                                                                                get [\"class\"] () {\n                                                                                    return clsx(styles().settingsSubButton, \"tsqd-settings-menu-position-btn\", \"tsqd-settings-menu-position-btn-left\");\n                                                                                },\n                                                                                get children () {\n                                                                                    return [\n                                                                                        _tmpl$132(),\n                                                                                        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(ArrowLeft, {})\n                                                                                    ];\n                                                                                }\n                                                                            }),\n                                                                            (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(dropdown_menu_exports.Item, {\n                                                                                onSelect: ()=>{\n                                                                                    setDevtoolsPosition(\"right\");\n                                                                                },\n                                                                                as: \"button\",\n                                                                                get [\"class\"] () {\n                                                                                    return clsx(styles().settingsSubButton, \"tsqd-settings-menu-position-btn\", \"tsqd-settings-menu-position-btn-right\");\n                                                                                },\n                                                                                get children () {\n                                                                                    return [\n                                                                                        _tmpl$142(),\n                                                                                        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(ArrowRight, {})\n                                                                                    ];\n                                                                                }\n                                                                            })\n                                                                        ];\n                                                                    }\n                                                                });\n                                                            }\n                                                        })\n                                                    ];\n                                                }\n                                            }),\n                                            (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(dropdown_menu_exports.Sub, {\n                                                overlap: true,\n                                                gutter: 8,\n                                                shift: -4,\n                                                get children () {\n                                                    return [\n                                                        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(dropdown_menu_exports.SubTrigger, {\n                                                            get [\"class\"] () {\n                                                                return clsx(styles().settingsSubTrigger, \"tsqd-settings-menu-sub-trigger\", \"tsqd-settings-menu-sub-trigger-position\");\n                                                            },\n                                                            get children () {\n                                                                return [\n                                                                    _tmpl$152(),\n                                                                    (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(ChevronDown, {})\n                                                                ];\n                                                            }\n                                                        }),\n                                                        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(dropdown_menu_exports.Portal, {\n                                                            ref: (el)=>setComputedVariables(el),\n                                                            get mount () {\n                                                                return (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(()=>!!pip().pipWindow)() ? pip().pipWindow.document.body : document.body;\n                                                            },\n                                                            get children () {\n                                                                return (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(dropdown_menu_exports.SubContent, {\n                                                                    get [\"class\"] () {\n                                                                        return clsx(styles().settingsMenu, \"tsqd-settings-submenu\");\n                                                                    },\n                                                                    get children () {\n                                                                        return [\n                                                                            (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(dropdown_menu_exports.Item, {\n                                                                                onSelect: ()=>{\n                                                                                    props.setLocalStore(\"theme_preference\", \"light\");\n                                                                                },\n                                                                                as: \"button\",\n                                                                                get [\"class\"] () {\n                                                                                    return clsx(styles().settingsSubButton, props.localStore.theme_preference === \"light\" && styles().themeSelectedButton, \"tsqd-settings-menu-position-btn\", \"tsqd-settings-menu-position-btn-top\");\n                                                                                },\n                                                                                get children () {\n                                                                                    return [\n                                                                                        _tmpl$162(),\n                                                                                        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(Sun, {})\n                                                                                    ];\n                                                                                }\n                                                                            }),\n                                                                            (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(dropdown_menu_exports.Item, {\n                                                                                onSelect: ()=>{\n                                                                                    props.setLocalStore(\"theme_preference\", \"dark\");\n                                                                                },\n                                                                                as: \"button\",\n                                                                                get [\"class\"] () {\n                                                                                    return clsx(styles().settingsSubButton, props.localStore.theme_preference === \"dark\" && styles().themeSelectedButton, \"tsqd-settings-menu-position-btn\", \"tsqd-settings-menu-position-btn-bottom\");\n                                                                                },\n                                                                                get children () {\n                                                                                    return [\n                                                                                        _tmpl$172(),\n                                                                                        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(Moon, {})\n                                                                                    ];\n                                                                                }\n                                                                            }),\n                                                                            (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(dropdown_menu_exports.Item, {\n                                                                                onSelect: ()=>{\n                                                                                    props.setLocalStore(\"theme_preference\", \"system\");\n                                                                                },\n                                                                                as: \"button\",\n                                                                                get [\"class\"] () {\n                                                                                    return clsx(styles().settingsSubButton, props.localStore.theme_preference === \"system\" && styles().themeSelectedButton, \"tsqd-settings-menu-position-btn\", \"tsqd-settings-menu-position-btn-left\");\n                                                                                },\n                                                                                get children () {\n                                                                                    return [\n                                                                                        _tmpl$182(),\n                                                                                        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(Monitor, {})\n                                                                                    ];\n                                                                                }\n                                                                            })\n                                                                        ];\n                                                                    }\n                                                                });\n                                                            }\n                                                        })\n                                                    ];\n                                                }\n                                            })\n                                        ];\n                                    }\n                                });\n                            }\n                        })\n                    ];\n                }\n            }), null);\n            (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$9, (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.Show, {\n                get when () {\n                    return selectedView() === \"queries\";\n                },\n                get children () {\n                    const _el$40 = _tmpl$192(), _el$41 = _el$40.firstChild;\n                    (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$41, (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(Key, {\n                        by: (q)=>q.queryHash,\n                        get each () {\n                            return queries();\n                        },\n                        children: (query)=>(0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(QueryRow, {\n                                get query () {\n                                    return query();\n                                }\n                            })\n                    }));\n                    (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createRenderEffect)(()=>(0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$40, clsx(styles().overflowQueryContainer, \"tsqd-queries-overflow-container\")));\n                    return _el$40;\n                }\n            }), null);\n            (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$9, (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.Show, {\n                get when () {\n                    return selectedView() === \"mutations\";\n                },\n                get children () {\n                    const _el$42 = _tmpl$202(), _el$43 = _el$42.firstChild;\n                    (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$43, (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(Key, {\n                        by: (m)=>m.mutationId,\n                        get each () {\n                            return mutations();\n                        },\n                        children: (mutation)=>(0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(MutationRow, {\n                                get mutation () {\n                                    return mutation();\n                                }\n                            })\n                    }));\n                    (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createRenderEffect)(()=>(0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$42, clsx(styles().overflowQueryContainer, \"tsqd-mutations-overflow-container\")));\n                    return _el$42;\n                }\n            }), null);\n            (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createRenderEffect)((_p$)=>{\n                const _v$6 = clsx(styles().queriesContainer, panelWidth() < secondBreakpoint && (selectedQueryHash() || selectedMutationId()) && css(_templateObject22()), panelWidth() < secondBreakpoint && !(selectedQueryHash() || selectedMutationId()) && css(_templateObject23()), \"tsqd-queries-container\"), _v$7 = clsx(styles().row, \"tsqd-header\"), _v$8 = styles().logoAndToggleContainer, _v$9 = clsx(styles().logo, \"tsqd-text-logo-container\"), _v$10 = clsx(styles().tanstackLogo, \"tsqd-text-logo-tanstack\"), _v$11 = clsx(styles().queryFlavorLogo, \"tsqd-text-logo-query-flavor\"), _v$12 = clsx(styles().row, \"tsqd-filters-actions-container\"), _v$13 = clsx(styles().filtersContainer, \"tsqd-filters-container\"), _v$14 = clsx(styles().filterInput, \"tsqd-query-filter-textfield-container\"), _v$15 = clsx(\"tsqd-query-filter-textfield\"), _v$16 = clsx(styles().filterSelect, \"tsqd-query-filter-sort-container\"), _v$17 = \"Sort order \".concat((selectedView() === \"queries\" ? sortOrder() : mutationSortOrder()) === -1 ? \"descending\" : \"ascending\"), _v$18 = (selectedView() === \"queries\" ? sortOrder() : mutationSortOrder()) === -1, _v$19 = clsx(styles().actionsContainer, \"tsqd-actions-container\"), _v$20 = clsx(styles().actionsBtn, \"tsqd-actions-btn\", \"tsqd-action-clear-cache\"), _v$21 = \"Clear \".concat(selectedView(), \" cache\"), _v$22 = clsx(styles().actionsBtn, offline() && styles().actionsBtnOffline, \"tsqd-actions-btn\", \"tsqd-action-mock-offline-behavior\"), _v$23 = \"\".concat(offline() ? \"Unset offline mocking behavior\" : \"Mock offline behavior\"), _v$24 = offline(), _v$25 = \"\".concat(offline() ? \"Unset offline mocking behavior\" : \"Mock offline behavior\");\n                _v$6 !== _p$._v$6 && (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$9, _p$._v$6 = _v$6);\n                _v$7 !== _p$._v$7 && (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$10, _p$._v$7 = _v$7);\n                _v$8 !== _p$._v$8 && (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$11, _p$._v$8 = _v$8);\n                _v$9 !== _p$._v$9 && (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$12, _p$._v$9 = _v$9);\n                _v$10 !== _p$._v$10 && (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$13, _p$._v$10 = _v$10);\n                _v$11 !== _p$._v$11 && (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$14, _p$._v$11 = _v$11);\n                _v$12 !== _p$._v$12 && (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$16, _p$._v$12 = _v$12);\n                _v$13 !== _p$._v$13 && (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$17, _p$._v$13 = _v$13);\n                _v$14 !== _p$._v$14 && (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$18, _p$._v$14 = _v$14);\n                _v$15 !== _p$._v$15 && (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$19, _p$._v$15 = _v$15);\n                _v$16 !== _p$._v$16 && (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$20, _p$._v$16 = _v$16);\n                _v$17 !== _p$._v$17 && (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$23, \"aria-label\", _p$._v$17 = _v$17);\n                _v$18 !== _p$._v$18 && (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$23, \"aria-pressed\", _p$._v$18 = _v$18);\n                _v$19 !== _p$._v$19 && (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$26, _p$._v$19 = _v$19);\n                _v$20 !== _p$._v$20 && (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$27, _p$._v$20 = _v$20);\n                _v$21 !== _p$._v$21 && (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$27, \"title\", _p$._v$21 = _v$21);\n                _v$22 !== _p$._v$22 && (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$28, _p$._v$22 = _v$22);\n                _v$23 !== _p$._v$23 && (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$28, \"aria-label\", _p$._v$23 = _v$23);\n                _v$24 !== _p$._v$24 && (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$28, \"aria-pressed\", _p$._v$24 = _v$24);\n                _v$25 !== _p$._v$25 && (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$28, \"title\", _p$._v$25 = _v$25);\n                return _p$;\n            }, {\n                _v$6: void 0,\n                _v$7: void 0,\n                _v$8: void 0,\n                _v$9: void 0,\n                _v$10: void 0,\n                _v$11: void 0,\n                _v$12: void 0,\n                _v$13: void 0,\n                _v$14: void 0,\n                _v$15: void 0,\n                _v$16: void 0,\n                _v$17: void 0,\n                _v$18: void 0,\n                _v$19: void 0,\n                _v$20: void 0,\n                _v$21: void 0,\n                _v$22: void 0,\n                _v$23: void 0,\n                _v$24: void 0,\n                _v$25: void 0\n            });\n            (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createRenderEffect)(()=>_el$19.value = selectedView() === \"queries\" ? props.localStore.filter || \"\" : props.localStore.mutationFilter || \"\");\n            return _el$9;\n        })(),\n        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.Show, {\n            get when () {\n                return (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(()=>selectedView() === \"queries\")() && selectedQueryHash();\n            },\n            get children () {\n                return (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(QueryDetails, {});\n            }\n        }),\n        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.Show, {\n            get when () {\n                return (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(()=>selectedView() === \"mutations\")() && selectedMutationId();\n            },\n            get children () {\n                return (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(MutationDetails, {});\n            }\n        })\n    ];\n};\n_s61(ContentView, \"XrBe0K5u4eAYuoLniG+H1qudW1w=\", false, function() {\n    return [\n        useTheme,\n        useQueryDevtoolsContext,\n        useQueryDevtoolsContext,\n        usePiPWindow\n    ];\n});\n_c82 = ContentView;\nvar QueryRow = (props)=>{\n    _s62();\n    const theme = useTheme();\n    const css = useQueryDevtoolsContext().shadowDOMTarget ? u.bind({\n        target: useQueryDevtoolsContext().shadowDOMTarget\n    }) : u;\n    const styles = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(()=>{\n        return theme() === \"dark\" ? darkStyles2(css) : lightStyles2(css);\n    });\n    const { colors, alpha } = tokens;\n    const t2 = (light, dark)=>theme() === \"dark\" ? dark : light;\n    const queryState = createSubscribeToQueryCacheBatcher((queryCache)=>{\n        var _queryCache_find;\n        return (_queryCache_find = queryCache().find({\n            queryKey: props.query.queryKey\n        })) === null || _queryCache_find === void 0 ? void 0 : _queryCache_find.state;\n    }, true, (e2)=>e2.query.queryHash === props.query.queryHash);\n    const isDisabled = createSubscribeToQueryCacheBatcher((queryCache)=>{\n        var _queryCache_find;\n        var _queryCache_find_isDisabled;\n        return (_queryCache_find_isDisabled = (_queryCache_find = queryCache().find({\n            queryKey: props.query.queryKey\n        })) === null || _queryCache_find === void 0 ? void 0 : _queryCache_find.isDisabled()) !== null && _queryCache_find_isDisabled !== void 0 ? _queryCache_find_isDisabled : false;\n    }, true, (e2)=>e2.query.queryHash === props.query.queryHash);\n    const isStale = createSubscribeToQueryCacheBatcher((queryCache)=>{\n        var _queryCache_find;\n        var _queryCache_find_isStale;\n        return (_queryCache_find_isStale = (_queryCache_find = queryCache().find({\n            queryKey: props.query.queryKey\n        })) === null || _queryCache_find === void 0 ? void 0 : _queryCache_find.isStale()) !== null && _queryCache_find_isStale !== void 0 ? _queryCache_find_isStale : false;\n    }, true, (e2)=>e2.query.queryHash === props.query.queryHash);\n    const observers = createSubscribeToQueryCacheBatcher((queryCache)=>{\n        var _queryCache_find;\n        var _queryCache_find_getObserversCount;\n        return (_queryCache_find_getObserversCount = (_queryCache_find = queryCache().find({\n            queryKey: props.query.queryKey\n        })) === null || _queryCache_find === void 0 ? void 0 : _queryCache_find.getObserversCount()) !== null && _queryCache_find_getObserversCount !== void 0 ? _queryCache_find_getObserversCount : 0;\n    }, true, (e2)=>e2.query.queryHash === props.query.queryHash);\n    const color = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(()=>(0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.getQueryStatusColor)({\n            queryState: queryState(),\n            observerCount: observers(),\n            isStale: isStale()\n        }));\n    const getObserverCountColorStyles = ()=>{\n        if (color() === \"gray\") {\n            return css(_templateObject24(), t2(colors[color()][200], colors[color()][700]), t2(colors[color()][700], colors[color()][300]));\n        }\n        return css(_templateObject25(), t2(colors[color()][200] + alpha[80], colors[color()][900]), t2(colors[color()][800], colors[color()][300]));\n    };\n    return (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.Show, {\n        get when () {\n            return queryState();\n        },\n        get children () {\n            const _el$48 = _tmpl$242(), _el$49 = _el$48.firstChild, _el$50 = _el$49.nextSibling;\n            _el$48.$$click = ()=>setSelectedQueryHash(props.query.queryHash === selectedQueryHash() ? null : props.query.queryHash);\n            (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$49, observers);\n            (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$50, ()=>props.query.queryHash);\n            (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$48, (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.Show, {\n                get when () {\n                    return isDisabled();\n                },\n                get children () {\n                    return _tmpl$232();\n                }\n            }), null);\n            (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createRenderEffect)((_p$)=>{\n                const _v$26 = clsx(styles().queryRow, selectedQueryHash() === props.query.queryHash && styles().selectedQueryRow, \"tsqd-query-row\"), _v$27 = \"Query key \".concat(props.query.queryHash), _v$28 = clsx(getObserverCountColorStyles(), \"tsqd-query-observer-count\");\n                _v$26 !== _p$._v$26 && (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$48, _p$._v$26 = _v$26);\n                _v$27 !== _p$._v$27 && (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$48, \"aria-label\", _p$._v$27 = _v$27);\n                _v$28 !== _p$._v$28 && (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$49, _p$._v$28 = _v$28);\n                return _p$;\n            }, {\n                _v$26: void 0,\n                _v$27: void 0,\n                _v$28: void 0\n            });\n            return _el$48;\n        }\n    });\n};\n_s62(QueryRow, \"VKgnQsxEx0TB9skZoFPDc+w6VUc=\", false, function() {\n    return [\n        useTheme,\n        useQueryDevtoolsContext,\n        useQueryDevtoolsContext\n    ];\n});\n_c83 = QueryRow;\nvar MutationRow = (props)=>{\n    _s63();\n    const theme = useTheme();\n    const css = useQueryDevtoolsContext().shadowDOMTarget ? u.bind({\n        target: useQueryDevtoolsContext().shadowDOMTarget\n    }) : u;\n    const styles = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(()=>{\n        return theme() === \"dark\" ? darkStyles2(css) : lightStyles2(css);\n    });\n    const { colors, alpha } = tokens;\n    const t2 = (light, dark)=>theme() === \"dark\" ? dark : light;\n    const mutationState = createSubscribeToMutationCacheBatcher((mutationCache)=>{\n        const mutations = mutationCache().getAll();\n        const mutation = mutations.find((m)=>m.mutationId === props.mutation.mutationId);\n        return mutation === null || mutation === void 0 ? void 0 : mutation.state;\n    });\n    const isPaused = createSubscribeToMutationCacheBatcher((mutationCache)=>{\n        const mutations = mutationCache().getAll();\n        const mutation = mutations.find((m)=>m.mutationId === props.mutation.mutationId);\n        if (!mutation) return false;\n        return mutation.state.isPaused;\n    });\n    const status = createSubscribeToMutationCacheBatcher((mutationCache)=>{\n        const mutations = mutationCache().getAll();\n        const mutation = mutations.find((m)=>m.mutationId === props.mutation.mutationId);\n        if (!mutation) return \"idle\";\n        return mutation.state.status;\n    });\n    const color = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(()=>(0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.getMutationStatusColor)({\n            isPaused: isPaused(),\n            status: status()\n        }));\n    const getObserverCountColorStyles = ()=>{\n        if (color() === \"gray\") {\n            return css(_templateObject26(), t2(colors[color()][200], colors[color()][700]), t2(colors[color()][700], colors[color()][300]));\n        }\n        return css(_templateObject27(), t2(colors[color()][200] + alpha[80], colors[color()][900]), t2(colors[color()][800], colors[color()][300]));\n    };\n    return (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.Show, {\n        get when () {\n            return mutationState();\n        },\n        get children () {\n            const _el$52 = _tmpl$242(), _el$53 = _el$52.firstChild, _el$54 = _el$53.nextSibling;\n            _el$52.$$click = ()=>{\n                setSelectedMutationId(props.mutation.mutationId === selectedMutationId() ? null : props.mutation.mutationId);\n            };\n            (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$53, (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.Show, {\n                get when () {\n                    return color() === \"purple\";\n                },\n                get children () {\n                    return (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(PauseCircle, {});\n                }\n            }), null);\n            (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$53, (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.Show, {\n                get when () {\n                    return color() === \"green\";\n                },\n                get children () {\n                    return (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(CheckCircle, {});\n                }\n            }), null);\n            (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$53, (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.Show, {\n                get when () {\n                    return color() === \"red\";\n                },\n                get children () {\n                    return (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(XCircle, {});\n                }\n            }), null);\n            (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$53, (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.Show, {\n                get when () {\n                    return color() === \"yellow\";\n                },\n                get children () {\n                    return (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(LoadingCircle, {});\n                }\n            }), null);\n            (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$54, (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.Show, {\n                get when () {\n                    return props.mutation.options.mutationKey;\n                },\n                get children () {\n                    return [\n                        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(()=>JSON.stringify(props.mutation.options.mutationKey)),\n                        \" -\",\n                        \" \"\n                    ];\n                }\n            }), null);\n            (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$54, ()=>new Date(props.mutation.state.submittedAt).toLocaleString(), null);\n            (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createRenderEffect)((_p$)=>{\n                const _v$29 = clsx(styles().queryRow, selectedMutationId() === props.mutation.mutationId && styles().selectedQueryRow, \"tsqd-query-row\"), _v$30 = \"Mutation submitted at \".concat(new Date(props.mutation.state.submittedAt).toLocaleString()), _v$31 = clsx(getObserverCountColorStyles(), \"tsqd-query-observer-count\");\n                _v$29 !== _p$._v$29 && (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$52, _p$._v$29 = _v$29);\n                _v$30 !== _p$._v$30 && (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$52, \"aria-label\", _p$._v$30 = _v$30);\n                _v$31 !== _p$._v$31 && (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$53, _p$._v$31 = _v$31);\n                return _p$;\n            }, {\n                _v$29: void 0,\n                _v$30: void 0,\n                _v$31: void 0\n            });\n            return _el$52;\n        }\n    });\n};\n_s63(MutationRow, \"VKgnQsxEx0TB9skZoFPDc+w6VUc=\", false, function() {\n    return [\n        useTheme,\n        useQueryDevtoolsContext,\n        useQueryDevtoolsContext\n    ];\n});\n_c84 = MutationRow;\nvar QueryStatusCount = ()=>{\n    _s64();\n    const stale = createSubscribeToQueryCacheBatcher((queryCache)=>queryCache().getAll().filter((q)=>(0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.getQueryStatusLabel)(q) === \"stale\").length);\n    const fresh = createSubscribeToQueryCacheBatcher((queryCache)=>queryCache().getAll().filter((q)=>(0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.getQueryStatusLabel)(q) === \"fresh\").length);\n    const fetching = createSubscribeToQueryCacheBatcher((queryCache)=>queryCache().getAll().filter((q)=>(0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.getQueryStatusLabel)(q) === \"fetching\").length);\n    const paused = createSubscribeToQueryCacheBatcher((queryCache)=>queryCache().getAll().filter((q)=>(0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.getQueryStatusLabel)(q) === \"paused\").length);\n    const inactive = createSubscribeToQueryCacheBatcher((queryCache)=>queryCache().getAll().filter((q)=>(0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.getQueryStatusLabel)(q) === \"inactive\").length);\n    const theme = useTheme();\n    const css = useQueryDevtoolsContext().shadowDOMTarget ? u.bind({\n        target: useQueryDevtoolsContext().shadowDOMTarget\n    }) : u;\n    const styles = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(()=>{\n        return theme() === \"dark\" ? darkStyles2(css) : lightStyles2(css);\n    });\n    return (()=>{\n        const _el$55 = _tmpl$26();\n        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$55, (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(QueryStatus, {\n            label: \"Fresh\",\n            color: \"green\",\n            get count () {\n                return fresh();\n            }\n        }), null);\n        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$55, (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(QueryStatus, {\n            label: \"Fetching\",\n            color: \"blue\",\n            get count () {\n                return fetching();\n            }\n        }), null);\n        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$55, (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(QueryStatus, {\n            label: \"Paused\",\n            color: \"purple\",\n            get count () {\n                return paused();\n            }\n        }), null);\n        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$55, (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(QueryStatus, {\n            label: \"Stale\",\n            color: \"yellow\",\n            get count () {\n                return stale();\n            }\n        }), null);\n        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$55, (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(QueryStatus, {\n            label: \"Inactive\",\n            color: \"gray\",\n            get count () {\n                return inactive();\n            }\n        }), null);\n        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createRenderEffect)(()=>(0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$55, clsx(styles().queryStatusContainer, \"tsqd-query-status-container\")));\n        return _el$55;\n    })();\n};\n_s64(QueryStatusCount, \"VKgnQsxEx0TB9skZoFPDc+w6VUc=\", false, function() {\n    return [\n        useTheme,\n        useQueryDevtoolsContext,\n        useQueryDevtoolsContext\n    ];\n});\n_c85 = QueryStatusCount;\nvar MutationStatusCount = ()=>{\n    _s65();\n    const success = createSubscribeToMutationCacheBatcher((mutationCache)=>mutationCache().getAll().filter((m)=>(0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.getMutationStatusColor)({\n                isPaused: m.state.isPaused,\n                status: m.state.status\n            }) === \"green\").length);\n    const pending = createSubscribeToMutationCacheBatcher((mutationCache)=>mutationCache().getAll().filter((m)=>(0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.getMutationStatusColor)({\n                isPaused: m.state.isPaused,\n                status: m.state.status\n            }) === \"yellow\").length);\n    const paused = createSubscribeToMutationCacheBatcher((mutationCache)=>mutationCache().getAll().filter((m)=>(0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.getMutationStatusColor)({\n                isPaused: m.state.isPaused,\n                status: m.state.status\n            }) === \"purple\").length);\n    const error = createSubscribeToMutationCacheBatcher((mutationCache)=>mutationCache().getAll().filter((m)=>(0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.getMutationStatusColor)({\n                isPaused: m.state.isPaused,\n                status: m.state.status\n            }) === \"red\").length);\n    const theme = useTheme();\n    const css = useQueryDevtoolsContext().shadowDOMTarget ? u.bind({\n        target: useQueryDevtoolsContext().shadowDOMTarget\n    }) : u;\n    const styles = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(()=>{\n        return theme() === \"dark\" ? darkStyles2(css) : lightStyles2(css);\n    });\n    return (()=>{\n        const _el$56 = _tmpl$26();\n        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$56, (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(QueryStatus, {\n            label: \"Paused\",\n            color: \"purple\",\n            get count () {\n                return paused();\n            }\n        }), null);\n        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$56, (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(QueryStatus, {\n            label: \"Pending\",\n            color: \"yellow\",\n            get count () {\n                return pending();\n            }\n        }), null);\n        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$56, (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(QueryStatus, {\n            label: \"Success\",\n            color: \"green\",\n            get count () {\n                return success();\n            }\n        }), null);\n        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$56, (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(QueryStatus, {\n            label: \"Error\",\n            color: \"red\",\n            get count () {\n                return error();\n            }\n        }), null);\n        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createRenderEffect)(()=>(0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$56, clsx(styles().queryStatusContainer, \"tsqd-query-status-container\")));\n        return _el$56;\n    })();\n};\n_s65(MutationStatusCount, \"VKgnQsxEx0TB9skZoFPDc+w6VUc=\", false, function() {\n    return [\n        useTheme,\n        useQueryDevtoolsContext,\n        useQueryDevtoolsContext\n    ];\n});\n_c86 = MutationStatusCount;\nvar QueryStatus = (props)=>{\n    _s66();\n    const theme = useTheme();\n    const css = useQueryDevtoolsContext().shadowDOMTarget ? u.bind({\n        target: useQueryDevtoolsContext().shadowDOMTarget\n    }) : u;\n    const styles = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(()=>{\n        return theme() === \"dark\" ? darkStyles2(css) : lightStyles2(css);\n    });\n    const { colors, alpha } = tokens;\n    const t2 = (light, dark)=>theme() === \"dark\" ? dark : light;\n    let tagRef;\n    const [mouseOver, setMouseOver] = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createSignal)(false);\n    const [focused, setFocused] = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createSignal)(false);\n    const showLabel = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(()=>{\n        if (selectedQueryHash()) {\n            if (panelWidth() < firstBreakpoint && panelWidth() > secondBreakpoint) {\n                return false;\n            }\n        }\n        if (panelWidth() < thirdBreakpoint) {\n            return false;\n        }\n        return true;\n    });\n    return (()=>{\n        const _el$57 = _tmpl$27(), _el$59 = _el$57.firstChild, _el$61 = _el$59.nextSibling;\n        const _ref$4 = tagRef;\n        typeof _ref$4 === \"function\" ? (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.use)(_ref$4, _el$57) : tagRef = _el$57;\n        _el$57.addEventListener(\"mouseleave\", ()=>{\n            setMouseOver(false);\n            setFocused(false);\n        });\n        _el$57.addEventListener(\"mouseenter\", ()=>setMouseOver(true));\n        _el$57.addEventListener(\"blur\", ()=>setFocused(false));\n        _el$57.addEventListener(\"focus\", ()=>setFocused(true));\n        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.spread)(_el$57, (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.mergeProps)({\n            get disabled () {\n                return showLabel();\n            },\n            get [\"class\"] () {\n                return clsx(styles().queryStatusTag, !showLabel() && css(_templateObject28(), t2(colors.gray[200], colors.darkGray[400]), alpha[80]), \"tsqd-query-status-tag\", \"tsqd-query-status-tag-\".concat(props.label.toLowerCase()));\n            }\n        }, ()=>mouseOver() || focused() ? {\n                \"aria-describedby\": \"tsqd-status-tooltip\"\n            } : {}), false, true);\n        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$57, (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.Show, {\n            get when () {\n                return (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(()=>!!!showLabel())() && (mouseOver() || focused());\n            },\n            get children () {\n                const _el$58 = _tmpl$252();\n                (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$58, ()=>props.label);\n                (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createRenderEffect)(()=>(0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$58, clsx(styles().statusTooltip, \"tsqd-query-status-tooltip\")));\n                return _el$58;\n            }\n        }), _el$59);\n        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$57, (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.Show, {\n            get when () {\n                return showLabel();\n            },\n            get children () {\n                const _el$60 = _tmpl$262();\n                (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$60, ()=>props.label);\n                (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createRenderEffect)(()=>(0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$60, clsx(styles().queryStatusTagLabel, \"tsqd-query-status-tag-label\")));\n                return _el$60;\n            }\n        }), _el$61);\n        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$61, ()=>props.count);\n        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createRenderEffect)((_p$)=>{\n            const _v$32 = clsx(css(_templateObject29(), tokens.size[1.5], tokens.size[1.5], tokens.border.radius.full, tokens.colors[props.color][500]), \"tsqd-query-status-tag-dot\"), _v$33 = clsx(styles().queryStatusCount, props.count > 0 && props.color !== \"gray\" && css(_templateObject30(), t2(colors[props.color][100], colors[props.color][900]), t2(colors[props.color][700], colors[props.color][300])), \"tsqd-query-status-tag-count\");\n            _v$32 !== _p$._v$32 && (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$59, _p$._v$32 = _v$32);\n            _v$33 !== _p$._v$33 && (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$61, _p$._v$33 = _v$33);\n            return _p$;\n        }, {\n            _v$32: void 0,\n            _v$33: void 0\n        });\n        return _el$57;\n    })();\n};\n_s66(QueryStatus, \"VKgnQsxEx0TB9skZoFPDc+w6VUc=\", false, function() {\n    return [\n        useTheme,\n        useQueryDevtoolsContext,\n        useQueryDevtoolsContext\n    ];\n});\n_c87 = QueryStatus;\nvar QueryDetails = ()=>{\n    _s67();\n    var _s = $RefreshSig$();\n    const theme = useTheme();\n    const css = useQueryDevtoolsContext().shadowDOMTarget ? u.bind({\n        target: useQueryDevtoolsContext().shadowDOMTarget\n    }) : u;\n    const styles = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(()=>{\n        return theme() === \"dark\" ? darkStyles2(css) : lightStyles2(css);\n    });\n    const { colors } = tokens;\n    const t2 = (light, dark)=>theme() === \"dark\" ? dark : light;\n    const queryClient = useQueryDevtoolsContext().client;\n    const [restoringLoading, setRestoringLoading] = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createSignal)(false);\n    const errorTypes = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(_s(()=>{\n        _s();\n        return useQueryDevtoolsContext().errorTypes || [];\n    }, \"yurpmIDLi492InJlcUnt6fCmTL4=\", false, function() {\n        return [\n            useQueryDevtoolsContext\n        ];\n    }));\n    const activeQuery = createSubscribeToQueryCacheBatcher((queryCache)=>queryCache().getAll().find((query)=>query.queryHash === selectedQueryHash()), false);\n    const activeQueryFresh = createSubscribeToQueryCacheBatcher((queryCache)=>{\n        return queryCache().getAll().find((query)=>query.queryHash === selectedQueryHash());\n    }, false);\n    const activeQueryState = createSubscribeToQueryCacheBatcher((queryCache)=>{\n        var _queryCache_getAll_find;\n        return (_queryCache_getAll_find = queryCache().getAll().find((query)=>query.queryHash === selectedQueryHash())) === null || _queryCache_getAll_find === void 0 ? void 0 : _queryCache_getAll_find.state;\n    }, false);\n    const activeQueryStateData = createSubscribeToQueryCacheBatcher((queryCache)=>{\n        var _queryCache_getAll_find;\n        return (_queryCache_getAll_find = queryCache().getAll().find((query)=>query.queryHash === selectedQueryHash())) === null || _queryCache_getAll_find === void 0 ? void 0 : _queryCache_getAll_find.state.data;\n    }, false);\n    const statusLabel = createSubscribeToQueryCacheBatcher((queryCache)=>{\n        const query = queryCache().getAll().find((q)=>q.queryHash === selectedQueryHash());\n        if (!query) return \"inactive\";\n        return (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.getQueryStatusLabel)(query);\n    });\n    const queryStatus = createSubscribeToQueryCacheBatcher((queryCache)=>{\n        const query = queryCache().getAll().find((q)=>q.queryHash === selectedQueryHash());\n        if (!query) return \"pending\";\n        return query.state.status;\n    });\n    const observerCount = createSubscribeToQueryCacheBatcher((queryCache)=>{\n        var _queryCache_getAll_find;\n        var _queryCache_getAll_find_getObserversCount;\n        return (_queryCache_getAll_find_getObserversCount = (_queryCache_getAll_find = queryCache().getAll().find((query)=>query.queryHash === selectedQueryHash())) === null || _queryCache_getAll_find === void 0 ? void 0 : _queryCache_getAll_find.getObserversCount()) !== null && _queryCache_getAll_find_getObserversCount !== void 0 ? _queryCache_getAll_find_getObserversCount : 0;\n    });\n    const color = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(()=>(0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.getQueryStatusColorByLabel)(statusLabel()));\n    const handleRefetch = ()=>{\n        var _activeQuery;\n        const promise = (_activeQuery = activeQuery()) === null || _activeQuery === void 0 ? void 0 : _activeQuery.fetch();\n        promise === null || promise === void 0 ? void 0 : promise.catch(()=>{});\n    };\n    const triggerError = (errorType)=>{\n        var _errorType_initializer;\n        const error = (_errorType_initializer = errorType === null || errorType === void 0 ? void 0 : errorType.initializer(activeQuery())) !== null && _errorType_initializer !== void 0 ? _errorType_initializer : new Error(\"Unknown error from devtools\");\n        const __previousQueryOptions = activeQuery().options;\n        activeQuery().setState({\n            status: \"error\",\n            error,\n            fetchMeta: {\n                ...activeQuery().state.fetchMeta,\n                __previousQueryOptions\n            }\n        });\n    };\n    const restoreQueryAfterLoadingOrError = ()=>{\n        const activeQueryVal = activeQuery();\n        const previousState = activeQueryVal.state;\n        const previousOptions = activeQueryVal.state.fetchMeta.__previousQueryOptions;\n        activeQueryVal.cancel({\n            silent: true\n        });\n        activeQueryVal.setState({\n            ...previousState,\n            fetchStatus: \"idle\",\n            fetchMeta: null\n        });\n        activeQueryVal.fetch(previousOptions);\n    };\n    (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createEffect)(()=>{\n        if (statusLabel() !== \"fetching\") {\n            setRestoringLoading(false);\n        }\n    });\n    const getQueryStatusColors = ()=>{\n        if (color() === \"gray\") {\n            return css(_templateObject31(), t2(colors[color()][200], colors[color()][700]), t2(colors[color()][700], colors[color()][300]), t2(colors[color()][400], colors[color()][600]));\n        }\n        return css(_templateObject32(), t2(colors[color()][100], colors[color()][900]), t2(colors[color()][700], colors[color()][300]), t2(colors[color()][400], colors[color()][600]));\n    };\n    return (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.Show, {\n        get when () {\n            return (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(()=>!!activeQuery())() && activeQueryState();\n        },\n        get children () {\n            const _el$62 = _tmpl$30(), _el$63 = _el$62.firstChild, _el$64 = _el$63.nextSibling, _el$65 = _el$64.firstChild, _el$66 = _el$65.firstChild, _el$67 = _el$66.firstChild, _el$68 = _el$66.nextSibling, _el$69 = _el$65.nextSibling, _el$70 = _el$69.firstChild, _el$71 = _el$70.nextSibling, _el$72 = _el$69.nextSibling, _el$73 = _el$72.firstChild, _el$74 = _el$73.nextSibling, _el$75 = _el$64.nextSibling, _el$76 = _el$75.nextSibling, _el$77 = _el$76.firstChild, _el$78 = _el$77.firstChild, _el$79 = _el$77.nextSibling, _el$80 = _el$79.firstChild, _el$81 = _el$79.nextSibling, _el$82 = _el$81.firstChild, _el$83 = _el$81.nextSibling, _el$84 = _el$83.firstChild, _el$85 = _el$83.nextSibling, _el$86 = _el$85.firstChild, _el$87 = _el$86.nextSibling, _el$96 = _el$76.nextSibling, _el$97 = _el$96.nextSibling, _el$98 = _el$97.nextSibling, _el$99 = _el$98.nextSibling;\n            (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$67, ()=>(0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.displayValue)(activeQuery().queryKey, true));\n            (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$68, statusLabel);\n            (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$71, observerCount);\n            (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$74, ()=>new Date(activeQueryState().dataUpdatedAt).toLocaleTimeString());\n            _el$77.$$click = handleRefetch;\n            _el$79.$$click = ()=>queryClient.invalidateQueries(activeQuery());\n            _el$81.$$click = ()=>queryClient.resetQueries(activeQuery());\n            _el$83.$$click = ()=>{\n                queryClient.removeQueries(activeQuery());\n                setSelectedQueryHash(null);\n            };\n            _el$85.$$click = ()=>{\n                var _activeQuery;\n                if (((_activeQuery = activeQuery()) === null || _activeQuery === void 0 ? void 0 : _activeQuery.state.data) === void 0) {\n                    setRestoringLoading(true);\n                    restoreQueryAfterLoadingOrError();\n                } else {\n                    const activeQueryVal = activeQuery();\n                    if (!activeQueryVal) return;\n                    const __previousQueryOptions = activeQueryVal.options;\n                    activeQueryVal.fetch({\n                        ...__previousQueryOptions,\n                        queryFn: ()=>{\n                            return new Promise(()=>{});\n                        },\n                        gcTime: -1\n                    });\n                    activeQueryVal.setState({\n                        data: void 0,\n                        status: \"pending\",\n                        fetchMeta: {\n                            ...activeQueryVal.state.fetchMeta,\n                            __previousQueryOptions\n                        }\n                    });\n                }\n            };\n            (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$85, ()=>queryStatus() === \"pending\" ? \"Restore\" : \"Trigger\", _el$87);\n            (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$76, (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.Show, {\n                get when () {\n                    return errorTypes().length === 0 || queryStatus() === \"error\";\n                },\n                get children () {\n                    const _el$88 = _tmpl$28(), _el$89 = _el$88.firstChild, _el$90 = _el$89.nextSibling;\n                    _el$88.$$click = ()=>{\n                        if (!activeQuery().state.error) {\n                            triggerError();\n                        } else {\n                            queryClient.resetQueries(activeQuery());\n                        }\n                    };\n                    (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$88, ()=>queryStatus() === \"error\" ? \"Restore\" : \"Trigger\", _el$90);\n                    (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createRenderEffect)((_p$)=>{\n                        const _v$34 = clsx(css(_templateObject33(), t2(colors.red[500], colors.red[400])), \"tsqd-query-details-actions-btn\", \"tsqd-query-details-action-error\"), _v$35 = queryStatus() === \"pending\", _v$36 = css(_templateObject34(), t2(colors.red[500], colors.red[400]));\n                        _v$34 !== _p$._v$34 && (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$88, _p$._v$34 = _v$34);\n                        _v$35 !== _p$._v$35 && (_el$88.disabled = _p$._v$35 = _v$35);\n                        _v$36 !== _p$._v$36 && (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$89, _p$._v$36 = _v$36);\n                        return _p$;\n                    }, {\n                        _v$34: void 0,\n                        _v$35: void 0,\n                        _v$36: void 0\n                    });\n                    return _el$88;\n                }\n            }), null);\n            (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$76, (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.Show, {\n                get when () {\n                    return !(errorTypes().length === 0 || queryStatus() === \"error\");\n                },\n                get children () {\n                    const _el$91 = _tmpl$29(), _el$92 = _el$91.firstChild, _el$93 = _el$92.nextSibling, _el$94 = _el$93.nextSibling;\n                    _el$94.firstChild;\n                    _el$94.addEventListener(\"change\", (e2)=>{\n                        const errorType = errorTypes().find((et)=>et.name === e2.currentTarget.value);\n                        triggerError(errorType);\n                    });\n                    (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$94, (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.For, {\n                        get each () {\n                            return errorTypes();\n                        },\n                        children: (errorType)=>(()=>{\n                                const _el$100 = _tmpl$31();\n                                (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$100, ()=>errorType.name);\n                                (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createRenderEffect)(()=>_el$100.value = errorType.name);\n                                return _el$100;\n                            })()\n                    }), null);\n                    (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$91, (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(ChevronDown, {}), null);\n                    (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createRenderEffect)((_p$)=>{\n                        const _v$37 = clsx(styles().actionsSelect, \"tsqd-query-details-actions-btn\", \"tsqd-query-details-action-error-multiple\"), _v$38 = css(_templateObject35(), tokens.colors.red[400]), _v$39 = queryStatus() === \"pending\";\n                        _v$37 !== _p$._v$37 && (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$91, _p$._v$37 = _v$37);\n                        _v$38 !== _p$._v$38 && (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$92, _p$._v$38 = _v$38);\n                        _v$39 !== _p$._v$39 && (_el$94.disabled = _p$._v$39 = _v$39);\n                        return _p$;\n                    }, {\n                        _v$37: void 0,\n                        _v$38: void 0,\n                        _v$39: void 0\n                    });\n                    return _el$91;\n                }\n            }), null);\n            (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$97, (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(Explorer, {\n                label: \"Data\",\n                defaultExpanded: [\n                    \"Data\"\n                ],\n                get value () {\n                    return activeQueryStateData();\n                },\n                editable: true,\n                get activeQuery () {\n                    return activeQuery();\n                }\n            }));\n            (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$99, (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(Explorer, {\n                label: \"Query\",\n                defaultExpanded: [\n                    \"Query\",\n                    \"queryKey\"\n                ],\n                get value () {\n                    return activeQueryFresh();\n                }\n            }));\n            (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createRenderEffect)((_p$)=>{\n                const _v$40 = clsx(styles().detailsContainer, \"tsqd-query-details-container\"), _v$41 = clsx(styles().detailsHeader, \"tsqd-query-details-header\"), _v$42 = clsx(styles().detailsBody, \"tsqd-query-details-summary-container\"), _v$43 = clsx(styles().queryDetailsStatus, getQueryStatusColors()), _v$44 = clsx(styles().detailsHeader, \"tsqd-query-details-header\"), _v$45 = clsx(styles().actionsBody, \"tsqd-query-details-actions-container\"), _v$46 = clsx(css(_templateObject36(), t2(colors.blue[600], colors.blue[400])), \"tsqd-query-details-actions-btn\", \"tsqd-query-details-action-refetch\"), _v$47 = statusLabel() === \"fetching\", _v$48 = css(_templateObject37(), t2(colors.blue[600], colors.blue[400])), _v$49 = clsx(css(_templateObject38(), t2(colors.yellow[600], colors.yellow[400])), \"tsqd-query-details-actions-btn\", \"tsqd-query-details-action-invalidate\"), _v$50 = queryStatus() === \"pending\", _v$51 = css(_templateObject39(), t2(colors.yellow[600], colors.yellow[400])), _v$52 = clsx(css(_templateObject40(), t2(colors.gray[600], colors.gray[300])), \"tsqd-query-details-actions-btn\", \"tsqd-query-details-action-reset\"), _v$53 = queryStatus() === \"pending\", _v$54 = css(_templateObject41(), t2(colors.gray[600], colors.gray[400])), _v$55 = clsx(css(_templateObject42(), t2(colors.pink[500], colors.pink[400])), \"tsqd-query-details-actions-btn\", \"tsqd-query-details-action-remove\"), _v$56 = statusLabel() === \"fetching\", _v$57 = css(_templateObject43(), t2(colors.pink[500], colors.pink[400])), _v$58 = clsx(css(_templateObject44(), t2(colors.cyan[500], colors.cyan[400])), \"tsqd-query-details-actions-btn\", \"tsqd-query-details-action-loading\"), _v$59 = restoringLoading(), _v$60 = css(_templateObject45(), t2(colors.cyan[500], colors.cyan[400])), _v$61 = clsx(styles().detailsHeader, \"tsqd-query-details-header\"), _v$62 = tokens.size[2], _v$63 = clsx(styles().detailsHeader, \"tsqd-query-details-header\"), _v$64 = tokens.size[2];\n                _v$40 !== _p$._v$40 && (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$62, _p$._v$40 = _v$40);\n                _v$41 !== _p$._v$41 && (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$63, _p$._v$41 = _v$41);\n                _v$42 !== _p$._v$42 && (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$64, _p$._v$42 = _v$42);\n                _v$43 !== _p$._v$43 && (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$68, _p$._v$43 = _v$43);\n                _v$44 !== _p$._v$44 && (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$75, _p$._v$44 = _v$44);\n                _v$45 !== _p$._v$45 && (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$76, _p$._v$45 = _v$45);\n                _v$46 !== _p$._v$46 && (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$77, _p$._v$46 = _v$46);\n                _v$47 !== _p$._v$47 && (_el$77.disabled = _p$._v$47 = _v$47);\n                _v$48 !== _p$._v$48 && (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$78, _p$._v$48 = _v$48);\n                _v$49 !== _p$._v$49 && (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$79, _p$._v$49 = _v$49);\n                _v$50 !== _p$._v$50 && (_el$79.disabled = _p$._v$50 = _v$50);\n                _v$51 !== _p$._v$51 && (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$80, _p$._v$51 = _v$51);\n                _v$52 !== _p$._v$52 && (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$81, _p$._v$52 = _v$52);\n                _v$53 !== _p$._v$53 && (_el$81.disabled = _p$._v$53 = _v$53);\n                _v$54 !== _p$._v$54 && (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$82, _p$._v$54 = _v$54);\n                _v$55 !== _p$._v$55 && (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$83, _p$._v$55 = _v$55);\n                _v$56 !== _p$._v$56 && (_el$83.disabled = _p$._v$56 = _v$56);\n                _v$57 !== _p$._v$57 && (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$84, _p$._v$57 = _v$57);\n                _v$58 !== _p$._v$58 && (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$85, _p$._v$58 = _v$58);\n                _v$59 !== _p$._v$59 && (_el$85.disabled = _p$._v$59 = _v$59);\n                _v$60 !== _p$._v$60 && (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$86, _p$._v$60 = _v$60);\n                _v$61 !== _p$._v$61 && (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$96, _p$._v$61 = _v$61);\n                _v$62 !== _p$._v$62 && ((_p$._v$62 = _v$62) != null ? _el$97.style.setProperty(\"padding\", _v$62) : _el$97.style.removeProperty(\"padding\"));\n                _v$63 !== _p$._v$63 && (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$98, _p$._v$63 = _v$63);\n                _v$64 !== _p$._v$64 && ((_p$._v$64 = _v$64) != null ? _el$99.style.setProperty(\"padding\", _v$64) : _el$99.style.removeProperty(\"padding\"));\n                return _p$;\n            }, {\n                _v$40: void 0,\n                _v$41: void 0,\n                _v$42: void 0,\n                _v$43: void 0,\n                _v$44: void 0,\n                _v$45: void 0,\n                _v$46: void 0,\n                _v$47: void 0,\n                _v$48: void 0,\n                _v$49: void 0,\n                _v$50: void 0,\n                _v$51: void 0,\n                _v$52: void 0,\n                _v$53: void 0,\n                _v$54: void 0,\n                _v$55: void 0,\n                _v$56: void 0,\n                _v$57: void 0,\n                _v$58: void 0,\n                _v$59: void 0,\n                _v$60: void 0,\n                _v$61: void 0,\n                _v$62: void 0,\n                _v$63: void 0,\n                _v$64: void 0\n            });\n            return _el$62;\n        }\n    });\n};\n_s67(QueryDetails, \"bdrA9ToaP9TDZuQDD0vhjyGEaUs=\", false, function() {\n    return [\n        useTheme,\n        useQueryDevtoolsContext,\n        useQueryDevtoolsContext,\n        useQueryDevtoolsContext\n    ];\n});\n_c88 = QueryDetails;\nvar MutationDetails = ()=>{\n    _s68();\n    const theme = useTheme();\n    const css = useQueryDevtoolsContext().shadowDOMTarget ? u.bind({\n        target: useQueryDevtoolsContext().shadowDOMTarget\n    }) : u;\n    const styles = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(()=>{\n        return theme() === \"dark\" ? darkStyles2(css) : lightStyles2(css);\n    });\n    const { colors } = tokens;\n    const t2 = (light, dark)=>theme() === \"dark\" ? dark : light;\n    const isPaused = createSubscribeToMutationCacheBatcher((mutationCache)=>{\n        const mutations = mutationCache().getAll();\n        const mutation = mutations.find((m)=>m.mutationId === selectedMutationId());\n        if (!mutation) return false;\n        return mutation.state.isPaused;\n    });\n    const status = createSubscribeToMutationCacheBatcher((mutationCache)=>{\n        const mutations = mutationCache().getAll();\n        const mutation = mutations.find((m)=>m.mutationId === selectedMutationId());\n        if (!mutation) return \"idle\";\n        return mutation.state.status;\n    });\n    const color = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(()=>(0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.getMutationStatusColor)({\n            isPaused: isPaused(),\n            status: status()\n        }));\n    const activeMutation = createSubscribeToMutationCacheBatcher((mutationCache)=>mutationCache().getAll().find((mutation)=>mutation.mutationId === selectedMutationId()), false);\n    const getQueryStatusColors = ()=>{\n        if (color() === \"gray\") {\n            return css(_templateObject46(), t2(colors[color()][200], colors[color()][700]), t2(colors[color()][700], colors[color()][300]), t2(colors[color()][400], colors[color()][600]));\n        }\n        return css(_templateObject47(), t2(colors[color()][100], colors[color()][900]), t2(colors[color()][700], colors[color()][300]), t2(colors[color()][400], colors[color()][600]));\n    };\n    return (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.Show, {\n        get when () {\n            return activeMutation();\n        },\n        get children () {\n            const _el$101 = _tmpl$322(), _el$102 = _el$101.firstChild, _el$103 = _el$102.nextSibling, _el$104 = _el$103.firstChild, _el$105 = _el$104.firstChild, _el$106 = _el$105.firstChild, _el$107 = _el$105.nextSibling, _el$108 = _el$104.nextSibling, _el$109 = _el$108.firstChild, _el$110 = _el$109.nextSibling, _el$111 = _el$103.nextSibling, _el$112 = _el$111.nextSibling, _el$113 = _el$112.nextSibling, _el$114 = _el$113.nextSibling, _el$115 = _el$114.nextSibling, _el$116 = _el$115.nextSibling, _el$117 = _el$116.nextSibling, _el$118 = _el$117.nextSibling;\n            (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$106, (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.Show, {\n                get when () {\n                    return activeMutation().options.mutationKey;\n                },\n                fallback: \"No mutationKey found\",\n                get children () {\n                    return (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.displayValue)(activeMutation().options.mutationKey, true);\n                }\n            }));\n            (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$107, (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.Show, {\n                get when () {\n                    return color() === \"purple\";\n                },\n                children: \"pending\"\n            }), null);\n            (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$107, (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.Show, {\n                get when () {\n                    return color() !== \"purple\";\n                },\n                get children () {\n                    return status();\n                }\n            }), null);\n            (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$110, ()=>new Date(activeMutation().state.submittedAt).toLocaleTimeString());\n            (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$112, (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(Explorer, {\n                label: \"Variables\",\n                defaultExpanded: [\n                    \"Variables\"\n                ],\n                get value () {\n                    return activeMutation().state.variables;\n                }\n            }));\n            (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$114, (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(Explorer, {\n                label: \"Context\",\n                defaultExpanded: [\n                    \"Context\"\n                ],\n                get value () {\n                    return activeMutation().state.context;\n                }\n            }));\n            (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$116, (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(Explorer, {\n                label: \"Data\",\n                defaultExpanded: [\n                    \"Data\"\n                ],\n                get value () {\n                    return activeMutation().state.data;\n                }\n            }));\n            (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$118, (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(Explorer, {\n                label: \"Mutation\",\n                defaultExpanded: [\n                    \"Mutation\"\n                ],\n                get value () {\n                    return activeMutation();\n                }\n            }));\n            (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createRenderEffect)((_p$)=>{\n                const _v$65 = clsx(styles().detailsContainer, \"tsqd-query-details-container\"), _v$66 = clsx(styles().detailsHeader, \"tsqd-query-details-header\"), _v$67 = clsx(styles().detailsBody, \"tsqd-query-details-summary-container\"), _v$68 = clsx(styles().queryDetailsStatus, getQueryStatusColors()), _v$69 = clsx(styles().detailsHeader, \"tsqd-query-details-header\"), _v$70 = tokens.size[2], _v$71 = clsx(styles().detailsHeader, \"tsqd-query-details-header\"), _v$72 = tokens.size[2], _v$73 = clsx(styles().detailsHeader, \"tsqd-query-details-header\"), _v$74 = tokens.size[2], _v$75 = clsx(styles().detailsHeader, \"tsqd-query-details-header\"), _v$76 = tokens.size[2];\n                _v$65 !== _p$._v$65 && (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$101, _p$._v$65 = _v$65);\n                _v$66 !== _p$._v$66 && (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$102, _p$._v$66 = _v$66);\n                _v$67 !== _p$._v$67 && (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$103, _p$._v$67 = _v$67);\n                _v$68 !== _p$._v$68 && (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$107, _p$._v$68 = _v$68);\n                _v$69 !== _p$._v$69 && (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$111, _p$._v$69 = _v$69);\n                _v$70 !== _p$._v$70 && ((_p$._v$70 = _v$70) != null ? _el$112.style.setProperty(\"padding\", _v$70) : _el$112.style.removeProperty(\"padding\"));\n                _v$71 !== _p$._v$71 && (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$113, _p$._v$71 = _v$71);\n                _v$72 !== _p$._v$72 && ((_p$._v$72 = _v$72) != null ? _el$114.style.setProperty(\"padding\", _v$72) : _el$114.style.removeProperty(\"padding\"));\n                _v$73 !== _p$._v$73 && (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$115, _p$._v$73 = _v$73);\n                _v$74 !== _p$._v$74 && ((_p$._v$74 = _v$74) != null ? _el$116.style.setProperty(\"padding\", _v$74) : _el$116.style.removeProperty(\"padding\"));\n                _v$75 !== _p$._v$75 && (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$117, _p$._v$75 = _v$75);\n                _v$76 !== _p$._v$76 && ((_p$._v$76 = _v$76) != null ? _el$118.style.setProperty(\"padding\", _v$76) : _el$118.style.removeProperty(\"padding\"));\n                return _p$;\n            }, {\n                _v$65: void 0,\n                _v$66: void 0,\n                _v$67: void 0,\n                _v$68: void 0,\n                _v$69: void 0,\n                _v$70: void 0,\n                _v$71: void 0,\n                _v$72: void 0,\n                _v$73: void 0,\n                _v$74: void 0,\n                _v$75: void 0,\n                _v$76: void 0\n            });\n            return _el$101;\n        }\n    });\n};\n_s68(MutationDetails, \"VKgnQsxEx0TB9skZoFPDc+w6VUc=\", false, function() {\n    return [\n        useTheme,\n        useQueryDevtoolsContext,\n        useQueryDevtoolsContext\n    ];\n});\n_c89 = MutationDetails;\nvar queryCacheMap = /* @__PURE__ */ new Map();\nvar setupQueryCacheSubscription = ()=>{\n    var _s = $RefreshSig$();\n    const queryCache = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(_s(()=>{\n        _s();\n        const client = useQueryDevtoolsContext().client;\n        return client.getQueryCache();\n    }, \"yurpmIDLi492InJlcUnt6fCmTL4=\", false, function() {\n        return [\n            useQueryDevtoolsContext\n        ];\n    }));\n    const unsubscribe = queryCache().subscribe((q)=>{\n        (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.batch)(()=>{\n            for (const [callback, value] of queryCacheMap.entries()){\n                if (!value.shouldUpdate(q)) continue;\n                value.setter(callback(queryCache));\n            }\n        });\n    });\n    (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.onCleanup)(()=>{\n        queryCacheMap.clear();\n        unsubscribe();\n    });\n    return unsubscribe;\n};\nvar createSubscribeToQueryCacheBatcher = function(callback) {\n    let equalityCheck = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : true, shouldUpdate = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : ()=>true;\n    var _s = $RefreshSig$();\n    const queryCache = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(_s(()=>{\n        _s();\n        const client = useQueryDevtoolsContext().client;\n        return client.getQueryCache();\n    }, \"yurpmIDLi492InJlcUnt6fCmTL4=\", false, function() {\n        return [\n            useQueryDevtoolsContext\n        ];\n    }));\n    const [value, setValue] = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createSignal)(callback(queryCache), !equalityCheck ? {\n        equals: false\n    } : void 0);\n    (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createEffect)(()=>{\n        setValue(callback(queryCache));\n    });\n    queryCacheMap.set(callback, {\n        setter: setValue,\n        shouldUpdate\n    });\n    (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.onCleanup)(()=>{\n        queryCacheMap.delete(callback);\n    });\n    return value;\n};\nvar mutationCacheMap = /* @__PURE__ */ new Map();\nvar setupMutationCacheSubscription = ()=>{\n    var _s = $RefreshSig$();\n    const mutationCache = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(_s(()=>{\n        _s();\n        const client = useQueryDevtoolsContext().client;\n        return client.getMutationCache();\n    }, \"yurpmIDLi492InJlcUnt6fCmTL4=\", false, function() {\n        return [\n            useQueryDevtoolsContext\n        ];\n    }));\n    const unsubscribe = mutationCache().subscribe(()=>{\n        for (const [callback, setter] of mutationCacheMap.entries()){\n            queueMicrotask(()=>{\n                setter(callback(mutationCache));\n            });\n        }\n    });\n    (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.onCleanup)(()=>{\n        mutationCacheMap.clear();\n        unsubscribe();\n    });\n    return unsubscribe;\n};\nvar createSubscribeToMutationCacheBatcher = function(callback) {\n    let equalityCheck = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : true;\n    var _s = $RefreshSig$();\n    const mutationCache = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(_s(()=>{\n        _s();\n        const client = useQueryDevtoolsContext().client;\n        return client.getMutationCache();\n    }, \"yurpmIDLi492InJlcUnt6fCmTL4=\", false, function() {\n        return [\n            useQueryDevtoolsContext\n        ];\n    }));\n    const [value, setValue] = (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createSignal)(callback(mutationCache), !equalityCheck ? {\n        equals: false\n    } : void 0);\n    (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.createEffect)(()=>{\n        setValue(callback(mutationCache));\n    });\n    mutationCacheMap.set(callback, setValue);\n    (0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.onCleanup)(()=>{\n        mutationCacheMap.delete(callback);\n    });\n    return value;\n};\nvar stylesFactory2 = (theme, css)=>{\n    const { colors, font, size: size3, alpha, shadow, border } = tokens;\n    const t2 = (light, dark)=>theme === \"light\" ? light : dark;\n    return {\n        devtoolsBtn: css(_templateObject48(), shadow.md(), colors.green[600]),\n        panel: css(_templateObject49(), tokens.size[0.5], t2(colors.gray[300], colors.darkGray[200]), t2(colors.gray[400], colors.darkGray[300])),\n        \"devtoolsBtn-position-bottom-right\": css(_templateObject50()),\n        \"devtoolsBtn-position-bottom-left\": css(_templateObject51()),\n        \"devtoolsBtn-position-top-left\": css(_templateObject52()),\n        \"devtoolsBtn-position-top-right\": css(_templateObject53()),\n        \"devtoolsBtn-position-relative\": css(_templateObject54()),\n        \"panel-position-top\": css(_templateObject55(), size3[14], t2(colors.gray[400], colors.darkGray[300])),\n        \"panel-position-bottom\": css(_templateObject56(), size3[14], t2(colors.gray[400], colors.darkGray[300])),\n        \"panel-position-right\": css(_templateObject57(), t2(colors.gray[400], colors.darkGray[300])),\n        \"panel-position-left\": css(_templateObject58(), t2(colors.gray[400], colors.darkGray[300])),\n        closeBtn: css(_templateObject59(), t2(colors.gray[50], colors.darkGray[700]), t2(colors.gray[200], colors.darkGray[500]), colors.blue[600], t2(colors.gray[600], colors.gray[400]), size3[2], size3[2]),\n        \"closeBtn-position-top\": css(_templateObject60(), size3[2], t2(colors.gray[400], colors.darkGray[300]), t2(colors.gray[400], colors.darkGray[300]), t2(colors.gray[400], colors.darkGray[300]), border.radius.sm, border.radius.sm, size3[0.5], size3[1.5], size3[1], size3[1.5], size3[2.5], size3[1.5], size3[5]),\n        \"closeBtn-position-bottom\": css(_templateObject61(), size3[2], t2(colors.gray[400], colors.darkGray[300]), t2(colors.gray[400], colors.darkGray[300]), t2(colors.gray[400], colors.darkGray[300]), border.radius.sm, border.radius.sm, size3[1], size3[1.5], size3[0.5], size3[1.5], size3[2.5], size3[1.5], size3[5]),\n        \"closeBtn-position-right\": css(_templateObject62(), size3[2], t2(colors.gray[400], colors.darkGray[300]), t2(colors.gray[400], colors.darkGray[300]), t2(colors.gray[400], colors.darkGray[300]), border.radius.sm, border.radius.sm, size3[1.5], size3[0.5], size3[1.5], size3[1], size3[5], size3[1.5]),\n        \"closeBtn-position-left\": css(_templateObject63(), size3[2], t2(colors.gray[400], colors.darkGray[300]), t2(colors.gray[400], colors.darkGray[300]), t2(colors.gray[400], colors.darkGray[300]), border.radius.sm, border.radius.sm, size3[1.5], size3[1], size3[1.5], size3[0.5], size3[5], size3[1.5]),\n        queriesContainer: css(_templateObject64(), t2(colors.gray[50], colors.darkGray[700])),\n        dragHandle: css(_templateObject65(), colors.purple[400], t2(\"\", alpha[90])),\n        \"dragHandle-position-top\": css(_templateObject66()),\n        \"dragHandle-position-bottom\": css(_templateObject67()),\n        \"dragHandle-position-right\": css(_templateObject68()),\n        \"dragHandle-position-left\": css(_templateObject69()),\n        row: css(_templateObject70(), tokens.size[2], tokens.size[2.5], tokens.size[2.5], t2(colors.gray[300], colors.darkGray[500]), size3[0.5]),\n        logoAndToggleContainer: css(_templateObject71(), tokens.size[3]),\n        logo: css(_templateObject72(), tokens.size[0.5], border.radius.xs, colors.blue[800]),\n        tanstackLogo: css(_templateObject73(), font.size.md, font.weight.bold, font.lineHeight.xs, t2(colors.gray[600], colors.gray[300])),\n        queryFlavorLogo: css(_templateObject74(), font.weight.semibold, font.size.xs, t2(\"#ea4037, #ff9b11\", \"#dd524b, #e9a03b\")),\n        queryStatusContainer: css(_templateObject75(), tokens.size[2]),\n        queryStatusTag: css(_templateObject76(), tokens.size[1.5], tokens.size[6.5], t2(colors.gray[50], colors.darkGray[500]), t2(colors.gray[700], colors.gray[300]), tokens.border.radius.sm, font.size.sm, tokens.size[1], tokens.size[1.5], font.weight.medium, t2(\"1px solid \" + colors.gray[300], \"1px solid transparent\"), colors.blue[800]),\n        queryStatusTagLabel: css(_templateObject77(), font.size.xs),\n        queryStatusCount: css(_templateObject78(), font.size.xs, t2(colors.gray[500], colors.gray[400]), t2(colors.gray[200], colors.darkGray[300]), tokens.size[4.5]),\n        statusTooltip: css(_templateObject79(), t2(colors.gray[50], colors.darkGray[500]), tokens.size[2], tokens.size[0.5], tokens.size[2], tokens.border.radius.sm, font.size.xs, t2(colors.gray[400], colors.gray[600]), t2(colors[\"gray\"][600], colors[\"gray\"][300]), t2(colors.gray[400], colors.gray[600]), t2(colors.gray[100], colors.darkGray[500])),\n        filtersContainer: css(_templateObject80(), tokens.size[2], tokens.size[0.5], tokens.size[1.5], tokens.size[0.5], tokens.size[2], tokens.border.radius.sm, t2(colors.gray[100], colors.darkGray[400]), t2(colors.gray[300], colors.darkGray[200]), t2(colors.gray[700], colors.gray[300]), font.size.xs, font.lineHeight.sm, tokens.size[1.5], border.radius.xs, colors.blue[800], tokens.size[3], tokens.size[3], t2(colors.gray[500], colors.gray[400])),\n        filterInput: css(_templateObject81(), size3[0.5], size3[2], tokens.border.radius.sm, t2(colors.gray[100], colors.darkGray[400]), tokens.size[1.5], t2(colors.gray[300], colors.darkGray[200]), t2(colors.gray[600], colors.gray[400]), size3[3], size3[3], font.size.xs, t2(colors.gray[100], colors.darkGray[400]), font.lineHeight.sm, t2(colors.gray[700], colors.gray[300]), t2(colors.gray[700], colors.gray[300]), border.radius.xs, colors.blue[800]),\n        filterSelect: css(_templateObject82(), tokens.size[0.5], tokens.size[2], tokens.border.radius.sm, t2(colors.gray[100], colors.darkGray[400]), tokens.size[1.5], t2(colors.gray[300], colors.darkGray[200]), t2(colors.gray[600], colors.gray[400]), tokens.size[2], tokens.size[2], t2(colors.gray[700], colors.gray[300]), font.lineHeight.sm, font.size.xs, t2(colors.gray[100], colors.darkGray[400]), border.radius.xs, colors.blue[800]),\n        actionsContainer: css(_templateObject83(), tokens.size[2]),\n        actionsBtn: css(_templateObject84(), tokens.border.radius.sm, t2(colors.gray[100], colors.darkGray[400]), t2(colors.gray[300], colors.darkGray[200]), tokens.size[6.5], tokens.size[6.5], tokens.size[1.5], t2(colors.gray[200], colors.darkGray[500]), t2(colors.gray[700], colors.gray[300]), tokens.size[3], tokens.size[3], border.radius.xs, colors.blue[800]),\n        actionsBtnOffline: css(_templateObject85(), t2(colors.yellow[700], colors.yellow[500]), t2(colors.yellow[700], colors.yellow[500])),\n        overflowQueryContainer: css(_templateObject86()),\n        queryRow: css(_templateObject87(), t2(colors.gray[700], colors.gray[300]), t2(colors.gray[50], colors.darkGray[700]), border.radius.xs, colors.blue[800], t2(colors.gray[200], colors.darkGray[600]), tokens.size[1], tokens.size[6.5], font.size.xs, font.weight.medium, t2(colors.gray[300], colors.darkGray[700]), font.size.xs, tokens.size[6], tokens.size[1], tokens.size[2], t2(colors.gray[300], colors.darkGray[400]), tokens.size[2], t2(colors.gray[800], colors.gray[300]), t2(colors.gray[300], colors.darkGray[600]), t2(colors.gray[300], colors.darkGray[400]), font.size.xs),\n        selectedQueryRow: css(_templateObject88(), t2(colors.gray[200], colors.darkGray[500])),\n        detailsContainer: css(_templateObject89(), t2(colors.gray[50], colors.darkGray[700]), t2(colors.gray[700], colors.gray[300])),\n        detailsHeader: css(_templateObject90(), t2(colors.gray[200], colors.darkGray[600]), tokens.size[1.5], tokens.size[2], font.weight.medium, font.size.xs, font.lineHeight.xs),\n        detailsBody: css(_templateObject91(), tokens.size[1.5], tokens.size[2], tokens.size[2], font.lineHeight.sm, font.size.xs, tokens.size[1.5], font.size.xs, font.lineHeight.xs),\n        queryDetailsStatus: css(_templateObject92(), colors.darkGray[200], tokens.border.radius.sm, font.weight.medium, tokens.size[1], tokens.size[2.5]),\n        actionsBody: css(_templateObject93(), tokens.size[2], tokens.size[2], tokens.size[2], tokens.size[2], font.size.xs, tokens.size[1], tokens.size[2], tokens.border.radius.sm, t2(colors.gray[100], colors.darkGray[600]), t2(colors.gray[300], colors.darkGray[400]), tokens.size[2], font.weight.medium, font.lineHeight.xs, border.radius.xs, colors.blue[800], t2(colors.gray[200], colors.darkGray[500]), size3[1.5], size3[1.5], tokens.border.radius.full),\n        actionsSelect: css(_templateObject94(), font.size.xs, tokens.size[0.5], tokens.size[2], tokens.border.radius.sm, t2(colors.gray[100], colors.darkGray[600]), t2(colors.gray[300], colors.darkGray[400]), tokens.size[2], font.weight.medium, font.lineHeight.sm, t2(colors.red[500], colors.red[400]), t2(colors.gray[200], colors.darkGray[500]), size3[1.5], size3[1.5], tokens.border.radius.full, border.radius.xs, colors.blue[800], tokens.colors.red[400], tokens.size[2], tokens.size[2]),\n        settingsMenu: css(_templateObject95(), size3[0.5], tokens.border.radius.sm, t2(colors.gray[300], colors.gray[700]), t2(colors.gray[50], colors.darkGray[600]), font.size.xs, t2(colors.gray[700], colors.gray[300]), size3[0.5]),\n        settingsSubTrigger: css(_templateObject96(), tokens.border.radius.xs, tokens.size[1], tokens.size[1], t2(colors.gray[700], colors.gray[300]), t2(colors.gray[600], colors.gray[400]), tokens.size[2], tokens.size[2], t2(colors.gray[200], colors.darkGray[500]), colors.blue[800]),\n        settingsMenuHeader: css(_templateObject97(), tokens.size[1], tokens.size[1], font.weight.medium, t2(colors.gray[300], colors.darkGray[400]), t2(colors.gray[500], colors.gray[400]), font.size[\"xs\"]),\n        settingsSubButton: css(_templateObject98(), t2(colors.gray[700], colors.gray[300]), font.size[\"xs\"], tokens.border.radius.xs, tokens.size[1], tokens.size[1], t2(colors.gray[600], colors.gray[400]), t2(colors.gray[200], colors.darkGray[500]), colors.blue[800]),\n        themeSelectedButton: css(_templateObject99(), t2(colors.purple[100], colors.purple[900]), t2(colors.purple[700], colors.purple[300]), t2(colors.purple[700], colors.purple[300]), t2(colors.purple[100], colors.purple[900])),\n        viewToggle: css(_templateObject100(), tokens.border.radius.sm, t2(colors.gray[200], colors.darkGray[600]), t2(colors.gray[300], colors.darkGray[200]), font.size.xs, t2(colors.gray[700], colors.gray[300]), colors.blue[800], font.lineHeight.md, t2(colors.gray[100], colors.darkGray[500]), t2(colors.gray[100], colors.darkGray[400]), t2(colors.gray[100], colors.darkGray[400]), tokens.size[1.5], tokens.size[2], t2(colors.gray[300], colors.darkGray[200]), tokens.size[2], tokens.size[1.5])\n    };\n};\nvar lightStyles2 = (css)=>stylesFactory2(\"light\", css);\nvar darkStyles2 = (css)=>stylesFactory2(\"dark\", css);\n(0,_chunk_6EPU3DES_js__WEBPACK_IMPORTED_MODULE_1__.delegateEvents)([\n    \"click\",\n    \"mousedown\",\n    \"input\"\n]);\n/*! Bundled license information:\n\n@tanstack/match-sorter-utils/build/lib/index.mjs:\n  (**\n     * match-sorter-utils\n     *\n     * Copyright (c) TanStack\n     *\n     * This source code is licensed under the MIT license found in the\n     * LICENSE.md file in the root directory of this source tree.\n     *\n     * @license MIT\n     *)\n  (**\n   * @name match-sorter\n   * @license MIT license.\n   * @copyright (c) 2099 Kent C. Dodds\n   * @author Kent C. Dodds <me@kentcdodds.com> (https://kentcdodds.com)\n   *)\n\n@kobalte/utils/dist/index.js:\n  (*!\n   * Portions of this file are based on code from ariakit.\n   * MIT Licensed, Copyright (c) Diego Haz.\n   *\n   * Credits to the Ariakit team:\n   * https://github.com/ariakit/ariakit/blob/da142672eddefa99365773ced72171facc06fdcb/packages/ariakit-utils/src/array.ts\n   *)\n  (*!\n   * Original code by Chakra UI\n   * MIT Licensed, Copyright (c) 2019 Segun Adebayo.\n   *\n   * Credits to the Chakra UI team:\n   * https://github.com/chakra-ui/chakra-ui/blob/main/packages/utils/src/assertion.ts\n   *)\n  (*!\n   * Portions of this file are based on code from react-spectrum.\n   * Apache License Version 2.0, Copyright 2020 Adobe.\n   *\n   * Credits to the React Spectrum team:\n   * https://github.com/solidjs-community/solid-aria/blob/2c5f54feb5cfea514b1ee0a52d0416878f882351/packages/utils/src/createGlobalListeners.ts\n   *)\n  (*!\n   * Portions of this file are based on code from ariakit.\n   * MIT Licensed, Copyright (c) Diego Haz.\n   *\n   * Credits to the Ariakit team:\n   * https://github.com/ariakit/ariakit/blob/232bc79018ec20967fec1e097a9474aba3bb5be7/packages/ariakit-utils/src/dom.ts\n   *)\n  (*!\n   * Portions of this file are based on code from react-spectrum.\n   * Apache License Version 2.0, Copyright 2020 Adobe.\n   *\n   * Credits to the React Spectrum team:\n   * https://github.com/adobe/react-spectrum/blob/cf9ab24f3255be1530d0f584061a01aa1e8180e6/packages/@react-aria/utils/src/platform.ts\n   *)\n  (*!\n   * Portions of this file are based on code from react-spectrum.\n   * Apache License Version 2.0, Copyright 2020 Adobe.\n   *\n   * Credits to the React Spectrum team:\n   * https://github.com/adobe/react-spectrum/blob/a9dea8a3672179e6c38aafd1429daf44c7ea2ff6/packages/@react-aria/utils/src/focusWithoutScrolling.ts\n   *)\n  (*!\n   * Portions of this file are based on code from ariakit.\n   * MIT Licensed, Copyright (c) Diego Haz.\n   *\n   * Credits to the Ariakit team:\n   * https://github.com/ariakit/ariakit/blob/main/packages/ariakit-utils/src/focus.ts\n   *\n   * Portions of this file are based on code from react-spectrum.\n   * Apache License Version 2.0, Copyright 2020 Adobe.\n   *\n   * Credits to the React Spectrum team:\n   * https://github.com/adobe/react-spectrum/blob/main/packages/%40react-aria/focus/src/isElementVisible.ts\n   * https://github.com/adobe/react-spectrum/blob/8f2f2acb3d5850382ebe631f055f88c704aa7d17/packages/@react-aria/focus/src/FocusScope.tsx\n   *)\n  (*!\n   * Portions of this file are based on code from react-spectrum.\n   * Apache License Version 2.0, Copyright 2020 Adobe.\n   *\n   * Credits to the React Spectrum team:\n   * https://github.com/adobe/react-spectrum/blob/f6e686fe9d3b983d48650980c1ecfdde320bc62f/packages/@react-aria/focus/src/FocusScope.tsx\n   *)\n  (*!\n   * Portions of this file are based on code from react-spectrum.\n   * Apache License Version 2.0, Copyright 2020 Adobe.\n   *\n   * Credits to the React Spectrum team:\n   * https://github.com/adobe/react-spectrum/blob/a9dea8a3672179e6c38aafd1429daf44c7ea2ff6/packages/@react-aria/utils/src/getScrollParent.ts\n   *)\n  (*!\n   * Portions of this file are based on code from react-spectrum.\n   * Apache License Version 2.0, Copyright 2020 Adobe.\n   *\n   * Credits to the React Spectrum team:\n   * https://github.com/adobe/react-spectrum/blob/a9dea8a3672179e6c38aafd1429daf44c7ea2ff6/packages/@react-aria/utils/src/isVirtualEvent.ts\n   *)\n  (*!\n   * Portions of this file are based on code from react-spectrum.\n   * Apache License Version 2.0, Copyright 2020 Adobe.\n   *\n   * Credits to the React Spectrum team:\n   * https://github.com/adobe/react-spectrum/blob/ff3e690fffc6c54367b8057e28a0e5b9211f37b5/packages/@react-stately/utils/src/number.ts\n   *)\n  (*!\n   * Portions of this file are based on code from ariakit.\n   * MIT Licensed, Copyright (c) Diego Haz.\n   *\n   * Credits to the Ariakit team:\n   * https://github.com/ariakit/ariakit/blob/84e97943ad637a582c01c9b56d880cd95f595737/packages/ariakit/src/hovercard/__utils/polygon.ts\n   * https://github.com/ariakit/ariakit/blob/f2a96973de523d67e41eec983263936c489ef3e2/packages/ariakit/src/hovercard/__utils/debug-polygon.ts\n   *)\n  (*!\n   * Portions of this file are based on code from react-spectrum.\n   * Apache License Version 2.0, Copyright 2020 Adobe.\n   *\n   * Credits to the React Spectrum team:\n   * https://github.com/adobe/react-spectrum/blob/a9dea8a3672179e6c38aafd1429daf44c7ea2ff6/packages/@react-aria/utils/src/runAfterTransition.ts\n   *)\n  (*!\n   * Portions of this file are based on code from react-spectrum.\n   * Apache License Version 2.0, Copyright 2020 Adobe.\n   *\n   * Credits to the React Spectrum team:\n   * https://github.com/adobe/react-spectrum/blob/8f2f2acb3d5850382ebe631f055f88c704aa7d17/packages/@react-aria/utils/src/scrollIntoView.ts\n   *)\n*/ \nvar _c, _c1, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13, _c14, _c15, _c16, _c17, _c18, _c19, _c20, _c21, _c22, _c23, _c24, _c25, _c26, _c27, _c28, _c29, _c30, _c31, _c32, _c33, _c34, _c35, _c36, _c37, _c38, _c39, _c40, _c41, _c42, _c43, _c44, _c45, _c46, _c47, _c48, _c49, _c50, _c51, _c52, _c53, _c54, _c55, _c56, _c57, _c58, _c59, _c60, _c61, _c62, _c63, _c64, _c65, _c66, _c67, _c68, _c69, _c70, _c71, _c72, _c73, _c74, _c75, _c76, _c77, _c78, _c79, _c80, _c81, _c82, _c83, _c84, _c85, _c86, _c87, _c88, _c89;\n$RefreshReg$(_c, \"TransitionGroup\");\n$RefreshReg$(_c1, \"Key\");\n$RefreshReg$(_c2, \"Polymorphic\");\n$RefreshReg$(_c3, \"FormControlDescription\");\n$RefreshReg$(_c4, \"FormControlErrorMessage\");\n$RefreshReg$(_c5, \"FormControlLabel\");\n$RefreshReg$(_c6, \"ButtonRoot\");\n$RefreshReg$(_c7, \"PopperArrow\");\n$RefreshReg$(_c8, \"PopperPositioner\");\n$RefreshReg$(_c9, \"PopperRoot\");\n$RefreshReg$(_c10, \"Popper\");\n$RefreshReg$(_c11, \"DismissableLayer\");\n$RefreshReg$(_c12, \"RadioGroupItem\");\n$RefreshReg$(_c13, \"RadioGroupItemControl\");\n$RefreshReg$(_c14, \"RadioGroupItemDescription\");\n$RefreshReg$(_c15, \"RadioGroupItemIndicator\");\n$RefreshReg$(_c16, \"RadioGroupItemInput\");\n$RefreshReg$(_c17, \"RadioGroupItemLabel\");\n$RefreshReg$(_c18, \"RadioGroupLabel\");\n$RefreshReg$(_c19, \"RadioGroupRoot\");\n$RefreshReg$(_c20, \"RadioGroup\");\n$RefreshReg$(_c21, \"MenuItemBase\");\n$RefreshReg$(_c22, \"MenuCheckboxItem\");\n$RefreshReg$(_c23, \"MenuContentBase\");\n$RefreshReg$(_c24, \"MenuContent\");\n$RefreshReg$(_c25, \"MenuGroup\");\n$RefreshReg$(_c26, \"MenuGroupLabel\");\n$RefreshReg$(_c27, \"MenuIcon\");\n$RefreshReg$(_c28, \"MenuItem\");\n$RefreshReg$(_c29, \"MenuItemDescription\");\n$RefreshReg$(_c30, \"MenuItemIndicator\");\n$RefreshReg$(_c31, \"MenuItemLabel\");\n$RefreshReg$(_c32, \"MenuPortal\");\n$RefreshReg$(_c33, \"MenuRadioGroup\");\n$RefreshReg$(_c34, \"MenuRadioItem\");\n$RefreshReg$(_c35, \"Menu\");\n$RefreshReg$(_c36, \"MenuSub\");\n$RefreshReg$(_c37, \"MenuSubContent\");\n$RefreshReg$(_c38, \"MenuSubTrigger\");\n$RefreshReg$(_c39, \"MenuRoot\");\n$RefreshReg$(_c40, \"MenuTrigger\");\n$RefreshReg$(_c41, \"SeparatorRoot\");\n$RefreshReg$(_c42, \"DropdownMenuContent\");\n$RefreshReg$(_c43, \"DropdownMenuRoot\");\n$RefreshReg$(_c44, \"DropdownMenu\");\n$RefreshReg$(_c45, \"Search\");\n$RefreshReg$(_c46, \"Trash\");\n$RefreshReg$(_c47, \"ChevronDown\");\n$RefreshReg$(_c48, \"ArrowUp\");\n$RefreshReg$(_c49, \"ArrowDown\");\n$RefreshReg$(_c50, \"ArrowLeft\");\n$RefreshReg$(_c51, \"ArrowRight\");\n$RefreshReg$(_c52, \"Sun\");\n$RefreshReg$(_c53, \"Moon\");\n$RefreshReg$(_c54, \"Monitor\");\n$RefreshReg$(_c55, \"Wifi\");\n$RefreshReg$(_c56, \"Offline\");\n$RefreshReg$(_c57, \"Settings\");\n$RefreshReg$(_c58, \"PiPIcon\");\n$RefreshReg$(_c59, \"Copier\");\n$RefreshReg$(_c60, \"CopiedCopier\");\n$RefreshReg$(_c61, \"ErrorCopier\");\n$RefreshReg$(_c62, \"List\");\n$RefreshReg$(_c63, \"Check\");\n$RefreshReg$(_c64, \"CheckCircle\");\n$RefreshReg$(_c65, \"LoadingCircle\");\n$RefreshReg$(_c66, \"XCircle\");\n$RefreshReg$(_c67, \"PauseCircle\");\n$RefreshReg$(_c68, \"TanstackLogo\");\n$RefreshReg$(_c69, \"ThemeContext$createContext\");\n$RefreshReg$(_c70, \"ThemeContext\");\n$RefreshReg$(_c71, \"Expander\");\n$RefreshReg$(_c72, \"CopyButton\");\n$RefreshReg$(_c73, \"ClearArrayButton\");\n$RefreshReg$(_c74, \"DeleteItemButton\");\n$RefreshReg$(_c75, \"ToggleValueButton\");\n$RefreshReg$(_c76, \"Explorer\");\n$RefreshReg$(_c77, \"PiPProvider\");\n$RefreshReg$(_c78, \"DevtoolsComponent\");\n$RefreshReg$(_c79, \"Devtools\");\n$RefreshReg$(_c80, \"PiPPanel\");\n$RefreshReg$(_c81, \"DevtoolsPanel\");\n$RefreshReg$(_c82, \"ContentView\");\n$RefreshReg$(_c83, \"QueryRow\");\n$RefreshReg$(_c84, \"MutationRow\");\n$RefreshReg$(_c85, \"QueryStatusCount\");\n$RefreshReg$(_c86, \"MutationStatusCount\");\n$RefreshReg$(_c87, \"QueryStatus\");\n$RefreshReg$(_c88, \"QueryDetails\");\n$RefreshReg$(_c89, \"MutationDetails\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AdGFuc3RhY2svcXVlcnktZGV2dG9vbHMvYnVpbGQvRGV2dG9vbHMvUTQzNkpHUDUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBd3NCO0FBRXhzQiw2SEFBNkg7QUFDN0gsSUFBSW1ELGVBQWU7SUFDakJDLEdBQVE7SUFDUkMsR0FBUTtJQUNSQyxHQUFRO0lBQ1JDLEdBQVE7SUFDUkMsR0FBUTtJQUNSQyxHQUFRO0lBQ1JDLEdBQVE7SUFDUkMsR0FBUTtJQUNSQyxHQUFRO0lBQ1JDLEdBQVE7SUFDUkMsR0FBUTtJQUNSQyxHQUFRO0lBQ1JDLEdBQVE7SUFDUkMsR0FBUTtJQUNSQyxHQUFRO0lBQ1JDLEdBQVE7SUFDUkMsR0FBUTtJQUNSQyxHQUFRO0lBQ1JDLEdBQVE7SUFDUkMsR0FBUTtJQUNSQyxHQUFRO0lBQ1JDLEdBQVE7SUFDUkMsR0FBUTtJQUNSQyxHQUFRO0lBQ1JDLEdBQVE7SUFDUkMsR0FBUTtJQUNSQyxHQUFRO0lBQ1JDLEdBQVE7SUFDUkMsR0FBUTtJQUNSQyxHQUFRO0lBQ1JDLEdBQVE7SUFDUkMsR0FBUTtJQUNSQyxHQUFRO0lBQ1JDLEdBQVE7SUFDUkMsR0FBUTtJQUNSQyxHQUFRO0lBQ1JDLEdBQVE7SUFDUkMsR0FBUTtJQUNSQyxHQUFRO0lBQ1JDLEdBQVE7SUFDUkMsR0FBUTtJQUNSQyxHQUFRO0lBQ1JDLEdBQVE7SUFDUkMsR0FBUTtJQUNSQyxHQUFRO0lBQ1JDLEdBQVE7SUFDUkMsR0FBUTtJQUNSQyxHQUFRO0lBQ1JDLEdBQVE7SUFDUkMsR0FBUTtJQUNSQyxHQUFRO0lBQ1JDLEdBQVE7SUFDUkMsR0FBUTtJQUNSQyxHQUFRO0lBQ1JDLEdBQVE7SUFDUkMsR0FBUTtJQUNSQyxHQUFRO0lBQ1JDLEdBQVE7SUFDUkMsR0FBUTtJQUNSQyxHQUFRO0lBQ1JDLEdBQVE7SUFDUkMsR0FBUTtJQUNSQyxHQUFRO0lBQ1JDLEdBQVE7SUFDUkMsR0FBUTtJQUNSQyxHQUFRO0lBQ1JDLEdBQVE7SUFDUkMsR0FBUTtJQUNSQyxHQUFRO0lBQ1JDLEdBQVE7SUFDUkMsR0FBUTtJQUNSQyxHQUFRO0lBQ1JDLEdBQVE7SUFDUkMsR0FBUTtJQUNSQyxHQUFRO0lBQ1JDLEdBQVE7SUFDUkMsR0FBUTtJQUNSQyxHQUFRO0lBQ1JDLEdBQVE7SUFDUkMsR0FBUTtJQUNSQyxHQUFRO0lBQ1JDLEdBQVE7SUFDUkMsR0FBUTtJQUNSQyxHQUFRO0lBQ1JDLEdBQVE7SUFDUkMsR0FBUTtJQUNSQyxHQUFRO0lBQ1JDLEdBQVE7SUFDUkMsR0FBUTtJQUNSQyxHQUFRO0lBQ1JDLEdBQVE7SUFDUkMsR0FBUTtJQUNSQyxHQUFRO0lBQ1JDLEdBQVE7SUFDUkMsR0FBUTtJQUNSQyxHQUFRO0lBQ1JDLEdBQVE7SUFDUkMsR0FBUTtJQUNSQyxHQUFRO0lBQ1JDLEdBQVE7SUFDUkMsR0FBUTtJQUNSQyxHQUFRO0lBQ1JDLEdBQVE7SUFDUkMsR0FBUTtJQUNSQyxHQUFRO0lBQ1JDLEdBQVE7SUFDUkMsR0FBUTtJQUNSQyxHQUFRO0lBQ1JDLEdBQVE7SUFDUkMsR0FBUTtJQUNSQyxHQUFRO0lBQ1JDLEdBQVE7SUFDUkMsR0FBUTtJQUNSQyxHQUFRO0lBQ1JDLEdBQVE7SUFDUkMsSUFBUztJQUNUQyxJQUFTO0lBQ1RDLEdBQVE7SUFDUkMsR0FBUTtJQUNSQyxHQUFRO0lBQ1JDLEdBQVE7SUFDUkMsR0FBUTtJQUNSQyxHQUFRO0lBQ1JDLEdBQVE7SUFDUkMsR0FBUTtJQUNSQyxHQUFRO0lBQ1JDLEdBQVE7SUFDUkMsR0FBUTtJQUNSQyxHQUFRO0lBQ1JDLEdBQVE7SUFDUkMsR0FBUTtJQUNSQyxHQUFRO0lBQ1JDLEdBQVE7SUFDUkMsR0FBUTtJQUNSQyxHQUFRO0lBQ1JDLEdBQVE7SUFDUkMsR0FBUTtJQUNSQyxHQUFRO0lBQ1JDLEdBQVE7SUFDUkMsR0FBUTtJQUNSQyxHQUFRO0lBQ1JDLEdBQVE7SUFDUkMsR0FBUTtJQUNSQyxHQUFRO0lBQ1JDLEdBQVE7SUFDUkMsR0FBUTtJQUNSQyxHQUFRO0lBQ1JDLEdBQVE7SUFDUkMsR0FBUTtJQUNSQyxHQUFRO0lBQ1JDLEdBQVE7SUFDUkMsR0FBUTtJQUNSQyxHQUFRO0lBQ1JDLEdBQVE7SUFDUkMsR0FBUTtJQUNSQyxHQUFRO0lBQ1JDLEdBQVE7SUFDUkMsR0FBUTtJQUNSQyxHQUFRO0lBQ1JDLEdBQVE7SUFDUkMsR0FBUTtJQUNSQyxHQUFRO0lBQ1JDLEdBQVE7SUFDUkMsR0FBUTtJQUNSQyxHQUFRO0lBQ1JDLElBQVM7SUFDVEMsSUFBUztJQUNUQyxHQUFRO0lBQ1JDLEdBQVE7SUFDUkMsR0FBUTtJQUNSQyxHQUFRO0lBQ1JDLEdBQVE7SUFDUkMsR0FBUTtJQUNSQyxHQUFRO0lBQ1JDLEdBQVE7SUFDUkMsR0FBUTtJQUNSQyxHQUFRO0lBQ1JDLEdBQVE7SUFDUkMsR0FBUTtJQUNSQyxJQUFTO0lBQ1RDLElBQVM7SUFDVEMsR0FBUTtJQUNSQyxHQUFRO0lBQ1JDLEdBQVE7SUFDUkMsR0FBUTtJQUNSQyxHQUFRO0lBQ1JDLEdBQVE7SUFDUkMsR0FBUTtJQUNSQyxJQUFTO0lBQ1RDLElBQVM7SUFDVEMsR0FBUTtJQUNSQyxHQUFRO0lBQ1JDLEdBQVE7SUFDUkMsR0FBUTtJQUNSQyxHQUFRO0lBQ1JDLEdBQVE7SUFDUkMsR0FBUTtJQUNSQyxHQUFRO0lBQ1JDLElBQVM7SUFDVEMsSUFBUztJQUNUQyxHQUFRO0lBQ1JDLEdBQVE7SUFDUkMsR0FBUTtJQUNSQyxHQUFRO0lBQ1JDLEdBQVE7SUFDUkMsR0FBUTtJQUNSQyxJQUFTO0lBQ1RDLElBQVM7SUFDVEMsR0FBUTtJQUNSQyxHQUFRO0lBQ1JDLEdBQVE7SUFDUkMsR0FBUTtJQUNSQyxHQUFRO0lBQ1JDLEdBQVE7SUFDUkMsR0FBUTtJQUNSQyxHQUFRO0lBQ1JDLEdBQVE7SUFDUkMsR0FBUTtJQUNSQyxHQUFRO0lBQ1JDLEdBQVE7SUFDUkMsR0FBUTtJQUNSQyxHQUFRO0lBQ1JDLEdBQVE7SUFDUkMsR0FBUTtJQUNSQyxHQUFRO0lBQ1JDLEdBQVE7SUFDUkMsR0FBUTtJQUNSQyxHQUFRO0lBQ1JDLElBQVM7SUFDVEMsSUFBUztJQUNUQyxHQUFRO0lBQ1JDLEdBQVE7SUFDUkMsR0FBUTtJQUNSQyxHQUFRO0lBQ1JDLEdBQVE7SUFDUkMsR0FBUTtJQUNSQyxHQUFRO0lBQ1JDLEdBQVE7SUFDUkMsR0FBUTtJQUNSQyxHQUFRO0lBQ1JDLEdBQVE7SUFDUkMsR0FBUTtJQUNSQyxHQUFRO0lBQ1JDLEdBQVE7SUFDUkMsSUFBUztJQUNUQyxJQUFTO0lBQ1RDLEdBQVE7SUFDUkMsR0FBUTtJQUNSQyxHQUFRO0lBQ1JDLEdBQVE7SUFDUkMsSUFBUztJQUNUQyxJQUFTO0lBQ1RDLEdBQVE7SUFDUkMsR0FBUTtJQUNSQyxHQUFRO0lBQ1JDLElBQVM7SUFDVEMsSUFBUztJQUNUQyxHQUFRO0lBQ1JDLEdBQVE7SUFDUkMsR0FBUTtJQUNSQyxHQUFRO0lBQ1JDLEdBQVE7SUFDUkMsR0FBUTtJQUNSQyxHQUFRO0lBQ1JDLEdBQVE7SUFDUkMsR0FBUTtJQUNSQyxHQUFRO0lBQ1JDLEdBQVE7SUFDUkMsR0FBUTtJQUNSQyxHQUFRO0lBQ1JDLEdBQVE7SUFDUkMsR0FBUTtJQUNSQyxHQUFRO0lBQ1JDLEdBQVE7SUFDUkMsR0FBUTtJQUNSQyxHQUFRO0lBQ1JDLEdBQVE7SUFDUkMsR0FBUTtJQUNSQyxHQUFRO0lBQ1JDLEdBQVE7SUFDUkMsR0FBUTtJQUNSQyxHQUFRO0lBQ1JDLEdBQVE7SUFDUkMsR0FBUTtJQUNSQyxHQUFRO0lBQ1JDLEdBQVE7SUFDUkMsR0FBUTtJQUNSQyxHQUFRO0lBQ1JDLEdBQVE7SUFDUkMsR0FBUTtJQUNSQyxHQUFRO0lBQ1JDLEdBQVE7SUFDUkMsR0FBUTtJQUNSQyxHQUFRO0lBQ1JDLEdBQVE7SUFDUkMsR0FBUTtJQUNSQyxHQUFRO0lBQ1JDLEdBQVE7SUFDUkMsR0FBUTtJQUNSQyxHQUFRO0lBQ1JDLEdBQVE7SUFDUkMsSUFBUztJQUNUQyxJQUFTO0lBQ1RDLEdBQVE7SUFDUkMsR0FBUTtJQUNSQyxHQUFRO0lBQ1JDLEdBQVE7SUFDUkMsSUFBUztJQUNUQyxJQUFTO0lBQ1RDLElBQVM7SUFDVEMsSUFBUztJQUNUQyxJQUFTO0lBQ1RDLElBQVM7SUFDVEMsR0FBUTtJQUNSQyxHQUFRO0lBQ1JDLEdBQVE7SUFDUkMsR0FBUTtJQUNSQyxHQUFRO0lBQ1JDLEdBQVE7SUFDUkMsR0FBUTtJQUNSQyxHQUFRO0lBQ1JDLEdBQVE7SUFDUkMsR0FBUTtJQUNSQyxHQUFRO0lBQ1JDLEdBQVE7SUFDUkMsR0FBUTtJQUNSQyxHQUFRO0lBQ1JDLEdBQVE7SUFDUkMsR0FBUTtJQUNSQyxHQUFRO0lBQ1JDLEdBQVE7SUFDUkMsR0FBUTtJQUNSQyxHQUFRO0lBQ1JDLEdBQVE7SUFDUkMsR0FBUTtJQUNSQyxHQUFRO0lBQ1JDLEdBQVE7SUFDUkMsSUFBUztJQUNUQyxJQUFTO0lBQ1RDLElBQWM7SUFDZEMsSUFBYztJQUNkQyxJQUFjO0lBQ2RDLElBQWM7SUFDZEMsSUFBUztJQUNUQyxJQUFTO0lBQ1RDLEdBQVE7SUFDUkMsR0FBUTtJQUNSQyxHQUFRO0lBQ1JDLEdBQVE7SUFDUkMsSUFBUztJQUNUQyxHQUFRO0lBQ1JDLEdBQVE7SUFDUkMsR0FBUTtJQUNSQyxJQUFTO0lBQ1RDLElBQVM7SUFDVEMsSUFBUztJQUNUQyxJQUFTO0lB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Q0wsS0FBSztZQUNMLEtBQUs7WUFDTCxLQUFLO1lBQ0wsS0FBSztZQUNMLEtBQUs7WUFDTCxLQUFLO1lBQ0wsS0FBSztZQUNMLEtBQUs7UUFDUDtRQUNBQyxPQUFPO1lBQ0wsSUFBSTtZQUNKLElBQUk7WUFDSixLQUFLO1lBQ0wsS0FBSztZQUNMLEtBQUs7WUFDTCxLQUFLO1lBQ0wsS0FBSztZQUNMLEtBQUs7WUFDTCxLQUFLO1lBQ0wsS0FBSztZQUNMLEtBQUs7UUFDUDtRQUNBQyxLQUFLO1lBQ0gsSUFBSTtZQUNKLEtBQUs7WUFDTCxLQUFLO1lBQ0wsS0FBSztZQUNMLEtBQUs7WUFDTCxLQUFLO1lBQ0wsS0FBSztZQUNMLEtBQUs7WUFDTCxLQUFLO1lBQ0wsS0FBSztZQUNMLEtBQUs7UUFDUDtRQUNBQyxRQUFRO1lBQ04sSUFBSTtZQUNKLElBQUk7WUFDSixLQUFLO1lBQ0wsS0FBSztZQUNMLEtBQUs7WUFDTCxLQUFLO1lBQ0wsS0FBSztZQUNMLEtBQUs7WUFDTCxLQUFLO1lBQ0wsS0FBSztZQUNMLEtBQUs7UUFDUDtRQUNBQyxRQUFRO1lBQ04sSUFBSTtZQUNKLElBQUk7WUFDSixLQUFLO1lBQ0wsS0FBSztZQUNMLEtBQUs7WUFDTCxLQUFLO1lBQ0wsS0FBSztZQUNMLEtBQUs7WUFDTCxLQUFLO1lBQ0wsS0FBSztZQUNMLEtBQUs7UUFDUDtRQUNBQyxNQUFNO1lBQ0osSUFBSTtZQUNKLElBQUk7WUFDSixLQUFLO1lBQ0wsS0FBSztZQUNMLEtBQUs7WUFDTCxLQUFLO1lBQ0wsS0FBSztZQUNMLEtBQUs7WUFDTCxLQUFLO1lBQ0wsS0FBSztZQUNMLEtBQUs7UUFDUDtRQUNBQyxNQUFNO1lBQ0osSUFBSTtZQUNKLElBQUk7WUFDSixLQUFLO1lBQ0wsS0FBSztZQUNMLEtBQUs7WUFDTCxLQUFLO1lBQ0wsS0FBSztZQUNMLEtBQUs7WUFDTCxLQUFLO1lBQ0wsS0FBSztZQUNMLEtBQUs7UUFDUDtRQUNBQyxNQUFNO1lBQ0osSUFBSTtZQUNKLElBQUk7WUFDSixLQUFLO1lBQ0wsS0FBSztZQUNMLEtBQUs7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Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQStIQSxHQUV1QyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHRhbnN0YWNrL3F1ZXJ5LWRldnRvb2xzL2J1aWxkL0RldnRvb2xzL1E0MzZKR1A1LmpzPzhjNWEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3JlYXRlQ29udGV4dCwgc3BsaXRQcm9wcywgY3JlYXRlTWVtbywgY3JlYXRlQ29tcG9uZW50LCBtZXJnZVByb3BzLCBjcmVhdGVVbmlxdWVJZCwgY3JlYXRlU2lnbmFsLCBjcmVhdGVFZmZlY3QsIG9uQ2xlYW51cCwgU2hvdywgb24sIGRlbGVnYXRlRXZlbnRzLCBzb3J0Rm5zLCBtdXRhdGlvblNvcnRGbnMsIER5bmFtaWMsIHVzZUNvbnRleHQsIGNyZWF0ZVJlbmRlckVmZmVjdCwgc2V0QXR0cmlidXRlLCBQb3J0YWwsIHVudHJhY2ssIHRlbXBsYXRlLCBnZXRQcmVmZXJyZWRDb2xvclNjaGVtZSwgb25Nb3VudCwgdXNlLCBpbnNlcnQsIGNsYXNzTmFtZSwgZ2V0UXVlcnlTdGF0dXNDb2xvciwgZ2V0TXV0YXRpb25TdGF0dXNDb2xvciwgZ2V0UXVlcnlTdGF0dXNMYWJlbCwgc3ByZWFkLCBnZXRRdWVyeVN0YXR1c0NvbG9yQnlMYWJlbCwgZGlzcGxheVZhbHVlLCBGb3IsIGJhdGNoLCBpc1NlcnZlciwgY3JlYXRlQ29tcHV0ZWQsIEluZGV4LCB1cGRhdGVOZXN0ZWREYXRhQnlQYXRoLCBjb252ZXJ0UmVtVG9QaXhlbHMsIGdldFNpZGVkUHJvcCwgdXNlVHJhbnNpdGlvbiwgJFRSQUNLLCBjcmVhdGVSb290LCBhZGRFdmVudExpc3RlbmVyLCBzdHJpbmdpZnksIFN3aXRjaCwgTWF0Y2gsIGRlbGV0ZU5lc3RlZERhdGFCeVBhdGgsIGNsZWFyRGVsZWdhdGVkRXZlbnRzLCBnZXRPd25lciwgREVWIH0gZnJvbSAnLi4vY2h1bmsvNkVQVTNERVMuanMnO1xuXG4vLyAuLi8uLi9ub2RlX21vZHVsZXMvLnBucG0vQHRhbnN0YWNrK21hdGNoLXNvcnRlci11dGlsc0A4LjE1LjEvbm9kZV9tb2R1bGVzL0B0YW5zdGFjay9tYXRjaC1zb3J0ZXItdXRpbHMvYnVpbGQvbGliL2luZGV4Lm1qc1xudmFyIGNoYXJhY3Rlck1hcCA9IHtcbiAgXFx1MDBDMDogXCJBXCIsXG4gIFxcdTAwQzE6IFwiQVwiLFxuICBcXHUwMEMyOiBcIkFcIixcbiAgXFx1MDBDMzogXCJBXCIsXG4gIFxcdTAwQzQ6IFwiQVwiLFxuICBcXHUwMEM1OiBcIkFcIixcbiAgXFx1MUVBNDogXCJBXCIsXG4gIFxcdTFFQUU6IFwiQVwiLFxuICBcXHUxRUIyOiBcIkFcIixcbiAgXFx1MUVCNDogXCJBXCIsXG4gIFxcdTFFQjY6IFwiQVwiLFxuICBcXHUwMEM2OiBcIkFFXCIsXG4gIFxcdTFFQTY6IFwiQVwiLFxuICBcXHUxRUIwOiBcIkFcIixcbiAgXFx1MDIwMjogXCJBXCIsXG4gIFxcdTAwQzc6IFwiQ1wiLFxuICBcXHUxRTA4OiBcIkNcIixcbiAgXFx1MDBDODogXCJFXCIsXG4gIFxcdTAwQzk6IFwiRVwiLFxuICBcXHUwMENBOiBcIkVcIixcbiAgXFx1MDBDQjogXCJFXCIsXG4gIFxcdTFFQkU6IFwiRVwiLFxuICBcXHUxRTE2OiBcIkVcIixcbiAgXFx1MUVDMDogXCJFXCIsXG4gIFxcdTFFMTQ6IFwiRVwiLFxuICBcXHUxRTFDOiBcIkVcIixcbiAgXFx1MDIwNjogXCJFXCIsXG4gIFxcdTAwQ0M6IFwiSVwiLFxuICBcXHUwMENEOiBcIklcIixcbiAgXFx1MDBDRTogXCJJXCIsXG4gIFxcdTAwQ0Y6IFwiSVwiLFxuICBcXHUxRTJFOiBcIklcIixcbiAgXFx1MDIwQTogXCJJXCIsXG4gIFxcdTAwRDA6IFwiRFwiLFxuICBcXHUwMEQxOiBcIk5cIixcbiAgXFx1MDBEMjogXCJPXCIsXG4gIFxcdTAwRDM6IFwiT1wiLFxuICBcXHUwMEQ0OiBcIk9cIixcbiAgXFx1MDBENTogXCJPXCIsXG4gIFxcdTAwRDY6IFwiT1wiLFxuICBcXHUwMEQ4OiBcIk9cIixcbiAgXFx1MUVEMDogXCJPXCIsXG4gIFxcdTFFNEM6IFwiT1wiLFxuICBcXHUxRTUyOiBcIk9cIixcbiAgXFx1MDIwRTogXCJPXCIsXG4gIFxcdTAwRDk6IFwiVVwiLFxuICBcXHUwMERBOiBcIlVcIixcbiAgXFx1MDBEQjogXCJVXCIsXG4gIFxcdTAwREM6IFwiVVwiLFxuICBcXHUwMEREOiBcIllcIixcbiAgXFx1MDBFMDogXCJhXCIsXG4gIFxcdTAwRTE6IFwiYVwiLFxuICBcXHUwMEUyOiBcImFcIixcbiAgXFx1MDBFMzogXCJhXCIsXG4gIFxcdTAwRTQ6IFwiYVwiLFxuICBcXHUwMEU1OiBcImFcIixcbiAgXFx1MUVBNTogXCJhXCIsXG4gIFxcdTFFQUY6IFwiYVwiLFxuICBcXHUxRUIzOiBcImFcIixcbiAgXFx1MUVCNTogXCJhXCIsXG4gIFxcdTFFQjc6IFwiYVwiLFxuICBcXHUwMEU2OiBcImFlXCIsXG4gIFxcdTFFQTc6IFwiYVwiLFxuICBcXHUxRUIxOiBcImFcIixcbiAgXFx1MDIwMzogXCJhXCIsXG4gIFxcdTAwRTc6IFwiY1wiLFxuICBcXHUxRTA5OiBcImNcIixcbiAgXFx1MDBFODogXCJlXCIsXG4gIFxcdTAwRTk6IFwiZVwiLFxuICBcXHUwMEVBOiBcImVcIixcbiAgXFx1MDBFQjogXCJlXCIsXG4gIFxcdTFFQkY6IFwiZVwiLFxuICBcXHUxRTE3OiBcImVcIixcbiAgXFx1MUVDMTogXCJlXCIsXG4gIFxcdTFFMTU6IFwiZVwiLFxuICBcXHUxRTFEOiBcImVcIixcbiAgXFx1MDIwNzogXCJlXCIsXG4gIFxcdTAwRUM6IFwiaVwiLFxuICBcXHUwMEVEOiBcImlcIixcbiAgXFx1MDBFRTogXCJpXCIsXG4gIFxcdTAwRUY6IFwiaVwiLFxuICBcXHUxRTJGOiBcImlcIixcbiAgXFx1MDIwQjogXCJpXCIsXG4gIFxcdTAwRjA6IFwiZFwiLFxuICBcXHUwMEYxOiBcIm5cIixcbiAgXFx1MDBGMjogXCJvXCIsXG4gIFxcdTAwRjM6IFwib1wiLFxuICBcXHUwMEY0OiBcIm9cIixcbiAgXFx1MDBGNTogXCJvXCIsXG4gIFxcdTAwRjY6IFwib1wiLFxuICBcXHUwMEY4OiBcIm9cIixcbiAgXFx1MUVEMTogXCJvXCIsXG4gIFxcdTFFNEQ6IFwib1wiLFxuICBcXHUxRTUzOiBcIm9cIixcbiAgXFx1MDIwRjogXCJvXCIsXG4gIFxcdTAwRjk6IFwidVwiLFxuICBcXHUwMEZBOiBcInVcIixcbiAgXFx1MDBGQjogXCJ1XCIsXG4gIFxcdTAwRkM6IFwidVwiLFxuICBcXHUwMEZEOiBcInlcIixcbiAgXFx1MDBGRjogXCJ5XCIsXG4gIFxcdTAxMDA6IFwiQVwiLFxuICBcXHUwMTAxOiBcImFcIixcbiAgXFx1MDEwMjogXCJBXCIsXG4gIFxcdTAxMDM6IFwiYVwiLFxuICBcXHUwMTA0OiBcIkFcIixcbiAgXFx1MDEwNTogXCJhXCIsXG4gIFxcdTAxMDY6IFwiQ1wiLFxuICBcXHUwMTA3OiBcImNcIixcbiAgXFx1MDEwODogXCJDXCIsXG4gIFxcdTAxMDk6IFwiY1wiLFxuICBcXHUwMTBBOiBcIkNcIixcbiAgXFx1MDEwQjogXCJjXCIsXG4gIFxcdTAxMEM6IFwiQ1wiLFxuICBcXHUwMTBEOiBcImNcIixcbiAgQ1xcdTAzMDY6IFwiQ1wiLFxuICBjXFx1MDMwNjogXCJjXCIsXG4gIFxcdTAxMEU6IFwiRFwiLFxuICBcXHUwMTBGOiBcImRcIixcbiAgXFx1MDExMDogXCJEXCIsXG4gIFxcdTAxMTE6IFwiZFwiLFxuICBcXHUwMTEyOiBcIkVcIixcbiAgXFx1MDExMzogXCJlXCIsXG4gIFxcdTAxMTQ6IFwiRVwiLFxuICBcXHUwMTE1OiBcImVcIixcbiAgXFx1MDExNjogXCJFXCIsXG4gIFxcdTAxMTc6IFwiZVwiLFxuICBcXHUwMTE4OiBcIkVcIixcbiAgXFx1MDExOTogXCJlXCIsXG4gIFxcdTAxMUE6IFwiRVwiLFxuICBcXHUwMTFCOiBcImVcIixcbiAgXFx1MDExQzogXCJHXCIsXG4gIFxcdTAxRjQ6IFwiR1wiLFxuICBcXHUwMTFEOiBcImdcIixcbiAgXFx1MDFGNTogXCJnXCIsXG4gIFxcdTAxMUU6IFwiR1wiLFxuICBcXHUwMTFGOiBcImdcIixcbiAgXFx1MDEyMDogXCJHXCIsXG4gIFxcdTAxMjE6IFwiZ1wiLFxuICBcXHUwMTIyOiBcIkdcIixcbiAgXFx1MDEyMzogXCJnXCIsXG4gIFxcdTAxMjQ6IFwiSFwiLFxuICBcXHUwMTI1OiBcImhcIixcbiAgXFx1MDEyNjogXCJIXCIsXG4gIFxcdTAxMjc6IFwiaFwiLFxuICBcXHUxRTJBOiBcIkhcIixcbiAgXFx1MUUyQjogXCJoXCIsXG4gIFxcdTAxMjg6IFwiSVwiLFxuICBcXHUwMTI5OiBcImlcIixcbiAgXFx1MDEyQTogXCJJXCIsXG4gIFxcdTAxMkI6IFwiaVwiLFxuICBcXHUwMTJDOiBcIklcIixcbiAgXFx1MDEyRDogXCJpXCIsXG4gIFxcdTAxMkU6IFwiSVwiLFxuICBcXHUwMTJGOiBcImlcIixcbiAgXFx1MDEzMDogXCJJXCIsXG4gIFxcdTAxMzE6IFwiaVwiLFxuICBcXHUwMTMyOiBcIklKXCIsXG4gIFxcdTAxMzM6IFwiaWpcIixcbiAgXFx1MDEzNDogXCJKXCIsXG4gIFxcdTAxMzU6IFwialwiLFxuICBcXHUwMTM2OiBcIktcIixcbiAgXFx1MDEzNzogXCJrXCIsXG4gIFxcdTFFMzA6IFwiS1wiLFxuICBcXHUxRTMxOiBcImtcIixcbiAgS1xcdTAzMDY6IFwiS1wiLFxuICBrXFx1MDMwNjogXCJrXCIsXG4gIFxcdTAxMzk6IFwiTFwiLFxuICBcXHUwMTNBOiBcImxcIixcbiAgXFx1MDEzQjogXCJMXCIsXG4gIFxcdTAxM0M6IFwibFwiLFxuICBcXHUwMTNEOiBcIkxcIixcbiAgXFx1MDEzRTogXCJsXCIsXG4gIFxcdTAxM0Y6IFwiTFwiLFxuICBcXHUwMTQwOiBcImxcIixcbiAgXFx1MDE0MTogXCJsXCIsXG4gIFxcdTAxNDI6IFwibFwiLFxuICBcXHUxRTNFOiBcIk1cIixcbiAgXFx1MUUzRjogXCJtXCIsXG4gIE1cXHUwMzA2OiBcIk1cIixcbiAgbVxcdTAzMDY6IFwibVwiLFxuICBcXHUwMTQzOiBcIk5cIixcbiAgXFx1MDE0NDogXCJuXCIsXG4gIFxcdTAxNDU6IFwiTlwiLFxuICBcXHUwMTQ2OiBcIm5cIixcbiAgXFx1MDE0NzogXCJOXCIsXG4gIFxcdTAxNDg6IFwiblwiLFxuICBcXHUwMTQ5OiBcIm5cIixcbiAgTlxcdTAzMDY6IFwiTlwiLFxuICBuXFx1MDMwNjogXCJuXCIsXG4gIFxcdTAxNEM6IFwiT1wiLFxuICBcXHUwMTREOiBcIm9cIixcbiAgXFx1MDE0RTogXCJPXCIsXG4gIFxcdTAxNEY6IFwib1wiLFxuICBcXHUwMTUwOiBcIk9cIixcbiAgXFx1MDE1MTogXCJvXCIsXG4gIFxcdTAxNTI6IFwiT0VcIixcbiAgXFx1MDE1MzogXCJvZVwiLFxuICBQXFx1MDMwNjogXCJQXCIsXG4gIHBcXHUwMzA2OiBcInBcIixcbiAgXFx1MDE1NDogXCJSXCIsXG4gIFxcdTAxNTU6IFwiclwiLFxuICBcXHUwMTU2OiBcIlJcIixcbiAgXFx1MDE1NzogXCJyXCIsXG4gIFxcdTAxNTg6IFwiUlwiLFxuICBcXHUwMTU5OiBcInJcIixcbiAgUlxcdTAzMDY6IFwiUlwiLFxuICByXFx1MDMwNjogXCJyXCIsXG4gIFxcdTAyMTI6IFwiUlwiLFxuICBcXHUwMjEzOiBcInJcIixcbiAgXFx1MDE1QTogXCJTXCIsXG4gIFxcdTAxNUI6IFwic1wiLFxuICBcXHUwMTVDOiBcIlNcIixcbiAgXFx1MDE1RDogXCJzXCIsXG4gIFxcdTAxNUU6IFwiU1wiLFxuICBcXHUwMjE4OiBcIlNcIixcbiAgXFx1MDIxOTogXCJzXCIsXG4gIFxcdTAxNUY6IFwic1wiLFxuICBcXHUwMTYwOiBcIlNcIixcbiAgXFx1MDE2MTogXCJzXCIsXG4gIFxcdTAxNjI6IFwiVFwiLFxuICBcXHUwMTYzOiBcInRcIixcbiAgXFx1MDIxQjogXCJ0XCIsXG4gIFxcdTAyMUE6IFwiVFwiLFxuICBcXHUwMTY0OiBcIlRcIixcbiAgXFx1MDE2NTogXCJ0XCIsXG4gIFxcdTAxNjY6IFwiVFwiLFxuICBcXHUwMTY3OiBcInRcIixcbiAgVFxcdTAzMDY6IFwiVFwiLFxuICB0XFx1MDMwNjogXCJ0XCIsXG4gIFxcdTAxNjg6IFwiVVwiLFxuICBcXHUwMTY5OiBcInVcIixcbiAgXFx1MDE2QTogXCJVXCIsXG4gIFxcdTAxNkI6IFwidVwiLFxuICBcXHUwMTZDOiBcIlVcIixcbiAgXFx1MDE2RDogXCJ1XCIsXG4gIFxcdTAxNkU6IFwiVVwiLFxuICBcXHUwMTZGOiBcInVcIixcbiAgXFx1MDE3MDogXCJVXCIsXG4gIFxcdTAxNzE6IFwidVwiLFxuICBcXHUwMTcyOiBcIlVcIixcbiAgXFx1MDE3MzogXCJ1XCIsXG4gIFxcdTAyMTY6IFwiVVwiLFxuICBcXHUwMjE3OiBcInVcIixcbiAgVlxcdTAzMDY6IFwiVlwiLFxuICB2XFx1MDMwNjogXCJ2XCIsXG4gIFxcdTAxNzQ6IFwiV1wiLFxuICBcXHUwMTc1OiBcIndcIixcbiAgXFx1MUU4MjogXCJXXCIsXG4gIFxcdTFFODM6IFwid1wiLFxuICBYXFx1MDMwNjogXCJYXCIsXG4gIHhcXHUwMzA2OiBcInhcIixcbiAgXFx1MDE3NjogXCJZXCIsXG4gIFxcdTAxNzc6IFwieVwiLFxuICBcXHUwMTc4OiBcIllcIixcbiAgWVxcdTAzMDY6IFwiWVwiLFxuICB5XFx1MDMwNjogXCJ5XCIsXG4gIFxcdTAxNzk6IFwiWlwiLFxuICBcXHUwMTdBOiBcInpcIixcbiAgXFx1MDE3QjogXCJaXCIsXG4gIFxcdTAxN0M6IFwielwiLFxuICBcXHUwMTdEOiBcIlpcIixcbiAgXFx1MDE3RTogXCJ6XCIsXG4gIFxcdTAxN0Y6IFwic1wiLFxuICBcXHUwMTkyOiBcImZcIixcbiAgXFx1MDFBMDogXCJPXCIsXG4gIFxcdTAxQTE6IFwib1wiLFxuICBcXHUwMUFGOiBcIlVcIixcbiAgXFx1MDFCMDogXCJ1XCIsXG4gIFxcdTAxQ0Q6IFwiQVwiLFxuICBcXHUwMUNFOiBcImFcIixcbiAgXFx1MDFDRjogXCJJXCIsXG4gIFxcdTAxRDA6IFwiaVwiLFxuICBcXHUwMUQxOiBcIk9cIixcbiAgXFx1MDFEMjogXCJvXCIsXG4gIFxcdTAxRDM6IFwiVVwiLFxuICBcXHUwMUQ0OiBcInVcIixcbiAgXFx1MDFENTogXCJVXCIsXG4gIFxcdTAxRDY6IFwidVwiLFxuICBcXHUwMUQ3OiBcIlVcIixcbiAgXFx1MDFEODogXCJ1XCIsXG4gIFxcdTAxRDk6IFwiVVwiLFxuICBcXHUwMURBOiBcInVcIixcbiAgXFx1MDFEQjogXCJVXCIsXG4gIFxcdTAxREM6IFwidVwiLFxuICBcXHUxRUU4OiBcIlVcIixcbiAgXFx1MUVFOTogXCJ1XCIsXG4gIFxcdTFFNzg6IFwiVVwiLFxuICBcXHUxRTc5OiBcInVcIixcbiAgXFx1MDFGQTogXCJBXCIsXG4gIFxcdTAxRkI6IFwiYVwiLFxuICBcXHUwMUZDOiBcIkFFXCIsXG4gIFxcdTAxRkQ6IFwiYWVcIixcbiAgXFx1MDFGRTogXCJPXCIsXG4gIFxcdTAxRkY6IFwib1wiLFxuICBcXHUwMERFOiBcIlRIXCIsXG4gIFxcdTAwRkU6IFwidGhcIixcbiAgXFx1MUU1NDogXCJQXCIsXG4gIFxcdTFFNTU6IFwicFwiLFxuICBcXHUxRTY0OiBcIlNcIixcbiAgXFx1MUU2NTogXCJzXCIsXG4gIFhcXHUwMzAxOiBcIlhcIixcbiAgeFxcdTAzMDE6IFwieFwiLFxuICBcXHUwNDAzOiBcIlxcdTA0MTNcIixcbiAgXFx1MDQ1MzogXCJcXHUwNDMzXCIsXG4gIFxcdTA0MEM6IFwiXFx1MDQxQVwiLFxuICBcXHUwNDVDOiBcIlxcdTA0M0FcIixcbiAgQVxcdTAzMEI6IFwiQVwiLFxuICBhXFx1MDMwQjogXCJhXCIsXG4gIEVcXHUwMzBCOiBcIkVcIixcbiAgZVxcdTAzMEI6IFwiZVwiLFxuICBJXFx1MDMwQjogXCJJXCIsXG4gIGlcXHUwMzBCOiBcImlcIixcbiAgXFx1MDFGODogXCJOXCIsXG4gIFxcdTAxRjk6IFwiblwiLFxuICBcXHUxRUQyOiBcIk9cIixcbiAgXFx1MUVEMzogXCJvXCIsXG4gIFxcdTFFNTA6IFwiT1wiLFxuICBcXHUxRTUxOiBcIm9cIixcbiAgXFx1MUVFQTogXCJVXCIsXG4gIFxcdTFFRUI6IFwidVwiLFxuICBcXHUxRTgwOiBcIldcIixcbiAgXFx1MUU4MTogXCJ3XCIsXG4gIFxcdTFFRjI6IFwiWVwiLFxuICBcXHUxRUYzOiBcInlcIixcbiAgXFx1MDIwMDogXCJBXCIsXG4gIFxcdTAyMDE6IFwiYVwiLFxuICBcXHUwMjA0OiBcIkVcIixcbiAgXFx1MDIwNTogXCJlXCIsXG4gIFxcdTAyMDg6IFwiSVwiLFxuICBcXHUwMjA5OiBcImlcIixcbiAgXFx1MDIwQzogXCJPXCIsXG4gIFxcdTAyMEQ6IFwib1wiLFxuICBcXHUwMjEwOiBcIlJcIixcbiAgXFx1MDIxMTogXCJyXCIsXG4gIFxcdTAyMTQ6IFwiVVwiLFxuICBcXHUwMjE1OiBcInVcIixcbiAgQlxcdTAzMEM6IFwiQlwiLFxuICBiXFx1MDMwQzogXCJiXCIsXG4gIFxcdTAxMENcXHUwMzIzOiBcIkNcIixcbiAgXFx1MDEwRFxcdTAzMjM6IFwiY1wiLFxuICBcXHUwMENBXFx1MDMwQzogXCJFXCIsXG4gIFxcdTAwRUFcXHUwMzBDOiBcImVcIixcbiAgRlxcdTAzMEM6IFwiRlwiLFxuICBmXFx1MDMwQzogXCJmXCIsXG4gIFxcdTAxRTY6IFwiR1wiLFxuICBcXHUwMUU3OiBcImdcIixcbiAgXFx1MDIxRTogXCJIXCIsXG4gIFxcdTAyMUY6IFwiaFwiLFxuICBKXFx1MDMwQzogXCJKXCIsXG4gIFxcdTAxRjA6IFwialwiLFxuICBcXHUwMUU4OiBcIktcIixcbiAgXFx1MDFFOTogXCJrXCIsXG4gIE1cXHUwMzBDOiBcIk1cIixcbiAgbVxcdTAzMEM6IFwibVwiLFxuICBQXFx1MDMwQzogXCJQXCIsXG4gIHBcXHUwMzBDOiBcInBcIixcbiAgUVxcdTAzMEM6IFwiUVwiLFxuICBxXFx1MDMwQzogXCJxXCIsXG4gIFxcdTAxNThcXHUwMzI5OiBcIlJcIixcbiAgXFx1MDE1OVxcdTAzMjk6IFwiclwiLFxuICBcXHUxRTY2OiBcIlNcIixcbiAgXFx1MUU2NzogXCJzXCIsXG4gIFZcXHUwMzBDOiBcIlZcIixcbiAgdlxcdTAzMEM6IFwidlwiLFxuICBXXFx1MDMwQzogXCJXXCIsXG4gIHdcXHUwMzBDOiBcIndcIixcbiAgWFxcdTAzMEM6IFwiWFwiLFxuICB4XFx1MDMwQzogXCJ4XCIsXG4gIFlcXHUwMzBDOiBcIllcIixcbiAgeVxcdTAzMEM6IFwieVwiLFxuICBBXFx1MDMyNzogXCJBXCIsXG4gIGFcXHUwMzI3OiBcImFcIixcbiAgQlxcdTAzMjc6IFwiQlwiLFxuICBiXFx1MDMyNzogXCJiXCIsXG4gIFxcdTFFMTA6IFwiRFwiLFxuICBcXHUxRTExOiBcImRcIixcbiAgXFx1MDIyODogXCJFXCIsXG4gIFxcdTAyMjk6IFwiZVwiLFxuICBcXHUwMTkwXFx1MDMyNzogXCJFXCIsXG4gIFxcdTAyNUJcXHUwMzI3OiBcImVcIixcbiAgXFx1MUUyODogXCJIXCIsXG4gIFxcdTFFMjk6IFwiaFwiLFxuICBJXFx1MDMyNzogXCJJXCIsXG4gIGlcXHUwMzI3OiBcImlcIixcbiAgXFx1MDE5N1xcdTAzMjc6IFwiSVwiLFxuICBcXHUwMjY4XFx1MDMyNzogXCJpXCIsXG4gIE1cXHUwMzI3OiBcIk1cIixcbiAgbVxcdTAzMjc6IFwibVwiLFxuICBPXFx1MDMyNzogXCJPXCIsXG4gIG9cXHUwMzI3OiBcIm9cIixcbiAgUVxcdTAzMjc6IFwiUVwiLFxuICBxXFx1MDMyNzogXCJxXCIsXG4gIFVcXHUwMzI3OiBcIlVcIixcbiAgdVxcdTAzMjc6IFwidVwiLFxuICBYXFx1MDMyNzogXCJYXCIsXG4gIHhcXHUwMzI3OiBcInhcIixcbiAgWlxcdTAzMjc6IFwiWlwiLFxuICB6XFx1MDMyNzogXCJ6XCJcbn07XG52YXIgY2hhcnMgPSBPYmplY3Qua2V5cyhjaGFyYWN0ZXJNYXApLmpvaW4oXCJ8XCIpO1xudmFyIGFsbEFjY2VudHMgPSBuZXcgUmVnRXhwKGNoYXJzLCBcImdcIik7XG5mdW5jdGlvbiByZW1vdmVBY2NlbnRzKHN0cikge1xuICByZXR1cm4gc3RyLnJlcGxhY2UoYWxsQWNjZW50cywgKG1hdGNoKSA9PiB7XG4gICAgcmV0dXJuIGNoYXJhY3Rlck1hcFttYXRjaF07XG4gIH0pO1xufVxudmFyIHJhbmtpbmdzID0ge1xuICBDQVNFX1NFTlNJVElWRV9FUVVBTDogNyxcbiAgRVFVQUw6IDYsXG4gIFNUQVJUU19XSVRIOiA1LFxuICBXT1JEX1NUQVJUU19XSVRIOiA0LFxuICBDT05UQUlOUzogMyxcbiAgQUNST05ZTTogMixcbiAgTUFUQ0hFUzogMSxcbiAgTk9fTUFUQ0g6IDBcbn07XG5mdW5jdGlvbiByYW5rSXRlbShpdGVtLCB2YWx1ZSwgb3B0aW9ucykge1xuICB2YXIgX29wdGlvbnMkdGhyZXNob2xkO1xuICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcbiAgb3B0aW9ucy50aHJlc2hvbGQgPSAoX29wdGlvbnMkdGhyZXNob2xkID0gb3B0aW9ucy50aHJlc2hvbGQpICE9IG51bGwgPyBfb3B0aW9ucyR0aHJlc2hvbGQgOiByYW5raW5ncy5NQVRDSEVTO1xuICBpZiAoIW9wdGlvbnMuYWNjZXNzb3JzKSB7XG4gICAgY29uc3QgcmFuayA9IGdldE1hdGNoUmFua2luZyhpdGVtLCB2YWx1ZSwgb3B0aW9ucyk7XG4gICAgcmV0dXJuIHtcbiAgICAgIC8vIGVuZHMgdXAgYmVpbmcgZHVwbGljYXRlIG9mICdpdGVtJyBpbiBtYXRjaGVzIGJ1dCBjb25zaXN0ZW50XG4gICAgICByYW5rZWRWYWx1ZTogaXRlbSxcbiAgICAgIHJhbmssXG4gICAgICBhY2Nlc3NvckluZGV4OiAtMSxcbiAgICAgIGFjY2Vzc29yVGhyZXNob2xkOiBvcHRpb25zLnRocmVzaG9sZCxcbiAgICAgIHBhc3NlZDogcmFuayA+PSBvcHRpb25zLnRocmVzaG9sZFxuICAgIH07XG4gIH1cbiAgY29uc3QgdmFsdWVzVG9SYW5rID0gZ2V0QWxsVmFsdWVzVG9SYW5rKGl0ZW0sIG9wdGlvbnMuYWNjZXNzb3JzKTtcbiAgY29uc3QgcmFua2luZ0luZm8gPSB7XG4gICAgcmFua2VkVmFsdWU6IGl0ZW0sXG4gICAgcmFuazogcmFua2luZ3MuTk9fTUFUQ0gsXG4gICAgYWNjZXNzb3JJbmRleDogLTEsXG4gICAgYWNjZXNzb3JUaHJlc2hvbGQ6IG9wdGlvbnMudGhyZXNob2xkLFxuICAgIHBhc3NlZDogZmFsc2VcbiAgfTtcbiAgZm9yIChsZXQgaTIgPSAwOyBpMiA8IHZhbHVlc1RvUmFuay5sZW5ndGg7IGkyKyspIHtcbiAgICBjb25zdCByYW5rVmFsdWUgPSB2YWx1ZXNUb1JhbmtbaTJdO1xuICAgIGxldCBuZXdSYW5rID0gZ2V0TWF0Y2hSYW5raW5nKHJhbmtWYWx1ZS5pdGVtVmFsdWUsIHZhbHVlLCBvcHRpb25zKTtcbiAgICBjb25zdCB7XG4gICAgICBtaW5SYW5raW5nLFxuICAgICAgbWF4UmFua2luZyxcbiAgICAgIHRocmVzaG9sZCA9IG9wdGlvbnMudGhyZXNob2xkXG4gICAgfSA9IHJhbmtWYWx1ZS5hdHRyaWJ1dGVzO1xuICAgIGlmIChuZXdSYW5rIDwgbWluUmFua2luZyAmJiBuZXdSYW5rID49IHJhbmtpbmdzLk1BVENIRVMpIHtcbiAgICAgIG5ld1JhbmsgPSBtaW5SYW5raW5nO1xuICAgIH0gZWxzZSBpZiAobmV3UmFuayA+IG1heFJhbmtpbmcpIHtcbiAgICAgIG5ld1JhbmsgPSBtYXhSYW5raW5nO1xuICAgIH1cbiAgICBuZXdSYW5rID0gTWF0aC5taW4obmV3UmFuaywgbWF4UmFua2luZyk7XG4gICAgaWYgKG5ld1JhbmsgPj0gdGhyZXNob2xkICYmIG5ld1JhbmsgPiByYW5raW5nSW5mby5yYW5rKSB7XG4gICAgICByYW5raW5nSW5mby5yYW5rID0gbmV3UmFuaztcbiAgICAgIHJhbmtpbmdJbmZvLnBhc3NlZCA9IHRydWU7XG4gICAgICByYW5raW5nSW5mby5hY2Nlc3NvckluZGV4ID0gaTI7XG4gICAgICByYW5raW5nSW5mby5hY2Nlc3NvclRocmVzaG9sZCA9IHRocmVzaG9sZDtcbiAgICAgIHJhbmtpbmdJbmZvLnJhbmtlZFZhbHVlID0gcmFua1ZhbHVlLml0ZW1WYWx1ZTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHJhbmtpbmdJbmZvO1xufVxuZnVuY3Rpb24gZ2V0TWF0Y2hSYW5raW5nKHRlc3RTdHJpbmcsIHN0cmluZ1RvUmFuaywgb3B0aW9ucykge1xuICB0ZXN0U3RyaW5nID0gcHJlcGFyZVZhbHVlRm9yQ29tcGFyaXNvbih0ZXN0U3RyaW5nLCBvcHRpb25zKTtcbiAgc3RyaW5nVG9SYW5rID0gcHJlcGFyZVZhbHVlRm9yQ29tcGFyaXNvbihzdHJpbmdUb1JhbmssIG9wdGlvbnMpO1xuICBpZiAoc3RyaW5nVG9SYW5rLmxlbmd0aCA+IHRlc3RTdHJpbmcubGVuZ3RoKSB7XG4gICAgcmV0dXJuIHJhbmtpbmdzLk5PX01BVENIO1xuICB9XG4gIGlmICh0ZXN0U3RyaW5nID09PSBzdHJpbmdUb1JhbmspIHtcbiAgICByZXR1cm4gcmFua2luZ3MuQ0FTRV9TRU5TSVRJVkVfRVFVQUw7XG4gIH1cbiAgdGVzdFN0cmluZyA9IHRlc3RTdHJpbmcudG9Mb3dlckNhc2UoKTtcbiAgc3RyaW5nVG9SYW5rID0gc3RyaW5nVG9SYW5rLnRvTG93ZXJDYXNlKCk7XG4gIGlmICh0ZXN0U3RyaW5nID09PSBzdHJpbmdUb1JhbmspIHtcbiAgICByZXR1cm4gcmFua2luZ3MuRVFVQUw7XG4gIH1cbiAgaWYgKHRlc3RTdHJpbmcuc3RhcnRzV2l0aChzdHJpbmdUb1JhbmspKSB7XG4gICAgcmV0dXJuIHJhbmtpbmdzLlNUQVJUU19XSVRIO1xuICB9XG4gIGlmICh0ZXN0U3RyaW5nLmluY2x1ZGVzKGAgJHtzdHJpbmdUb1Jhbmt9YCkpIHtcbiAgICByZXR1cm4gcmFua2luZ3MuV09SRF9TVEFSVFNfV0lUSDtcbiAgfVxuICBpZiAodGVzdFN0cmluZy5pbmNsdWRlcyhzdHJpbmdUb1JhbmspKSB7XG4gICAgcmV0dXJuIHJhbmtpbmdzLkNPTlRBSU5TO1xuICB9IGVsc2UgaWYgKHN0cmluZ1RvUmFuay5sZW5ndGggPT09IDEpIHtcbiAgICByZXR1cm4gcmFua2luZ3MuTk9fTUFUQ0g7XG4gIH1cbiAgaWYgKGdldEFjcm9ueW0odGVzdFN0cmluZykuaW5jbHVkZXMoc3RyaW5nVG9SYW5rKSkge1xuICAgIHJldHVybiByYW5raW5ncy5BQ1JPTllNO1xuICB9XG4gIHJldHVybiBnZXRDbG9zZW5lc3NSYW5raW5nKHRlc3RTdHJpbmcsIHN0cmluZ1RvUmFuayk7XG59XG5mdW5jdGlvbiBnZXRBY3JvbnltKHN0cmluZykge1xuICBsZXQgYWNyb255bSA9IFwiXCI7XG4gIGNvbnN0IHdvcmRzSW5TdHJpbmcgPSBzdHJpbmcuc3BsaXQoXCIgXCIpO1xuICB3b3Jkc0luU3RyaW5nLmZvckVhY2goKHdvcmRJblN0cmluZykgPT4ge1xuICAgIGNvbnN0IHNwbGl0QnlIeXBoZW5Xb3JkcyA9IHdvcmRJblN0cmluZy5zcGxpdChcIi1cIik7XG4gICAgc3BsaXRCeUh5cGhlbldvcmRzLmZvckVhY2goKHNwbGl0QnlIeXBoZW5Xb3JkKSA9PiB7XG4gICAgICBhY3JvbnltICs9IHNwbGl0QnlIeXBoZW5Xb3JkLnN1YnN0cigwLCAxKTtcbiAgICB9KTtcbiAgfSk7XG4gIHJldHVybiBhY3JvbnltO1xufVxuZnVuY3Rpb24gZ2V0Q2xvc2VuZXNzUmFua2luZyh0ZXN0U3RyaW5nLCBzdHJpbmdUb1JhbmspIHtcbiAgbGV0IG1hdGNoaW5nSW5PcmRlckNoYXJDb3VudCA9IDA7XG4gIGxldCBjaGFyTnVtYmVyID0gMDtcbiAgZnVuY3Rpb24gZmluZE1hdGNoaW5nQ2hhcmFjdGVyKG1hdGNoQ2hhciwgc3RyaW5nLCBpbmRleCkge1xuICAgIGZvciAobGV0IGogPSBpbmRleCwgSiA9IHN0cmluZy5sZW5ndGg7IGogPCBKOyBqKyspIHtcbiAgICAgIGNvbnN0IHN0cmluZ0NoYXIgPSBzdHJpbmdbal07XG4gICAgICBpZiAoc3RyaW5nQ2hhciA9PT0gbWF0Y2hDaGFyKSB7XG4gICAgICAgIG1hdGNoaW5nSW5PcmRlckNoYXJDb3VudCArPSAxO1xuICAgICAgICByZXR1cm4gaiArIDE7XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiAtMTtcbiAgfVxuICBmdW5jdGlvbiBnZXRSYW5raW5nKHNwcmVhZDMpIHtcbiAgICBjb25zdCBzcHJlYWRQZXJjZW50YWdlID0gMSAvIHNwcmVhZDM7XG4gICAgY29uc3QgaW5PcmRlclBlcmNlbnRhZ2UgPSBtYXRjaGluZ0luT3JkZXJDaGFyQ291bnQgLyBzdHJpbmdUb1JhbmsubGVuZ3RoO1xuICAgIGNvbnN0IHJhbmtpbmcgPSByYW5raW5ncy5NQVRDSEVTICsgaW5PcmRlclBlcmNlbnRhZ2UgKiBzcHJlYWRQZXJjZW50YWdlO1xuICAgIHJldHVybiByYW5raW5nO1xuICB9XG4gIGNvbnN0IGZpcnN0SW5kZXggPSBmaW5kTWF0Y2hpbmdDaGFyYWN0ZXIoc3RyaW5nVG9SYW5rWzBdLCB0ZXN0U3RyaW5nLCAwKTtcbiAgaWYgKGZpcnN0SW5kZXggPCAwKSB7XG4gICAgcmV0dXJuIHJhbmtpbmdzLk5PX01BVENIO1xuICB9XG4gIGNoYXJOdW1iZXIgPSBmaXJzdEluZGV4O1xuICBmb3IgKGxldCBpMiA9IDEsIEkgPSBzdHJpbmdUb1JhbmsubGVuZ3RoOyBpMiA8IEk7IGkyKyspIHtcbiAgICBjb25zdCBtYXRjaENoYXIgPSBzdHJpbmdUb1JhbmtbaTJdO1xuICAgIGNoYXJOdW1iZXIgPSBmaW5kTWF0Y2hpbmdDaGFyYWN0ZXIobWF0Y2hDaGFyLCB0ZXN0U3RyaW5nLCBjaGFyTnVtYmVyKTtcbiAgICBjb25zdCBmb3VuZCA9IGNoYXJOdW1iZXIgPiAtMTtcbiAgICBpZiAoIWZvdW5kKSB7XG4gICAgICByZXR1cm4gcmFua2luZ3MuTk9fTUFUQ0g7XG4gICAgfVxuICB9XG4gIGNvbnN0IHNwcmVhZDIgPSBjaGFyTnVtYmVyIC0gZmlyc3RJbmRleDtcbiAgcmV0dXJuIGdldFJhbmtpbmcoc3ByZWFkMik7XG59XG5mdW5jdGlvbiBwcmVwYXJlVmFsdWVGb3JDb21wYXJpc29uKHZhbHVlLCBfcmVmKSB7XG4gIGxldCB7XG4gICAga2VlcERpYWNyaXRpY3NcbiAgfSA9IF9yZWY7XG4gIHZhbHVlID0gYCR7dmFsdWV9YDtcbiAgaWYgKCFrZWVwRGlhY3JpdGljcykge1xuICAgIHZhbHVlID0gcmVtb3ZlQWNjZW50cyh2YWx1ZSk7XG4gIH1cbiAgcmV0dXJuIHZhbHVlO1xufVxuZnVuY3Rpb24gZ2V0SXRlbVZhbHVlcyhpdGVtLCBhY2Nlc3Nvcikge1xuICBsZXQgYWNjZXNzb3JGbiA9IGFjY2Vzc29yO1xuICBpZiAodHlwZW9mIGFjY2Vzc29yID09PSBcIm9iamVjdFwiKSB7XG4gICAgYWNjZXNzb3JGbiA9IGFjY2Vzc29yLmFjY2Vzc29yO1xuICB9XG4gIGNvbnN0IHZhbHVlID0gYWNjZXNzb3JGbihpdGVtKTtcbiAgaWYgKHZhbHVlID09IG51bGwpIHtcbiAgICByZXR1cm4gW107XG4gIH1cbiAgaWYgKEFycmF5LmlzQXJyYXkodmFsdWUpKSB7XG4gICAgcmV0dXJuIHZhbHVlO1xuICB9XG4gIHJldHVybiBbU3RyaW5nKHZhbHVlKV07XG59XG5mdW5jdGlvbiBnZXRBbGxWYWx1ZXNUb1JhbmsoaXRlbSwgYWNjZXNzb3JzKSB7XG4gIGNvbnN0IGFsbFZhbHVlcyA9IFtdO1xuICBmb3IgKGxldCBqID0gMCwgSiA9IGFjY2Vzc29ycy5sZW5ndGg7IGogPCBKOyBqKyspIHtcbiAgICBjb25zdCBhY2Nlc3NvciA9IGFjY2Vzc29yc1tqXTtcbiAgICBjb25zdCBhdHRyaWJ1dGVzID0gZ2V0QWNjZXNzb3JBdHRyaWJ1dGVzKGFjY2Vzc29yKTtcbiAgICBjb25zdCBpdGVtVmFsdWVzID0gZ2V0SXRlbVZhbHVlcyhpdGVtLCBhY2Nlc3Nvcik7XG4gICAgZm9yIChsZXQgaTIgPSAwLCBJID0gaXRlbVZhbHVlcy5sZW5ndGg7IGkyIDwgSTsgaTIrKykge1xuICAgICAgYWxsVmFsdWVzLnB1c2goe1xuICAgICAgICBpdGVtVmFsdWU6IGl0ZW1WYWx1ZXNbaTJdLFxuICAgICAgICBhdHRyaWJ1dGVzXG4gICAgICB9KTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIGFsbFZhbHVlcztcbn1cbnZhciBkZWZhdWx0S2V5QXR0cmlidXRlcyA9IHtcbiAgbWF4UmFua2luZzogSW5maW5pdHksXG4gIG1pblJhbmtpbmc6IC1JbmZpbml0eVxufTtcbmZ1bmN0aW9uIGdldEFjY2Vzc29yQXR0cmlidXRlcyhhY2Nlc3Nvcikge1xuICBpZiAodHlwZW9mIGFjY2Vzc29yID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICByZXR1cm4gZGVmYXVsdEtleUF0dHJpYnV0ZXM7XG4gIH1cbiAgcmV0dXJuIHtcbiAgICAuLi5kZWZhdWx0S2V5QXR0cmlidXRlcyxcbiAgICAuLi5hY2Nlc3NvclxuICB9O1xufVxuXG4vLyAuLi8uLi9ub2RlX21vZHVsZXMvLnBucG0vZ29vYmVyQDIuMS4xNF9jc3N0eXBlQDMuMS4zL25vZGVfbW9kdWxlcy9nb29iZXIvZGlzdC9nb29iZXIubW9kZXJuLmpzXG52YXIgZSA9IHsgZGF0YTogXCJcIiB9O1xudmFyIHQgPSAodDIpID0+IFwib2JqZWN0XCIgPT0gdHlwZW9mIHdpbmRvdyA/ICgodDIgPyB0Mi5xdWVyeVNlbGVjdG9yKFwiI19nb29iZXJcIikgOiB3aW5kb3cuX2dvb2JlcikgfHwgT2JqZWN0LmFzc2lnbigodDIgfHwgZG9jdW1lbnQuaGVhZCkuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInN0eWxlXCIpKSwgeyBpbm5lckhUTUw6IFwiIFwiLCBpZDogXCJfZ29vYmVyXCIgfSkpLmZpcnN0Q2hpbGQgOiB0MiB8fCBlO1xudmFyIGwgPSAvKD86KFtcXHUwMDgwLVxcdUZGRkZcXHctJUBdKykgKjo/ICooW157O10rPyk7fChbXjt9e10qPykgKnspfCh9XFxzKikvZztcbnZhciBhID0gL1xcL1xcKlteXSo/XFwqXFwvfCAgKy9nO1xudmFyIG4gPSAvXFxuKy9nO1xudmFyIG8gPSAoZTIsIHQyKSA9PiB7XG4gIGxldCByMiA9IFwiXCIsIGwyID0gXCJcIiwgYTIgPSBcIlwiO1xuICBmb3IgKGxldCBuMiBpbiBlMikge1xuICAgIGxldCBjMiA9IGUyW24yXTtcbiAgICBcIkBcIiA9PSBuMlswXSA/IFwiaVwiID09IG4yWzFdID8gcjIgPSBuMiArIFwiIFwiICsgYzIgKyBcIjtcIiA6IGwyICs9IFwiZlwiID09IG4yWzFdID8gbyhjMiwgbjIpIDogbjIgKyBcIntcIiArIG8oYzIsIFwia1wiID09IG4yWzFdID8gXCJcIiA6IHQyKSArIFwifVwiIDogXCJvYmplY3RcIiA9PSB0eXBlb2YgYzIgPyBsMiArPSBvKGMyLCB0MiA/IHQyLnJlcGxhY2UoLyhbXixdKSsvZywgKGUzKSA9PiBuMi5yZXBsYWNlKC8oXjouKil8KFteLF0pKy9nLCAodDMpID0+IC8mLy50ZXN0KHQzKSA/IHQzLnJlcGxhY2UoLyYvZywgZTMpIDogZTMgPyBlMyArIFwiIFwiICsgdDMgOiB0MykpIDogbjIpIDogbnVsbCAhPSBjMiAmJiAobjIgPSAvXi0tLy50ZXN0KG4yKSA/IG4yIDogbjIucmVwbGFjZSgvW0EtWl0vZywgXCItJCZcIikudG9Mb3dlckNhc2UoKSwgYTIgKz0gby5wID8gby5wKG4yLCBjMikgOiBuMiArIFwiOlwiICsgYzIgKyBcIjtcIik7XG4gIH1cbiAgcmV0dXJuIHIyICsgKHQyICYmIGEyID8gdDIgKyBcIntcIiArIGEyICsgXCJ9XCIgOiBhMikgKyBsMjtcbn07XG52YXIgYyA9IHt9O1xudmFyIHMgPSAoZTIpID0+IHtcbiAgaWYgKFwib2JqZWN0XCIgPT0gdHlwZW9mIGUyKSB7XG4gICAgbGV0IHQyID0gXCJcIjtcbiAgICBmb3IgKGxldCByMiBpbiBlMilcbiAgICAgIHQyICs9IHIyICsgcyhlMltyMl0pO1xuICAgIHJldHVybiB0MjtcbiAgfVxuICByZXR1cm4gZTI7XG59O1xudmFyIGkgPSAoZTIsIHQyLCByMiwgaTIsIHAyKSA9PiB7XG4gIGxldCB1MiA9IHMoZTIpLCBkID0gY1t1Ml0gfHwgKGNbdTJdID0gKChlMykgPT4ge1xuICAgIGxldCB0MyA9IDAsIHIzID0gMTE7XG4gICAgZm9yICg7IHQzIDwgZTMubGVuZ3RoOyApXG4gICAgICByMyA9IDEwMSAqIHIzICsgZTMuY2hhckNvZGVBdCh0MysrKSA+Pj4gMDtcbiAgICByZXR1cm4gXCJnb1wiICsgcjM7XG4gIH0pKHUyKSk7XG4gIGlmICghY1tkXSkge1xuICAgIGxldCB0MyA9IHUyICE9PSBlMiA/IGUyIDogKChlMykgPT4ge1xuICAgICAgbGV0IHQ0LCByMywgbzIgPSBbe31dO1xuICAgICAgZm9yICg7IHQ0ID0gbC5leGVjKGUzLnJlcGxhY2UoYSwgXCJcIikpOyApXG4gICAgICAgIHQ0WzRdID8gbzIuc2hpZnQoKSA6IHQ0WzNdID8gKHIzID0gdDRbM10ucmVwbGFjZShuLCBcIiBcIikudHJpbSgpLCBvMi51bnNoaWZ0KG8yWzBdW3IzXSA9IG8yWzBdW3IzXSB8fCB7fSkpIDogbzJbMF1bdDRbMV1dID0gdDRbMl0ucmVwbGFjZShuLCBcIiBcIikudHJpbSgpO1xuICAgICAgcmV0dXJuIG8yWzBdO1xuICAgIH0pKGUyKTtcbiAgICBjW2RdID0gbyhwMiA/IHsgW1wiQGtleWZyYW1lcyBcIiArIGRdOiB0MyB9IDogdDMsIHIyID8gXCJcIiA6IFwiLlwiICsgZCk7XG4gIH1cbiAgbGV0IGYgPSByMiAmJiBjLmcgPyBjLmcgOiBudWxsO1xuICByZXR1cm4gcjIgJiYgKGMuZyA9IGNbZF0pLCAoKGUzLCB0MywgcjMsIGwyKSA9PiB7XG4gICAgbDIgPyB0My5kYXRhID0gdDMuZGF0YS5yZXBsYWNlKGwyLCBlMykgOiAtMSA9PT0gdDMuZGF0YS5pbmRleE9mKGUzKSAmJiAodDMuZGF0YSA9IHIzID8gZTMgKyB0My5kYXRhIDogdDMuZGF0YSArIGUzKTtcbiAgfSkoY1tkXSwgdDIsIGkyLCBmKSwgZDtcbn07XG52YXIgcCA9IChlMiwgdDIsIHIyKSA9PiBlMi5yZWR1Y2UoKGUzLCBsMiwgYTIpID0+IHtcbiAgbGV0IG4yID0gdDJbYTJdO1xuICBpZiAobjIgJiYgbjIuY2FsbCkge1xuICAgIGxldCBlNCA9IG4yKHIyKSwgdDMgPSBlNCAmJiBlNC5wcm9wcyAmJiBlNC5wcm9wcy5jbGFzc05hbWUgfHwgL15nby8udGVzdChlNCkgJiYgZTQ7XG4gICAgbjIgPSB0MyA/IFwiLlwiICsgdDMgOiBlNCAmJiBcIm9iamVjdFwiID09IHR5cGVvZiBlNCA/IGU0LnByb3BzID8gXCJcIiA6IG8oZTQsIFwiXCIpIDogZmFsc2UgPT09IGU0ID8gXCJcIiA6IGU0O1xuICB9XG4gIHJldHVybiBlMyArIGwyICsgKG51bGwgPT0gbjIgPyBcIlwiIDogbjIpO1xufSwgXCJcIik7XG5mdW5jdGlvbiB1KGUyKSB7XG4gIGxldCByMiA9IHRoaXMgfHwge30sIGwyID0gZTIuY2FsbCA/IGUyKHIyLnApIDogZTI7XG4gIHJldHVybiBpKGwyLnVuc2hpZnQgPyBsMi5yYXcgPyBwKGwyLCBbXS5zbGljZS5jYWxsKGFyZ3VtZW50cywgMSksIHIyLnApIDogbDIucmVkdWNlKChlMywgdDIpID0+IE9iamVjdC5hc3NpZ24oZTMsIHQyICYmIHQyLmNhbGwgPyB0MihyMi5wKSA6IHQyKSwge30pIDogbDIsIHQocjIudGFyZ2V0KSwgcjIuZywgcjIubywgcjIuayk7XG59XG51LmJpbmQoeyBnOiAxIH0pO1xudS5iaW5kKHsgazogMSB9KTtcblxuLy8gLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL2Nsc3hAMi4xLjEvbm9kZV9tb2R1bGVzL2Nsc3gvZGlzdC9jbHN4Lm1qc1xuZnVuY3Rpb24gcihlMikge1xuICB2YXIgdDIsIGYsIG4yID0gXCJcIjtcbiAgaWYgKFwic3RyaW5nXCIgPT0gdHlwZW9mIGUyIHx8IFwibnVtYmVyXCIgPT0gdHlwZW9mIGUyKVxuICAgIG4yICs9IGUyO1xuICBlbHNlIGlmIChcIm9iamVjdFwiID09IHR5cGVvZiBlMilcbiAgICBpZiAoQXJyYXkuaXNBcnJheShlMikpIHtcbiAgICAgIHZhciBvMiA9IGUyLmxlbmd0aDtcbiAgICAgIGZvciAodDIgPSAwOyB0MiA8IG8yOyB0MisrKVxuICAgICAgICBlMlt0Ml0gJiYgKGYgPSByKGUyW3QyXSkpICYmIChuMiAmJiAobjIgKz0gXCIgXCIpLCBuMiArPSBmKTtcbiAgICB9IGVsc2VcbiAgICAgIGZvciAoZiBpbiBlMilcbiAgICAgICAgZTJbZl0gJiYgKG4yICYmIChuMiArPSBcIiBcIiksIG4yICs9IGYpO1xuICByZXR1cm4gbjI7XG59XG5mdW5jdGlvbiBjbHN4KCkge1xuICBmb3IgKHZhciBlMiwgdDIsIGYgPSAwLCBuMiA9IFwiXCIsIG8yID0gYXJndW1lbnRzLmxlbmd0aDsgZiA8IG8yOyBmKyspXG4gICAgKGUyID0gYXJndW1lbnRzW2ZdKSAmJiAodDIgPSByKGUyKSkgJiYgKG4yICYmIChuMiArPSBcIiBcIiksIG4yICs9IHQyKTtcbiAgcmV0dXJuIG4yO1xufVxuXG4vLyAuLi8uLi9ub2RlX21vZHVsZXMvLnBucG0vQHNvbGlkLXByaW1pdGl2ZXMrdHJhbnNpdGlvbi1ncm91cEAxLjAuM19zb2xpZC1qc0AxLjguMTcvbm9kZV9tb2R1bGVzL0Bzb2xpZC1wcmltaXRpdmVzL3RyYW5zaXRpb24tZ3JvdXAvZGlzdC9pbmRleC5qc1xudmFyIG5vb3AgPSAoKSA9PiB7XG59O1xuZnVuY3Rpb24gY3JlYXRlTGlzdFRyYW5zaXRpb24oc291cmNlLCBvcHRpb25zKSB7XG4gIGNvbnN0IGluaXRTb3VyY2UgPSB1bnRyYWNrKHNvdXJjZSk7XG4gIGlmIChpc1NlcnZlcikge1xuICAgIGNvbnN0IGNvcHkgPSBpbml0U291cmNlLnNsaWNlKCk7XG4gICAgcmV0dXJuICgpID0+IGNvcHk7XG4gIH1cbiAgY29uc3QgeyBvbkNoYW5nZSB9ID0gb3B0aW9ucztcbiAgbGV0IHByZXZTZXQgPSBuZXcgU2V0KG9wdGlvbnMuYXBwZWFyID8gdm9pZCAwIDogaW5pdFNvdXJjZSk7XG4gIGNvbnN0IGV4aXRpbmcgPSAvKiBAX19QVVJFX18gKi8gbmV3IFdlYWtTZXQoKTtcbiAgY29uc3QgW3RvUmVtb3ZlLCBzZXRUb1JlbW92ZV0gPSBjcmVhdGVTaWduYWwoW10sIHsgZXF1YWxzOiBmYWxzZSB9KTtcbiAgY29uc3QgW2lzVHJhbnNpdGlvblBlbmRpbmddID0gdXNlVHJhbnNpdGlvbigpO1xuICBjb25zdCBmaW5pc2hSZW1vdmVkID0gb3B0aW9ucy5leGl0TWV0aG9kID09PSBcInJlbW92ZVwiID8gbm9vcCA6IChlbHMpID0+IHtcbiAgICBzZXRUb1JlbW92ZSgocDIpID0+IChwMi5wdXNoLmFwcGx5KHAyLCBlbHMpLCBwMikpO1xuICAgIGZvciAoY29uc3QgZWwgb2YgZWxzKVxuICAgICAgZXhpdGluZy5kZWxldGUoZWwpO1xuICB9O1xuICBjb25zdCBoYW5kbGVSZW1vdmVkID0gb3B0aW9ucy5leGl0TWV0aG9kID09PSBcInJlbW92ZVwiID8gbm9vcCA6IG9wdGlvbnMuZXhpdE1ldGhvZCA9PT0gXCJrZWVwLWluZGV4XCIgPyAoZWxzLCBlbCwgaTIpID0+IGVscy5zcGxpY2UoaTIsIDAsIGVsKSA6IChlbHMsIGVsKSA9PiBlbHMucHVzaChlbCk7XG4gIHJldHVybiBjcmVhdGVNZW1vKFxuICAgIChwcmV2KSA9PiB7XG4gICAgICBjb25zdCBlbHNUb1JlbW92ZSA9IHRvUmVtb3ZlKCk7XG4gICAgICBjb25zdCBzb3VyY2VMaXN0ID0gc291cmNlKCk7XG4gICAgICBzb3VyY2VMaXN0WyRUUkFDS107XG4gICAgICBpZiAodW50cmFjayhpc1RyYW5zaXRpb25QZW5kaW5nKSkge1xuICAgICAgICBpc1RyYW5zaXRpb25QZW5kaW5nKCk7XG4gICAgICAgIHJldHVybiBwcmV2O1xuICAgICAgfVxuICAgICAgaWYgKGVsc1RvUmVtb3ZlLmxlbmd0aCkge1xuICAgICAgICBjb25zdCBuZXh0ID0gcHJldi5maWx0ZXIoKGUyKSA9PiAhZWxzVG9SZW1vdmUuaW5jbHVkZXMoZTIpKTtcbiAgICAgICAgZWxzVG9SZW1vdmUubGVuZ3RoID0gMDtcbiAgICAgICAgb25DaGFuZ2UoeyBsaXN0OiBuZXh0LCBhZGRlZDogW10sIHJlbW92ZWQ6IFtdLCB1bmNoYW5nZWQ6IG5leHQsIGZpbmlzaFJlbW92ZWQgfSk7XG4gICAgICAgIHJldHVybiBuZXh0O1xuICAgICAgfVxuICAgICAgcmV0dXJuIHVudHJhY2soKCkgPT4ge1xuICAgICAgICBjb25zdCBuZXh0U2V0ID0gbmV3IFNldChzb3VyY2VMaXN0KTtcbiAgICAgICAgY29uc3QgbmV4dCA9IHNvdXJjZUxpc3Quc2xpY2UoKTtcbiAgICAgICAgY29uc3QgYWRkZWQgPSBbXTtcbiAgICAgICAgY29uc3QgcmVtb3ZlZCA9IFtdO1xuICAgICAgICBjb25zdCB1bmNoYW5nZWQgPSBbXTtcbiAgICAgICAgZm9yIChjb25zdCBlbCBvZiBzb3VyY2VMaXN0KSB7XG4gICAgICAgICAgKHByZXZTZXQuaGFzKGVsKSA/IHVuY2hhbmdlZCA6IGFkZGVkKS5wdXNoKGVsKTtcbiAgICAgICAgfVxuICAgICAgICBsZXQgbm90aGluZ0NoYW5nZWQgPSAhYWRkZWQubGVuZ3RoO1xuICAgICAgICBmb3IgKGxldCBpMiA9IDA7IGkyIDwgcHJldi5sZW5ndGg7IGkyKyspIHtcbiAgICAgICAgICBjb25zdCBlbCA9IHByZXZbaTJdO1xuICAgICAgICAgIGlmICghbmV4dFNldC5oYXMoZWwpKSB7XG4gICAgICAgICAgICBpZiAoIWV4aXRpbmcuaGFzKGVsKSkge1xuICAgICAgICAgICAgICByZW1vdmVkLnB1c2goZWwpO1xuICAgICAgICAgICAgICBleGl0aW5nLmFkZChlbCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBoYW5kbGVSZW1vdmVkKG5leHQsIGVsLCBpMik7XG4gICAgICAgICAgfVxuICAgICAgICAgIGlmIChub3RoaW5nQ2hhbmdlZCAmJiBlbCAhPT0gbmV4dFtpMl0pXG4gICAgICAgICAgICBub3RoaW5nQ2hhbmdlZCA9IGZhbHNlO1xuICAgICAgICB9XG4gICAgICAgIGlmICghcmVtb3ZlZC5sZW5ndGggJiYgbm90aGluZ0NoYW5nZWQpXG4gICAgICAgICAgcmV0dXJuIHByZXY7XG4gICAgICAgIG9uQ2hhbmdlKHsgbGlzdDogbmV4dCwgYWRkZWQsIHJlbW92ZWQsIHVuY2hhbmdlZCwgZmluaXNoUmVtb3ZlZCB9KTtcbiAgICAgICAgcHJldlNldCA9IG5leHRTZXQ7XG4gICAgICAgIHJldHVybiBuZXh0O1xuICAgICAgfSk7XG4gICAgfSxcbiAgICBvcHRpb25zLmFwcGVhciA/IFtdIDogaW5pdFNvdXJjZS5zbGljZSgpXG4gICk7XG59XG5cbi8vIC4uLy4uL25vZGVfbW9kdWxlcy8ucG5wbS9Ac29saWQtcHJpbWl0aXZlcyt1dGlsc0A2LjIuM19zb2xpZC1qc0AxLjguMTcvbm9kZV9tb2R1bGVzL0Bzb2xpZC1wcmltaXRpdmVzL3V0aWxzL2Rpc3QvY2h1bmsvUjU2NzVZTVUuanNcbnZhciBpc0NsaWVudCA9ICFpc1NlcnZlcjtcbnZhciBpc0RldiA9IGlzQ2xpZW50ICYmICEhREVWO1xudmFyIG5vb3AyID0gKCkgPT4gdm9pZCAwO1xudmFyIGlzTm9uTnVsbGFibGUgPSAoaTIpID0+IGkyICE9IG51bGw7XG52YXIgZmlsdGVyTm9uTnVsbGFibGUgPSAoYXJyKSA9PiBhcnIuZmlsdGVyKGlzTm9uTnVsbGFibGUpO1xuZnVuY3Rpb24gY2hhaW4oY2FsbGJhY2tzKSB7XG4gIHJldHVybiAoLi4uYXJncykgPT4ge1xuICAgIGZvciAoY29uc3QgY2FsbGJhY2sgb2YgY2FsbGJhY2tzKVxuICAgICAgY2FsbGJhY2sgJiYgY2FsbGJhY2soLi4uYXJncyk7XG4gIH07XG59XG52YXIgYWNjZXNzID0gKHYpID0+IHR5cGVvZiB2ID09PSBcImZ1bmN0aW9uXCIgJiYgIXYubGVuZ3RoID8gdigpIDogdjtcbnZhciBhc0FycmF5ID0gKHZhbHVlKSA9PiBBcnJheS5pc0FycmF5KHZhbHVlKSA/IHZhbHVlIDogdmFsdWUgPyBbdmFsdWVdIDogW107XG5mdW5jdGlvbiBhY2Nlc3NXaXRoKHZhbHVlT3JGbiwgLi4uYXJncykge1xuICByZXR1cm4gdHlwZW9mIHZhbHVlT3JGbiA9PT0gXCJmdW5jdGlvblwiID8gdmFsdWVPckZuKC4uLmFyZ3MpIDogdmFsdWVPckZuO1xufVxudmFyIHRyeU9uQ2xlYW51cCA9IGlzRGV2ID8gKGZuKSA9PiBnZXRPd25lcigpID8gb25DbGVhbnVwKGZuKSA6IGZuIDogb25DbGVhbnVwO1xuZnVuY3Rpb24gaGFuZGxlRGlmZkFycmF5KGN1cnJlbnQsIHByZXYsIGhhbmRsZUFkZGVkLCBoYW5kbGVSZW1vdmVkKSB7XG4gIGNvbnN0IGN1cnJMZW5ndGggPSBjdXJyZW50Lmxlbmd0aDtcbiAgY29uc3QgcHJldkxlbmd0aCA9IHByZXYubGVuZ3RoO1xuICBsZXQgaTIgPSAwO1xuICBpZiAoIXByZXZMZW5ndGgpIHtcbiAgICBmb3IgKDsgaTIgPCBjdXJyTGVuZ3RoOyBpMisrKVxuICAgICAgaGFuZGxlQWRkZWQoY3VycmVudFtpMl0pO1xuICAgIHJldHVybjtcbiAgfVxuICBpZiAoIWN1cnJMZW5ndGgpIHtcbiAgICBmb3IgKDsgaTIgPCBwcmV2TGVuZ3RoOyBpMisrKVxuICAgICAgaGFuZGxlUmVtb3ZlZChwcmV2W2kyXSk7XG4gICAgcmV0dXJuO1xuICB9XG4gIGZvciAoOyBpMiA8IHByZXZMZW5ndGg7IGkyKyspIHtcbiAgICBpZiAocHJldltpMl0gIT09IGN1cnJlbnRbaTJdKVxuICAgICAgYnJlYWs7XG4gIH1cbiAgbGV0IHByZXZFbDtcbiAgbGV0IGN1cnJFbDtcbiAgcHJldiA9IHByZXYuc2xpY2UoaTIpO1xuICBjdXJyZW50ID0gY3VycmVudC5zbGljZShpMik7XG4gIGZvciAocHJldkVsIG9mIHByZXYpIHtcbiAgICBpZiAoIWN1cnJlbnQuaW5jbHVkZXMocHJldkVsKSlcbiAgICAgIGhhbmRsZVJlbW92ZWQocHJldkVsKTtcbiAgfVxuICBmb3IgKGN1cnJFbCBvZiBjdXJyZW50KSB7XG4gICAgaWYgKCFwcmV2LmluY2x1ZGVzKGN1cnJFbCkpXG4gICAgICBoYW5kbGVBZGRlZChjdXJyRWwpO1xuICB9XG59XG5cbi8vIC4uLy4uL25vZGVfbW9kdWxlcy8ucG5wbS9Ac29saWQtcHJpbWl0aXZlcytyZWZzQDEuMC41X3NvbGlkLWpzQDEuOC4xNy9ub2RlX21vZHVsZXMvQHNvbGlkLXByaW1pdGl2ZXMvcmVmcy9kaXN0L2luZGV4LmpzXG5mdW5jdGlvbiBtZXJnZVJlZnMoLi4ucmVmcykge1xuICByZXR1cm4gY2hhaW4ocmVmcyk7XG59XG52YXIgZGVmYXVsdEVsZW1lbnRQcmVkaWNhdGUgPSBpc1NlcnZlciA/IChpdGVtKSA9PiBpdGVtICE9IG51bGwgJiYgdHlwZW9mIGl0ZW0gPT09IFwib2JqZWN0XCIgJiYgXCJ0XCIgaW4gaXRlbSA6IChpdGVtKSA9PiBpdGVtIGluc3RhbmNlb2YgRWxlbWVudDtcbmZ1bmN0aW9uIGdldFJlc29sdmVkRWxlbWVudHModmFsdWUsIHByZWRpY2F0ZSkge1xuICBpZiAocHJlZGljYXRlKHZhbHVlKSlcbiAgICByZXR1cm4gdmFsdWU7XG4gIGlmICh0eXBlb2YgdmFsdWUgPT09IFwiZnVuY3Rpb25cIiAmJiAhdmFsdWUubGVuZ3RoKVxuICAgIHJldHVybiBnZXRSZXNvbHZlZEVsZW1lbnRzKHZhbHVlKCksIHByZWRpY2F0ZSk7XG4gIGlmIChBcnJheS5pc0FycmF5KHZhbHVlKSkge1xuICAgIGNvbnN0IHJlc3VsdHMgPSBbXTtcbiAgICBmb3IgKGNvbnN0IGl0ZW0gb2YgdmFsdWUpIHtcbiAgICAgIGNvbnN0IHJlc3VsdCA9IGdldFJlc29sdmVkRWxlbWVudHMoaXRlbSwgcHJlZGljYXRlKTtcbiAgICAgIGlmIChyZXN1bHQpXG4gICAgICAgIEFycmF5LmlzQXJyYXkocmVzdWx0KSA/IHJlc3VsdHMucHVzaC5hcHBseShyZXN1bHRzLCByZXN1bHQpIDogcmVzdWx0cy5wdXNoKHJlc3VsdCk7XG4gICAgfVxuICAgIHJldHVybiByZXN1bHRzLmxlbmd0aCA/IHJlc3VsdHMgOiBudWxsO1xuICB9XG4gIHJldHVybiBudWxsO1xufVxuZnVuY3Rpb24gcmVzb2x2ZUVsZW1lbnRzKGZuLCBwcmVkaWNhdGUgPSBkZWZhdWx0RWxlbWVudFByZWRpY2F0ZSwgc2VydmVyUHJlZGljYXRlID0gZGVmYXVsdEVsZW1lbnRQcmVkaWNhdGUpIHtcbiAgY29uc3QgY2hpbGRyZW4yID0gY3JlYXRlTWVtbyhmbik7XG4gIGNvbnN0IG1lbW8gPSBjcmVhdGVNZW1vKFxuICAgICgpID0+IGdldFJlc29sdmVkRWxlbWVudHMoY2hpbGRyZW4yKCksIGlzU2VydmVyID8gc2VydmVyUHJlZGljYXRlIDogcHJlZGljYXRlKVxuICApO1xuICBtZW1vLnRvQXJyYXkgPSAoKSA9PiB7XG4gICAgY29uc3QgdmFsdWUgPSBtZW1vKCk7XG4gICAgcmV0dXJuIEFycmF5LmlzQXJyYXkodmFsdWUpID8gdmFsdWUgOiB2YWx1ZSA/IFt2YWx1ZV0gOiBbXTtcbiAgfTtcbiAgcmV0dXJuIG1lbW87XG59XG5cbi8vIC4uLy4uL25vZGVfbW9kdWxlcy8ucG5wbS9zb2xpZC10cmFuc2l0aW9uLWdyb3VwQDAuMi4zX3NvbGlkLWpzQDEuOC4xNy9ub2RlX21vZHVsZXMvc29saWQtdHJhbnNpdGlvbi1ncm91cC9kaXN0L2luZGV4LmpzXG5mdW5jdGlvbiBjcmVhdGVDbGFzc25hbWVzKHByb3BzKSB7XG4gIHJldHVybiBjcmVhdGVNZW1vKCgpID0+IHtcbiAgICBjb25zdCBuYW1lID0gcHJvcHMubmFtZSB8fCBcInNcIjtcbiAgICByZXR1cm4ge1xuICAgICAgZW50ZXJBY3RpdmU6IChwcm9wcy5lbnRlckFjdGl2ZUNsYXNzIHx8IG5hbWUgKyBcIi1lbnRlci1hY3RpdmVcIikuc3BsaXQoXCIgXCIpLFxuICAgICAgZW50ZXI6IChwcm9wcy5lbnRlckNsYXNzIHx8IG5hbWUgKyBcIi1lbnRlclwiKS5zcGxpdChcIiBcIiksXG4gICAgICBlbnRlclRvOiAocHJvcHMuZW50ZXJUb0NsYXNzIHx8IG5hbWUgKyBcIi1lbnRlci10b1wiKS5zcGxpdChcIiBcIiksXG4gICAgICBleGl0QWN0aXZlOiAocHJvcHMuZXhpdEFjdGl2ZUNsYXNzIHx8IG5hbWUgKyBcIi1leGl0LWFjdGl2ZVwiKS5zcGxpdChcIiBcIiksXG4gICAgICBleGl0OiAocHJvcHMuZXhpdENsYXNzIHx8IG5hbWUgKyBcIi1leGl0XCIpLnNwbGl0KFwiIFwiKSxcbiAgICAgIGV4aXRUbzogKHByb3BzLmV4aXRUb0NsYXNzIHx8IG5hbWUgKyBcIi1leGl0LXRvXCIpLnNwbGl0KFwiIFwiKSxcbiAgICAgIG1vdmU6IChwcm9wcy5tb3ZlQ2xhc3MgfHwgbmFtZSArIFwiLW1vdmVcIikuc3BsaXQoXCIgXCIpXG4gICAgfTtcbiAgfSk7XG59XG5mdW5jdGlvbiBuZXh0RnJhbWUoZm4pIHtcbiAgcmVxdWVzdEFuaW1hdGlvbkZyYW1lKCgpID0+IHJlcXVlc3RBbmltYXRpb25GcmFtZShmbikpO1xufVxuZnVuY3Rpb24gZW50ZXJUcmFuc2l0aW9uKGNsYXNzZXMsIGV2ZW50cywgZWwsIGRvbmUpIHtcbiAgY29uc3QgeyBvbkJlZm9yZUVudGVyLCBvbkVudGVyLCBvbkFmdGVyRW50ZXIgfSA9IGV2ZW50cztcbiAgb25CZWZvcmVFbnRlcj8uKGVsKTtcbiAgZWwuY2xhc3NMaXN0LmFkZCguLi5jbGFzc2VzLmVudGVyKTtcbiAgZWwuY2xhc3NMaXN0LmFkZCguLi5jbGFzc2VzLmVudGVyQWN0aXZlKTtcbiAgcXVldWVNaWNyb3Rhc2soKCkgPT4ge1xuICAgIGlmICghZWwucGFyZW50Tm9kZSlcbiAgICAgIHJldHVybiBkb25lPy4oKTtcbiAgICBvbkVudGVyPy4oZWwsICgpID0+IGVuZFRyYW5zaXRpb24oKSk7XG4gIH0pO1xuICBuZXh0RnJhbWUoKCkgPT4ge1xuICAgIGVsLmNsYXNzTGlzdC5yZW1vdmUoLi4uY2xhc3Nlcy5lbnRlcik7XG4gICAgZWwuY2xhc3NMaXN0LmFkZCguLi5jbGFzc2VzLmVudGVyVG8pO1xuICAgIGlmICghb25FbnRlciB8fCBvbkVudGVyLmxlbmd0aCA8IDIpIHtcbiAgICAgIGVsLmFkZEV2ZW50TGlzdGVuZXIoXCJ0cmFuc2l0aW9uZW5kXCIsIGVuZFRyYW5zaXRpb24pO1xuICAgICAgZWwuYWRkRXZlbnRMaXN0ZW5lcihcImFuaW1hdGlvbmVuZFwiLCBlbmRUcmFuc2l0aW9uKTtcbiAgICB9XG4gIH0pO1xuICBmdW5jdGlvbiBlbmRUcmFuc2l0aW9uKGUyKSB7XG4gICAgaWYgKCFlMiB8fCBlMi50YXJnZXQgPT09IGVsKSB7XG4gICAgICBkb25lPy4oKTtcbiAgICAgIGVsLnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJ0cmFuc2l0aW9uZW5kXCIsIGVuZFRyYW5zaXRpb24pO1xuICAgICAgZWwucmVtb3ZlRXZlbnRMaXN0ZW5lcihcImFuaW1hdGlvbmVuZFwiLCBlbmRUcmFuc2l0aW9uKTtcbiAgICAgIGVsLmNsYXNzTGlzdC5yZW1vdmUoLi4uY2xhc3Nlcy5lbnRlckFjdGl2ZSk7XG4gICAgICBlbC5jbGFzc0xpc3QucmVtb3ZlKC4uLmNsYXNzZXMuZW50ZXJUbyk7XG4gICAgICBvbkFmdGVyRW50ZXI/LihlbCk7XG4gICAgfVxuICB9XG59XG5mdW5jdGlvbiBleGl0VHJhbnNpdGlvbihjbGFzc2VzLCBldmVudHMsIGVsLCBkb25lKSB7XG4gIGNvbnN0IHsgb25CZWZvcmVFeGl0LCBvbkV4aXQsIG9uQWZ0ZXJFeGl0IH0gPSBldmVudHM7XG4gIGlmICghZWwucGFyZW50Tm9kZSlcbiAgICByZXR1cm4gZG9uZT8uKCk7XG4gIG9uQmVmb3JlRXhpdD8uKGVsKTtcbiAgZWwuY2xhc3NMaXN0LmFkZCguLi5jbGFzc2VzLmV4aXQpO1xuICBlbC5jbGFzc0xpc3QuYWRkKC4uLmNsYXNzZXMuZXhpdEFjdGl2ZSk7XG4gIG9uRXhpdD8uKGVsLCAoKSA9PiBlbmRUcmFuc2l0aW9uKCkpO1xuICBuZXh0RnJhbWUoKCkgPT4ge1xuICAgIGVsLmNsYXNzTGlzdC5yZW1vdmUoLi4uY2xhc3Nlcy5leGl0KTtcbiAgICBlbC5jbGFzc0xpc3QuYWRkKC4uLmNsYXNzZXMuZXhpdFRvKTtcbiAgICBpZiAoIW9uRXhpdCB8fCBvbkV4aXQubGVuZ3RoIDwgMikge1xuICAgICAgZWwuYWRkRXZlbnRMaXN0ZW5lcihcInRyYW5zaXRpb25lbmRcIiwgZW5kVHJhbnNpdGlvbik7XG4gICAgICBlbC5hZGRFdmVudExpc3RlbmVyKFwiYW5pbWF0aW9uZW5kXCIsIGVuZFRyYW5zaXRpb24pO1xuICAgIH1cbiAgfSk7XG4gIGZ1bmN0aW9uIGVuZFRyYW5zaXRpb24oZTIpIHtcbiAgICBpZiAoIWUyIHx8IGUyLnRhcmdldCA9PT0gZWwpIHtcbiAgICAgIGRvbmU/LigpO1xuICAgICAgZWwucmVtb3ZlRXZlbnRMaXN0ZW5lcihcInRyYW5zaXRpb25lbmRcIiwgZW5kVHJhbnNpdGlvbik7XG4gICAgICBlbC5yZW1vdmVFdmVudExpc3RlbmVyKFwiYW5pbWF0aW9uZW5kXCIsIGVuZFRyYW5zaXRpb24pO1xuICAgICAgZWwuY2xhc3NMaXN0LnJlbW92ZSguLi5jbGFzc2VzLmV4aXRBY3RpdmUpO1xuICAgICAgZWwuY2xhc3NMaXN0LnJlbW92ZSguLi5jbGFzc2VzLmV4aXRUbyk7XG4gICAgICBvbkFmdGVyRXhpdD8uKGVsKTtcbiAgICB9XG4gIH1cbn1cbnZhciBUcmFuc2l0aW9uR3JvdXAgPSAocHJvcHMpID0+IHtcbiAgY29uc3QgY2xhc3NuYW1lcyA9IGNyZWF0ZUNsYXNzbmFtZXMocHJvcHMpO1xuICByZXR1cm4gY3JlYXRlTGlzdFRyYW5zaXRpb24ocmVzb2x2ZUVsZW1lbnRzKCgpID0+IHByb3BzLmNoaWxkcmVuKS50b0FycmF5LCB7XG4gICAgYXBwZWFyOiBwcm9wcy5hcHBlYXIsXG4gICAgZXhpdE1ldGhvZDogXCJrZWVwLWluZGV4XCIsXG4gICAgb25DaGFuZ2UoeyBhZGRlZCwgcmVtb3ZlZCwgZmluaXNoUmVtb3ZlZCwgbGlzdCB9KSB7XG4gICAgICBjb25zdCBjbGFzc2VzID0gY2xhc3NuYW1lcygpO1xuICAgICAgZm9yIChjb25zdCBlbCBvZiBhZGRlZCkge1xuICAgICAgICBlbnRlclRyYW5zaXRpb24oY2xhc3NlcywgcHJvcHMsIGVsKTtcbiAgICAgIH1cbiAgICAgIGNvbnN0IHRvTW92ZSA9IFtdO1xuICAgICAgZm9yIChjb25zdCBlbCBvZiBsaXN0KSB7XG4gICAgICAgIGlmIChlbC5pc0Nvbm5lY3RlZCAmJiAoZWwgaW5zdGFuY2VvZiBIVE1MRWxlbWVudCB8fCBlbCBpbnN0YW5jZW9mIFNWR0VsZW1lbnQpKSB7XG4gICAgICAgICAgdG9Nb3ZlLnB1c2goeyBlbCwgcmVjdDogZWwuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkgfSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIHF1ZXVlTWljcm90YXNrKCgpID0+IHtcbiAgICAgICAgY29uc3QgbW92ZWQgPSBbXTtcbiAgICAgICAgZm9yIChjb25zdCB7IGVsLCByZWN0IH0gb2YgdG9Nb3ZlKSB7XG4gICAgICAgICAgaWYgKGVsLmlzQ29ubmVjdGVkKSB7XG4gICAgICAgICAgICBjb25zdCBuZXdSZWN0ID0gZWwuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCksIGRYID0gcmVjdC5sZWZ0IC0gbmV3UmVjdC5sZWZ0LCBkWSA9IHJlY3QudG9wIC0gbmV3UmVjdC50b3A7XG4gICAgICAgICAgICBpZiAoZFggfHwgZFkpIHtcbiAgICAgICAgICAgICAgZWwuc3R5bGUudHJhbnNmb3JtID0gYHRyYW5zbGF0ZSgke2RYfXB4LCAke2RZfXB4KWA7XG4gICAgICAgICAgICAgIGVsLnN0eWxlLnRyYW5zaXRpb25EdXJhdGlvbiA9IFwiMHNcIjtcbiAgICAgICAgICAgICAgbW92ZWQucHVzaChlbCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGRvY3VtZW50LmJvZHkub2Zmc2V0SGVpZ2h0O1xuICAgICAgICBmb3IgKGNvbnN0IGVsIG9mIG1vdmVkKSB7XG4gICAgICAgICAgbGV0IGVuZFRyYW5zaXRpb24yID0gZnVuY3Rpb24oZTIpIHtcbiAgICAgICAgICAgIGlmIChlMi50YXJnZXQgPT09IGVsIHx8IC90cmFuc2Zvcm0kLy50ZXN0KGUyLnByb3BlcnR5TmFtZSkpIHtcbiAgICAgICAgICAgICAgZWwucmVtb3ZlRXZlbnRMaXN0ZW5lcihcInRyYW5zaXRpb25lbmRcIiwgZW5kVHJhbnNpdGlvbjIpO1xuICAgICAgICAgICAgICBlbC5jbGFzc0xpc3QucmVtb3ZlKC4uLmNsYXNzZXMubW92ZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfTtcbiAgICAgICAgICBlbC5jbGFzc0xpc3QuYWRkKC4uLmNsYXNzZXMubW92ZSk7XG4gICAgICAgICAgZWwuc3R5bGUudHJhbnNmb3JtID0gZWwuc3R5bGUudHJhbnNpdGlvbkR1cmF0aW9uID0gXCJcIjtcbiAgICAgICAgICBlbC5hZGRFdmVudExpc3RlbmVyKFwidHJhbnNpdGlvbmVuZFwiLCBlbmRUcmFuc2l0aW9uMik7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgICAgZm9yIChjb25zdCBlbCBvZiByZW1vdmVkKSB7XG4gICAgICAgIGV4aXRUcmFuc2l0aW9uKGNsYXNzZXMsIHByb3BzLCBlbCwgKCkgPT4gZmluaXNoUmVtb3ZlZChbZWxdKSk7XG4gICAgICB9XG4gICAgfVxuICB9KTtcbn07XG5cbi8vIC4uLy4uL25vZGVfbW9kdWxlcy8ucG5wbS9Ac29saWQtcHJpbWl0aXZlcytrZXllZEAxLjIuMl9zb2xpZC1qc0AxLjguMTcvbm9kZV9tb2R1bGVzL0Bzb2xpZC1wcmltaXRpdmVzL2tleWVkL2Rpc3QvaW5kZXguanNcbnZhciBGQUxMQkFDSyA9IFN5bWJvbChcImZhbGxiYWNrXCIpO1xuZnVuY3Rpb24gZGlzcG9zZShsaXN0KSB7XG4gIGZvciAoY29uc3QgbzIgb2YgbGlzdClcbiAgICBvMi5kaXNwb3NlKCk7XG59XG5mdW5jdGlvbiBrZXlBcnJheShpdGVtcywga2V5Rm4sIG1hcEZuLCBvcHRpb25zID0ge30pIHtcbiAgaWYgKGlzU2VydmVyKSB7XG4gICAgY29uc3QgaXRlbXNSZWYgPSBpdGVtcygpO1xuICAgIGxldCBzMiA9IFtdO1xuICAgIGlmIChpdGVtc1JlZiAmJiBpdGVtc1JlZi5sZW5ndGgpIHtcbiAgICAgIGZvciAobGV0IGkyID0gMCwgbGVuID0gaXRlbXNSZWYubGVuZ3RoOyBpMiA8IGxlbjsgaTIrKylcbiAgICAgICAgczIucHVzaChcbiAgICAgICAgICBtYXBGbihcbiAgICAgICAgICAgICgpID0+IGl0ZW1zUmVmW2kyXSxcbiAgICAgICAgICAgICgpID0+IGkyXG4gICAgICAgICAgKVxuICAgICAgICApO1xuICAgIH0gZWxzZSBpZiAob3B0aW9ucy5mYWxsYmFjaylcbiAgICAgIHMyID0gW29wdGlvbnMuZmFsbGJhY2soKV07XG4gICAgcmV0dXJuICgpID0+IHMyO1xuICB9XG4gIGNvbnN0IHByZXYgPSAvKiBAX19QVVJFX18gKi8gbmV3IE1hcCgpO1xuICBvbkNsZWFudXAoKCkgPT4gZGlzcG9zZShwcmV2LnZhbHVlcygpKSk7XG4gIHJldHVybiAoKSA9PiB7XG4gICAgY29uc3QgbGlzdCA9IGl0ZW1zKCkgfHwgW107XG4gICAgbGlzdFskVFJBQ0tdO1xuICAgIHJldHVybiB1bnRyYWNrKCgpID0+IHtcbiAgICAgIGlmICghbGlzdC5sZW5ndGgpIHtcbiAgICAgICAgZGlzcG9zZShwcmV2LnZhbHVlcygpKTtcbiAgICAgICAgcHJldi5jbGVhcigpO1xuICAgICAgICBpZiAoIW9wdGlvbnMuZmFsbGJhY2spXG4gICAgICAgICAgcmV0dXJuIFtdO1xuICAgICAgICBjb25zdCBmYjIgPSBjcmVhdGVSb290KChkaXNwb3NlMikgPT4ge1xuICAgICAgICAgIHByZXYuc2V0KEZBTExCQUNLLCB7IGRpc3Bvc2U6IGRpc3Bvc2UyIH0pO1xuICAgICAgICAgIHJldHVybiBvcHRpb25zLmZhbGxiYWNrKCk7XG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gW2ZiMl07XG4gICAgICB9XG4gICAgICBjb25zdCByZXN1bHQgPSBuZXcgQXJyYXkobGlzdC5sZW5ndGgpO1xuICAgICAgY29uc3QgZmIgPSBwcmV2LmdldChGQUxMQkFDSyk7XG4gICAgICBpZiAoIXByZXYuc2l6ZSB8fCBmYikge1xuICAgICAgICBmYj8uZGlzcG9zZSgpO1xuICAgICAgICBwcmV2LmRlbGV0ZShGQUxMQkFDSyk7XG4gICAgICAgIGZvciAobGV0IGkyID0gMDsgaTIgPCBsaXN0Lmxlbmd0aDsgaTIrKykge1xuICAgICAgICAgIGNvbnN0IGl0ZW0gPSBsaXN0W2kyXTtcbiAgICAgICAgICBjb25zdCBrZXkgPSBrZXlGbihpdGVtLCBpMik7XG4gICAgICAgICAgYWRkTmV3SXRlbShyZXN1bHQsIGl0ZW0sIGkyLCBrZXkpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgICB9XG4gICAgICBjb25zdCBwcmV2S2V5cyA9IG5ldyBTZXQocHJldi5rZXlzKCkpO1xuICAgICAgZm9yIChsZXQgaTIgPSAwOyBpMiA8IGxpc3QubGVuZ3RoOyBpMisrKSB7XG4gICAgICAgIGNvbnN0IGl0ZW0gPSBsaXN0W2kyXTtcbiAgICAgICAgY29uc3Qga2V5ID0ga2V5Rm4oaXRlbSwgaTIpO1xuICAgICAgICBwcmV2S2V5cy5kZWxldGUoa2V5KTtcbiAgICAgICAgY29uc3QgbG9va3VwID0gcHJldi5nZXQoa2V5KTtcbiAgICAgICAgaWYgKGxvb2t1cCkge1xuICAgICAgICAgIHJlc3VsdFtpMl0gPSBsb29rdXAubWFwcGVkO1xuICAgICAgICAgIGxvb2t1cC5zZXRJbmRleD8uKGkyKTtcbiAgICAgICAgICBsb29rdXAuc2V0SXRlbSgoKSA9PiBpdGVtKTtcbiAgICAgICAgfSBlbHNlXG4gICAgICAgICAgYWRkTmV3SXRlbShyZXN1bHQsIGl0ZW0sIGkyLCBrZXkpO1xuICAgICAgfVxuICAgICAgZm9yIChjb25zdCBrZXkgb2YgcHJldktleXMpIHtcbiAgICAgICAgcHJldi5nZXQoa2V5KT8uZGlzcG9zZSgpO1xuICAgICAgICBwcmV2LmRlbGV0ZShrZXkpO1xuICAgICAgfVxuICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9KTtcbiAgfTtcbiAgZnVuY3Rpb24gYWRkTmV3SXRlbShsaXN0LCBpdGVtLCBpMiwga2V5KSB7XG4gICAgY3JlYXRlUm9vdCgoZGlzcG9zZTIpID0+IHtcbiAgICAgIGNvbnN0IFtnZXRJdGVtLCBzZXRJdGVtXSA9IGNyZWF0ZVNpZ25hbChpdGVtKTtcbiAgICAgIGNvbnN0IHNhdmUgPSB7IHNldEl0ZW0sIGRpc3Bvc2U6IGRpc3Bvc2UyIH07XG4gICAgICBpZiAobWFwRm4ubGVuZ3RoID4gMSkge1xuICAgICAgICBjb25zdCBbaW5kZXgsIHNldEluZGV4XSA9IGNyZWF0ZVNpZ25hbChpMik7XG4gICAgICAgIHNhdmUuc2V0SW5kZXggPSBzZXRJbmRleDtcbiAgICAgICAgc2F2ZS5tYXBwZWQgPSBtYXBGbihnZXRJdGVtLCBpbmRleCk7XG4gICAgICB9IGVsc2VcbiAgICAgICAgc2F2ZS5tYXBwZWQgPSBtYXBGbihnZXRJdGVtKTtcbiAgICAgIHByZXYuc2V0KGtleSwgc2F2ZSk7XG4gICAgICBsaXN0W2kyXSA9IHNhdmUubWFwcGVkO1xuICAgIH0pO1xuICB9XG59XG5mdW5jdGlvbiBLZXkocHJvcHMpIHtcbiAgY29uc3QgeyBieSB9ID0gcHJvcHM7XG4gIHJldHVybiBjcmVhdGVNZW1vKFxuICAgIGtleUFycmF5KFxuICAgICAgKCkgPT4gcHJvcHMuZWFjaCxcbiAgICAgIHR5cGVvZiBieSA9PT0gXCJmdW5jdGlvblwiID8gYnkgOiAodikgPT4gdltieV0sXG4gICAgICBwcm9wcy5jaGlsZHJlbixcbiAgICAgIFwiZmFsbGJhY2tcIiBpbiBwcm9wcyA/IHsgZmFsbGJhY2s6ICgpID0+IHByb3BzLmZhbGxiYWNrIH0gOiB2b2lkIDBcbiAgICApXG4gICk7XG59XG5cbi8vIC4uLy4uL25vZGVfbW9kdWxlcy8ucG5wbS9Ac29saWQtcHJpbWl0aXZlcytzdG9yYWdlQDEuMy4xMV9zb2xpZC1qc0AxLjguMTcvbm9kZV9tb2R1bGVzL0Bzb2xpZC1wcmltaXRpdmVzL3N0b3JhZ2UvZGlzdC9pbmRleC5qc1xuZnVuY3Rpb24gY3JlYXRlU3RvcmFnZShwcm9wcykge1xuICBjb25zdCBbZXJyb3IsIHNldEVycm9yXSA9IGNyZWF0ZVNpZ25hbCgpO1xuICBjb25zdCBoYW5kbGVFcnJvciA9IHByb3BzPy50aHJvdyA/IChlcnIsIGZhbGxiYWNrKSA9PiB7XG4gICAgc2V0RXJyb3IoZXJyIGluc3RhbmNlb2YgRXJyb3IgPyBlcnIgOiBuZXcgRXJyb3IoZmFsbGJhY2spKTtcbiAgICB0aHJvdyBlcnI7XG4gIH0gOiAoZXJyLCBmYWxsYmFjaykgPT4ge1xuICAgIHNldEVycm9yKGVyciBpbnN0YW5jZW9mIEVycm9yID8gZXJyIDogbmV3IEVycm9yKGZhbGxiYWNrKSk7XG4gIH07XG4gIGNvbnN0IGFwaXMgPSBwcm9wcz8uYXBpID8gQXJyYXkuaXNBcnJheShwcm9wcy5hcGkpID8gcHJvcHMuYXBpIDogW3Byb3BzLmFwaV0gOiBbZ2xvYmFsVGhpcy5sb2NhbFN0b3JhZ2VdLmZpbHRlcihCb29sZWFuKTtcbiAgY29uc3QgcHJlZml4ID0gcHJvcHM/LnByZWZpeCA/IGAke3Byb3BzLnByZWZpeH0uYCA6IFwiXCI7XG4gIGNvbnN0IHNpZ25hbHMgPSAvKiBAX19QVVJFX18gKi8gbmV3IE1hcCgpO1xuICBjb25zdCBzdG9yZSA9IG5ldyBQcm94eShcbiAgICB7fSxcbiAgICB7XG4gICAgICBnZXQoXywga2V5KSB7XG4gICAgICAgIGxldCBub2RlID0gc2lnbmFscy5nZXQoa2V5KTtcbiAgICAgICAgaWYgKCFub2RlKSB7XG4gICAgICAgICAgbm9kZSA9IGNyZWF0ZVNpZ25hbCh2b2lkIDAsIHsgZXF1YWxzOiBmYWxzZSB9KTtcbiAgICAgICAgICBzaWduYWxzLnNldChrZXksIG5vZGUpO1xuICAgICAgICB9XG4gICAgICAgIG5vZGVbMF0oKTtcbiAgICAgICAgY29uc3QgdmFsdWUgPSBhcGlzLnJlZHVjZShcbiAgICAgICAgICAocmVzdWx0LCBhcGkpID0+IHtcbiAgICAgICAgICAgIGlmIChyZXN1bHQgIT09IG51bGwgfHwgIWFwaSkge1xuICAgICAgICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgcmV0dXJuIGFwaS5nZXRJdGVtKGAke3ByZWZpeH0ke2tleX1gKTtcbiAgICAgICAgICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgICAgICAgICBoYW5kbGVFcnJvcihlcnIsIGBFcnJvciByZWFkaW5nICR7cHJlZml4fSR7a2V5fSBmcm9tICR7YXBpW1wibmFtZVwiXX1gKTtcbiAgICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSxcbiAgICAgICAgICBudWxsXG4gICAgICAgICk7XG4gICAgICAgIGlmICh2YWx1ZSAhPT0gbnVsbCAmJiBwcm9wcz8uZGVzZXJpYWxpemVyKSB7XG4gICAgICAgICAgcmV0dXJuIHByb3BzLmRlc2VyaWFsaXplcih2YWx1ZSwga2V5LCBwcm9wcy5vcHRpb25zKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdmFsdWU7XG4gICAgICB9XG4gICAgfVxuICApO1xuICBjb25zdCBzZXR0ZXIgPSAoa2V5LCB2YWx1ZSwgb3B0aW9ucykgPT4ge1xuICAgIGNvbnN0IGZpbHRlcmVkVmFsdWUgPSBwcm9wcz8uc2VyaWFsaXplciA/IHByb3BzLnNlcmlhbGl6ZXIodmFsdWUsIGtleSwgb3B0aW9ucyA/PyBwcm9wcy5vcHRpb25zKSA6IHZhbHVlO1xuICAgIGNvbnN0IGFwaUtleSA9IGAke3ByZWZpeH0ke2tleX1gO1xuICAgIGFwaXMuZm9yRWFjaCgoYXBpKSA9PiB7XG4gICAgICB0cnkge1xuICAgICAgICBhcGkuZ2V0SXRlbShhcGlLZXkpICE9PSBmaWx0ZXJlZFZhbHVlICYmIGFwaS5zZXRJdGVtKGFwaUtleSwgZmlsdGVyZWRWYWx1ZSk7XG4gICAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgICAgaGFuZGxlRXJyb3IoZXJyLCBgRXJyb3Igc2V0dGluZyAke3ByZWZpeH0ke2tleX0gdG8gJHtmaWx0ZXJlZFZhbHVlfSBpbiAke2FwaS5uYW1lfWApO1xuICAgICAgfVxuICAgIH0pO1xuICAgIGNvbnN0IG5vZGUgPSBzaWduYWxzLmdldChrZXkpO1xuICAgIG5vZGUgJiYgbm9kZVsxXSgpO1xuICB9O1xuICBjb25zdCByZW1vdmUgPSAoa2V5KSA9PiBhcGlzLmZvckVhY2goKGFwaSkgPT4ge1xuICAgIHRyeSB7XG4gICAgICBhcGkucmVtb3ZlSXRlbShgJHtwcmVmaXh9JHtrZXl9YCk7XG4gICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICBoYW5kbGVFcnJvcihlcnIsIGBFcnJvciByZW1vdmluZyAke3ByZWZpeH0ke2tleX0gZnJvbSAke2FwaS5uYW1lfWApO1xuICAgIH1cbiAgfSk7XG4gIGNvbnN0IGNsZWFyID0gKCkgPT4gYXBpcy5mb3JFYWNoKChhcGkpID0+IHtcbiAgICB0cnkge1xuICAgICAgYXBpLmNsZWFyKCk7XG4gICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICBoYW5kbGVFcnJvcihlcnIsIGBFcnJvciBjbGVhcmluZyAke2FwaS5uYW1lfWApO1xuICAgIH1cbiAgfSk7XG4gIGNvbnN0IHRvSlNPTiA9ICgpID0+IHtcbiAgICBjb25zdCByZXN1bHQgPSB7fTtcbiAgICBjb25zdCBhZGRWYWx1ZSA9IChrZXksIHZhbHVlKSA9PiB7XG4gICAgICBpZiAoIXJlc3VsdC5oYXNPd25Qcm9wZXJ0eShrZXkpKSB7XG4gICAgICAgIGNvbnN0IGZpbHRlcmVkVmFsdWUgPSB2YWx1ZSAmJiBwcm9wcz8uZGVzZXJpYWxpemVyID8gcHJvcHMuZGVzZXJpYWxpemVyKHZhbHVlLCBrZXksIHByb3BzLm9wdGlvbnMpIDogdmFsdWU7XG4gICAgICAgIGlmIChmaWx0ZXJlZFZhbHVlKSB7XG4gICAgICAgICAgcmVzdWx0W2tleV0gPSBmaWx0ZXJlZFZhbHVlO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfTtcbiAgICBhcGlzLmZvckVhY2goKGFwaSkgPT4ge1xuICAgICAgaWYgKHR5cGVvZiBhcGkuZ2V0QWxsID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgICAgbGV0IHZhbHVlcztcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICB2YWx1ZXMgPSBhcGkuZ2V0QWxsKCk7XG4gICAgICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgICAgIGhhbmRsZUVycm9yKGVyciwgYEVycm9yIGdldHRpbmcgYWxsIHZhbHVlcyBmcm9tIGluICR7YXBpLm5hbWV9YCk7XG4gICAgICAgIH1cbiAgICAgICAgZm9yIChjb25zdCBrZXkgb2YgdmFsdWVzKSB7XG4gICAgICAgICAgYWRkVmFsdWUoa2V5LCB2YWx1ZXNba2V5XSk7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGxldCBpbmRleCA9IDAsIGtleTtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICB3aGlsZSAoa2V5ID0gYXBpLmtleShpbmRleCsrKSkge1xuICAgICAgICAgICAgaWYgKCFyZXN1bHQuaGFzT3duUHJvcGVydHkoa2V5KSkge1xuICAgICAgICAgICAgICBhZGRWYWx1ZShrZXksIGFwaS5nZXRJdGVtKGtleSkpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICAgICAgaGFuZGxlRXJyb3IoZXJyLCBgRXJyb3IgZ2V0dGluZyBhbGwgdmFsdWVzIGZyb20gJHthcGkubmFtZX1gKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0pO1xuICAgIHJldHVybiByZXN1bHQ7XG4gIH07XG4gIHByb3BzPy5zeW5jICE9PSBmYWxzZSAmJiBvbk1vdW50KCgpID0+IHtcbiAgICBjb25zdCBsaXN0ZW5lciA9IChldikgPT4ge1xuICAgICAgbGV0IGNoYW5nZWQgPSBmYWxzZTtcbiAgICAgIGFwaXMuZm9yRWFjaCgoYXBpKSA9PiB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgaWYgKGFwaSAhPT0gZXYuc3RvcmFnZUFyZWEgJiYgZXYua2V5ICYmIGV2Lm5ld1ZhbHVlICE9PSBhcGkuZ2V0SXRlbShldi5rZXkpKSB7XG4gICAgICAgICAgICBldi5uZXdWYWx1ZSA/IGFwaS5zZXRJdGVtKGV2LmtleSwgZXYubmV3VmFsdWUpIDogYXBpLnJlbW92ZUl0ZW0oZXYua2V5KTtcbiAgICAgICAgICAgIGNoYW5nZWQgPSB0cnVlO1xuICAgICAgICAgIH1cbiAgICAgICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICAgICAgaGFuZGxlRXJyb3IoXG4gICAgICAgICAgICBlcnIsXG4gICAgICAgICAgICBgRXJyb3Igc3luY2hpbmcgYXBpICR7YXBpLm5hbWV9IGZyb20gc3RvcmFnZSBldmVudCAoJHtldi5rZXl9PSR7ZXYubmV3VmFsdWV9KWBcbiAgICAgICAgICApO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICAgIGNoYW5nZWQgJiYgZXYua2V5ICYmIHNpZ25hbHMuZ2V0KGV2LmtleSk/LlsxXSgpO1xuICAgIH07XG4gICAgaWYgKFwiYWRkRXZlbnRMaXN0ZW5lclwiIGluIGdsb2JhbFRoaXMpIHtcbiAgICAgIGdsb2JhbFRoaXMuYWRkRXZlbnRMaXN0ZW5lcihcInN0b3JhZ2VcIiwgbGlzdGVuZXIpO1xuICAgICAgb25DbGVhbnVwKCgpID0+IGdsb2JhbFRoaXMucmVtb3ZlRXZlbnRMaXN0ZW5lcihcInN0b3JhZ2VcIiwgbGlzdGVuZXIpKTtcbiAgICB9IGVsc2Uge1xuICAgICAgYXBpcy5mb3JFYWNoKChhcGkpID0+IGFwaS5hZGRFdmVudExpc3RlbmVyPy4oXCJzdG9yYWdlXCIsIGxpc3RlbmVyKSk7XG4gICAgICBvbkNsZWFudXAoKCkgPT4gYXBpcy5mb3JFYWNoKChhcGkpID0+IGFwaS5yZW1vdmVFdmVudExpc3RlbmVyPy4oXCJzdG9yYWdlXCIsIGxpc3RlbmVyKSkpO1xuICAgIH1cbiAgfSk7XG4gIHJldHVybiBbXG4gICAgc3RvcmUsXG4gICAgc2V0dGVyLFxuICAgIHtcbiAgICAgIGNsZWFyLFxuICAgICAgZXJyb3IsXG4gICAgICByZW1vdmUsXG4gICAgICB0b0pTT05cbiAgICB9XG4gIF07XG59XG52YXIgY3JlYXRlTG9jYWxTdG9yYWdlID0gY3JlYXRlU3RvcmFnZTtcbnZhciBhZGRDbGVhck1ldGhvZCA9IChzdG9yYWdlKSA9PiB7XG4gIGlmICh0eXBlb2Ygc3RvcmFnZS5jbGVhciA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgcmV0dXJuIHN0b3JhZ2U7XG4gIH1cbiAgc3RvcmFnZS5jbGVhciA9ICgpID0+IHtcbiAgICBsZXQga2V5O1xuICAgIHdoaWxlIChrZXkgPSBzdG9yYWdlLmtleSgwKSkge1xuICAgICAgc3RvcmFnZS5yZW1vdmVJdGVtKGtleSk7XG4gICAgfVxuICB9O1xuICByZXR1cm4gc3RvcmFnZTtcbn07XG52YXIgc2VyaWFsaXplQ29va2llT3B0aW9ucyA9IChvcHRpb25zKSA9PiB7XG4gIGlmICghb3B0aW9ucykge1xuICAgIHJldHVybiBcIlwiO1xuICB9XG4gIGxldCBtZW1vID0gXCJcIjtcbiAgZm9yIChjb25zdCBrZXkgaW4gb3B0aW9ucykge1xuICAgIGlmICghb3B0aW9ucy5oYXNPd25Qcm9wZXJ0eShrZXkpKSB7XG4gICAgICBjb250aW51ZTtcbiAgICB9XG4gICAgY29uc3QgdmFsdWUgPSBvcHRpb25zW2tleV07XG4gICAgbWVtbyArPSB2YWx1ZSBpbnN0YW5jZW9mIERhdGUgPyBgOyAke2tleX09JHt2YWx1ZS50b1VUQ1N0cmluZygpfWAgOiB0eXBlb2YgdmFsdWUgPT09IFwiYm9vbGVhblwiID8gYDsgJHtrZXl9YCA6IGA7ICR7a2V5fT0ke3ZhbHVlfWA7XG4gIH1cbiAgcmV0dXJuIG1lbW87XG59O1xudmFyIGNvb2tpZVN0b3JhZ2UgPSBhZGRDbGVhck1ldGhvZCh7XG4gIF9jb29raWVzOiBbZ2xvYmFsVGhpcy5kb2N1bWVudCwgXCJjb29raWVcIl0sXG4gIGdldEl0ZW06IChrZXkpID0+IGNvb2tpZVN0b3JhZ2UuX2Nvb2tpZXNbMF1bY29va2llU3RvcmFnZS5fY29va2llc1sxXV0ubWF0Y2goXCIoXnw7KVxcXFxzKlwiICsga2V5ICsgXCJcXFxccyo9XFxcXHMqKFteO10rKVwiKT8ucG9wKCkgPz8gbnVsbCxcbiAgc2V0SXRlbTogKGtleSwgdmFsdWUsIG9wdGlvbnMpID0+IHtcbiAgICBjb25zdCBvbGRWYWx1ZSA9IGNvb2tpZVN0b3JhZ2UuZ2V0SXRlbShrZXkpO1xuICAgIGNvb2tpZVN0b3JhZ2UuX2Nvb2tpZXNbMF1bY29va2llU3RvcmFnZS5fY29va2llc1sxXV0gPSBgJHtrZXl9PSR7dmFsdWV9JHtzZXJpYWxpemVDb29raWVPcHRpb25zKFxuICAgICAgb3B0aW9uc1xuICAgICl9YDtcbiAgICBjb25zdCBzdG9yYWdlRXZlbnQgPSBPYmplY3QuYXNzaWduKG5ldyBFdmVudChcInN0b3JhZ2VcIiksIHtcbiAgICAgIGtleSxcbiAgICAgIG9sZFZhbHVlLFxuICAgICAgbmV3VmFsdWU6IHZhbHVlLFxuICAgICAgdXJsOiBnbG9iYWxUaGlzLmRvY3VtZW50LlVSTCxcbiAgICAgIHN0b3JhZ2VBcmVhOiBjb29raWVTdG9yYWdlXG4gICAgfSk7XG4gICAgd2luZG93LmRpc3BhdGNoRXZlbnQoc3RvcmFnZUV2ZW50KTtcbiAgfSxcbiAgcmVtb3ZlSXRlbTogKGtleSkgPT4ge1xuICAgIGNvb2tpZVN0b3JhZ2UuX2Nvb2tpZXNbMF1bY29va2llU3RvcmFnZS5fY29va2llc1sxXV0gPSBgJHtrZXl9PWRlbGV0ZWQke3NlcmlhbGl6ZUNvb2tpZU9wdGlvbnMoe1xuICAgICAgZXhwaXJlczogLyogQF9fUFVSRV9fICovIG5ldyBEYXRlKDApXG4gICAgfSl9YDtcbiAgfSxcbiAga2V5OiAoaW5kZXgpID0+IHtcbiAgICBsZXQga2V5ID0gbnVsbDtcbiAgICBsZXQgY291bnQgPSAwO1xuICAgIGNvb2tpZVN0b3JhZ2UuX2Nvb2tpZXNbMF1bY29va2llU3RvcmFnZS5fY29va2llc1sxXV0ucmVwbGFjZShcbiAgICAgIC8oPzpefDspXFxzKiguKz8pXFxzKj1cXHMqW147XSsvZyxcbiAgICAgIChfLCBmb3VuZCkgPT4ge1xuICAgICAgICBpZiAoIWtleSAmJiBmb3VuZCAmJiBjb3VudCsrID09PSBpbmRleCkge1xuICAgICAgICAgIGtleSA9IGZvdW5kO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBcIlwiO1xuICAgICAgfVxuICAgICk7XG4gICAgcmV0dXJuIGtleTtcbiAgfSxcbiAgZ2V0IGxlbmd0aCgpIHtcbiAgICBsZXQgbGVuZ3RoID0gMDtcbiAgICBjb29raWVTdG9yYWdlLl9jb29raWVzWzBdW2Nvb2tpZVN0b3JhZ2UuX2Nvb2tpZXNbMV1dLnJlcGxhY2UoXG4gICAgICAvKD86Xnw7KVxccyouKz9cXHMqPVxccypbXjtdKy9nLFxuICAgICAgKGZvdW5kKSA9PiB7XG4gICAgICAgIGxlbmd0aCArPSBmb3VuZCA/IDEgOiAwO1xuICAgICAgICByZXR1cm4gXCJcIjtcbiAgICAgIH1cbiAgICApO1xuICAgIHJldHVybiBsZW5ndGg7XG4gIH1cbn0pO1xuXG4vLyAuLi8uLi9ub2RlX21vZHVsZXMvLnBucG0vQHNvbGlkLXByaW1pdGl2ZXMrZXZlbnQtbGlzdGVuZXJAMi4zLjNfc29saWQtanNAMS44LjE3L25vZGVfbW9kdWxlcy9Ac29saWQtcHJpbWl0aXZlcy9ldmVudC1saXN0ZW5lci9kaXN0L2luZGV4LmpzXG5mdW5jdGlvbiBtYWtlRXZlbnRMaXN0ZW5lcih0YXJnZXQsIHR5cGUsIGhhbmRsZXIsIG9wdGlvbnMpIHtcbiAgdGFyZ2V0LmFkZEV2ZW50TGlzdGVuZXIodHlwZSwgaGFuZGxlciwgb3B0aW9ucyk7XG4gIHJldHVybiB0cnlPbkNsZWFudXAodGFyZ2V0LnJlbW92ZUV2ZW50TGlzdGVuZXIuYmluZCh0YXJnZXQsIHR5cGUsIGhhbmRsZXIsIG9wdGlvbnMpKTtcbn1cbmZ1bmN0aW9uIGNyZWF0ZUV2ZW50TGlzdGVuZXIodGFyZ2V0cywgdHlwZSwgaGFuZGxlciwgb3B0aW9ucykge1xuICBpZiAoaXNTZXJ2ZXIpXG4gICAgcmV0dXJuO1xuICBjb25zdCBhdHRhY2hMaXN0ZW5lcnMgPSAoKSA9PiB7XG4gICAgYXNBcnJheShhY2Nlc3ModGFyZ2V0cykpLmZvckVhY2goKGVsKSA9PiB7XG4gICAgICBpZiAoZWwpXG4gICAgICAgIGFzQXJyYXkoYWNjZXNzKHR5cGUpKS5mb3JFYWNoKCh0eXBlMikgPT4gbWFrZUV2ZW50TGlzdGVuZXIoZWwsIHR5cGUyLCBoYW5kbGVyLCBvcHRpb25zKSk7XG4gICAgfSk7XG4gIH07XG4gIGlmICh0eXBlb2YgdGFyZ2V0cyA9PT0gXCJmdW5jdGlvblwiKVxuICAgIGNyZWF0ZUVmZmVjdChhdHRhY2hMaXN0ZW5lcnMpO1xuICBlbHNlXG4gICAgY3JlYXRlUmVuZGVyRWZmZWN0KGF0dGFjaExpc3RlbmVycyk7XG59XG5cbi8vIC4uLy4uL25vZGVfbW9kdWxlcy8ucG5wbS9Ac29saWQtcHJpbWl0aXZlcytyZXNpemUtb2JzZXJ2ZXJAMi4wLjI1X3NvbGlkLWpzQDEuOC4xNy9ub2RlX21vZHVsZXMvQHNvbGlkLXByaW1pdGl2ZXMvcmVzaXplLW9ic2VydmVyL2Rpc3QvaW5kZXguanNcbmZ1bmN0aW9uIG1ha2VSZXNpemVPYnNlcnZlcihjYWxsYmFjaywgb3B0aW9ucykge1xuICBpZiAoaXNTZXJ2ZXIpIHtcbiAgICByZXR1cm4geyBvYnNlcnZlOiBub29wMiwgdW5vYnNlcnZlOiBub29wMiB9O1xuICB9XG4gIGNvbnN0IG9ic2VydmVyID0gbmV3IFJlc2l6ZU9ic2VydmVyKGNhbGxiYWNrKTtcbiAgb25DbGVhbnVwKG9ic2VydmVyLmRpc2Nvbm5lY3QuYmluZChvYnNlcnZlcikpO1xuICByZXR1cm4ge1xuICAgIG9ic2VydmU6IChyZWYpID0+IG9ic2VydmVyLm9ic2VydmUocmVmLCBvcHRpb25zKSxcbiAgICB1bm9ic2VydmU6IG9ic2VydmVyLnVub2JzZXJ2ZS5iaW5kKG9ic2VydmVyKVxuICB9O1xufVxuZnVuY3Rpb24gY3JlYXRlUmVzaXplT2JzZXJ2ZXIodGFyZ2V0cywgb25SZXNpemUsIG9wdGlvbnMpIHtcbiAgaWYgKGlzU2VydmVyKVxuICAgIHJldHVybjtcbiAgY29uc3QgcHJldmlvdXNNYXAgPSAvKiBAX19QVVJFX18gKi8gbmV3IFdlYWtNYXAoKSwgeyBvYnNlcnZlLCB1bm9ic2VydmUgfSA9IG1ha2VSZXNpemVPYnNlcnZlcigoZW50cmllczIpID0+IHtcbiAgICBmb3IgKGNvbnN0IGVudHJ5IG9mIGVudHJpZXMyKSB7XG4gICAgICBjb25zdCB7IGNvbnRlbnRSZWN0LCB0YXJnZXQgfSA9IGVudHJ5LCB3aWR0aCA9IE1hdGgucm91bmQoY29udGVudFJlY3Qud2lkdGgpLCBoZWlnaHQgPSBNYXRoLnJvdW5kKGNvbnRlbnRSZWN0LmhlaWdodCksIHByZXZpb3VzID0gcHJldmlvdXNNYXAuZ2V0KHRhcmdldCk7XG4gICAgICBpZiAoIXByZXZpb3VzIHx8IHByZXZpb3VzLndpZHRoICE9PSB3aWR0aCB8fCBwcmV2aW91cy5oZWlnaHQgIT09IGhlaWdodCkge1xuICAgICAgICBvblJlc2l6ZShjb250ZW50UmVjdCwgdGFyZ2V0LCBlbnRyeSk7XG4gICAgICAgIHByZXZpb3VzTWFwLnNldCh0YXJnZXQsIHsgd2lkdGgsIGhlaWdodCB9KTtcbiAgICAgIH1cbiAgICB9XG4gIH0sIG9wdGlvbnMpO1xuICBjcmVhdGVFZmZlY3QoKHByZXYpID0+IHtcbiAgICBjb25zdCByZWZzID0gZmlsdGVyTm9uTnVsbGFibGUoYXNBcnJheShhY2Nlc3ModGFyZ2V0cykpKTtcbiAgICBoYW5kbGVEaWZmQXJyYXkocmVmcywgcHJldiwgb2JzZXJ2ZSwgdW5vYnNlcnZlKTtcbiAgICByZXR1cm4gcmVmcztcbiAgfSwgW10pO1xufVxuXG4vLyAuLi8uLi9ub2RlX21vZHVsZXMvLnBucG0vQGtvYmFsdGUrdXRpbHNAMC45LjBfc29saWQtanNAMS44LjE3L25vZGVfbW9kdWxlcy9Aa29iYWx0ZS91dGlscy9kaXN0L2luZGV4LmpzXG5mdW5jdGlvbiBhZGRJdGVtVG9BcnJheShhcnJheSwgaXRlbSwgaW5kZXggPSAtMSkge1xuICBpZiAoIShpbmRleCBpbiBhcnJheSkpIHtcbiAgICByZXR1cm4gWy4uLmFycmF5LCBpdGVtXTtcbiAgfVxuICByZXR1cm4gWy4uLmFycmF5LnNsaWNlKDAsIGluZGV4KSwgaXRlbSwgLi4uYXJyYXkuc2xpY2UoaW5kZXgpXTtcbn1cbmZ1bmN0aW9uIHJlbW92ZUl0ZW1Gcm9tQXJyYXkoYXJyYXksIGl0ZW0pIHtcbiAgY29uc3QgdXBkYXRlZEFycmF5ID0gWy4uLmFycmF5XTtcbiAgY29uc3QgaW5kZXggPSB1cGRhdGVkQXJyYXkuaW5kZXhPZihpdGVtKTtcbiAgaWYgKGluZGV4ICE9PSAtMSkge1xuICAgIHVwZGF0ZWRBcnJheS5zcGxpY2UoaW5kZXgsIDEpO1xuICB9XG4gIHJldHVybiB1cGRhdGVkQXJyYXk7XG59XG5mdW5jdGlvbiBpc051bWJlcih2YWx1ZSkge1xuICByZXR1cm4gdHlwZW9mIHZhbHVlID09PSBcIm51bWJlclwiO1xufVxuZnVuY3Rpb24gaXNTdHJpbmcodmFsdWUpIHtcbiAgcmV0dXJuIE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbCh2YWx1ZSkgPT09IFwiW29iamVjdCBTdHJpbmddXCI7XG59XG5mdW5jdGlvbiBpc0Z1bmN0aW9uKHZhbHVlKSB7XG4gIHJldHVybiB0eXBlb2YgdmFsdWUgPT09IFwiZnVuY3Rpb25cIjtcbn1cbmZ1bmN0aW9uIGNyZWF0ZUdlbmVyYXRlSWQoYmFzZUlkKSB7XG4gIHJldHVybiAoc3VmZml4KSA9PiBgJHtiYXNlSWQoKX0tJHtzdWZmaXh9YDtcbn1cbmZ1bmN0aW9uIGNvbnRhaW5zKHBhcmVudCwgY2hpbGQpIHtcbiAgaWYgKCFwYXJlbnQpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbiAgcmV0dXJuIHBhcmVudCA9PT0gY2hpbGQgfHwgcGFyZW50LmNvbnRhaW5zKGNoaWxkKTtcbn1cbmZ1bmN0aW9uIGdldEFjdGl2ZUVsZW1lbnQobm9kZSwgYWN0aXZlRGVzY2VuZGFudCA9IGZhbHNlKSB7XG4gIGNvbnN0IHsgYWN0aXZlRWxlbWVudCB9ID0gZ2V0RG9jdW1lbnQobm9kZSk7XG4gIGlmICghYWN0aXZlRWxlbWVudD8ubm9kZU5hbWUpIHtcbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuICBpZiAoaXNGcmFtZShhY3RpdmVFbGVtZW50KSAmJiBhY3RpdmVFbGVtZW50LmNvbnRlbnREb2N1bWVudCkge1xuICAgIHJldHVybiBnZXRBY3RpdmVFbGVtZW50KGFjdGl2ZUVsZW1lbnQuY29udGVudERvY3VtZW50LmJvZHksIGFjdGl2ZURlc2NlbmRhbnQpO1xuICB9XG4gIGlmIChhY3RpdmVEZXNjZW5kYW50KSB7XG4gICAgY29uc3QgaWQgPSBhY3RpdmVFbGVtZW50LmdldEF0dHJpYnV0ZShcImFyaWEtYWN0aXZlZGVzY2VuZGFudFwiKTtcbiAgICBpZiAoaWQpIHtcbiAgICAgIGNvbnN0IGVsZW1lbnQgPSBnZXREb2N1bWVudChhY3RpdmVFbGVtZW50KS5nZXRFbGVtZW50QnlJZChpZCk7XG4gICAgICBpZiAoZWxlbWVudCkge1xuICAgICAgICByZXR1cm4gZWxlbWVudDtcbiAgICAgIH1cbiAgICB9XG4gIH1cbiAgcmV0dXJuIGFjdGl2ZUVsZW1lbnQ7XG59XG5mdW5jdGlvbiBnZXRXaW5kb3cobm9kZSkge1xuICByZXR1cm4gZ2V0RG9jdW1lbnQobm9kZSkuZGVmYXVsdFZpZXcgfHwgd2luZG93O1xufVxuZnVuY3Rpb24gZ2V0RG9jdW1lbnQobm9kZSkge1xuICByZXR1cm4gbm9kZSA/IG5vZGUub3duZXJEb2N1bWVudCB8fCBub2RlIDogZG9jdW1lbnQ7XG59XG5mdW5jdGlvbiBpc0ZyYW1lKGVsZW1lbnQpIHtcbiAgcmV0dXJuIGVsZW1lbnQudGFnTmFtZSA9PT0gXCJJRlJBTUVcIjtcbn1cbnZhciBFdmVudEtleSA9IC8qIEBfX1BVUkVfXyAqLyAoKEV2ZW50S2V5MikgPT4ge1xuICBFdmVudEtleTJbXCJFc2NhcGVcIl0gPSBcIkVzY2FwZVwiO1xuICBFdmVudEtleTJbXCJFbnRlclwiXSA9IFwiRW50ZXJcIjtcbiAgRXZlbnRLZXkyW1wiVGFiXCJdID0gXCJUYWJcIjtcbiAgRXZlbnRLZXkyW1wiU3BhY2VcIl0gPSBcIiBcIjtcbiAgRXZlbnRLZXkyW1wiQXJyb3dEb3duXCJdID0gXCJBcnJvd0Rvd25cIjtcbiAgRXZlbnRLZXkyW1wiQXJyb3dMZWZ0XCJdID0gXCJBcnJvd0xlZnRcIjtcbiAgRXZlbnRLZXkyW1wiQXJyb3dSaWdodFwiXSA9IFwiQXJyb3dSaWdodFwiO1xuICBFdmVudEtleTJbXCJBcnJvd1VwXCJdID0gXCJBcnJvd1VwXCI7XG4gIEV2ZW50S2V5MltcIkVuZFwiXSA9IFwiRW5kXCI7XG4gIEV2ZW50S2V5MltcIkhvbWVcIl0gPSBcIkhvbWVcIjtcbiAgRXZlbnRLZXkyW1wiUGFnZURvd25cIl0gPSBcIlBhZ2VEb3duXCI7XG4gIEV2ZW50S2V5MltcIlBhZ2VVcFwiXSA9IFwiUGFnZVVwXCI7XG4gIHJldHVybiBFdmVudEtleTI7XG59KShFdmVudEtleSB8fCB7fSk7XG5mdW5jdGlvbiB0ZXN0UGxhdGZvcm0ocmUpIHtcbiAgcmV0dXJuIHR5cGVvZiB3aW5kb3cgIT09IFwidW5kZWZpbmVkXCIgJiYgd2luZG93Lm5hdmlnYXRvciAhPSBudWxsID8gKFxuICAgIC8vIEB0cy1pZ25vcmVcbiAgICByZS50ZXN0KHdpbmRvdy5uYXZpZ2F0b3JbXCJ1c2VyQWdlbnREYXRhXCJdPy5wbGF0Zm9ybSB8fCB3aW5kb3cubmF2aWdhdG9yLnBsYXRmb3JtKVxuICApIDogZmFsc2U7XG59XG5mdW5jdGlvbiBpc01hYygpIHtcbiAgcmV0dXJuIHRlc3RQbGF0Zm9ybSgvXk1hYy9pKTtcbn1cbmZ1bmN0aW9uIGlzSVBob25lKCkge1xuICByZXR1cm4gdGVzdFBsYXRmb3JtKC9eaVBob25lL2kpO1xufVxuZnVuY3Rpb24gaXNJUGFkKCkge1xuICByZXR1cm4gdGVzdFBsYXRmb3JtKC9eaVBhZC9pKSB8fCAvLyBpUGFkT1MgMTMgbGllcyBhbmQgc2F5cyBpdCdzIGEgTWFjLCBidXQgd2UgY2FuIGRpc3Rpbmd1aXNoIGJ5IGRldGVjdGluZyB0b3VjaCBzdXBwb3J0LlxuICBpc01hYygpICYmIG5hdmlnYXRvci5tYXhUb3VjaFBvaW50cyA+IDE7XG59XG5mdW5jdGlvbiBpc0lPUygpIHtcbiAgcmV0dXJuIGlzSVBob25lKCkgfHwgaXNJUGFkKCk7XG59XG5mdW5jdGlvbiBpc0FwcGxlRGV2aWNlKCkge1xuICByZXR1cm4gaXNNYWMoKSB8fCBpc0lPUygpO1xufVxuZnVuY3Rpb24gY2FsbEhhbmRsZXIoZXZlbnQsIGhhbmRsZXIpIHtcbiAgaWYgKGhhbmRsZXIpIHtcbiAgICBpZiAoaXNGdW5jdGlvbihoYW5kbGVyKSkge1xuICAgICAgaGFuZGxlcihldmVudCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGhhbmRsZXJbMF0oaGFuZGxlclsxXSwgZXZlbnQpO1xuICAgIH1cbiAgfVxuICByZXR1cm4gZXZlbnQ/LmRlZmF1bHRQcmV2ZW50ZWQ7XG59XG5mdW5jdGlvbiBjb21wb3NlRXZlbnRIYW5kbGVycyhoYW5kbGVycykge1xuICByZXR1cm4gKGV2ZW50KSA9PiB7XG4gICAgZm9yIChjb25zdCBoYW5kbGVyIG9mIGhhbmRsZXJzKSB7XG4gICAgICBjYWxsSGFuZGxlcihldmVudCwgaGFuZGxlcik7XG4gICAgfVxuICB9O1xufVxuZnVuY3Rpb24gaXNDdHJsS2V5KGUyKSB7XG4gIGlmIChpc01hYygpKSB7XG4gICAgcmV0dXJuIGUyLm1ldGFLZXkgJiYgIWUyLmN0cmxLZXk7XG4gIH1cbiAgcmV0dXJuIGUyLmN0cmxLZXkgJiYgIWUyLm1ldGFLZXk7XG59XG5mdW5jdGlvbiBmb2N1c1dpdGhvdXRTY3JvbGxpbmcoZWxlbWVudCkge1xuICBpZiAoIWVsZW1lbnQpIHtcbiAgICByZXR1cm47XG4gIH1cbiAgaWYgKHN1cHBvcnRzUHJldmVudFNjcm9sbCgpKSB7XG4gICAgZWxlbWVudC5mb2N1cyh7IHByZXZlbnRTY3JvbGw6IHRydWUgfSk7XG4gIH0gZWxzZSB7XG4gICAgY29uc3Qgc2Nyb2xsYWJsZUVsZW1lbnRzID0gZ2V0U2Nyb2xsYWJsZUVsZW1lbnRzKGVsZW1lbnQpO1xuICAgIGVsZW1lbnQuZm9jdXMoKTtcbiAgICByZXN0b3JlU2Nyb2xsUG9zaXRpb24oc2Nyb2xsYWJsZUVsZW1lbnRzKTtcbiAgfVxufVxudmFyIHN1cHBvcnRzUHJldmVudFNjcm9sbENhY2hlZCA9IG51bGw7XG5mdW5jdGlvbiBzdXBwb3J0c1ByZXZlbnRTY3JvbGwoKSB7XG4gIGlmIChzdXBwb3J0c1ByZXZlbnRTY3JvbGxDYWNoZWQgPT0gbnVsbCkge1xuICAgIHN1cHBvcnRzUHJldmVudFNjcm9sbENhY2hlZCA9IGZhbHNlO1xuICAgIHRyeSB7XG4gICAgICBjb25zdCBmb2N1c0VsZW0gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICAgICAgZm9jdXNFbGVtLmZvY3VzKHtcbiAgICAgICAgZ2V0IHByZXZlbnRTY3JvbGwoKSB7XG4gICAgICAgICAgc3VwcG9ydHNQcmV2ZW50U2Nyb2xsQ2FjaGVkID0gdHJ1ZTtcbiAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfSBjYXRjaCAoZTIpIHtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHN1cHBvcnRzUHJldmVudFNjcm9sbENhY2hlZDtcbn1cbmZ1bmN0aW9uIGdldFNjcm9sbGFibGVFbGVtZW50cyhlbGVtZW50KSB7XG4gIGxldCBwYXJlbnQgPSBlbGVtZW50LnBhcmVudE5vZGU7XG4gIGNvbnN0IHNjcm9sbGFibGVFbGVtZW50cyA9IFtdO1xuICBjb25zdCByb290U2Nyb2xsaW5nRWxlbWVudCA9IGRvY3VtZW50LnNjcm9sbGluZ0VsZW1lbnQgfHwgZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50O1xuICB3aGlsZSAocGFyZW50IGluc3RhbmNlb2YgSFRNTEVsZW1lbnQgJiYgcGFyZW50ICE9PSByb290U2Nyb2xsaW5nRWxlbWVudCkge1xuICAgIGlmIChwYXJlbnQub2Zmc2V0SGVpZ2h0IDwgcGFyZW50LnNjcm9sbEhlaWdodCB8fCBwYXJlbnQub2Zmc2V0V2lkdGggPCBwYXJlbnQuc2Nyb2xsV2lkdGgpIHtcbiAgICAgIHNjcm9sbGFibGVFbGVtZW50cy5wdXNoKHtcbiAgICAgICAgZWxlbWVudDogcGFyZW50LFxuICAgICAgICBzY3JvbGxUb3A6IHBhcmVudC5zY3JvbGxUb3AsXG4gICAgICAgIHNjcm9sbExlZnQ6IHBhcmVudC5zY3JvbGxMZWZ0XG4gICAgICB9KTtcbiAgICB9XG4gICAgcGFyZW50ID0gcGFyZW50LnBhcmVudE5vZGU7XG4gIH1cbiAgaWYgKHJvb3RTY3JvbGxpbmdFbGVtZW50IGluc3RhbmNlb2YgSFRNTEVsZW1lbnQpIHtcbiAgICBzY3JvbGxhYmxlRWxlbWVudHMucHVzaCh7XG4gICAgICBlbGVtZW50OiByb290U2Nyb2xsaW5nRWxlbWVudCxcbiAgICAgIHNjcm9sbFRvcDogcm9vdFNjcm9sbGluZ0VsZW1lbnQuc2Nyb2xsVG9wLFxuICAgICAgc2Nyb2xsTGVmdDogcm9vdFNjcm9sbGluZ0VsZW1lbnQuc2Nyb2xsTGVmdFxuICAgIH0pO1xuICB9XG4gIHJldHVybiBzY3JvbGxhYmxlRWxlbWVudHM7XG59XG5mdW5jdGlvbiByZXN0b3JlU2Nyb2xsUG9zaXRpb24oc2Nyb2xsYWJsZUVsZW1lbnRzKSB7XG4gIGZvciAoY29uc3QgeyBlbGVtZW50LCBzY3JvbGxUb3AsIHNjcm9sbExlZnQgfSBvZiBzY3JvbGxhYmxlRWxlbWVudHMpIHtcbiAgICBlbGVtZW50LnNjcm9sbFRvcCA9IHNjcm9sbFRvcDtcbiAgICBlbGVtZW50LnNjcm9sbExlZnQgPSBzY3JvbGxMZWZ0O1xuICB9XG59XG52YXIgZm9jdXNhYmxlRWxlbWVudHMgPSBbXG4gIFwiaW5wdXQ6bm90KFt0eXBlPSdoaWRkZW4nXSk6bm90KFtkaXNhYmxlZF0pXCIsXG4gIFwic2VsZWN0Om5vdChbZGlzYWJsZWRdKVwiLFxuICBcInRleHRhcmVhOm5vdChbZGlzYWJsZWRdKVwiLFxuICBcImJ1dHRvbjpub3QoW2Rpc2FibGVkXSlcIixcbiAgXCJhW2hyZWZdXCIsXG4gIFwiYXJlYVtocmVmXVwiLFxuICBcIlt0YWJpbmRleF1cIixcbiAgXCJpZnJhbWVcIixcbiAgXCJvYmplY3RcIixcbiAgXCJlbWJlZFwiLFxuICBcImF1ZGlvW2NvbnRyb2xzXVwiLFxuICBcInZpZGVvW2NvbnRyb2xzXVwiLFxuICBcIltjb250ZW50ZWRpdGFibGVdOm5vdChbY29udGVudGVkaXRhYmxlPSdmYWxzZSddKVwiXG5dO1xudmFyIHRhYmJhYmxlRWxlbWVudHMgPSBbLi4uZm9jdXNhYmxlRWxlbWVudHMsICdbdGFiaW5kZXhdOm5vdChbdGFiaW5kZXg9XCItMVwiXSk6bm90KFtkaXNhYmxlZF0pJ107XG52YXIgRk9DVVNBQkxFX0VMRU1FTlRfU0VMRUNUT1IgPSBmb2N1c2FibGVFbGVtZW50cy5qb2luKFwiOm5vdChbaGlkZGVuXSksXCIpICsgXCIsW3RhYmluZGV4XTpub3QoW2Rpc2FibGVkXSk6bm90KFtoaWRkZW5dKVwiO1xudmFyIFRBQkJBQkxFX0VMRU1FTlRfU0VMRUNUT1IgPSB0YWJiYWJsZUVsZW1lbnRzLmpvaW4oXG4gICc6bm90KFtoaWRkZW5dKTpub3QoW3RhYmluZGV4PVwiLTFcIl0pLCdcbik7XG5mdW5jdGlvbiBnZXRBbGxUYWJiYWJsZUluKGNvbnRhaW5lciwgaW5jbHVkZUNvbnRhaW5lcikge1xuICBjb25zdCBlbGVtZW50cyA9IEFycmF5LmZyb20oY29udGFpbmVyLnF1ZXJ5U2VsZWN0b3JBbGwoRk9DVVNBQkxFX0VMRU1FTlRfU0VMRUNUT1IpKTtcbiAgY29uc3QgdGFiYmFibGVFbGVtZW50czIgPSBlbGVtZW50cy5maWx0ZXIoaXNUYWJiYWJsZSk7XG4gIGlmIChpbmNsdWRlQ29udGFpbmVyICYmIGlzVGFiYmFibGUoY29udGFpbmVyKSkge1xuICAgIHRhYmJhYmxlRWxlbWVudHMyLnVuc2hpZnQoY29udGFpbmVyKTtcbiAgfVxuICB0YWJiYWJsZUVsZW1lbnRzMi5mb3JFYWNoKChlbGVtZW50LCBpMikgPT4ge1xuICAgIGlmIChpc0ZyYW1lKGVsZW1lbnQpICYmIGVsZW1lbnQuY29udGVudERvY3VtZW50KSB7XG4gICAgICBjb25zdCBmcmFtZUJvZHkgPSBlbGVtZW50LmNvbnRlbnREb2N1bWVudC5ib2R5O1xuICAgICAgY29uc3QgYWxsRnJhbWVUYWJiYWJsZSA9IGdldEFsbFRhYmJhYmxlSW4oZnJhbWVCb2R5LCBmYWxzZSk7XG4gICAgICB0YWJiYWJsZUVsZW1lbnRzMi5zcGxpY2UoaTIsIDEsIC4uLmFsbEZyYW1lVGFiYmFibGUpO1xuICAgIH1cbiAgfSk7XG4gIHJldHVybiB0YWJiYWJsZUVsZW1lbnRzMjtcbn1cbmZ1bmN0aW9uIGlzVGFiYmFibGUoZWxlbWVudCkge1xuICByZXR1cm4gaXNGb2N1c2FibGUoZWxlbWVudCkgJiYgIWhhc05lZ2F0aXZlVGFiSW5kZXgoZWxlbWVudCk7XG59XG5mdW5jdGlvbiBpc0ZvY3VzYWJsZShlbGVtZW50KSB7XG4gIHJldHVybiBlbGVtZW50Lm1hdGNoZXMoRk9DVVNBQkxFX0VMRU1FTlRfU0VMRUNUT1IpICYmIGlzRWxlbWVudFZpc2libGUoZWxlbWVudCk7XG59XG5mdW5jdGlvbiBoYXNOZWdhdGl2ZVRhYkluZGV4KGVsZW1lbnQpIHtcbiAgY29uc3QgdGFiSW5kZXggPSBwYXJzZUludChlbGVtZW50LmdldEF0dHJpYnV0ZShcInRhYmluZGV4XCIpIHx8IFwiMFwiLCAxMCk7XG4gIHJldHVybiB0YWJJbmRleCA8IDA7XG59XG5mdW5jdGlvbiBpc0VsZW1lbnRWaXNpYmxlKGVsZW1lbnQsIGNoaWxkRWxlbWVudCkge1xuICByZXR1cm4gZWxlbWVudC5ub2RlTmFtZSAhPT0gXCIjY29tbWVudFwiICYmIGlzU3R5bGVWaXNpYmxlKGVsZW1lbnQpICYmIGlzQXR0cmlidXRlVmlzaWJsZShlbGVtZW50LCBjaGlsZEVsZW1lbnQpICYmICghZWxlbWVudC5wYXJlbnRFbGVtZW50IHx8IGlzRWxlbWVudFZpc2libGUoZWxlbWVudC5wYXJlbnRFbGVtZW50LCBlbGVtZW50KSk7XG59XG5mdW5jdGlvbiBpc1N0eWxlVmlzaWJsZShlbGVtZW50KSB7XG4gIGlmICghKGVsZW1lbnQgaW5zdGFuY2VvZiBIVE1MRWxlbWVudCkgJiYgIShlbGVtZW50IGluc3RhbmNlb2YgU1ZHRWxlbWVudCkpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbiAgY29uc3QgeyBkaXNwbGF5LCB2aXNpYmlsaXR5IH0gPSBlbGVtZW50LnN0eWxlO1xuICBsZXQgaXNWaXNpYmxlID0gZGlzcGxheSAhPT0gXCJub25lXCIgJiYgdmlzaWJpbGl0eSAhPT0gXCJoaWRkZW5cIiAmJiB2aXNpYmlsaXR5ICE9PSBcImNvbGxhcHNlXCI7XG4gIGlmIChpc1Zpc2libGUpIHtcbiAgICBpZiAoIWVsZW1lbnQub3duZXJEb2N1bWVudC5kZWZhdWx0Vmlldykge1xuICAgICAgcmV0dXJuIGlzVmlzaWJsZTtcbiAgICB9XG4gICAgY29uc3QgeyBnZXRDb21wdXRlZFN0eWxlOiBnZXRDb21wdXRlZFN0eWxlMyB9ID0gZWxlbWVudC5vd25lckRvY3VtZW50LmRlZmF1bHRWaWV3O1xuICAgIGNvbnN0IHsgZGlzcGxheTogY29tcHV0ZWREaXNwbGF5LCB2aXNpYmlsaXR5OiBjb21wdXRlZFZpc2liaWxpdHkgfSA9IGdldENvbXB1dGVkU3R5bGUzKGVsZW1lbnQpO1xuICAgIGlzVmlzaWJsZSA9IGNvbXB1dGVkRGlzcGxheSAhPT0gXCJub25lXCIgJiYgY29tcHV0ZWRWaXNpYmlsaXR5ICE9PSBcImhpZGRlblwiICYmIGNvbXB1dGVkVmlzaWJpbGl0eSAhPT0gXCJjb2xsYXBzZVwiO1xuICB9XG4gIHJldHVybiBpc1Zpc2libGU7XG59XG5mdW5jdGlvbiBpc0F0dHJpYnV0ZVZpc2libGUoZWxlbWVudCwgY2hpbGRFbGVtZW50KSB7XG4gIHJldHVybiAhZWxlbWVudC5oYXNBdHRyaWJ1dGUoXCJoaWRkZW5cIikgJiYgKGVsZW1lbnQubm9kZU5hbWUgPT09IFwiREVUQUlMU1wiICYmIGNoaWxkRWxlbWVudCAmJiBjaGlsZEVsZW1lbnQubm9kZU5hbWUgIT09IFwiU1VNTUFSWVwiID8gZWxlbWVudC5oYXNBdHRyaWJ1dGUoXCJvcGVuXCIpIDogdHJ1ZSk7XG59XG5mdW5jdGlvbiBpc0VsZW1lbnRJblNjb3BlKGVsZW1lbnQsIHNjb3BlKSB7XG4gIHJldHVybiBzY29wZS5zb21lKChub2RlKSA9PiBub2RlLmNvbnRhaW5zKGVsZW1lbnQpKTtcbn1cbmZ1bmN0aW9uIGdldEZvY3VzYWJsZVRyZWVXYWxrZXIocm9vdCwgb3B0cywgc2NvcGUpIHtcbiAgY29uc3Qgc2VsZWN0b3IgPSBvcHRzPy50YWJiYWJsZSA/IFRBQkJBQkxFX0VMRU1FTlRfU0VMRUNUT1IgOiBGT0NVU0FCTEVfRUxFTUVOVF9TRUxFQ1RPUjtcbiAgY29uc3Qgd2Fsa2VyID0gZG9jdW1lbnQuY3JlYXRlVHJlZVdhbGtlcihyb290LCBOb2RlRmlsdGVyLlNIT1dfRUxFTUVOVCwge1xuICAgIGFjY2VwdE5vZGUobm9kZSkge1xuICAgICAgaWYgKG9wdHM/LmZyb20/LmNvbnRhaW5zKG5vZGUpKSB7XG4gICAgICAgIHJldHVybiBOb2RlRmlsdGVyLkZJTFRFUl9SRUpFQ1Q7XG4gICAgICB9XG4gICAgICBpZiAobm9kZS5tYXRjaGVzKHNlbGVjdG9yKSAmJiBpc0VsZW1lbnRWaXNpYmxlKG5vZGUpICYmICghc2NvcGUgfHwgaXNFbGVtZW50SW5TY29wZShub2RlLCBzY29wZSkpICYmICghb3B0cz8uYWNjZXB0IHx8IG9wdHMuYWNjZXB0KG5vZGUpKSkge1xuICAgICAgICByZXR1cm4gTm9kZUZpbHRlci5GSUxURVJfQUNDRVBUO1xuICAgICAgfVxuICAgICAgcmV0dXJuIE5vZGVGaWx0ZXIuRklMVEVSX1NLSVA7XG4gICAgfVxuICB9KTtcbiAgaWYgKG9wdHM/LmZyb20pIHtcbiAgICB3YWxrZXIuY3VycmVudE5vZGUgPSBvcHRzLmZyb207XG4gIH1cbiAgcmV0dXJuIHdhbGtlcjtcbn1cbmZ1bmN0aW9uIGdldFNjcm9sbFBhcmVudChub2RlKSB7XG4gIHdoaWxlIChub2RlICYmICFpc1Njcm9sbGFibGUobm9kZSkpIHtcbiAgICBub2RlID0gbm9kZS5wYXJlbnRFbGVtZW50O1xuICB9XG4gIHJldHVybiBub2RlIHx8IGRvY3VtZW50LnNjcm9sbGluZ0VsZW1lbnQgfHwgZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50O1xufVxuZnVuY3Rpb24gaXNTY3JvbGxhYmxlKG5vZGUpIHtcbiAgY29uc3Qgc3R5bGUgPSB3aW5kb3cuZ2V0Q29tcHV0ZWRTdHlsZShub2RlKTtcbiAgcmV0dXJuIC8oYXV0b3xzY3JvbGwpLy50ZXN0KHN0eWxlLm92ZXJmbG93ICsgc3R5bGUub3ZlcmZsb3dYICsgc3R5bGUub3ZlcmZsb3dZKTtcbn1cbmZ1bmN0aW9uIG5vb3AzKCkge1xuICByZXR1cm47XG59XG5mdW5jdGlvbiBpc1BvaW50SW5Qb2x5Z29uKHBvaW50LCBwb2x5Z29uKSB7XG4gIGNvbnN0IFt4LCB5XSA9IHBvaW50O1xuICBsZXQgaW5zaWRlID0gZmFsc2U7XG4gIGNvbnN0IGxlbmd0aCA9IHBvbHlnb24ubGVuZ3RoO1xuICBmb3IgKGxldCBsMiA9IGxlbmd0aCwgaTIgPSAwLCBqID0gbDIgLSAxOyBpMiA8IGwyOyBqID0gaTIrKykge1xuICAgIGNvbnN0IFt4aSwgeWldID0gcG9seWdvbltpMl07XG4gICAgY29uc3QgW3hqLCB5al0gPSBwb2x5Z29uW2pdO1xuICAgIGNvbnN0IFssIHZ5XSA9IHBvbHlnb25baiA9PT0gMCA/IGwyIC0gMSA6IGogLSAxXSB8fCBbMCwgMF07XG4gICAgY29uc3Qgd2hlcmUgPSAoeWkgLSB5aikgKiAoeCAtIHhpKSAtICh4aSAtIHhqKSAqICh5IC0geWkpO1xuICAgIGlmICh5aiA8IHlpKSB7XG4gICAgICBpZiAoeSA+PSB5aiAmJiB5IDwgeWkpIHtcbiAgICAgICAgaWYgKHdoZXJlID09PSAwKVxuICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICBpZiAod2hlcmUgPiAwKSB7XG4gICAgICAgICAgaWYgKHkgPT09IHlqKSB7XG4gICAgICAgICAgICBpZiAoeSA+IHZ5KSB7XG4gICAgICAgICAgICAgIGluc2lkZSA9ICFpbnNpZGU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGluc2lkZSA9ICFpbnNpZGU7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfSBlbHNlIGlmICh5aSA8IHlqKSB7XG4gICAgICBpZiAoeSA+IHlpICYmIHkgPD0geWopIHtcbiAgICAgICAgaWYgKHdoZXJlID09PSAwKVxuICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICBpZiAod2hlcmUgPCAwKSB7XG4gICAgICAgICAgaWYgKHkgPT09IHlqKSB7XG4gICAgICAgICAgICBpZiAoeSA8IHZ5KSB7XG4gICAgICAgICAgICAgIGluc2lkZSA9ICFpbnNpZGU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGluc2lkZSA9ICFpbnNpZGU7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfSBlbHNlIGlmICh5ID09IHlpICYmICh4ID49IHhqICYmIHggPD0geGkgfHwgeCA+PSB4aSAmJiB4IDw9IHhqKSkge1xuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICB9XG4gIHJldHVybiBpbnNpZGU7XG59XG5mdW5jdGlvbiBtZXJnZURlZmF1bHRQcm9wcyhkZWZhdWx0UHJvcHMsIHByb3BzKSB7XG4gIHJldHVybiBtZXJnZVByb3BzKGRlZmF1bHRQcm9wcywgcHJvcHMpO1xufVxudmFyIHRyYW5zaXRpb25zQnlFbGVtZW50ID0gLyogQF9fUFVSRV9fICovIG5ldyBNYXAoKTtcbnZhciB0cmFuc2l0aW9uQ2FsbGJhY2tzID0gLyogQF9fUFVSRV9fICovIG5ldyBTZXQoKTtcbmZ1bmN0aW9uIHNldHVwR2xvYmFsRXZlbnRzKCkge1xuICBpZiAodHlwZW9mIHdpbmRvdyA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgIHJldHVybjtcbiAgfVxuICBjb25zdCBvblRyYW5zaXRpb25TdGFydCA9IChlMikgPT4ge1xuICAgIGlmICghZTIudGFyZ2V0KSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIGxldCB0cmFuc2l0aW9ucyA9IHRyYW5zaXRpb25zQnlFbGVtZW50LmdldChlMi50YXJnZXQpO1xuICAgIGlmICghdHJhbnNpdGlvbnMpIHtcbiAgICAgIHRyYW5zaXRpb25zID0gLyogQF9fUFVSRV9fICovIG5ldyBTZXQoKTtcbiAgICAgIHRyYW5zaXRpb25zQnlFbGVtZW50LnNldChlMi50YXJnZXQsIHRyYW5zaXRpb25zKTtcbiAgICAgIGUyLnRhcmdldC5hZGRFdmVudExpc3RlbmVyKFwidHJhbnNpdGlvbmNhbmNlbFwiLCBvblRyYW5zaXRpb25FbmQpO1xuICAgIH1cbiAgICB0cmFuc2l0aW9ucy5hZGQoZTIucHJvcGVydHlOYW1lKTtcbiAgfTtcbiAgY29uc3Qgb25UcmFuc2l0aW9uRW5kID0gKGUyKSA9PiB7XG4gICAgaWYgKCFlMi50YXJnZXQpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgY29uc3QgcHJvcGVydGllcyA9IHRyYW5zaXRpb25zQnlFbGVtZW50LmdldChlMi50YXJnZXQpO1xuICAgIGlmICghcHJvcGVydGllcykge1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBwcm9wZXJ0aWVzLmRlbGV0ZShlMi5wcm9wZXJ0eU5hbWUpO1xuICAgIGlmIChwcm9wZXJ0aWVzLnNpemUgPT09IDApIHtcbiAgICAgIGUyLnRhcmdldC5yZW1vdmVFdmVudExpc3RlbmVyKFwidHJhbnNpdGlvbmNhbmNlbFwiLCBvblRyYW5zaXRpb25FbmQpO1xuICAgICAgdHJhbnNpdGlvbnNCeUVsZW1lbnQuZGVsZXRlKGUyLnRhcmdldCk7XG4gICAgfVxuICAgIGlmICh0cmFuc2l0aW9uc0J5RWxlbWVudC5zaXplID09PSAwKSB7XG4gICAgICBmb3IgKGNvbnN0IGNiIG9mIHRyYW5zaXRpb25DYWxsYmFja3MpIHtcbiAgICAgICAgY2IoKTtcbiAgICAgIH1cbiAgICAgIHRyYW5zaXRpb25DYWxsYmFja3MuY2xlYXIoKTtcbiAgICB9XG4gIH07XG4gIGRvY3VtZW50LmJvZHkuYWRkRXZlbnRMaXN0ZW5lcihcInRyYW5zaXRpb25ydW5cIiwgb25UcmFuc2l0aW9uU3RhcnQpO1xuICBkb2N1bWVudC5ib2R5LmFkZEV2ZW50TGlzdGVuZXIoXCJ0cmFuc2l0aW9uZW5kXCIsIG9uVHJhbnNpdGlvbkVuZCk7XG59XG5pZiAodHlwZW9mIGRvY3VtZW50ICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gIGlmIChkb2N1bWVudC5yZWFkeVN0YXRlICE9PSBcImxvYWRpbmdcIikge1xuICAgIHNldHVwR2xvYmFsRXZlbnRzKCk7XG4gIH0gZWxzZSB7XG4gICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcIkRPTUNvbnRlbnRMb2FkZWRcIiwgc2V0dXBHbG9iYWxFdmVudHMpO1xuICB9XG59XG5mdW5jdGlvbiBzY3JvbGxJbnRvVmlldyhzY3JvbGxWaWV3LCBlbGVtZW50KSB7XG4gIGNvbnN0IG9mZnNldFggPSByZWxhdGl2ZU9mZnNldChzY3JvbGxWaWV3LCBlbGVtZW50LCBcImxlZnRcIik7XG4gIGNvbnN0IG9mZnNldFkgPSByZWxhdGl2ZU9mZnNldChzY3JvbGxWaWV3LCBlbGVtZW50LCBcInRvcFwiKTtcbiAgY29uc3Qgd2lkdGggPSBlbGVtZW50Lm9mZnNldFdpZHRoO1xuICBjb25zdCBoZWlnaHQgPSBlbGVtZW50Lm9mZnNldEhlaWdodDtcbiAgbGV0IHggPSBzY3JvbGxWaWV3LnNjcm9sbExlZnQ7XG4gIGxldCB5ID0gc2Nyb2xsVmlldy5zY3JvbGxUb3A7XG4gIGNvbnN0IG1heFggPSB4ICsgc2Nyb2xsVmlldy5vZmZzZXRXaWR0aDtcbiAgY29uc3QgbWF4WSA9IHkgKyBzY3JvbGxWaWV3Lm9mZnNldEhlaWdodDtcbiAgaWYgKG9mZnNldFggPD0geCkge1xuICAgIHggPSBvZmZzZXRYO1xuICB9IGVsc2UgaWYgKG9mZnNldFggKyB3aWR0aCA+IG1heFgpIHtcbiAgICB4ICs9IG9mZnNldFggKyB3aWR0aCAtIG1heFg7XG4gIH1cbiAgaWYgKG9mZnNldFkgPD0geSkge1xuICAgIHkgPSBvZmZzZXRZO1xuICB9IGVsc2UgaWYgKG9mZnNldFkgKyBoZWlnaHQgPiBtYXhZKSB7XG4gICAgeSArPSBvZmZzZXRZICsgaGVpZ2h0IC0gbWF4WTtcbiAgfVxuICBzY3JvbGxWaWV3LnNjcm9sbExlZnQgPSB4O1xuICBzY3JvbGxWaWV3LnNjcm9sbFRvcCA9IHk7XG59XG5mdW5jdGlvbiByZWxhdGl2ZU9mZnNldChhbmNlc3RvciwgY2hpbGQsIGF4aXMpIHtcbiAgY29uc3QgcHJvcCA9IGF4aXMgPT09IFwibGVmdFwiID8gXCJvZmZzZXRMZWZ0XCIgOiBcIm9mZnNldFRvcFwiO1xuICBsZXQgc3VtID0gMDtcbiAgd2hpbGUgKGNoaWxkLm9mZnNldFBhcmVudCkge1xuICAgIHN1bSArPSBjaGlsZFtwcm9wXTtcbiAgICBpZiAoY2hpbGQub2Zmc2V0UGFyZW50ID09PSBhbmNlc3Rvcikge1xuICAgICAgYnJlYWs7XG4gICAgfSBlbHNlIGlmIChjaGlsZC5vZmZzZXRQYXJlbnQuY29udGFpbnMoYW5jZXN0b3IpKSB7XG4gICAgICBzdW0gLT0gYW5jZXN0b3JbcHJvcF07XG4gICAgICBicmVhaztcbiAgICB9XG4gICAgY2hpbGQgPSBjaGlsZC5vZmZzZXRQYXJlbnQ7XG4gIH1cbiAgcmV0dXJuIHN1bTtcbn1cbmZ1bmN0aW9uIHNjcm9sbEludG9WaWV3cG9ydCh0YXJnZXRFbGVtZW50LCBvcHRzKSB7XG4gIGlmIChkb2N1bWVudC5jb250YWlucyh0YXJnZXRFbGVtZW50KSkge1xuICAgIGNvbnN0IHJvb3QgPSBkb2N1bWVudC5zY3JvbGxpbmdFbGVtZW50IHx8IGRvY3VtZW50LmRvY3VtZW50RWxlbWVudDtcbiAgICBjb25zdCBpc1Njcm9sbFByZXZlbnRlZCA9IHdpbmRvdy5nZXRDb21wdXRlZFN0eWxlKHJvb3QpLm92ZXJmbG93ID09PSBcImhpZGRlblwiO1xuICAgIGlmICghaXNTY3JvbGxQcmV2ZW50ZWQpIHtcbiAgICAgIGNvbnN0IHsgbGVmdDogb3JpZ2luYWxMZWZ0LCB0b3A6IG9yaWdpbmFsVG9wIH0gPSB0YXJnZXRFbGVtZW50LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xuICAgICAgdGFyZ2V0RWxlbWVudD8uc2Nyb2xsSW50b1ZpZXc/Lih7IGJsb2NrOiBcIm5lYXJlc3RcIiB9KTtcbiAgICAgIGNvbnN0IHsgbGVmdDogbmV3TGVmdCwgdG9wOiBuZXdUb3AgfSA9IHRhcmdldEVsZW1lbnQuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XG4gICAgICBpZiAoTWF0aC5hYnMob3JpZ2luYWxMZWZ0IC0gbmV3TGVmdCkgPiAxIHx8IE1hdGguYWJzKG9yaWdpbmFsVG9wIC0gbmV3VG9wKSA+IDEpIHtcbiAgICAgICAgb3B0cz8uY29udGFpbmluZ0VsZW1lbnQ/LnNjcm9sbEludG9WaWV3Py4oeyBibG9jazogXCJjZW50ZXJcIiwgaW5saW5lOiBcImNlbnRlclwiIH0pO1xuICAgICAgICB0YXJnZXRFbGVtZW50LnNjcm9sbEludG9WaWV3Py4oeyBibG9jazogXCJuZWFyZXN0XCIgfSk7XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIGxldCBzY3JvbGxQYXJlbnQgPSBnZXRTY3JvbGxQYXJlbnQodGFyZ2V0RWxlbWVudCk7XG4gICAgICB3aGlsZSAodGFyZ2V0RWxlbWVudCAmJiBzY3JvbGxQYXJlbnQgJiYgdGFyZ2V0RWxlbWVudCAhPT0gcm9vdCAmJiBzY3JvbGxQYXJlbnQgIT09IHJvb3QpIHtcbiAgICAgICAgc2Nyb2xsSW50b1ZpZXcoc2Nyb2xsUGFyZW50LCB0YXJnZXRFbGVtZW50KTtcbiAgICAgICAgdGFyZ2V0RWxlbWVudCA9IHNjcm9sbFBhcmVudDtcbiAgICAgICAgc2Nyb2xsUGFyZW50ID0gZ2V0U2Nyb2xsUGFyZW50KHRhcmdldEVsZW1lbnQpO1xuICAgICAgfVxuICAgIH1cbiAgfVxufVxudmFyIHZpc3VhbGx5SGlkZGVuU3R5bGVzID0ge1xuICBib3JkZXI6IFwiMFwiLFxuICBjbGlwOiBcInJlY3QoMCAwIDAgMClcIixcbiAgXCJjbGlwLXBhdGhcIjogXCJpbnNldCg1MCUpXCIsXG4gIGhlaWdodDogXCIxcHhcIixcbiAgbWFyZ2luOiBcIjAgLTFweCAtMXB4IDBcIixcbiAgb3ZlcmZsb3c6IFwiaGlkZGVuXCIsXG4gIHBhZGRpbmc6IFwiMFwiLFxuICBwb3NpdGlvbjogXCJhYnNvbHV0ZVwiLFxuICB3aWR0aDogXCIxcHhcIixcbiAgXCJ3aGl0ZS1zcGFjZVwiOiBcIm5vd3JhcFwiXG59O1xuXG4vLyAuLi8uLi9ub2RlX21vZHVsZXMvLnBucG0vQGtvYmFsdGUrY29yZUAwLjEzLjFfc29saWQtanNAMS44LjE3L25vZGVfbW9kdWxlcy9Aa29iYWx0ZS9jb3JlL2Rpc3QvY2h1bmsvQkxONjNGREMuanNcbmZ1bmN0aW9uIGNyZWF0ZUNvbnRyb2xsYWJsZVNpZ25hbChwcm9wcykge1xuICBjb25zdCBbX3ZhbHVlLCBfc2V0VmFsdWVdID0gY3JlYXRlU2lnbmFsKHByb3BzLmRlZmF1bHRWYWx1ZT8uKCkpO1xuICBjb25zdCBpc0NvbnRyb2xsZWQgPSBjcmVhdGVNZW1vKCgpID0+IHByb3BzLnZhbHVlPy4oKSAhPT0gdm9pZCAwKTtcbiAgY29uc3QgdmFsdWUgPSBjcmVhdGVNZW1vKCgpID0+IGlzQ29udHJvbGxlZCgpID8gcHJvcHMudmFsdWU/LigpIDogX3ZhbHVlKCkpO1xuICBjb25zdCBzZXRWYWx1ZSA9IChuZXh0KSA9PiB7XG4gICAgdW50cmFjaygoKSA9PiB7XG4gICAgICBjb25zdCBuZXh0VmFsdWUgPSBhY2Nlc3NXaXRoKG5leHQsIHZhbHVlKCkpO1xuICAgICAgaWYgKCFPYmplY3QuaXMobmV4dFZhbHVlLCB2YWx1ZSgpKSkge1xuICAgICAgICBpZiAoIWlzQ29udHJvbGxlZCgpKSB7XG4gICAgICAgICAgX3NldFZhbHVlKG5leHRWYWx1ZSk7XG4gICAgICAgIH1cbiAgICAgICAgcHJvcHMub25DaGFuZ2U/LihuZXh0VmFsdWUpO1xuICAgICAgfVxuICAgICAgcmV0dXJuIG5leHRWYWx1ZTtcbiAgICB9KTtcbiAgfTtcbiAgcmV0dXJuIFt2YWx1ZSwgc2V0VmFsdWVdO1xufVxuZnVuY3Rpb24gY3JlYXRlQ29udHJvbGxhYmxlQm9vbGVhblNpZ25hbChwcm9wcykge1xuICBjb25zdCBbX3ZhbHVlLCBzZXRWYWx1ZV0gPSBjcmVhdGVDb250cm9sbGFibGVTaWduYWwocHJvcHMpO1xuICBjb25zdCB2YWx1ZSA9ICgpID0+IF92YWx1ZSgpID8/IGZhbHNlO1xuICByZXR1cm4gW3ZhbHVlLCBzZXRWYWx1ZV07XG59XG5mdW5jdGlvbiBjcmVhdGVDb250cm9sbGFibGVBcnJheVNpZ25hbChwcm9wcykge1xuICBjb25zdCBbX3ZhbHVlLCBzZXRWYWx1ZV0gPSBjcmVhdGVDb250cm9sbGFibGVTaWduYWwocHJvcHMpO1xuICBjb25zdCB2YWx1ZSA9ICgpID0+IF92YWx1ZSgpID8/IFtdO1xuICByZXR1cm4gW3ZhbHVlLCBzZXRWYWx1ZV07XG59XG5cbi8vIC4uLy4uL25vZGVfbW9kdWxlcy8ucG5wbS9Aa29iYWx0ZStjb3JlQDAuMTMuMV9zb2xpZC1qc0AxLjguMTcvbm9kZV9tb2R1bGVzL0Brb2JhbHRlL2NvcmUvZGlzdC9jaHVuay83Q1ZOTVRZRi5qc1xudmFyIERvbUNvbGxlY3Rpb25Db250ZXh0ID0gY3JlYXRlQ29udGV4dCgpO1xuZnVuY3Rpb24gdXNlT3B0aW9uYWxEb21Db2xsZWN0aW9uQ29udGV4dCgpIHtcbiAgcmV0dXJuIHVzZUNvbnRleHQoRG9tQ29sbGVjdGlvbkNvbnRleHQpO1xufVxuZnVuY3Rpb24gdXNlRG9tQ29sbGVjdGlvbkNvbnRleHQoKSB7XG4gIGNvbnN0IGNvbnRleHQgPSB1c2VPcHRpb25hbERvbUNvbGxlY3Rpb25Db250ZXh0KCk7XG4gIGlmIChjb250ZXh0ID09PSB2b2lkIDApIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICBcIltrb2JhbHRlXTogYHVzZURvbUNvbGxlY3Rpb25Db250ZXh0YCBtdXN0IGJlIHVzZWQgd2l0aGluIGEgYERvbUNvbGxlY3Rpb25Qcm92aWRlcmAgY29tcG9uZW50XCJcbiAgICApO1xuICB9XG4gIHJldHVybiBjb250ZXh0O1xufVxuZnVuY3Rpb24gaXNFbGVtZW50UHJlY2VkaW5nKGEyLCBiMikge1xuICByZXR1cm4gQm9vbGVhbihcbiAgICBiMi5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbihhMikgJiBOb2RlLkRPQ1VNRU5UX1BPU0lUSU9OX1BSRUNFRElOR1xuICApO1xufVxuZnVuY3Rpb24gZmluZERPTUluZGV4KGl0ZW1zLCBpdGVtKSB7XG4gIGNvbnN0IGl0ZW1FbCA9IGl0ZW0ucmVmKCk7XG4gIGlmICghaXRlbUVsKSB7XG4gICAgcmV0dXJuIC0xO1xuICB9XG4gIGxldCBsZW5ndGggPSBpdGVtcy5sZW5ndGg7XG4gIGlmICghbGVuZ3RoKSB7XG4gICAgcmV0dXJuIC0xO1xuICB9XG4gIHdoaWxlIChsZW5ndGgtLSkge1xuICAgIGNvbnN0IGN1cnJlbnRJdGVtRWwgPSBpdGVtc1tsZW5ndGhdPy5yZWYoKTtcbiAgICBpZiAoIWN1cnJlbnRJdGVtRWwpIHtcbiAgICAgIGNvbnRpbnVlO1xuICAgIH1cbiAgICBpZiAoaXNFbGVtZW50UHJlY2VkaW5nKGN1cnJlbnRJdGVtRWwsIGl0ZW1FbCkpIHtcbiAgICAgIHJldHVybiBsZW5ndGggKyAxO1xuICAgIH1cbiAgfVxuICByZXR1cm4gMDtcbn1cbmZ1bmN0aW9uIHNvcnRCYXNlZE9uRE9NUG9zaXRpb24oaXRlbXMpIHtcbiAgY29uc3QgcGFpcnMgPSBpdGVtcy5tYXAoKGl0ZW0sIGluZGV4KSA9PiBbaW5kZXgsIGl0ZW1dKTtcbiAgbGV0IGlzT3JkZXJEaWZmZXJlbnQgPSBmYWxzZTtcbiAgcGFpcnMuc29ydCgoW2luZGV4QSwgYTJdLCBbaW5kZXhCLCBiMl0pID0+IHtcbiAgICBjb25zdCBlbGVtZW50QSA9IGEyLnJlZigpO1xuICAgIGNvbnN0IGVsZW1lbnRCID0gYjIucmVmKCk7XG4gICAgaWYgKGVsZW1lbnRBID09PSBlbGVtZW50Qikge1xuICAgICAgcmV0dXJuIDA7XG4gICAgfVxuICAgIGlmICghZWxlbWVudEEgfHwgIWVsZW1lbnRCKSB7XG4gICAgICByZXR1cm4gMDtcbiAgICB9XG4gICAgaWYgKGlzRWxlbWVudFByZWNlZGluZyhlbGVtZW50QSwgZWxlbWVudEIpKSB7XG4gICAgICBpZiAoaW5kZXhBID4gaW5kZXhCKSB7XG4gICAgICAgIGlzT3JkZXJEaWZmZXJlbnQgPSB0cnVlO1xuICAgICAgfVxuICAgICAgcmV0dXJuIC0xO1xuICAgIH1cbiAgICBpZiAoaW5kZXhBIDwgaW5kZXhCKSB7XG4gICAgICBpc09yZGVyRGlmZmVyZW50ID0gdHJ1ZTtcbiAgICB9XG4gICAgcmV0dXJuIDE7XG4gIH0pO1xuICBpZiAoaXNPcmRlckRpZmZlcmVudCkge1xuICAgIHJldHVybiBwYWlycy5tYXAoKFtfLCBpdGVtXSkgPT4gaXRlbSk7XG4gIH1cbiAgcmV0dXJuIGl0ZW1zO1xufVxuZnVuY3Rpb24gc2V0SXRlbXNCYXNlZE9uRE9NUG9zaXRpb24oaXRlbXMsIHNldEl0ZW1zKSB7XG4gIGNvbnN0IHNvcnRlZEl0ZW1zID0gc29ydEJhc2VkT25ET01Qb3NpdGlvbihpdGVtcyk7XG4gIGlmIChpdGVtcyAhPT0gc29ydGVkSXRlbXMpIHtcbiAgICBzZXRJdGVtcyhzb3J0ZWRJdGVtcyk7XG4gIH1cbn1cbmZ1bmN0aW9uIGdldENvbW1vblBhcmVudChpdGVtcykge1xuICBjb25zdCBmaXJzdEl0ZW0gPSBpdGVtc1swXTtcbiAgY29uc3QgbGFzdEl0ZW1FbCA9IGl0ZW1zW2l0ZW1zLmxlbmd0aCAtIDFdPy5yZWYoKTtcbiAgbGV0IHBhcmVudEVsID0gZmlyc3RJdGVtPy5yZWYoKT8ucGFyZW50RWxlbWVudDtcbiAgd2hpbGUgKHBhcmVudEVsKSB7XG4gICAgaWYgKGxhc3RJdGVtRWwgJiYgcGFyZW50RWwuY29udGFpbnMobGFzdEl0ZW1FbCkpIHtcbiAgICAgIHJldHVybiBwYXJlbnRFbDtcbiAgICB9XG4gICAgcGFyZW50RWwgPSBwYXJlbnRFbC5wYXJlbnRFbGVtZW50O1xuICB9XG4gIHJldHVybiBnZXREb2N1bWVudChwYXJlbnRFbCkuYm9keTtcbn1cbmZ1bmN0aW9uIGNyZWF0ZVRpbWVvdXRPYnNlcnZlcihpdGVtcywgc2V0SXRlbXMpIHtcbiAgY3JlYXRlRWZmZWN0KCgpID0+IHtcbiAgICBjb25zdCB0aW1lb3V0ID0gc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICBzZXRJdGVtc0Jhc2VkT25ET01Qb3NpdGlvbihpdGVtcygpLCBzZXRJdGVtcyk7XG4gICAgfSk7XG4gICAgb25DbGVhbnVwKCgpID0+IGNsZWFyVGltZW91dCh0aW1lb3V0KSk7XG4gIH0pO1xufVxuZnVuY3Rpb24gY3JlYXRlU29ydEJhc2VkT25ET01Qb3NpdGlvbihpdGVtcywgc2V0SXRlbXMpIHtcbiAgaWYgKHR5cGVvZiBJbnRlcnNlY3Rpb25PYnNlcnZlciAhPT0gXCJmdW5jdGlvblwiKSB7XG4gICAgY3JlYXRlVGltZW91dE9ic2VydmVyKGl0ZW1zLCBzZXRJdGVtcyk7XG4gICAgcmV0dXJuO1xuICB9XG4gIGxldCBwcmV2aW91c0l0ZW1zID0gW107XG4gIGNyZWF0ZUVmZmVjdCgoKSA9PiB7XG4gICAgY29uc3QgY2FsbGJhY2sgPSAoKSA9PiB7XG4gICAgICBjb25zdCBoYXNQcmV2aW91c0l0ZW1zID0gISFwcmV2aW91c0l0ZW1zLmxlbmd0aDtcbiAgICAgIHByZXZpb3VzSXRlbXMgPSBpdGVtcygpO1xuICAgICAgaWYgKCFoYXNQcmV2aW91c0l0ZW1zKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICAgIHNldEl0ZW1zQmFzZWRPbkRPTVBvc2l0aW9uKGl0ZW1zKCksIHNldEl0ZW1zKTtcbiAgICB9O1xuICAgIGNvbnN0IHJvb3QgPSBnZXRDb21tb25QYXJlbnQoaXRlbXMoKSk7XG4gICAgY29uc3Qgb2JzZXJ2ZXIgPSBuZXcgSW50ZXJzZWN0aW9uT2JzZXJ2ZXIoY2FsbGJhY2ssIHsgcm9vdCB9KTtcbiAgICBmb3IgKGNvbnN0IGl0ZW0gb2YgaXRlbXMoKSkge1xuICAgICAgY29uc3QgaXRlbUVsID0gaXRlbS5yZWYoKTtcbiAgICAgIGlmIChpdGVtRWwpIHtcbiAgICAgICAgb2JzZXJ2ZXIub2JzZXJ2ZShpdGVtRWwpO1xuICAgICAgfVxuICAgIH1cbiAgICBvbkNsZWFudXAoKCkgPT4gb2JzZXJ2ZXIuZGlzY29ubmVjdCgpKTtcbiAgfSk7XG59XG5mdW5jdGlvbiBjcmVhdGVEb21Db2xsZWN0aW9uKHByb3BzID0ge30pIHtcbiAgY29uc3QgW2l0ZW1zLCBzZXRJdGVtc10gPSBjcmVhdGVDb250cm9sbGFibGVBcnJheVNpZ25hbCh7XG4gICAgdmFsdWU6ICgpID0+IGFjY2Vzcyhwcm9wcy5pdGVtcyksXG4gICAgb25DaGFuZ2U6ICh2YWx1ZSkgPT4gcHJvcHMub25JdGVtc0NoYW5nZT8uKHZhbHVlKVxuICB9KTtcbiAgY3JlYXRlU29ydEJhc2VkT25ET01Qb3NpdGlvbihpdGVtcywgc2V0SXRlbXMpO1xuICBjb25zdCByZWdpc3Rlckl0ZW0gPSAoaXRlbSkgPT4ge1xuICAgIHNldEl0ZW1zKChwcmV2SXRlbXMpID0+IHtcbiAgICAgIGNvbnN0IGluZGV4ID0gZmluZERPTUluZGV4KHByZXZJdGVtcywgaXRlbSk7XG4gICAgICByZXR1cm4gYWRkSXRlbVRvQXJyYXkocHJldkl0ZW1zLCBpdGVtLCBpbmRleCk7XG4gICAgfSk7XG4gICAgcmV0dXJuICgpID0+IHtcbiAgICAgIHNldEl0ZW1zKChwcmV2SXRlbXMpID0+IHtcbiAgICAgICAgY29uc3QgbmV4dEl0ZW1zID0gcHJldkl0ZW1zLmZpbHRlcihcbiAgICAgICAgICAocHJldkl0ZW0pID0+IHByZXZJdGVtLnJlZigpICE9PSBpdGVtLnJlZigpXG4gICAgICAgICk7XG4gICAgICAgIGlmIChwcmV2SXRlbXMubGVuZ3RoID09PSBuZXh0SXRlbXMubGVuZ3RoKSB7XG4gICAgICAgICAgcmV0dXJuIHByZXZJdGVtcztcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gbmV4dEl0ZW1zO1xuICAgICAgfSk7XG4gICAgfTtcbiAgfTtcbiAgY29uc3QgRG9tQ29sbGVjdGlvblByb3ZpZGVyID0gKHByb3BzMikgPT4ge1xuICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoRG9tQ29sbGVjdGlvbkNvbnRleHQuUHJvdmlkZXIsIHtcbiAgICAgIHZhbHVlOiB7IHJlZ2lzdGVySXRlbSB9LFxuICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICByZXR1cm4gcHJvcHMyLmNoaWxkcmVuO1xuICAgICAgfVxuICAgIH0pO1xuICB9O1xuICByZXR1cm4geyBEb21Db2xsZWN0aW9uUHJvdmlkZXIgfTtcbn1cbmZ1bmN0aW9uIGNyZWF0ZURvbUNvbGxlY3Rpb25JdGVtKHByb3BzKSB7XG4gIGNvbnN0IGNvbnRleHQgPSB1c2VEb21Db2xsZWN0aW9uQ29udGV4dCgpO1xuICBjb25zdCBtZXJnZWRQcm9wcyA9IG1lcmdlRGVmYXVsdFByb3BzKHsgc2hvdWxkUmVnaXN0ZXJJdGVtOiB0cnVlIH0sIHByb3BzKTtcbiAgY3JlYXRlRWZmZWN0KCgpID0+IHtcbiAgICBpZiAoIW1lcmdlZFByb3BzLnNob3VsZFJlZ2lzdGVySXRlbSkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBjb25zdCB1bnJlZ2lzdGVyID0gY29udGV4dC5yZWdpc3Rlckl0ZW0obWVyZ2VkUHJvcHMuZ2V0SXRlbSgpKTtcbiAgICBvbkNsZWFudXAodW5yZWdpc3Rlcik7XG4gIH0pO1xufVxuXG4vLyAuLi8uLi9ub2RlX21vZHVsZXMvLnBucG0vQGtvYmFsdGUrY29yZUAwLjEzLjFfc29saWQtanNAMS44LjE3L25vZGVfbW9kdWxlcy9Aa29iYWx0ZS9jb3JlL2Rpc3QvY2h1bmsvM05HQTQ2UUUuanNcbmZ1bmN0aW9uIGJ1aWxkTm9kZXMocGFyYW1zKSB7XG4gIGxldCBpbmRleCA9IHBhcmFtcy5zdGFydEluZGV4ID8/IDA7XG4gIGNvbnN0IGxldmVsID0gcGFyYW1zLnN0YXJ0TGV2ZWwgPz8gMDtcbiAgY29uc3Qgbm9kZXMgPSBbXTtcbiAgY29uc3QgZ2V0S2V5ID0gKGRhdGEpID0+IHtcbiAgICBpZiAoZGF0YSA9PSBudWxsKSB7XG4gICAgICByZXR1cm4gXCJcIjtcbiAgICB9XG4gICAgY29uc3QgX2dldEtleSA9IHBhcmFtcy5nZXRLZXkgPz8gXCJrZXlcIjtcbiAgICBjb25zdCBkYXRhS2V5ID0gaXNTdHJpbmcoX2dldEtleSkgPyBkYXRhW19nZXRLZXldIDogX2dldEtleShkYXRhKTtcbiAgICByZXR1cm4gZGF0YUtleSAhPSBudWxsID8gU3RyaW5nKGRhdGFLZXkpIDogXCJcIjtcbiAgfTtcbiAgY29uc3QgZ2V0VGV4dFZhbHVlID0gKGRhdGEpID0+IHtcbiAgICBpZiAoZGF0YSA9PSBudWxsKSB7XG4gICAgICByZXR1cm4gXCJcIjtcbiAgICB9XG4gICAgY29uc3QgX2dldFRleHRWYWx1ZSA9IHBhcmFtcy5nZXRUZXh0VmFsdWUgPz8gXCJ0ZXh0VmFsdWVcIjtcbiAgICBjb25zdCBkYXRhVGV4dFZhbHVlID0gaXNTdHJpbmcoX2dldFRleHRWYWx1ZSkgPyBkYXRhW19nZXRUZXh0VmFsdWVdIDogX2dldFRleHRWYWx1ZShkYXRhKTtcbiAgICByZXR1cm4gZGF0YVRleHRWYWx1ZSAhPSBudWxsID8gU3RyaW5nKGRhdGFUZXh0VmFsdWUpIDogXCJcIjtcbiAgfTtcbiAgY29uc3QgZ2V0RGlzYWJsZWQgPSAoZGF0YSkgPT4ge1xuICAgIGlmIChkYXRhID09IG51bGwpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgY29uc3QgX2dldERpc2FibGVkID0gcGFyYW1zLmdldERpc2FibGVkID8/IFwiZGlzYWJsZWRcIjtcbiAgICByZXR1cm4gKGlzU3RyaW5nKF9nZXREaXNhYmxlZCkgPyBkYXRhW19nZXREaXNhYmxlZF0gOiBfZ2V0RGlzYWJsZWQoZGF0YSkpID8/IGZhbHNlO1xuICB9O1xuICBjb25zdCBnZXRTZWN0aW9uQ2hpbGRyZW4gPSAoZGF0YSkgPT4ge1xuICAgIGlmIChkYXRhID09IG51bGwpIHtcbiAgICAgIHJldHVybiB2b2lkIDA7XG4gICAgfVxuICAgIGlmIChpc1N0cmluZyhwYXJhbXMuZ2V0U2VjdGlvbkNoaWxkcmVuKSkge1xuICAgICAgcmV0dXJuIGRhdGFbcGFyYW1zLmdldFNlY3Rpb25DaGlsZHJlbl07XG4gICAgfVxuICAgIHJldHVybiBwYXJhbXMuZ2V0U2VjdGlvbkNoaWxkcmVuPy4oZGF0YSk7XG4gIH07XG4gIGZvciAoY29uc3QgZGF0YSBvZiBwYXJhbXMuZGF0YVNvdXJjZSkge1xuICAgIGlmIChpc1N0cmluZyhkYXRhKSB8fCBpc051bWJlcihkYXRhKSkge1xuICAgICAgbm9kZXMucHVzaCh7XG4gICAgICAgIHR5cGU6IFwiaXRlbVwiLFxuICAgICAgICByYXdWYWx1ZTogZGF0YSxcbiAgICAgICAga2V5OiBTdHJpbmcoZGF0YSksXG4gICAgICAgIHRleHRWYWx1ZTogU3RyaW5nKGRhdGEpLFxuICAgICAgICBkaXNhYmxlZDogZ2V0RGlzYWJsZWQoZGF0YSksXG4gICAgICAgIGxldmVsLFxuICAgICAgICBpbmRleFxuICAgICAgfSk7XG4gICAgICBpbmRleCsrO1xuICAgICAgY29udGludWU7XG4gICAgfVxuICAgIGlmIChnZXRTZWN0aW9uQ2hpbGRyZW4oZGF0YSkgIT0gbnVsbCkge1xuICAgICAgbm9kZXMucHVzaCh7XG4gICAgICAgIHR5cGU6IFwic2VjdGlvblwiLFxuICAgICAgICByYXdWYWx1ZTogZGF0YSxcbiAgICAgICAga2V5OiBcIlwiLFxuICAgICAgICAvLyBub3QgYXBwbGljYWJsZSBoZXJlXG4gICAgICAgIHRleHRWYWx1ZTogXCJcIixcbiAgICAgICAgLy8gbm90IGFwcGxpY2FibGUgaGVyZVxuICAgICAgICBkaXNhYmxlZDogZmFsc2UsXG4gICAgICAgIC8vIG5vdCBhcHBsaWNhYmxlIGhlcmVcbiAgICAgICAgbGV2ZWwsXG4gICAgICAgIGluZGV4XG4gICAgICB9KTtcbiAgICAgIGluZGV4Kys7XG4gICAgICBjb25zdCBzZWN0aW9uQ2hpbGRyZW4gPSBnZXRTZWN0aW9uQ2hpbGRyZW4oZGF0YSkgPz8gW107XG4gICAgICBpZiAoc2VjdGlvbkNoaWxkcmVuLmxlbmd0aCA+IDApIHtcbiAgICAgICAgY29uc3QgY2hpbGROb2RlcyA9IGJ1aWxkTm9kZXMoe1xuICAgICAgICAgIGRhdGFTb3VyY2U6IHNlY3Rpb25DaGlsZHJlbixcbiAgICAgICAgICBnZXRLZXk6IHBhcmFtcy5nZXRLZXksXG4gICAgICAgICAgZ2V0VGV4dFZhbHVlOiBwYXJhbXMuZ2V0VGV4dFZhbHVlLFxuICAgICAgICAgIGdldERpc2FibGVkOiBwYXJhbXMuZ2V0RGlzYWJsZWQsXG4gICAgICAgICAgZ2V0U2VjdGlvbkNoaWxkcmVuOiBwYXJhbXMuZ2V0U2VjdGlvbkNoaWxkcmVuLFxuICAgICAgICAgIHN0YXJ0SW5kZXg6IGluZGV4LFxuICAgICAgICAgIHN0YXJ0TGV2ZWw6IGxldmVsICsgMVxuICAgICAgICB9KTtcbiAgICAgICAgbm9kZXMucHVzaCguLi5jaGlsZE5vZGVzKTtcbiAgICAgICAgaW5kZXggKz0gY2hpbGROb2Rlcy5sZW5ndGg7XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIG5vZGVzLnB1c2goe1xuICAgICAgICB0eXBlOiBcIml0ZW1cIixcbiAgICAgICAgcmF3VmFsdWU6IGRhdGEsXG4gICAgICAgIGtleTogZ2V0S2V5KGRhdGEpLFxuICAgICAgICB0ZXh0VmFsdWU6IGdldFRleHRWYWx1ZShkYXRhKSxcbiAgICAgICAgZGlzYWJsZWQ6IGdldERpc2FibGVkKGRhdGEpLFxuICAgICAgICBsZXZlbCxcbiAgICAgICAgaW5kZXhcbiAgICAgIH0pO1xuICAgICAgaW5kZXgrKztcbiAgICB9XG4gIH1cbiAgcmV0dXJuIG5vZGVzO1xufVxuZnVuY3Rpb24gY3JlYXRlQ29sbGVjdGlvbihwcm9wcywgZGVwcyA9IFtdKSB7XG4gIHJldHVybiBjcmVhdGVNZW1vKCgpID0+IHtcbiAgICBjb25zdCBub2RlcyA9IGJ1aWxkTm9kZXMoe1xuICAgICAgZGF0YVNvdXJjZTogYWNjZXNzKHByb3BzLmRhdGFTb3VyY2UpLFxuICAgICAgZ2V0S2V5OiBhY2Nlc3MocHJvcHMuZ2V0S2V5KSxcbiAgICAgIGdldFRleHRWYWx1ZTogYWNjZXNzKHByb3BzLmdldFRleHRWYWx1ZSksXG4gICAgICBnZXREaXNhYmxlZDogYWNjZXNzKHByb3BzLmdldERpc2FibGVkKSxcbiAgICAgIGdldFNlY3Rpb25DaGlsZHJlbjogYWNjZXNzKHByb3BzLmdldFNlY3Rpb25DaGlsZHJlbilcbiAgICB9KTtcbiAgICBmb3IgKGxldCBpMiA9IDA7IGkyIDwgZGVwcy5sZW5ndGg7IGkyKyspXG4gICAgICBkZXBzW2kyXSgpO1xuICAgIHJldHVybiBwcm9wcy5mYWN0b3J5KG5vZGVzKTtcbiAgfSk7XG59XG5cbi8vIC4uLy4uL25vZGVfbW9kdWxlcy8ucG5wbS9Aa29iYWx0ZStjb3JlQDAuMTMuMV9zb2xpZC1qc0AxLjguMTcvbm9kZV9tb2R1bGVzL0Brb2JhbHRlL2NvcmUvZGlzdC9jaHVuay9YSEpQUUVaUC5qc1xudmFyIFJUTF9TQ1JJUFRTID0gLyogQF9fUFVSRV9fICovIG5ldyBTZXQoW1xuICBcIkF2c3RcIixcbiAgXCJBcmFiXCIsXG4gIFwiQXJtaVwiLFxuICBcIlN5cmNcIixcbiAgXCJTYW1yXCIsXG4gIFwiTWFuZFwiLFxuICBcIlRoYWFcIixcbiAgXCJNZW5kXCIsXG4gIFwiTmtvb1wiLFxuICBcIkFkbG1cIixcbiAgXCJSb2hnXCIsXG4gIFwiSGViclwiXG5dKTtcbnZhciBSVExfTEFOR1MgPSAvKiBAX19QVVJFX18gKi8gbmV3IFNldChbXG4gIFwiYWVcIixcbiAgXCJhclwiLFxuICBcImFyY1wiLFxuICBcImJjY1wiLFxuICBcImJxaVwiLFxuICBcImNrYlwiLFxuICBcImR2XCIsXG4gIFwiZmFcIixcbiAgXCJnbGtcIixcbiAgXCJoZVwiLFxuICBcImt1XCIsXG4gIFwibXpuXCIsXG4gIFwibnFvXCIsXG4gIFwicG5iXCIsXG4gIFwicHNcIixcbiAgXCJzZFwiLFxuICBcInVnXCIsXG4gIFwidXJcIixcbiAgXCJ5aVwiXG5dKTtcbmZ1bmN0aW9uIGlzUlRMKGxvY2FsZSkge1xuICBpZiAoSW50bC5Mb2NhbGUpIHtcbiAgICBjb25zdCBzY3JpcHQgPSBuZXcgSW50bC5Mb2NhbGUobG9jYWxlKS5tYXhpbWl6ZSgpLnNjcmlwdCA/PyBcIlwiO1xuICAgIHJldHVybiBSVExfU0NSSVBUUy5oYXMoc2NyaXB0KTtcbiAgfVxuICBjb25zdCBsYW5nID0gbG9jYWxlLnNwbGl0KFwiLVwiKVswXTtcbiAgcmV0dXJuIFJUTF9MQU5HUy5oYXMobGFuZyk7XG59XG5mdW5jdGlvbiBnZXRSZWFkaW5nRGlyZWN0aW9uKGxvY2FsZSkge1xuICByZXR1cm4gaXNSVEwobG9jYWxlKSA/IFwicnRsXCIgOiBcImx0clwiO1xufVxuZnVuY3Rpb24gZ2V0RGVmYXVsdExvY2FsZSgpIHtcbiAgbGV0IGxvY2FsZSA9IHR5cGVvZiBuYXZpZ2F0b3IgIT09IFwidW5kZWZpbmVkXCIgJiYgLy8gQHRzLWlnbm9yZVxuICAobmF2aWdhdG9yLmxhbmd1YWdlIHx8IG5hdmlnYXRvci51c2VyTGFuZ3VhZ2UpIHx8IFwiZW4tVVNcIjtcbiAgcmV0dXJuIHtcbiAgICBsb2NhbGUsXG4gICAgZGlyZWN0aW9uOiBnZXRSZWFkaW5nRGlyZWN0aW9uKGxvY2FsZSlcbiAgfTtcbn1cbnZhciBjdXJyZW50TG9jYWxlID0gZ2V0RGVmYXVsdExvY2FsZSgpO1xudmFyIGxpc3RlbmVycyA9IC8qIEBfX1BVUkVfXyAqLyBuZXcgU2V0KCk7XG5mdW5jdGlvbiB1cGRhdGVMb2NhbGUoKSB7XG4gIGN1cnJlbnRMb2NhbGUgPSBnZXREZWZhdWx0TG9jYWxlKCk7XG4gIGZvciAoY29uc3QgbGlzdGVuZXIgb2YgbGlzdGVuZXJzKSB7XG4gICAgbGlzdGVuZXIoY3VycmVudExvY2FsZSk7XG4gIH1cbn1cbmZ1bmN0aW9uIGNyZWF0ZURlZmF1bHRMb2NhbGUoKSB7XG4gIGNvbnN0IGRlZmF1bHRTU1JMb2NhbGUgPSB7XG4gICAgbG9jYWxlOiBcImVuLVVTXCIsXG4gICAgZGlyZWN0aW9uOiBcImx0clwiXG4gIH07XG4gIGNvbnN0IFtkZWZhdWx0Q2xpZW50TG9jYWxlLCBzZXREZWZhdWx0Q2xpZW50TG9jYWxlXSA9IGNyZWF0ZVNpZ25hbChjdXJyZW50TG9jYWxlKTtcbiAgY29uc3QgZGVmYXVsdExvY2FsZSA9IGNyZWF0ZU1lbW8oXG4gICAgKCkgPT4gaXNTZXJ2ZXIgPyBkZWZhdWx0U1NSTG9jYWxlIDogZGVmYXVsdENsaWVudExvY2FsZSgpXG4gICk7XG4gIG9uTW91bnQoKCkgPT4ge1xuICAgIGlmIChsaXN0ZW5lcnMuc2l6ZSA9PT0gMCkge1xuICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJsYW5ndWFnZWNoYW5nZVwiLCB1cGRhdGVMb2NhbGUpO1xuICAgIH1cbiAgICBsaXN0ZW5lcnMuYWRkKHNldERlZmF1bHRDbGllbnRMb2NhbGUpO1xuICAgIG9uQ2xlYW51cCgoKSA9PiB7XG4gICAgICBsaXN0ZW5lcnMuZGVsZXRlKHNldERlZmF1bHRDbGllbnRMb2NhbGUpO1xuICAgICAgaWYgKGxpc3RlbmVycy5zaXplID09PSAwKSB7XG4gICAgICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKFwibGFuZ3VhZ2VjaGFuZ2VcIiwgdXBkYXRlTG9jYWxlKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfSk7XG4gIHJldHVybiB7XG4gICAgbG9jYWxlOiAoKSA9PiBkZWZhdWx0TG9jYWxlKCkubG9jYWxlLFxuICAgIGRpcmVjdGlvbjogKCkgPT4gZGVmYXVsdExvY2FsZSgpLmRpcmVjdGlvblxuICB9O1xufVxudmFyIEkxOG5Db250ZXh0ID0gY3JlYXRlQ29udGV4dCgpO1xuZnVuY3Rpb24gdXNlTG9jYWxlKCkge1xuICBjb25zdCBkZWZhdWx0TG9jYWxlID0gY3JlYXRlRGVmYXVsdExvY2FsZSgpO1xuICBjb25zdCBjb250ZXh0ID0gdXNlQ29udGV4dChJMThuQ29udGV4dCk7XG4gIHJldHVybiBjb250ZXh0IHx8IGRlZmF1bHRMb2NhbGU7XG59XG52YXIgY2FjaGUgPSAvKiBAX19QVVJFX18gKi8gbmV3IE1hcCgpO1xuZnVuY3Rpb24gY3JlYXRlQ29sbGF0b3Iob3B0aW9ucykge1xuICBjb25zdCB7IGxvY2FsZSB9ID0gdXNlTG9jYWxlKCk7XG4gIGNvbnN0IGNhY2hlS2V5ID0gY3JlYXRlTWVtbygoKSA9PiB7XG4gICAgcmV0dXJuIGxvY2FsZSgpICsgKG9wdGlvbnMgPyBPYmplY3QuZW50cmllcyhvcHRpb25zKS5zb3J0KChhMiwgYjIpID0+IGEyWzBdIDwgYjJbMF0gPyAtMSA6IDEpLmpvaW4oKSA6IFwiXCIpO1xuICB9KTtcbiAgcmV0dXJuIGNyZWF0ZU1lbW8oKCkgPT4ge1xuICAgIGNvbnN0IGtleSA9IGNhY2hlS2V5KCk7XG4gICAgbGV0IGNvbGxhdG9yO1xuICAgIGlmIChjYWNoZS5oYXMoa2V5KSkge1xuICAgICAgY29sbGF0b3IgPSBjYWNoZS5nZXQoa2V5KTtcbiAgICB9XG4gICAgaWYgKCFjb2xsYXRvcikge1xuICAgICAgY29sbGF0b3IgPSBuZXcgSW50bC5Db2xsYXRvcihsb2NhbGUoKSwgb3B0aW9ucyk7XG4gICAgICBjYWNoZS5zZXQoa2V5LCBjb2xsYXRvcik7XG4gICAgfVxuICAgIHJldHVybiBjb2xsYXRvcjtcbiAgfSk7XG59XG5cbi8vIC4uLy4uL25vZGVfbW9kdWxlcy8ucG5wbS9Aa29iYWx0ZStjb3JlQDAuMTMuMV9zb2xpZC1qc0AxLjguMTcvbm9kZV9tb2R1bGVzL0Brb2JhbHRlL2NvcmUvZGlzdC9jaHVuay9GMllVSFlZNC5qc1xudmFyIFNlbGVjdGlvbiA9IGNsYXNzIF9TZWxlY3Rpb24gZXh0ZW5kcyBTZXQge1xuICBhbmNob3JLZXk7XG4gIGN1cnJlbnRLZXk7XG4gIGNvbnN0cnVjdG9yKGtleXMyLCBhbmNob3JLZXksIGN1cnJlbnRLZXkpIHtcbiAgICBzdXBlcihrZXlzMik7XG4gICAgaWYgKGtleXMyIGluc3RhbmNlb2YgX1NlbGVjdGlvbikge1xuICAgICAgdGhpcy5hbmNob3JLZXkgPSBhbmNob3JLZXkgfHwga2V5czIuYW5jaG9yS2V5O1xuICAgICAgdGhpcy5jdXJyZW50S2V5ID0gY3VycmVudEtleSB8fCBrZXlzMi5jdXJyZW50S2V5O1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLmFuY2hvcktleSA9IGFuY2hvcktleTtcbiAgICAgIHRoaXMuY3VycmVudEtleSA9IGN1cnJlbnRLZXk7XG4gICAgfVxuICB9XG59O1xuZnVuY3Rpb24gY3JlYXRlQ29udHJvbGxhYmxlU2VsZWN0aW9uU2lnbmFsKHByb3BzKSB7XG4gIGNvbnN0IFtfdmFsdWUsIHNldFZhbHVlXSA9IGNyZWF0ZUNvbnRyb2xsYWJsZVNpZ25hbChwcm9wcyk7XG4gIGNvbnN0IHZhbHVlID0gKCkgPT4gX3ZhbHVlKCkgPz8gbmV3IFNlbGVjdGlvbigpO1xuICByZXR1cm4gW3ZhbHVlLCBzZXRWYWx1ZV07XG59XG5mdW5jdGlvbiBpc05vbkNvbnRpZ3VvdXNTZWxlY3Rpb25Nb2RpZmllcihlMikge1xuICByZXR1cm4gaXNBcHBsZURldmljZSgpID8gZTIuYWx0S2V5IDogZTIuY3RybEtleTtcbn1cbmZ1bmN0aW9uIGlzQ3RybEtleVByZXNzZWQoZTIpIHtcbiAgaWYgKGlzTWFjKCkpIHtcbiAgICByZXR1cm4gZTIubWV0YUtleTtcbiAgfVxuICByZXR1cm4gZTIuY3RybEtleTtcbn1cbmZ1bmN0aW9uIGNvbnZlcnRTZWxlY3Rpb24oc2VsZWN0aW9uKSB7XG4gIHJldHVybiBuZXcgU2VsZWN0aW9uKHNlbGVjdGlvbik7XG59XG5mdW5jdGlvbiBpc1NhbWVTZWxlY3Rpb24oc2V0QSwgc2V0Qikge1xuICBpZiAoc2V0QS5zaXplICE9PSBzZXRCLnNpemUpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbiAgZm9yIChjb25zdCBpdGVtIG9mIHNldEEpIHtcbiAgICBpZiAoIXNldEIuaGFzKGl0ZW0pKSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICB9XG4gIHJldHVybiB0cnVlO1xufVxuZnVuY3Rpb24gY3JlYXRlTXVsdGlwbGVTZWxlY3Rpb25TdGF0ZShwcm9wcykge1xuICBjb25zdCBtZXJnZWRQcm9wcyA9IG1lcmdlRGVmYXVsdFByb3BzKFxuICAgIHtcbiAgICAgIHNlbGVjdGlvbk1vZGU6IFwibm9uZVwiLFxuICAgICAgc2VsZWN0aW9uQmVoYXZpb3I6IFwidG9nZ2xlXCJcbiAgICB9LFxuICAgIHByb3BzXG4gICk7XG4gIGNvbnN0IFtpc0ZvY3VzZWQsIHNldEZvY3VzZWRdID0gY3JlYXRlU2lnbmFsKGZhbHNlKTtcbiAgY29uc3QgW2ZvY3VzZWRLZXksIHNldEZvY3VzZWRLZXldID0gY3JlYXRlU2lnbmFsKCk7XG4gIGNvbnN0IHNlbGVjdGVkS2V5c1Byb3AgPSBjcmVhdGVNZW1vKCgpID0+IHtcbiAgICBjb25zdCBzZWxlY3Rpb24gPSBhY2Nlc3MobWVyZ2VkUHJvcHMuc2VsZWN0ZWRLZXlzKTtcbiAgICBpZiAoc2VsZWN0aW9uICE9IG51bGwpIHtcbiAgICAgIHJldHVybiBjb252ZXJ0U2VsZWN0aW9uKHNlbGVjdGlvbik7XG4gICAgfVxuICAgIHJldHVybiBzZWxlY3Rpb247XG4gIH0pO1xuICBjb25zdCBkZWZhdWx0U2VsZWN0ZWRLZXlzID0gY3JlYXRlTWVtbygoKSA9PiB7XG4gICAgY29uc3QgZGVmYXVsdFNlbGVjdGlvbiA9IGFjY2VzcyhtZXJnZWRQcm9wcy5kZWZhdWx0U2VsZWN0ZWRLZXlzKTtcbiAgICBpZiAoZGVmYXVsdFNlbGVjdGlvbiAhPSBudWxsKSB7XG4gICAgICByZXR1cm4gY29udmVydFNlbGVjdGlvbihkZWZhdWx0U2VsZWN0aW9uKTtcbiAgICB9XG4gICAgcmV0dXJuIG5ldyBTZWxlY3Rpb24oKTtcbiAgfSk7XG4gIGNvbnN0IFtzZWxlY3RlZEtleXMsIF9zZXRTZWxlY3RlZEtleXNdID0gY3JlYXRlQ29udHJvbGxhYmxlU2VsZWN0aW9uU2lnbmFsKHtcbiAgICB2YWx1ZTogc2VsZWN0ZWRLZXlzUHJvcCxcbiAgICBkZWZhdWx0VmFsdWU6IGRlZmF1bHRTZWxlY3RlZEtleXMsXG4gICAgb25DaGFuZ2U6ICh2YWx1ZSkgPT4gbWVyZ2VkUHJvcHMub25TZWxlY3Rpb25DaGFuZ2U/Lih2YWx1ZSlcbiAgfSk7XG4gIGNvbnN0IFtzZWxlY3Rpb25CZWhhdmlvciwgc2V0U2VsZWN0aW9uQmVoYXZpb3JdID0gY3JlYXRlU2lnbmFsKGFjY2VzcyhtZXJnZWRQcm9wcy5zZWxlY3Rpb25CZWhhdmlvcikpO1xuICBjb25zdCBzZWxlY3Rpb25Nb2RlID0gKCkgPT4gYWNjZXNzKG1lcmdlZFByb3BzLnNlbGVjdGlvbk1vZGUpO1xuICBjb25zdCBkaXNhbGxvd0VtcHR5U2VsZWN0aW9uID0gKCkgPT4gYWNjZXNzKG1lcmdlZFByb3BzLmRpc2FsbG93RW1wdHlTZWxlY3Rpb24pID8/IGZhbHNlO1xuICBjb25zdCBzZXRTZWxlY3RlZEtleXMgPSAoa2V5czIpID0+IHtcbiAgICBpZiAoYWNjZXNzKG1lcmdlZFByb3BzLmFsbG93RHVwbGljYXRlU2VsZWN0aW9uRXZlbnRzKSB8fCAhaXNTYW1lU2VsZWN0aW9uKGtleXMyLCBzZWxlY3RlZEtleXMoKSkpIHtcbiAgICAgIF9zZXRTZWxlY3RlZEtleXMoa2V5czIpO1xuICAgIH1cbiAgfTtcbiAgY3JlYXRlRWZmZWN0KCgpID0+IHtcbiAgICBjb25zdCBzZWxlY3Rpb24gPSBzZWxlY3RlZEtleXMoKTtcbiAgICBpZiAoYWNjZXNzKG1lcmdlZFByb3BzLnNlbGVjdGlvbkJlaGF2aW9yKSA9PT0gXCJyZXBsYWNlXCIgJiYgc2VsZWN0aW9uQmVoYXZpb3IoKSA9PT0gXCJ0b2dnbGVcIiAmJiB0eXBlb2Ygc2VsZWN0aW9uID09PSBcIm9iamVjdFwiICYmIHNlbGVjdGlvbi5zaXplID09PSAwKSB7XG4gICAgICBzZXRTZWxlY3Rpb25CZWhhdmlvcihcInJlcGxhY2VcIik7XG4gICAgfVxuICB9KTtcbiAgY3JlYXRlRWZmZWN0KCgpID0+IHtcbiAgICBzZXRTZWxlY3Rpb25CZWhhdmlvcihhY2Nlc3MobWVyZ2VkUHJvcHMuc2VsZWN0aW9uQmVoYXZpb3IpID8/IFwidG9nZ2xlXCIpO1xuICB9KTtcbiAgcmV0dXJuIHtcbiAgICBzZWxlY3Rpb25Nb2RlLFxuICAgIGRpc2FsbG93RW1wdHlTZWxlY3Rpb24sXG4gICAgc2VsZWN0aW9uQmVoYXZpb3IsXG4gICAgc2V0U2VsZWN0aW9uQmVoYXZpb3IsXG4gICAgaXNGb2N1c2VkLFxuICAgIHNldEZvY3VzZWQsXG4gICAgZm9jdXNlZEtleSxcbiAgICBzZXRGb2N1c2VkS2V5LFxuICAgIHNlbGVjdGVkS2V5cyxcbiAgICBzZXRTZWxlY3RlZEtleXNcbiAgfTtcbn1cbmZ1bmN0aW9uIGNyZWF0ZVR5cGVTZWxlY3QocHJvcHMpIHtcbiAgY29uc3QgW3NlYXJjaCwgc2V0U2VhcmNoXSA9IGNyZWF0ZVNpZ25hbChcIlwiKTtcbiAgY29uc3QgW3RpbWVvdXRJZCwgc2V0VGltZW91dElkXSA9IGNyZWF0ZVNpZ25hbCgtMSk7XG4gIGNvbnN0IG9uS2V5RG93biA9IChlMikgPT4ge1xuICAgIGlmIChhY2Nlc3MocHJvcHMuaXNEaXNhYmxlZCkpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgY29uc3QgZGVsZWdhdGUgPSBhY2Nlc3MocHJvcHMua2V5Ym9hcmREZWxlZ2F0ZSk7XG4gICAgY29uc3QgbWFuYWdlciA9IGFjY2Vzcyhwcm9wcy5zZWxlY3Rpb25NYW5hZ2VyKTtcbiAgICBpZiAoIWRlbGVnYXRlLmdldEtleUZvclNlYXJjaCkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBjb25zdCBjaGFyYWN0ZXIgPSBnZXRTdHJpbmdGb3JLZXkoZTIua2V5KTtcbiAgICBpZiAoIWNoYXJhY3RlciB8fCBlMi5jdHJsS2V5IHx8IGUyLm1ldGFLZXkpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgaWYgKGNoYXJhY3RlciA9PT0gXCIgXCIgJiYgc2VhcmNoKCkudHJpbSgpLmxlbmd0aCA+IDApIHtcbiAgICAgIGUyLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICBlMi5zdG9wUHJvcGFnYXRpb24oKTtcbiAgICB9XG4gICAgbGV0IG5ld1NlYXJjaCA9IHNldFNlYXJjaCgocHJldikgPT4gcHJldiArIGNoYXJhY3Rlcik7XG4gICAgbGV0IGtleSA9IGRlbGVnYXRlLmdldEtleUZvclNlYXJjaChuZXdTZWFyY2gsIG1hbmFnZXIuZm9jdXNlZEtleSgpKSA/PyBkZWxlZ2F0ZS5nZXRLZXlGb3JTZWFyY2gobmV3U2VhcmNoKTtcbiAgICBpZiAoa2V5ID09IG51bGwgJiYgaXNBbGxTYW1lTGV0dGVyKG5ld1NlYXJjaCkpIHtcbiAgICAgIG5ld1NlYXJjaCA9IG5ld1NlYXJjaFswXTtcbiAgICAgIGtleSA9IGRlbGVnYXRlLmdldEtleUZvclNlYXJjaChuZXdTZWFyY2gsIG1hbmFnZXIuZm9jdXNlZEtleSgpKSA/PyBkZWxlZ2F0ZS5nZXRLZXlGb3JTZWFyY2gobmV3U2VhcmNoKTtcbiAgICB9XG4gICAgaWYgKGtleSAhPSBudWxsKSB7XG4gICAgICBtYW5hZ2VyLnNldEZvY3VzZWRLZXkoa2V5KTtcbiAgICAgIHByb3BzLm9uVHlwZVNlbGVjdD8uKGtleSk7XG4gICAgfVxuICAgIGNsZWFyVGltZW91dCh0aW1lb3V0SWQoKSk7XG4gICAgc2V0VGltZW91dElkKHdpbmRvdy5zZXRUaW1lb3V0KCgpID0+IHNldFNlYXJjaChcIlwiKSwgNTAwKSk7XG4gIH07XG4gIHJldHVybiB7XG4gICAgdHlwZVNlbGVjdEhhbmRsZXJzOiB7XG4gICAgICBvbktleURvd25cbiAgICB9XG4gIH07XG59XG5mdW5jdGlvbiBnZXRTdHJpbmdGb3JLZXkoa2V5KSB7XG4gIGlmIChrZXkubGVuZ3RoID09PSAxIHx8ICEvXltBLVpdL2kudGVzdChrZXkpKSB7XG4gICAgcmV0dXJuIGtleTtcbiAgfVxuICByZXR1cm4gXCJcIjtcbn1cbmZ1bmN0aW9uIGlzQWxsU2FtZUxldHRlcihzZWFyY2gpIHtcbiAgcmV0dXJuIHNlYXJjaC5zcGxpdChcIlwiKS5ldmVyeSgobGV0dGVyKSA9PiBsZXR0ZXIgPT09IHNlYXJjaFswXSk7XG59XG5mdW5jdGlvbiBjcmVhdGVTZWxlY3RhYmxlQ29sbGVjdGlvbihwcm9wcywgcmVmLCBzY3JvbGxSZWYpIHtcbiAgY29uc3QgZGVmYXVsdFByb3BzID0ge1xuICAgIHNlbGVjdE9uRm9jdXM6ICgpID0+IGFjY2Vzcyhwcm9wcy5zZWxlY3Rpb25NYW5hZ2VyKS5zZWxlY3Rpb25CZWhhdmlvcigpID09PSBcInJlcGxhY2VcIlxuICB9O1xuICBjb25zdCBtZXJnZWRQcm9wcyA9IG1lcmdlUHJvcHMoZGVmYXVsdFByb3BzLCBwcm9wcyk7XG4gIGNvbnN0IGZpbmFsU2Nyb2xsUmVmID0gKCkgPT4gc2Nyb2xsUmVmPy4oKSA/PyByZWYoKTtcbiAgY29uc3QgeyBkaXJlY3Rpb24gfSA9IHVzZUxvY2FsZSgpO1xuICBsZXQgc2Nyb2xsUG9zID0geyB0b3A6IDAsIGxlZnQ6IDAgfTtcbiAgY3JlYXRlRXZlbnRMaXN0ZW5lcihcbiAgICAoKSA9PiAhYWNjZXNzKG1lcmdlZFByb3BzLmlzVmlydHVhbGl6ZWQpID8gZmluYWxTY3JvbGxSZWYoKSA6IHZvaWQgMCxcbiAgICBcInNjcm9sbFwiLFxuICAgICgpID0+IHtcbiAgICAgIGNvbnN0IHNjcm9sbEVsID0gZmluYWxTY3JvbGxSZWYoKTtcbiAgICAgIGlmICghc2Nyb2xsRWwpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgICAgc2Nyb2xsUG9zID0ge1xuICAgICAgICB0b3A6IHNjcm9sbEVsLnNjcm9sbFRvcCxcbiAgICAgICAgbGVmdDogc2Nyb2xsRWwuc2Nyb2xsTGVmdFxuICAgICAgfTtcbiAgICB9XG4gICk7XG4gIGNvbnN0IHsgdHlwZVNlbGVjdEhhbmRsZXJzIH0gPSBjcmVhdGVUeXBlU2VsZWN0KHtcbiAgICBpc0Rpc2FibGVkOiAoKSA9PiBhY2Nlc3MobWVyZ2VkUHJvcHMuZGlzYWxsb3dUeXBlQWhlYWQpLFxuICAgIGtleWJvYXJkRGVsZWdhdGU6ICgpID0+IGFjY2VzcyhtZXJnZWRQcm9wcy5rZXlib2FyZERlbGVnYXRlKSxcbiAgICBzZWxlY3Rpb25NYW5hZ2VyOiAoKSA9PiBhY2Nlc3MobWVyZ2VkUHJvcHMuc2VsZWN0aW9uTWFuYWdlcilcbiAgfSk7XG4gIGNvbnN0IG9uS2V5RG93biA9IChlMikgPT4ge1xuICAgIGNhbGxIYW5kbGVyKGUyLCB0eXBlU2VsZWN0SGFuZGxlcnMub25LZXlEb3duKTtcbiAgICBpZiAoZTIuYWx0S2V5ICYmIGUyLmtleSA9PT0gXCJUYWJcIikge1xuICAgICAgZTIucHJldmVudERlZmF1bHQoKTtcbiAgICB9XG4gICAgY29uc3QgcmVmRWwgPSByZWYoKTtcbiAgICBpZiAoIXJlZkVsPy5jb250YWlucyhlMi50YXJnZXQpKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIGNvbnN0IG1hbmFnZXIgPSBhY2Nlc3MobWVyZ2VkUHJvcHMuc2VsZWN0aW9uTWFuYWdlcik7XG4gICAgY29uc3Qgc2VsZWN0T25Gb2N1cyA9IGFjY2VzcyhtZXJnZWRQcm9wcy5zZWxlY3RPbkZvY3VzKTtcbiAgICBjb25zdCBuYXZpZ2F0ZVRvS2V5ID0gKGtleSkgPT4ge1xuICAgICAgaWYgKGtleSAhPSBudWxsKSB7XG4gICAgICAgIG1hbmFnZXIuc2V0Rm9jdXNlZEtleShrZXkpO1xuICAgICAgICBpZiAoZTIuc2hpZnRLZXkgJiYgbWFuYWdlci5zZWxlY3Rpb25Nb2RlKCkgPT09IFwibXVsdGlwbGVcIikge1xuICAgICAgICAgIG1hbmFnZXIuZXh0ZW5kU2VsZWN0aW9uKGtleSk7XG4gICAgICAgIH0gZWxzZSBpZiAoc2VsZWN0T25Gb2N1cyAmJiAhaXNOb25Db250aWd1b3VzU2VsZWN0aW9uTW9kaWZpZXIoZTIpKSB7XG4gICAgICAgICAgbWFuYWdlci5yZXBsYWNlU2VsZWN0aW9uKGtleSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9O1xuICAgIGNvbnN0IGRlbGVnYXRlID0gYWNjZXNzKG1lcmdlZFByb3BzLmtleWJvYXJkRGVsZWdhdGUpO1xuICAgIGNvbnN0IHNob3VsZEZvY3VzV3JhcCA9IGFjY2VzcyhtZXJnZWRQcm9wcy5zaG91bGRGb2N1c1dyYXApO1xuICAgIGNvbnN0IGZvY3VzZWRLZXkgPSBtYW5hZ2VyLmZvY3VzZWRLZXkoKTtcbiAgICBzd2l0Y2ggKGUyLmtleSkge1xuICAgICAgY2FzZSBcIkFycm93RG93blwiOiB7XG4gICAgICAgIGlmIChkZWxlZ2F0ZS5nZXRLZXlCZWxvdykge1xuICAgICAgICAgIGUyLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgbGV0IG5leHRLZXk7XG4gICAgICAgICAgaWYgKGZvY3VzZWRLZXkgIT0gbnVsbCkge1xuICAgICAgICAgICAgbmV4dEtleSA9IGRlbGVnYXRlLmdldEtleUJlbG93KGZvY3VzZWRLZXkpO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBuZXh0S2V5ID0gZGVsZWdhdGUuZ2V0Rmlyc3RLZXk/LigpO1xuICAgICAgICAgIH1cbiAgICAgICAgICBpZiAobmV4dEtleSA9PSBudWxsICYmIHNob3VsZEZvY3VzV3JhcCkge1xuICAgICAgICAgICAgbmV4dEtleSA9IGRlbGVnYXRlLmdldEZpcnN0S2V5Py4oZm9jdXNlZEtleSk7XG4gICAgICAgICAgfVxuICAgICAgICAgIG5hdmlnYXRlVG9LZXkobmV4dEtleSk7XG4gICAgICAgIH1cbiAgICAgICAgYnJlYWs7XG4gICAgICB9XG4gICAgICBjYXNlIFwiQXJyb3dVcFwiOiB7XG4gICAgICAgIGlmIChkZWxlZ2F0ZS5nZXRLZXlBYm92ZSkge1xuICAgICAgICAgIGUyLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgbGV0IG5leHRLZXk7XG4gICAgICAgICAgaWYgKGZvY3VzZWRLZXkgIT0gbnVsbCkge1xuICAgICAgICAgICAgbmV4dEtleSA9IGRlbGVnYXRlLmdldEtleUFib3ZlKGZvY3VzZWRLZXkpO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBuZXh0S2V5ID0gZGVsZWdhdGUuZ2V0TGFzdEtleT8uKCk7XG4gICAgICAgICAgfVxuICAgICAgICAgIGlmIChuZXh0S2V5ID09IG51bGwgJiYgc2hvdWxkRm9jdXNXcmFwKSB7XG4gICAgICAgICAgICBuZXh0S2V5ID0gZGVsZWdhdGUuZ2V0TGFzdEtleT8uKGZvY3VzZWRLZXkpO1xuICAgICAgICAgIH1cbiAgICAgICAgICBuYXZpZ2F0ZVRvS2V5KG5leHRLZXkpO1xuICAgICAgICB9XG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuICAgICAgY2FzZSBcIkFycm93TGVmdFwiOiB7XG4gICAgICAgIGlmIChkZWxlZ2F0ZS5nZXRLZXlMZWZ0T2YpIHtcbiAgICAgICAgICBlMi5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgIGNvbnN0IGlzUlRMMyA9IGRpcmVjdGlvbigpID09PSBcInJ0bFwiO1xuICAgICAgICAgIGxldCBuZXh0S2V5O1xuICAgICAgICAgIGlmIChmb2N1c2VkS2V5ICE9IG51bGwpIHtcbiAgICAgICAgICAgIG5leHRLZXkgPSBkZWxlZ2F0ZS5nZXRLZXlMZWZ0T2YoZm9jdXNlZEtleSk7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIG5leHRLZXkgPSBpc1JUTDMgPyBkZWxlZ2F0ZS5nZXRGaXJzdEtleT8uKCkgOiBkZWxlZ2F0ZS5nZXRMYXN0S2V5Py4oKTtcbiAgICAgICAgICB9XG4gICAgICAgICAgbmF2aWdhdGVUb0tleShuZXh0S2V5KTtcbiAgICAgICAgfVxuICAgICAgICBicmVhaztcbiAgICAgIH1cbiAgICAgIGNhc2UgXCJBcnJvd1JpZ2h0XCI6IHtcbiAgICAgICAgaWYgKGRlbGVnYXRlLmdldEtleVJpZ2h0T2YpIHtcbiAgICAgICAgICBlMi5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgIGNvbnN0IGlzUlRMMyA9IGRpcmVjdGlvbigpID09PSBcInJ0bFwiO1xuICAgICAgICAgIGxldCBuZXh0S2V5O1xuICAgICAgICAgIGlmIChmb2N1c2VkS2V5ICE9IG51bGwpIHtcbiAgICAgICAgICAgIG5leHRLZXkgPSBkZWxlZ2F0ZS5nZXRLZXlSaWdodE9mKGZvY3VzZWRLZXkpO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBuZXh0S2V5ID0gaXNSVEwzID8gZGVsZWdhdGUuZ2V0TGFzdEtleT8uKCkgOiBkZWxlZ2F0ZS5nZXRGaXJzdEtleT8uKCk7XG4gICAgICAgICAgfVxuICAgICAgICAgIG5hdmlnYXRlVG9LZXkobmV4dEtleSk7XG4gICAgICAgIH1cbiAgICAgICAgYnJlYWs7XG4gICAgICB9XG4gICAgICBjYXNlIFwiSG9tZVwiOlxuICAgICAgICBpZiAoZGVsZWdhdGUuZ2V0Rmlyc3RLZXkpIHtcbiAgICAgICAgICBlMi5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgIGNvbnN0IGZpcnN0S2V5ID0gZGVsZWdhdGUuZ2V0Rmlyc3RLZXkoXG4gICAgICAgICAgICBmb2N1c2VkS2V5LFxuICAgICAgICAgICAgaXNDdHJsS2V5UHJlc3NlZChlMilcbiAgICAgICAgICApO1xuICAgICAgICAgIGlmIChmaXJzdEtleSAhPSBudWxsKSB7XG4gICAgICAgICAgICBtYW5hZ2VyLnNldEZvY3VzZWRLZXkoZmlyc3RLZXkpO1xuICAgICAgICAgICAgaWYgKGlzQ3RybEtleVByZXNzZWQoZTIpICYmIGUyLnNoaWZ0S2V5ICYmIG1hbmFnZXIuc2VsZWN0aW9uTW9kZSgpID09PSBcIm11bHRpcGxlXCIpIHtcbiAgICAgICAgICAgICAgbWFuYWdlci5leHRlbmRTZWxlY3Rpb24oZmlyc3RLZXkpO1xuICAgICAgICAgICAgfSBlbHNlIGlmIChzZWxlY3RPbkZvY3VzKSB7XG4gICAgICAgICAgICAgIG1hbmFnZXIucmVwbGFjZVNlbGVjdGlvbihmaXJzdEtleSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSBcIkVuZFwiOlxuICAgICAgICBpZiAoZGVsZWdhdGUuZ2V0TGFzdEtleSkge1xuICAgICAgICAgIGUyLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgY29uc3QgbGFzdEtleSA9IGRlbGVnYXRlLmdldExhc3RLZXkoZm9jdXNlZEtleSwgaXNDdHJsS2V5UHJlc3NlZChlMikpO1xuICAgICAgICAgIGlmIChsYXN0S2V5ICE9IG51bGwpIHtcbiAgICAgICAgICAgIG1hbmFnZXIuc2V0Rm9jdXNlZEtleShsYXN0S2V5KTtcbiAgICAgICAgICAgIGlmIChpc0N0cmxLZXlQcmVzc2VkKGUyKSAmJiBlMi5zaGlmdEtleSAmJiBtYW5hZ2VyLnNlbGVjdGlvbk1vZGUoKSA9PT0gXCJtdWx0aXBsZVwiKSB7XG4gICAgICAgICAgICAgIG1hbmFnZXIuZXh0ZW5kU2VsZWN0aW9uKGxhc3RLZXkpO1xuICAgICAgICAgICAgfSBlbHNlIGlmIChzZWxlY3RPbkZvY3VzKSB7XG4gICAgICAgICAgICAgIG1hbmFnZXIucmVwbGFjZVNlbGVjdGlvbihsYXN0S2V5KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlIFwiUGFnZURvd25cIjpcbiAgICAgICAgaWYgKGRlbGVnYXRlLmdldEtleVBhZ2VCZWxvdyAmJiBmb2N1c2VkS2V5ICE9IG51bGwpIHtcbiAgICAgICAgICBlMi5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgIGNvbnN0IG5leHRLZXkgPSBkZWxlZ2F0ZS5nZXRLZXlQYWdlQmVsb3coZm9jdXNlZEtleSk7XG4gICAgICAgICAgbmF2aWdhdGVUb0tleShuZXh0S2V5KTtcbiAgICAgICAgfVxuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgXCJQYWdlVXBcIjpcbiAgICAgICAgaWYgKGRlbGVnYXRlLmdldEtleVBhZ2VBYm92ZSAmJiBmb2N1c2VkS2V5ICE9IG51bGwpIHtcbiAgICAgICAgICBlMi5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgIGNvbnN0IG5leHRLZXkgPSBkZWxlZ2F0ZS5nZXRLZXlQYWdlQWJvdmUoZm9jdXNlZEtleSk7XG4gICAgICAgICAgbmF2aWdhdGVUb0tleShuZXh0S2V5KTtcbiAgICAgICAgfVxuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgXCJhXCI6XG4gICAgICAgIGlmIChpc0N0cmxLZXlQcmVzc2VkKGUyKSAmJiBtYW5hZ2VyLnNlbGVjdGlvbk1vZGUoKSA9PT0gXCJtdWx0aXBsZVwiICYmIGFjY2VzcyhtZXJnZWRQcm9wcy5kaXNhbGxvd1NlbGVjdEFsbCkgIT09IHRydWUpIHtcbiAgICAgICAgICBlMi5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgIG1hbmFnZXIuc2VsZWN0QWxsKCk7XG4gICAgICAgIH1cbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlIFwiRXNjYXBlXCI6XG4gICAgICAgIGlmICghZTIuZGVmYXVsdFByZXZlbnRlZCkge1xuICAgICAgICAgIGUyLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgaWYgKCFhY2Nlc3MobWVyZ2VkUHJvcHMuZGlzYWxsb3dFbXB0eVNlbGVjdGlvbikpIHtcbiAgICAgICAgICAgIG1hbmFnZXIuY2xlYXJTZWxlY3Rpb24oKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlIFwiVGFiXCI6IHtcbiAgICAgICAgaWYgKCFhY2Nlc3MobWVyZ2VkUHJvcHMuYWxsb3dzVGFiTmF2aWdhdGlvbikpIHtcbiAgICAgICAgICBpZiAoZTIuc2hpZnRLZXkpIHtcbiAgICAgICAgICAgIHJlZkVsLmZvY3VzKCk7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGNvbnN0IHdhbGtlciA9IGdldEZvY3VzYWJsZVRyZWVXYWxrZXIocmVmRWwsIHsgdGFiYmFibGU6IHRydWUgfSk7XG4gICAgICAgICAgICBsZXQgbmV4dDtcbiAgICAgICAgICAgIGxldCBsYXN0O1xuICAgICAgICAgICAgZG8ge1xuICAgICAgICAgICAgICBsYXN0ID0gd2Fsa2VyLmxhc3RDaGlsZCgpO1xuICAgICAgICAgICAgICBpZiAobGFzdCkge1xuICAgICAgICAgICAgICAgIG5leHQgPSBsYXN0O1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9IHdoaWxlIChsYXN0KTtcbiAgICAgICAgICAgIGlmIChuZXh0ICYmICFuZXh0LmNvbnRhaW5zKGRvY3VtZW50LmFjdGl2ZUVsZW1lbnQpKSB7XG4gICAgICAgICAgICAgIGZvY3VzV2l0aG91dFNjcm9sbGluZyhuZXh0KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH07XG4gIGNvbnN0IG9uRm9jdXNJbiA9IChlMikgPT4ge1xuICAgIGNvbnN0IG1hbmFnZXIgPSBhY2Nlc3MobWVyZ2VkUHJvcHMuc2VsZWN0aW9uTWFuYWdlcik7XG4gICAgY29uc3QgZGVsZWdhdGUgPSBhY2Nlc3MobWVyZ2VkUHJvcHMua2V5Ym9hcmREZWxlZ2F0ZSk7XG4gICAgY29uc3Qgc2VsZWN0T25Gb2N1cyA9IGFjY2VzcyhtZXJnZWRQcm9wcy5zZWxlY3RPbkZvY3VzKTtcbiAgICBpZiAobWFuYWdlci5pc0ZvY3VzZWQoKSkge1xuICAgICAgaWYgKCFlMi5jdXJyZW50VGFyZ2V0LmNvbnRhaW5zKGUyLnRhcmdldCkpIHtcbiAgICAgICAgbWFuYWdlci5zZXRGb2N1c2VkKGZhbHNlKTtcbiAgICAgIH1cbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgaWYgKCFlMi5jdXJyZW50VGFyZ2V0LmNvbnRhaW5zKGUyLnRhcmdldCkpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgbWFuYWdlci5zZXRGb2N1c2VkKHRydWUpO1xuICAgIGlmIChtYW5hZ2VyLmZvY3VzZWRLZXkoKSA9PSBudWxsKSB7XG4gICAgICBjb25zdCBuYXZpZ2F0ZVRvRmlyc3RLZXkgPSAoa2V5KSA9PiB7XG4gICAgICAgIGlmIChrZXkgPT0gbnVsbCkge1xuICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBtYW5hZ2VyLnNldEZvY3VzZWRLZXkoa2V5KTtcbiAgICAgICAgaWYgKHNlbGVjdE9uRm9jdXMpIHtcbiAgICAgICAgICBtYW5hZ2VyLnJlcGxhY2VTZWxlY3Rpb24oa2V5KTtcbiAgICAgICAgfVxuICAgICAgfTtcbiAgICAgIGNvbnN0IHJlbGF0ZWRUYXJnZXQgPSBlMi5yZWxhdGVkVGFyZ2V0O1xuICAgICAgaWYgKHJlbGF0ZWRUYXJnZXQgJiYgZTIuY3VycmVudFRhcmdldC5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbihyZWxhdGVkVGFyZ2V0KSAmIE5vZGUuRE9DVU1FTlRfUE9TSVRJT05fRk9MTE9XSU5HKSB7XG4gICAgICAgIG5hdmlnYXRlVG9GaXJzdEtleShcbiAgICAgICAgICBtYW5hZ2VyLmxhc3RTZWxlY3RlZEtleSgpID8/IGRlbGVnYXRlLmdldExhc3RLZXk/LigpXG4gICAgICAgICk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBuYXZpZ2F0ZVRvRmlyc3RLZXkoXG4gICAgICAgICAgbWFuYWdlci5maXJzdFNlbGVjdGVkS2V5KCkgPz8gZGVsZWdhdGUuZ2V0Rmlyc3RLZXk/LigpXG4gICAgICAgICk7XG4gICAgICB9XG4gICAgfSBlbHNlIGlmICghYWNjZXNzKG1lcmdlZFByb3BzLmlzVmlydHVhbGl6ZWQpKSB7XG4gICAgICBjb25zdCBzY3JvbGxFbCA9IGZpbmFsU2Nyb2xsUmVmKCk7XG4gICAgICBpZiAoc2Nyb2xsRWwpIHtcbiAgICAgICAgc2Nyb2xsRWwuc2Nyb2xsVG9wID0gc2Nyb2xsUG9zLnRvcDtcbiAgICAgICAgc2Nyb2xsRWwuc2Nyb2xsTGVmdCA9IHNjcm9sbFBvcy5sZWZ0O1xuICAgICAgICBjb25zdCBlbGVtZW50ID0gc2Nyb2xsRWwucXVlcnlTZWxlY3RvcihcbiAgICAgICAgICBgW2RhdGEta2V5PVwiJHttYW5hZ2VyLmZvY3VzZWRLZXkoKX1cIl1gXG4gICAgICAgICk7XG4gICAgICAgIGlmIChlbGVtZW50KSB7XG4gICAgICAgICAgZm9jdXNXaXRob3V0U2Nyb2xsaW5nKGVsZW1lbnQpO1xuICAgICAgICAgIHNjcm9sbEludG9WaWV3KHNjcm9sbEVsLCBlbGVtZW50KTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfTtcbiAgY29uc3Qgb25Gb2N1c091dCA9IChlMikgPT4ge1xuICAgIGNvbnN0IG1hbmFnZXIgPSBhY2Nlc3MobWVyZ2VkUHJvcHMuc2VsZWN0aW9uTWFuYWdlcik7XG4gICAgaWYgKCFlMi5jdXJyZW50VGFyZ2V0LmNvbnRhaW5zKGUyLnJlbGF0ZWRUYXJnZXQpKSB7XG4gICAgICBtYW5hZ2VyLnNldEZvY3VzZWQoZmFsc2UpO1xuICAgIH1cbiAgfTtcbiAgY29uc3Qgb25Nb3VzZURvd24gPSAoZTIpID0+IHtcbiAgICBpZiAoZmluYWxTY3JvbGxSZWYoKSA9PT0gZTIudGFyZ2V0KSB7XG4gICAgICBlMi5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIH1cbiAgfTtcbiAgY29uc3QgdHJ5QXV0b0ZvY3VzID0gKCkgPT4ge1xuICAgIGNvbnN0IGF1dG9Gb2N1cyA9IGFjY2VzcyhtZXJnZWRQcm9wcy5hdXRvRm9jdXMpO1xuICAgIGlmICghYXV0b0ZvY3VzKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIGNvbnN0IG1hbmFnZXIgPSBhY2Nlc3MobWVyZ2VkUHJvcHMuc2VsZWN0aW9uTWFuYWdlcik7XG4gICAgY29uc3QgZGVsZWdhdGUgPSBhY2Nlc3MobWVyZ2VkUHJvcHMua2V5Ym9hcmREZWxlZ2F0ZSk7XG4gICAgbGV0IGZvY3VzZWRLZXk7XG4gICAgaWYgKGF1dG9Gb2N1cyA9PT0gXCJmaXJzdFwiKSB7XG4gICAgICBmb2N1c2VkS2V5ID0gZGVsZWdhdGUuZ2V0Rmlyc3RLZXk/LigpO1xuICAgIH1cbiAgICBpZiAoYXV0b0ZvY3VzID09PSBcImxhc3RcIikge1xuICAgICAgZm9jdXNlZEtleSA9IGRlbGVnYXRlLmdldExhc3RLZXk/LigpO1xuICAgIH1cbiAgICBjb25zdCBzZWxlY3RlZEtleXMgPSBtYW5hZ2VyLnNlbGVjdGVkS2V5cygpO1xuICAgIGlmIChzZWxlY3RlZEtleXMuc2l6ZSkge1xuICAgICAgZm9jdXNlZEtleSA9IHNlbGVjdGVkS2V5cy52YWx1ZXMoKS5uZXh0KCkudmFsdWU7XG4gICAgfVxuICAgIG1hbmFnZXIuc2V0Rm9jdXNlZCh0cnVlKTtcbiAgICBtYW5hZ2VyLnNldEZvY3VzZWRLZXkoZm9jdXNlZEtleSk7XG4gICAgY29uc3QgcmVmRWwgPSByZWYoKTtcbiAgICBpZiAocmVmRWwgJiYgZm9jdXNlZEtleSA9PSBudWxsICYmICFhY2Nlc3MobWVyZ2VkUHJvcHMuc2hvdWxkVXNlVmlydHVhbEZvY3VzKSkge1xuICAgICAgZm9jdXNXaXRob3V0U2Nyb2xsaW5nKHJlZkVsKTtcbiAgICB9XG4gIH07XG4gIG9uTW91bnQoKCkgPT4ge1xuICAgIGlmIChtZXJnZWRQcm9wcy5kZWZlckF1dG9Gb2N1cykge1xuICAgICAgc2V0VGltZW91dCh0cnlBdXRvRm9jdXMsIDApO1xuICAgIH0gZWxzZSB7XG4gICAgICB0cnlBdXRvRm9jdXMoKTtcbiAgICB9XG4gIH0pO1xuICBjcmVhdGVFZmZlY3QoXG4gICAgb24oXG4gICAgICBbXG4gICAgICAgIGZpbmFsU2Nyb2xsUmVmLFxuICAgICAgICAoKSA9PiBhY2Nlc3MobWVyZ2VkUHJvcHMuaXNWaXJ0dWFsaXplZCksXG4gICAgICAgICgpID0+IGFjY2VzcyhtZXJnZWRQcm9wcy5zZWxlY3Rpb25NYW5hZ2VyKS5mb2N1c2VkS2V5KClcbiAgICAgIF0sXG4gICAgICAobmV3VmFsdWUpID0+IHtcbiAgICAgICAgY29uc3QgW3Njcm9sbEVsLCBpc1ZpcnR1YWxpemVkLCBmb2N1c2VkS2V5XSA9IG5ld1ZhbHVlO1xuICAgICAgICBpZiAoaXNWaXJ0dWFsaXplZCkge1xuICAgICAgICAgIGZvY3VzZWRLZXkgJiYgbWVyZ2VkUHJvcHMuc2Nyb2xsVG9LZXk/Lihmb2N1c2VkS2V5KTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpZiAoZm9jdXNlZEtleSAmJiBzY3JvbGxFbCkge1xuICAgICAgICAgICAgY29uc3QgZWxlbWVudCA9IHNjcm9sbEVsLnF1ZXJ5U2VsZWN0b3IoXG4gICAgICAgICAgICAgIGBbZGF0YS1rZXk9XCIke2ZvY3VzZWRLZXl9XCJdYFxuICAgICAgICAgICAgKTtcbiAgICAgICAgICAgIGlmIChlbGVtZW50KSB7XG4gICAgICAgICAgICAgIHNjcm9sbEludG9WaWV3KHNjcm9sbEVsLCBlbGVtZW50KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICApXG4gICk7XG4gIGNvbnN0IHRhYkluZGV4ID0gY3JlYXRlTWVtbygoKSA9PiB7XG4gICAgaWYgKGFjY2VzcyhtZXJnZWRQcm9wcy5zaG91bGRVc2VWaXJ0dWFsRm9jdXMpKSB7XG4gICAgICByZXR1cm4gdm9pZCAwO1xuICAgIH1cbiAgICByZXR1cm4gYWNjZXNzKG1lcmdlZFByb3BzLnNlbGVjdGlvbk1hbmFnZXIpLmZvY3VzZWRLZXkoKSA9PSBudWxsID8gMCA6IC0xO1xuICB9KTtcbiAgcmV0dXJuIHtcbiAgICB0YWJJbmRleCxcbiAgICBvbktleURvd24sXG4gICAgb25Nb3VzZURvd24sXG4gICAgb25Gb2N1c0luLFxuICAgIG9uRm9jdXNPdXRcbiAgfTtcbn1cbmZ1bmN0aW9uIGNyZWF0ZVNlbGVjdGFibGVJdGVtKHByb3BzLCByZWYpIHtcbiAgY29uc3QgbWFuYWdlciA9ICgpID0+IGFjY2Vzcyhwcm9wcy5zZWxlY3Rpb25NYW5hZ2VyKTtcbiAgY29uc3Qga2V5ID0gKCkgPT4gYWNjZXNzKHByb3BzLmtleSk7XG4gIGNvbnN0IHNob3VsZFVzZVZpcnR1YWxGb2N1cyA9ICgpID0+IGFjY2Vzcyhwcm9wcy5zaG91bGRVc2VWaXJ0dWFsRm9jdXMpO1xuICBjb25zdCBvblNlbGVjdCA9IChlMikgPT4ge1xuICAgIGlmIChtYW5hZ2VyKCkuc2VsZWN0aW9uTW9kZSgpID09PSBcIm5vbmVcIikge1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBpZiAobWFuYWdlcigpLnNlbGVjdGlvbk1vZGUoKSA9PT0gXCJzaW5nbGVcIikge1xuICAgICAgaWYgKG1hbmFnZXIoKS5pc1NlbGVjdGVkKGtleSgpKSAmJiAhbWFuYWdlcigpLmRpc2FsbG93RW1wdHlTZWxlY3Rpb24oKSkge1xuICAgICAgICBtYW5hZ2VyKCkudG9nZ2xlU2VsZWN0aW9uKGtleSgpKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIG1hbmFnZXIoKS5yZXBsYWNlU2VsZWN0aW9uKGtleSgpKTtcbiAgICAgIH1cbiAgICB9IGVsc2UgaWYgKGUyPy5zaGlmdEtleSkge1xuICAgICAgbWFuYWdlcigpLmV4dGVuZFNlbGVjdGlvbihrZXkoKSk7XG4gICAgfSBlbHNlIGlmIChtYW5hZ2VyKCkuc2VsZWN0aW9uQmVoYXZpb3IoKSA9PT0gXCJ0b2dnbGVcIiB8fCBpc0N0cmxLZXlQcmVzc2VkKGUyKSB8fCBcInBvaW50ZXJUeXBlXCIgaW4gZTIgJiYgZTIucG9pbnRlclR5cGUgPT09IFwidG91Y2hcIikge1xuICAgICAgbWFuYWdlcigpLnRvZ2dsZVNlbGVjdGlvbihrZXkoKSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIG1hbmFnZXIoKS5yZXBsYWNlU2VsZWN0aW9uKGtleSgpKTtcbiAgICB9XG4gIH07XG4gIGNvbnN0IGlzU2VsZWN0ZWQgPSAoKSA9PiBtYW5hZ2VyKCkuaXNTZWxlY3RlZChrZXkoKSk7XG4gIGNvbnN0IGlzRGlzYWJsZWQgPSAoKSA9PiBhY2Nlc3MocHJvcHMuZGlzYWJsZWQpIHx8IG1hbmFnZXIoKS5pc0Rpc2FibGVkKGtleSgpKTtcbiAgY29uc3QgYWxsb3dzU2VsZWN0aW9uID0gKCkgPT4gIWlzRGlzYWJsZWQoKSAmJiBtYW5hZ2VyKCkuY2FuU2VsZWN0SXRlbShrZXkoKSk7XG4gIGxldCBwb2ludGVyRG93blR5cGUgPSBudWxsO1xuICBjb25zdCBvblBvaW50ZXJEb3duID0gKGUyKSA9PiB7XG4gICAgaWYgKCFhbGxvd3NTZWxlY3Rpb24oKSkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBwb2ludGVyRG93blR5cGUgPSBlMi5wb2ludGVyVHlwZTtcbiAgICBpZiAoZTIucG9pbnRlclR5cGUgPT09IFwibW91c2VcIiAmJiBlMi5idXR0b24gPT09IDAgJiYgIWFjY2Vzcyhwcm9wcy5zaG91bGRTZWxlY3RPblByZXNzVXApKSB7XG4gICAgICBvblNlbGVjdChlMik7XG4gICAgfVxuICB9O1xuICBjb25zdCBvblBvaW50ZXJVcCA9IChlMikgPT4ge1xuICAgIGlmICghYWxsb3dzU2VsZWN0aW9uKCkpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgaWYgKGUyLnBvaW50ZXJUeXBlID09PSBcIm1vdXNlXCIgJiYgZTIuYnV0dG9uID09PSAwICYmIGFjY2Vzcyhwcm9wcy5zaG91bGRTZWxlY3RPblByZXNzVXApICYmIGFjY2Vzcyhwcm9wcy5hbGxvd3NEaWZmZXJlbnRQcmVzc09yaWdpbikpIHtcbiAgICAgIG9uU2VsZWN0KGUyKTtcbiAgICB9XG4gIH07XG4gIGNvbnN0IG9uQ2xpY2sgPSAoZTIpID0+IHtcbiAgICBpZiAoIWFsbG93c1NlbGVjdGlvbigpKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIGlmIChhY2Nlc3MocHJvcHMuc2hvdWxkU2VsZWN0T25QcmVzc1VwKSAmJiAhYWNjZXNzKHByb3BzLmFsbG93c0RpZmZlcmVudFByZXNzT3JpZ2luKSB8fCBwb2ludGVyRG93blR5cGUgIT09IFwibW91c2VcIikge1xuICAgICAgb25TZWxlY3QoZTIpO1xuICAgIH1cbiAgfTtcbiAgY29uc3Qgb25LZXlEb3duID0gKGUyKSA9PiB7XG4gICAgaWYgKCFhbGxvd3NTZWxlY3Rpb24oKSB8fCAhW1wiRW50ZXJcIiwgXCIgXCJdLmluY2x1ZGVzKGUyLmtleSkpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgaWYgKGlzTm9uQ29udGlndW91c1NlbGVjdGlvbk1vZGlmaWVyKGUyKSkge1xuICAgICAgbWFuYWdlcigpLnRvZ2dsZVNlbGVjdGlvbihrZXkoKSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIG9uU2VsZWN0KGUyKTtcbiAgICB9XG4gIH07XG4gIGNvbnN0IG9uTW91c2VEb3duID0gKGUyKSA9PiB7XG4gICAgaWYgKGlzRGlzYWJsZWQoKSkge1xuICAgICAgZTIucHJldmVudERlZmF1bHQoKTtcbiAgICB9XG4gIH07XG4gIGNvbnN0IG9uRm9jdXMgPSAoZTIpID0+IHtcbiAgICBjb25zdCByZWZFbCA9IHJlZigpO1xuICAgIGlmIChzaG91bGRVc2VWaXJ0dWFsRm9jdXMoKSB8fCBpc0Rpc2FibGVkKCkgfHwgIXJlZkVsKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIGlmIChlMi50YXJnZXQgPT09IHJlZkVsKSB7XG4gICAgICBtYW5hZ2VyKCkuc2V0Rm9jdXNlZEtleShrZXkoKSk7XG4gICAgfVxuICB9O1xuICBjb25zdCB0YWJJbmRleCA9IGNyZWF0ZU1lbW8oKCkgPT4ge1xuICAgIGlmIChzaG91bGRVc2VWaXJ0dWFsRm9jdXMoKSB8fCBpc0Rpc2FibGVkKCkpIHtcbiAgICAgIHJldHVybiB2b2lkIDA7XG4gICAgfVxuICAgIHJldHVybiBrZXkoKSA9PT0gbWFuYWdlcigpLmZvY3VzZWRLZXkoKSA/IDAgOiAtMTtcbiAgfSk7XG4gIGNvbnN0IGRhdGFLZXkgPSBjcmVhdGVNZW1vKCgpID0+IHtcbiAgICByZXR1cm4gYWNjZXNzKHByb3BzLnZpcnR1YWxpemVkKSA/IHZvaWQgMCA6IGtleSgpO1xuICB9KTtcbiAgY3JlYXRlRWZmZWN0KFxuICAgIG9uKFxuICAgICAgW1xuICAgICAgICByZWYsXG4gICAgICAgIGtleSxcbiAgICAgICAgc2hvdWxkVXNlVmlydHVhbEZvY3VzLFxuICAgICAgICAoKSA9PiBtYW5hZ2VyKCkuZm9jdXNlZEtleSgpLFxuICAgICAgICAoKSA9PiBtYW5hZ2VyKCkuaXNGb2N1c2VkKClcbiAgICAgIF0sXG4gICAgICAoW3JlZkVsLCBrZXkyLCBzaG91bGRVc2VWaXJ0dWFsRm9jdXMyLCBmb2N1c2VkS2V5LCBpc0ZvY3VzZWRdKSA9PiB7XG4gICAgICAgIGlmIChyZWZFbCAmJiBrZXkyID09PSBmb2N1c2VkS2V5ICYmIGlzRm9jdXNlZCAmJiAhc2hvdWxkVXNlVmlydHVhbEZvY3VzMiAmJiBkb2N1bWVudC5hY3RpdmVFbGVtZW50ICE9PSByZWZFbCkge1xuICAgICAgICAgIGlmIChwcm9wcy5mb2N1cykge1xuICAgICAgICAgICAgcHJvcHMuZm9jdXMoKTtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgZm9jdXNXaXRob3V0U2Nyb2xsaW5nKHJlZkVsKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICApXG4gICk7XG4gIHJldHVybiB7XG4gICAgaXNTZWxlY3RlZCxcbiAgICBpc0Rpc2FibGVkLFxuICAgIGFsbG93c1NlbGVjdGlvbixcbiAgICB0YWJJbmRleCxcbiAgICBkYXRhS2V5LFxuICAgIG9uUG9pbnRlckRvd24sXG4gICAgb25Qb2ludGVyVXAsXG4gICAgb25DbGljayxcbiAgICBvbktleURvd24sXG4gICAgb25Nb3VzZURvd24sXG4gICAgb25Gb2N1c1xuICB9O1xufVxudmFyIFNlbGVjdGlvbk1hbmFnZXIgPSBjbGFzcyB7XG4gIGNvbGxlY3Rpb247XG4gIHN0YXRlO1xuICBjb25zdHJ1Y3Rvcihjb2xsZWN0aW9uLCBzdGF0ZSkge1xuICAgIHRoaXMuY29sbGVjdGlvbiA9IGNvbGxlY3Rpb247XG4gICAgdGhpcy5zdGF0ZSA9IHN0YXRlO1xuICB9XG4gIC8qKiBUaGUgdHlwZSBvZiBzZWxlY3Rpb24gdGhhdCBpcyBhbGxvd2VkIGluIHRoZSBjb2xsZWN0aW9uLiAqL1xuICBzZWxlY3Rpb25Nb2RlKCkge1xuICAgIHJldHVybiB0aGlzLnN0YXRlLnNlbGVjdGlvbk1vZGUoKTtcbiAgfVxuICAvKiogV2hldGhlciB0aGUgY29sbGVjdGlvbiBhbGxvd3MgZW1wdHkgc2VsZWN0aW9uLiAqL1xuICBkaXNhbGxvd0VtcHR5U2VsZWN0aW9uKCkge1xuICAgIHJldHVybiB0aGlzLnN0YXRlLmRpc2FsbG93RW1wdHlTZWxlY3Rpb24oKTtcbiAgfVxuICAvKiogVGhlIHNlbGVjdGlvbiBiZWhhdmlvciBmb3IgdGhlIGNvbGxlY3Rpb24uICovXG4gIHNlbGVjdGlvbkJlaGF2aW9yKCkge1xuICAgIHJldHVybiB0aGlzLnN0YXRlLnNlbGVjdGlvbkJlaGF2aW9yKCk7XG4gIH1cbiAgLyoqIFNldHMgdGhlIHNlbGVjdGlvbiBiZWhhdmlvciBmb3IgdGhlIGNvbGxlY3Rpb24uICovXG4gIHNldFNlbGVjdGlvbkJlaGF2aW9yKHNlbGVjdGlvbkJlaGF2aW9yKSB7XG4gICAgdGhpcy5zdGF0ZS5zZXRTZWxlY3Rpb25CZWhhdmlvcihzZWxlY3Rpb25CZWhhdmlvcik7XG4gIH1cbiAgLyoqIFdoZXRoZXIgdGhlIGNvbGxlY3Rpb24gaXMgY3VycmVudGx5IGZvY3VzZWQuICovXG4gIGlzRm9jdXNlZCgpIHtcbiAgICByZXR1cm4gdGhpcy5zdGF0ZS5pc0ZvY3VzZWQoKTtcbiAgfVxuICAvKiogU2V0cyB3aGV0aGVyIHRoZSBjb2xsZWN0aW9uIGlzIGZvY3VzZWQuICovXG4gIHNldEZvY3VzZWQoaXNGb2N1c2VkKSB7XG4gICAgdGhpcy5zdGF0ZS5zZXRGb2N1c2VkKGlzRm9jdXNlZCk7XG4gIH1cbiAgLyoqIFRoZSBjdXJyZW50IGZvY3VzZWQga2V5IGluIHRoZSBjb2xsZWN0aW9uLiAqL1xuICBmb2N1c2VkS2V5KCkge1xuICAgIHJldHVybiB0aGlzLnN0YXRlLmZvY3VzZWRLZXkoKTtcbiAgfVxuICAvKiogU2V0cyB0aGUgZm9jdXNlZCBrZXkuICovXG4gIHNldEZvY3VzZWRLZXkoa2V5KSB7XG4gICAgaWYgKGtleSA9PSBudWxsIHx8IHRoaXMuY29sbGVjdGlvbigpLmdldEl0ZW0oa2V5KSkge1xuICAgICAgdGhpcy5zdGF0ZS5zZXRGb2N1c2VkS2V5KGtleSk7XG4gICAgfVxuICB9XG4gIC8qKiBUaGUgY3VycmVudGx5IHNlbGVjdGVkIGtleXMgaW4gdGhlIGNvbGxlY3Rpb24uICovXG4gIHNlbGVjdGVkS2V5cygpIHtcbiAgICByZXR1cm4gdGhpcy5zdGF0ZS5zZWxlY3RlZEtleXMoKTtcbiAgfVxuICAvKiogUmV0dXJucyB3aGV0aGVyIGEga2V5IGlzIHNlbGVjdGVkLiAqL1xuICBpc1NlbGVjdGVkKGtleSkge1xuICAgIGlmICh0aGlzLnN0YXRlLnNlbGVjdGlvbk1vZGUoKSA9PT0gXCJub25lXCIpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgY29uc3QgcmV0cmlldmVkS2V5ID0gdGhpcy5nZXRLZXkoa2V5KTtcbiAgICBpZiAocmV0cmlldmVkS2V5ID09IG51bGwpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgcmV0dXJuIHRoaXMuc3RhdGUuc2VsZWN0ZWRLZXlzKCkuaGFzKHJldHJpZXZlZEtleSk7XG4gIH1cbiAgLyoqIFdoZXRoZXIgdGhlIHNlbGVjdGlvbiBpcyBlbXB0eS4gKi9cbiAgaXNFbXB0eSgpIHtcbiAgICByZXR1cm4gdGhpcy5zdGF0ZS5zZWxlY3RlZEtleXMoKS5zaXplID09PSAwO1xuICB9XG4gIC8qKiBXaGV0aGVyIGFsbCBpdGVtcyBpbiB0aGUgY29sbGVjdGlvbiBhcmUgc2VsZWN0ZWQuICovXG4gIGlzU2VsZWN0QWxsKCkge1xuICAgIGlmICh0aGlzLmlzRW1wdHkoKSkge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICBjb25zdCBzZWxlY3RlZEtleXMgPSB0aGlzLnN0YXRlLnNlbGVjdGVkS2V5cygpO1xuICAgIHJldHVybiB0aGlzLmdldEFsbFNlbGVjdGFibGVLZXlzKCkuZXZlcnkoKGspID0+IHNlbGVjdGVkS2V5cy5oYXMoaykpO1xuICB9XG4gIGZpcnN0U2VsZWN0ZWRLZXkoKSB7XG4gICAgbGV0IGZpcnN0O1xuICAgIGZvciAoY29uc3Qga2V5IG9mIHRoaXMuc3RhdGUuc2VsZWN0ZWRLZXlzKCkpIHtcbiAgICAgIGNvbnN0IGl0ZW0gPSB0aGlzLmNvbGxlY3Rpb24oKS5nZXRJdGVtKGtleSk7XG4gICAgICBjb25zdCBpc0l0ZW1CZWZvcmVGaXJzdCA9IGl0ZW0/LmluZGV4ICE9IG51bGwgJiYgZmlyc3Q/LmluZGV4ICE9IG51bGwgJiYgaXRlbS5pbmRleCA8IGZpcnN0LmluZGV4O1xuICAgICAgaWYgKCFmaXJzdCB8fCBpc0l0ZW1CZWZvcmVGaXJzdCkge1xuICAgICAgICBmaXJzdCA9IGl0ZW07XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiBmaXJzdD8ua2V5O1xuICB9XG4gIGxhc3RTZWxlY3RlZEtleSgpIHtcbiAgICBsZXQgbGFzdDtcbiAgICBmb3IgKGNvbnN0IGtleSBvZiB0aGlzLnN0YXRlLnNlbGVjdGVkS2V5cygpKSB7XG4gICAgICBjb25zdCBpdGVtID0gdGhpcy5jb2xsZWN0aW9uKCkuZ2V0SXRlbShrZXkpO1xuICAgICAgY29uc3QgaXNJdGVtQWZ0ZXJMYXN0ID0gaXRlbT8uaW5kZXggIT0gbnVsbCAmJiBsYXN0Py5pbmRleCAhPSBudWxsICYmIGl0ZW0uaW5kZXggPiBsYXN0LmluZGV4O1xuICAgICAgaWYgKCFsYXN0IHx8IGlzSXRlbUFmdGVyTGFzdCkge1xuICAgICAgICBsYXN0ID0gaXRlbTtcbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIGxhc3Q/LmtleTtcbiAgfVxuICAvKiogRXh0ZW5kcyB0aGUgc2VsZWN0aW9uIHRvIHRoZSBnaXZlbiBrZXkuICovXG4gIGV4dGVuZFNlbGVjdGlvbih0b0tleSkge1xuICAgIGlmICh0aGlzLnNlbGVjdGlvbk1vZGUoKSA9PT0gXCJub25lXCIpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgaWYgKHRoaXMuc2VsZWN0aW9uTW9kZSgpID09PSBcInNpbmdsZVwiKSB7XG4gICAgICB0aGlzLnJlcGxhY2VTZWxlY3Rpb24odG9LZXkpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBjb25zdCByZXRyaWV2ZWRUb0tleSA9IHRoaXMuZ2V0S2V5KHRvS2V5KTtcbiAgICBpZiAocmV0cmlldmVkVG9LZXkgPT0gbnVsbCkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBjb25zdCBzZWxlY3RlZEtleXMgPSB0aGlzLnN0YXRlLnNlbGVjdGVkS2V5cygpO1xuICAgIGNvbnN0IGFuY2hvcktleSA9IHNlbGVjdGVkS2V5cy5hbmNob3JLZXkgfHwgcmV0cmlldmVkVG9LZXk7XG4gICAgY29uc3Qgc2VsZWN0aW9uID0gbmV3IFNlbGVjdGlvbihzZWxlY3RlZEtleXMsIGFuY2hvcktleSwgcmV0cmlldmVkVG9LZXkpO1xuICAgIGZvciAoY29uc3Qga2V5IG9mIHRoaXMuZ2V0S2V5UmFuZ2UoXG4gICAgICBhbmNob3JLZXksXG4gICAgICBzZWxlY3RlZEtleXMuY3VycmVudEtleSB8fCByZXRyaWV2ZWRUb0tleVxuICAgICkpIHtcbiAgICAgIHNlbGVjdGlvbi5kZWxldGUoa2V5KTtcbiAgICB9XG4gICAgZm9yIChjb25zdCBrZXkgb2YgdGhpcy5nZXRLZXlSYW5nZShyZXRyaWV2ZWRUb0tleSwgYW5jaG9yS2V5KSkge1xuICAgICAgaWYgKHRoaXMuY2FuU2VsZWN0SXRlbShrZXkpKSB7XG4gICAgICAgIHNlbGVjdGlvbi5hZGQoa2V5KTtcbiAgICAgIH1cbiAgICB9XG4gICAgdGhpcy5zdGF0ZS5zZXRTZWxlY3RlZEtleXMoc2VsZWN0aW9uKTtcbiAgfVxuICBnZXRLZXlSYW5nZShmcm9tLCB0bykge1xuICAgIGNvbnN0IGZyb21JdGVtID0gdGhpcy5jb2xsZWN0aW9uKCkuZ2V0SXRlbShmcm9tKTtcbiAgICBjb25zdCB0b0l0ZW0gPSB0aGlzLmNvbGxlY3Rpb24oKS5nZXRJdGVtKHRvKTtcbiAgICBpZiAoZnJvbUl0ZW0gJiYgdG9JdGVtKSB7XG4gICAgICBpZiAoZnJvbUl0ZW0uaW5kZXggIT0gbnVsbCAmJiB0b0l0ZW0uaW5kZXggIT0gbnVsbCAmJiBmcm9tSXRlbS5pbmRleCA8PSB0b0l0ZW0uaW5kZXgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZ2V0S2V5UmFuZ2VJbnRlcm5hbChmcm9tLCB0byk7XG4gICAgICB9XG4gICAgICByZXR1cm4gdGhpcy5nZXRLZXlSYW5nZUludGVybmFsKHRvLCBmcm9tKTtcbiAgICB9XG4gICAgcmV0dXJuIFtdO1xuICB9XG4gIGdldEtleVJhbmdlSW50ZXJuYWwoZnJvbSwgdG8pIHtcbiAgICBjb25zdCBrZXlzMiA9IFtdO1xuICAgIGxldCBrZXkgPSBmcm9tO1xuICAgIHdoaWxlIChrZXkgIT0gbnVsbCkge1xuICAgICAgY29uc3QgaXRlbSA9IHRoaXMuY29sbGVjdGlvbigpLmdldEl0ZW0oa2V5KTtcbiAgICAgIGlmIChpdGVtICYmIGl0ZW0udHlwZSA9PT0gXCJpdGVtXCIpIHtcbiAgICAgICAga2V5czIucHVzaChrZXkpO1xuICAgICAgfVxuICAgICAgaWYgKGtleSA9PT0gdG8pIHtcbiAgICAgICAgcmV0dXJuIGtleXMyO1xuICAgICAgfVxuICAgICAga2V5ID0gdGhpcy5jb2xsZWN0aW9uKCkuZ2V0S2V5QWZ0ZXIoa2V5KTtcbiAgICB9XG4gICAgcmV0dXJuIFtdO1xuICB9XG4gIGdldEtleShrZXkpIHtcbiAgICBjb25zdCBpdGVtID0gdGhpcy5jb2xsZWN0aW9uKCkuZ2V0SXRlbShrZXkpO1xuICAgIGlmICghaXRlbSkge1xuICAgICAgcmV0dXJuIGtleTtcbiAgICB9XG4gICAgaWYgKCFpdGVtIHx8IGl0ZW0udHlwZSAhPT0gXCJpdGVtXCIpIHtcbiAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbiAgICByZXR1cm4gaXRlbS5rZXk7XG4gIH1cbiAgLyoqIFRvZ2dsZXMgd2hldGhlciB0aGUgZ2l2ZW4ga2V5IGlzIHNlbGVjdGVkLiAqL1xuICB0b2dnbGVTZWxlY3Rpb24oa2V5KSB7XG4gICAgaWYgKHRoaXMuc2VsZWN0aW9uTW9kZSgpID09PSBcIm5vbmVcIikge1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBpZiAodGhpcy5zZWxlY3Rpb25Nb2RlKCkgPT09IFwic2luZ2xlXCIgJiYgIXRoaXMuaXNTZWxlY3RlZChrZXkpKSB7XG4gICAgICB0aGlzLnJlcGxhY2VTZWxlY3Rpb24oa2V5KTtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgY29uc3QgcmV0cmlldmVkS2V5ID0gdGhpcy5nZXRLZXkoa2V5KTtcbiAgICBpZiAocmV0cmlldmVkS2V5ID09IG51bGwpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgY29uc3Qga2V5czIgPSBuZXcgU2VsZWN0aW9uKHRoaXMuc3RhdGUuc2VsZWN0ZWRLZXlzKCkpO1xuICAgIGlmIChrZXlzMi5oYXMocmV0cmlldmVkS2V5KSkge1xuICAgICAga2V5czIuZGVsZXRlKHJldHJpZXZlZEtleSk7XG4gICAgfSBlbHNlIGlmICh0aGlzLmNhblNlbGVjdEl0ZW0ocmV0cmlldmVkS2V5KSkge1xuICAgICAga2V5czIuYWRkKHJldHJpZXZlZEtleSk7XG4gICAgICBrZXlzMi5hbmNob3JLZXkgPSByZXRyaWV2ZWRLZXk7XG4gICAgICBrZXlzMi5jdXJyZW50S2V5ID0gcmV0cmlldmVkS2V5O1xuICAgIH1cbiAgICBpZiAodGhpcy5kaXNhbGxvd0VtcHR5U2VsZWN0aW9uKCkgJiYga2V5czIuc2l6ZSA9PT0gMCkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICB0aGlzLnN0YXRlLnNldFNlbGVjdGVkS2V5cyhrZXlzMik7XG4gIH1cbiAgLyoqIFJlcGxhY2VzIHRoZSBzZWxlY3Rpb24gd2l0aCBvbmx5IHRoZSBnaXZlbiBrZXkuICovXG4gIHJlcGxhY2VTZWxlY3Rpb24oa2V5KSB7XG4gICAgaWYgKHRoaXMuc2VsZWN0aW9uTW9kZSgpID09PSBcIm5vbmVcIikge1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBjb25zdCByZXRyaWV2ZWRLZXkgPSB0aGlzLmdldEtleShrZXkpO1xuICAgIGlmIChyZXRyaWV2ZWRLZXkgPT0gbnVsbCkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBjb25zdCBzZWxlY3Rpb24gPSB0aGlzLmNhblNlbGVjdEl0ZW0ocmV0cmlldmVkS2V5KSA/IG5ldyBTZWxlY3Rpb24oW3JldHJpZXZlZEtleV0sIHJldHJpZXZlZEtleSwgcmV0cmlldmVkS2V5KSA6IG5ldyBTZWxlY3Rpb24oKTtcbiAgICB0aGlzLnN0YXRlLnNldFNlbGVjdGVkS2V5cyhzZWxlY3Rpb24pO1xuICB9XG4gIC8qKiBSZXBsYWNlcyB0aGUgc2VsZWN0aW9uIHdpdGggdGhlIGdpdmVuIGtleXMuICovXG4gIHNldFNlbGVjdGVkS2V5cyhrZXlzMikge1xuICAgIGlmICh0aGlzLnNlbGVjdGlvbk1vZGUoKSA9PT0gXCJub25lXCIpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgY29uc3Qgc2VsZWN0aW9uID0gbmV3IFNlbGVjdGlvbigpO1xuICAgIGZvciAoY29uc3Qga2V5IG9mIGtleXMyKSB7XG4gICAgICBjb25zdCByZXRyaWV2ZWRLZXkgPSB0aGlzLmdldEtleShrZXkpO1xuICAgICAgaWYgKHJldHJpZXZlZEtleSAhPSBudWxsKSB7XG4gICAgICAgIHNlbGVjdGlvbi5hZGQocmV0cmlldmVkS2V5KTtcbiAgICAgICAgaWYgKHRoaXMuc2VsZWN0aW9uTW9kZSgpID09PSBcInNpbmdsZVwiKSB7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gICAgdGhpcy5zdGF0ZS5zZXRTZWxlY3RlZEtleXMoc2VsZWN0aW9uKTtcbiAgfVxuICAvKiogU2VsZWN0cyBhbGwgaXRlbXMgaW4gdGhlIGNvbGxlY3Rpb24uICovXG4gIHNlbGVjdEFsbCgpIHtcbiAgICBpZiAodGhpcy5zZWxlY3Rpb25Nb2RlKCkgPT09IFwibXVsdGlwbGVcIikge1xuICAgICAgdGhpcy5zdGF0ZS5zZXRTZWxlY3RlZEtleXMobmV3IFNldCh0aGlzLmdldEFsbFNlbGVjdGFibGVLZXlzKCkpKTtcbiAgICB9XG4gIH1cbiAgLyoqXG4gICAqIFJlbW92ZXMgYWxsIGtleXMgZnJvbSB0aGUgc2VsZWN0aW9uLlxuICAgKi9cbiAgY2xlYXJTZWxlY3Rpb24oKSB7XG4gICAgY29uc3Qgc2VsZWN0ZWRLZXlzID0gdGhpcy5zdGF0ZS5zZWxlY3RlZEtleXMoKTtcbiAgICBpZiAoIXRoaXMuZGlzYWxsb3dFbXB0eVNlbGVjdGlvbigpICYmIHNlbGVjdGVkS2V5cy5zaXplID4gMCkge1xuICAgICAgdGhpcy5zdGF0ZS5zZXRTZWxlY3RlZEtleXMobmV3IFNlbGVjdGlvbigpKTtcbiAgICB9XG4gIH1cbiAgLyoqXG4gICAqIFRvZ2dsZXMgYmV0d2VlbiBzZWxlY3QgYWxsIGFuZCBhbiBlbXB0eSBzZWxlY3Rpb24uXG4gICAqL1xuICB0b2dnbGVTZWxlY3RBbGwoKSB7XG4gICAgaWYgKHRoaXMuaXNTZWxlY3RBbGwoKSkge1xuICAgICAgdGhpcy5jbGVhclNlbGVjdGlvbigpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLnNlbGVjdEFsbCgpO1xuICAgIH1cbiAgfVxuICBzZWxlY3Qoa2V5LCBlMikge1xuICAgIGlmICh0aGlzLnNlbGVjdGlvbk1vZGUoKSA9PT0gXCJub25lXCIpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgaWYgKHRoaXMuc2VsZWN0aW9uTW9kZSgpID09PSBcInNpbmdsZVwiKSB7XG4gICAgICBpZiAodGhpcy5pc1NlbGVjdGVkKGtleSkgJiYgIXRoaXMuZGlzYWxsb3dFbXB0eVNlbGVjdGlvbigpKSB7XG4gICAgICAgIHRoaXMudG9nZ2xlU2VsZWN0aW9uKGtleSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aGlzLnJlcGxhY2VTZWxlY3Rpb24oa2V5KTtcbiAgICAgIH1cbiAgICB9IGVsc2UgaWYgKHRoaXMuc2VsZWN0aW9uQmVoYXZpb3IoKSA9PT0gXCJ0b2dnbGVcIiB8fCBlMiAmJiBlMi5wb2ludGVyVHlwZSA9PT0gXCJ0b3VjaFwiKSB7XG4gICAgICB0aGlzLnRvZ2dsZVNlbGVjdGlvbihrZXkpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLnJlcGxhY2VTZWxlY3Rpb24oa2V5KTtcbiAgICB9XG4gIH1cbiAgLyoqIFJldHVybnMgd2hldGhlciB0aGUgY3VycmVudCBzZWxlY3Rpb24gaXMgZXF1YWwgdG8gdGhlIGdpdmVuIHNlbGVjdGlvbi4gKi9cbiAgaXNTZWxlY3Rpb25FcXVhbChzZWxlY3Rpb24pIHtcbiAgICBpZiAoc2VsZWN0aW9uID09PSB0aGlzLnN0YXRlLnNlbGVjdGVkS2V5cygpKSB7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gICAgY29uc3Qgc2VsZWN0ZWRLZXlzID0gdGhpcy5zZWxlY3RlZEtleXMoKTtcbiAgICBpZiAoc2VsZWN0aW9uLnNpemUgIT09IHNlbGVjdGVkS2V5cy5zaXplKSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIGZvciAoY29uc3Qga2V5IG9mIHNlbGVjdGlvbikge1xuICAgICAgaWYgKCFzZWxlY3RlZEtleXMuaGFzKGtleSkpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgfVxuICAgIH1cbiAgICBmb3IgKGNvbnN0IGtleSBvZiBzZWxlY3RlZEtleXMpIHtcbiAgICAgIGlmICghc2VsZWN0aW9uLmhhcyhrZXkpKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHRydWU7XG4gIH1cbiAgY2FuU2VsZWN0SXRlbShrZXkpIHtcbiAgICBpZiAodGhpcy5zdGF0ZS5zZWxlY3Rpb25Nb2RlKCkgPT09IFwibm9uZVwiKSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIGNvbnN0IGl0ZW0gPSB0aGlzLmNvbGxlY3Rpb24oKS5nZXRJdGVtKGtleSk7XG4gICAgcmV0dXJuIGl0ZW0gIT0gbnVsbCAmJiAhaXRlbS5kaXNhYmxlZDtcbiAgfVxuICBpc0Rpc2FibGVkKGtleSkge1xuICAgIGNvbnN0IGl0ZW0gPSB0aGlzLmNvbGxlY3Rpb24oKS5nZXRJdGVtKGtleSk7XG4gICAgcmV0dXJuICFpdGVtIHx8IGl0ZW0uZGlzYWJsZWQ7XG4gIH1cbiAgZ2V0QWxsU2VsZWN0YWJsZUtleXMoKSB7XG4gICAgY29uc3Qga2V5czIgPSBbXTtcbiAgICBjb25zdCBhZGRLZXlzID0gKGtleSkgPT4ge1xuICAgICAgd2hpbGUgKGtleSAhPSBudWxsKSB7XG4gICAgICAgIGlmICh0aGlzLmNhblNlbGVjdEl0ZW0oa2V5KSkge1xuICAgICAgICAgIGNvbnN0IGl0ZW0gPSB0aGlzLmNvbGxlY3Rpb24oKS5nZXRJdGVtKGtleSk7XG4gICAgICAgICAgaWYgKCFpdGVtKSB7XG4gICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICB9XG4gICAgICAgICAgaWYgKGl0ZW0udHlwZSA9PT0gXCJpdGVtXCIpIHtcbiAgICAgICAgICAgIGtleXMyLnB1c2goa2V5KTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAga2V5ID0gdGhpcy5jb2xsZWN0aW9uKCkuZ2V0S2V5QWZ0ZXIoa2V5KTtcbiAgICAgIH1cbiAgICB9O1xuICAgIGFkZEtleXModGhpcy5jb2xsZWN0aW9uKCkuZ2V0Rmlyc3RLZXkoKSk7XG4gICAgcmV0dXJuIGtleXMyO1xuICB9XG59O1xudmFyIExpc3RDb2xsZWN0aW9uID0gY2xhc3Mge1xuICBrZXlNYXAgPSAvKiBAX19QVVJFX18gKi8gbmV3IE1hcCgpO1xuICBpdGVyYWJsZTtcbiAgZmlyc3RLZXk7XG4gIGxhc3RLZXk7XG4gIGNvbnN0cnVjdG9yKG5vZGVzKSB7XG4gICAgdGhpcy5pdGVyYWJsZSA9IG5vZGVzO1xuICAgIGZvciAoY29uc3Qgbm9kZSBvZiBub2Rlcykge1xuICAgICAgdGhpcy5rZXlNYXAuc2V0KG5vZGUua2V5LCBub2RlKTtcbiAgICB9XG4gICAgaWYgKHRoaXMua2V5TWFwLnNpemUgPT09IDApIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgbGV0IGxhc3Q7XG4gICAgbGV0IGluZGV4ID0gMDtcbiAgICBmb3IgKGNvbnN0IFtrZXksIG5vZGVdIG9mIHRoaXMua2V5TWFwKSB7XG4gICAgICBpZiAobGFzdCkge1xuICAgICAgICBsYXN0Lm5leHRLZXkgPSBrZXk7XG4gICAgICAgIG5vZGUucHJldktleSA9IGxhc3Qua2V5O1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhpcy5maXJzdEtleSA9IGtleTtcbiAgICAgICAgbm9kZS5wcmV2S2V5ID0gdm9pZCAwO1xuICAgICAgfVxuICAgICAgaWYgKG5vZGUudHlwZSA9PT0gXCJpdGVtXCIpIHtcbiAgICAgICAgbm9kZS5pbmRleCA9IGluZGV4Kys7XG4gICAgICB9XG4gICAgICBsYXN0ID0gbm9kZTtcbiAgICAgIGxhc3QubmV4dEtleSA9IHZvaWQgMDtcbiAgICB9XG4gICAgdGhpcy5sYXN0S2V5ID0gbGFzdC5rZXk7XG4gIH1cbiAgKltTeW1ib2wuaXRlcmF0b3JdKCkge1xuICAgIHlpZWxkKiB0aGlzLml0ZXJhYmxlO1xuICB9XG4gIGdldFNpemUoKSB7XG4gICAgcmV0dXJuIHRoaXMua2V5TWFwLnNpemU7XG4gIH1cbiAgZ2V0S2V5cygpIHtcbiAgICByZXR1cm4gdGhpcy5rZXlNYXAua2V5cygpO1xuICB9XG4gIGdldEtleUJlZm9yZShrZXkpIHtcbiAgICByZXR1cm4gdGhpcy5rZXlNYXAuZ2V0KGtleSk/LnByZXZLZXk7XG4gIH1cbiAgZ2V0S2V5QWZ0ZXIoa2V5KSB7XG4gICAgcmV0dXJuIHRoaXMua2V5TWFwLmdldChrZXkpPy5uZXh0S2V5O1xuICB9XG4gIGdldEZpcnN0S2V5KCkge1xuICAgIHJldHVybiB0aGlzLmZpcnN0S2V5O1xuICB9XG4gIGdldExhc3RLZXkoKSB7XG4gICAgcmV0dXJuIHRoaXMubGFzdEtleTtcbiAgfVxuICBnZXRJdGVtKGtleSkge1xuICAgIHJldHVybiB0aGlzLmtleU1hcC5nZXQoa2V5KTtcbiAgfVxuICBhdChpZHgpIHtcbiAgICBjb25zdCBrZXlzMiA9IFsuLi50aGlzLmdldEtleXMoKV07XG4gICAgcmV0dXJuIHRoaXMuZ2V0SXRlbShrZXlzMltpZHhdKTtcbiAgfVxufTtcbmZ1bmN0aW9uIGNyZWF0ZUxpc3RTdGF0ZShwcm9wcykge1xuICBjb25zdCBzZWxlY3Rpb25TdGF0ZSA9IGNyZWF0ZU11bHRpcGxlU2VsZWN0aW9uU3RhdGUocHJvcHMpO1xuICBjb25zdCBmYWN0b3J5ID0gKG5vZGVzKSA9PiB7XG4gICAgcmV0dXJuIHByb3BzLmZpbHRlciA/IG5ldyBMaXN0Q29sbGVjdGlvbihwcm9wcy5maWx0ZXIobm9kZXMpKSA6IG5ldyBMaXN0Q29sbGVjdGlvbihub2Rlcyk7XG4gIH07XG4gIGNvbnN0IGNvbGxlY3Rpb24gPSBjcmVhdGVDb2xsZWN0aW9uKFxuICAgIHtcbiAgICAgIGRhdGFTb3VyY2U6ICgpID0+IGFjY2Vzcyhwcm9wcy5kYXRhU291cmNlKSxcbiAgICAgIGdldEtleTogKCkgPT4gYWNjZXNzKHByb3BzLmdldEtleSksXG4gICAgICBnZXRUZXh0VmFsdWU6ICgpID0+IGFjY2Vzcyhwcm9wcy5nZXRUZXh0VmFsdWUpLFxuICAgICAgZ2V0RGlzYWJsZWQ6ICgpID0+IGFjY2Vzcyhwcm9wcy5nZXREaXNhYmxlZCksXG4gICAgICBnZXRTZWN0aW9uQ2hpbGRyZW46ICgpID0+IGFjY2Vzcyhwcm9wcy5nZXRTZWN0aW9uQ2hpbGRyZW4pLFxuICAgICAgZmFjdG9yeVxuICAgIH0sXG4gICAgWygpID0+IHByb3BzLmZpbHRlcl1cbiAgKTtcbiAgY29uc3Qgc2VsZWN0aW9uTWFuYWdlciA9IG5ldyBTZWxlY3Rpb25NYW5hZ2VyKGNvbGxlY3Rpb24sIHNlbGVjdGlvblN0YXRlKTtcbiAgY3JlYXRlQ29tcHV0ZWQoKCkgPT4ge1xuICAgIGNvbnN0IGZvY3VzZWRLZXkgPSBzZWxlY3Rpb25TdGF0ZS5mb2N1c2VkS2V5KCk7XG4gICAgaWYgKGZvY3VzZWRLZXkgIT0gbnVsbCAmJiAhY29sbGVjdGlvbigpLmdldEl0ZW0oZm9jdXNlZEtleSkpIHtcbiAgICAgIHNlbGVjdGlvblN0YXRlLnNldEZvY3VzZWRLZXkodm9pZCAwKTtcbiAgICB9XG4gIH0pO1xuICByZXR1cm4ge1xuICAgIGNvbGxlY3Rpb24sXG4gICAgc2VsZWN0aW9uTWFuYWdlcjogKCkgPT4gc2VsZWN0aW9uTWFuYWdlclxuICB9O1xufVxuXG4vLyAuLi8uLi9ub2RlX21vZHVsZXMvLnBucG0vQGtvYmFsdGUrY29yZUAwLjEzLjFfc29saWQtanNAMS44LjE3L25vZGVfbW9kdWxlcy9Aa29iYWx0ZS9jb3JlL2Rpc3QvY2h1bmsvMzJNSDdXN1MuanNcbmZ1bmN0aW9uIGNyZWF0ZVByZXNlbmNlKHByZXNlbnQpIHtcbiAgY29uc3QgW25vZGUsIHNldE5vZGVdID0gY3JlYXRlU2lnbmFsKCk7XG4gIGxldCBzdHlsZXMgPSB7fTtcbiAgbGV0IHByZXZQcmVzZW50ID0gcHJlc2VudCgpO1xuICBsZXQgcHJldkFuaW1hdGlvbk5hbWUgPSBcIm5vbmVcIjtcbiAgY29uc3QgW3N0YXRlLCBzZW5kXSA9IGNyZWF0ZVN0YXRlTWFjaGluZShcbiAgICBwcmVzZW50KCkgPyBcIm1vdW50ZWRcIiA6IFwidW5tb3VudGVkXCIsXG4gICAge1xuICAgICAgbW91bnRlZDoge1xuICAgICAgICBVTk1PVU5UOiBcInVubW91bnRlZFwiLFxuICAgICAgICBBTklNQVRJT05fT1VUOiBcInVubW91bnRTdXNwZW5kZWRcIlxuICAgICAgfSxcbiAgICAgIHVubW91bnRTdXNwZW5kZWQ6IHtcbiAgICAgICAgTU9VTlQ6IFwibW91bnRlZFwiLFxuICAgICAgICBBTklNQVRJT05fRU5EOiBcInVubW91bnRlZFwiXG4gICAgICB9LFxuICAgICAgdW5tb3VudGVkOiB7XG4gICAgICAgIE1PVU5UOiBcIm1vdW50ZWRcIlxuICAgICAgfVxuICAgIH1cbiAgKTtcbiAgY3JlYXRlRWZmZWN0KFxuICAgIG9uKHN0YXRlLCAoc3RhdGUyKSA9PiB7XG4gICAgICBjb25zdCBjdXJyZW50QW5pbWF0aW9uTmFtZSA9IGdldEFuaW1hdGlvbk5hbWUoc3R5bGVzKTtcbiAgICAgIHByZXZBbmltYXRpb25OYW1lID0gc3RhdGUyID09PSBcIm1vdW50ZWRcIiA/IGN1cnJlbnRBbmltYXRpb25OYW1lIDogXCJub25lXCI7XG4gICAgfSlcbiAgKTtcbiAgY3JlYXRlRWZmZWN0KFxuICAgIG9uKHByZXNlbnQsIChwcmVzZW50MikgPT4ge1xuICAgICAgaWYgKHByZXZQcmVzZW50ID09PSBwcmVzZW50Mikge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICBjb25zdCBjdXJyZW50QW5pbWF0aW9uTmFtZSA9IGdldEFuaW1hdGlvbk5hbWUoc3R5bGVzKTtcbiAgICAgIGlmIChwcmVzZW50Mikge1xuICAgICAgICBzZW5kKFwiTU9VTlRcIik7XG4gICAgICB9IGVsc2UgaWYgKHN0eWxlcz8uZGlzcGxheSA9PT0gXCJub25lXCIpIHtcbiAgICAgICAgc2VuZChcIlVOTU9VTlRcIik7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBjb25zdCBpc0FuaW1hdGluZyA9IHByZXZBbmltYXRpb25OYW1lICE9PSBjdXJyZW50QW5pbWF0aW9uTmFtZTtcbiAgICAgICAgaWYgKHByZXZQcmVzZW50ICYmIGlzQW5pbWF0aW5nKSB7XG4gICAgICAgICAgc2VuZChcIkFOSU1BVElPTl9PVVRcIik7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgc2VuZChcIlVOTU9VTlRcIik7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIHByZXZQcmVzZW50ID0gcHJlc2VudDI7XG4gICAgfSlcbiAgKTtcbiAgY3JlYXRlRWZmZWN0KFxuICAgIG9uKG5vZGUsIChub2RlMikgPT4ge1xuICAgICAgaWYgKG5vZGUyKSB7XG4gICAgICAgIGNvbnN0IGhhbmRsZUFuaW1hdGlvbkVuZCA9IChldmVudCkgPT4ge1xuICAgICAgICAgIGNvbnN0IGN1cnJlbnRBbmltYXRpb25OYW1lID0gZ2V0QW5pbWF0aW9uTmFtZShzdHlsZXMpO1xuICAgICAgICAgIGNvbnN0IGlzQ3VycmVudEFuaW1hdGlvbiA9IGN1cnJlbnRBbmltYXRpb25OYW1lLmluY2x1ZGVzKFxuICAgICAgICAgICAgZXZlbnQuYW5pbWF0aW9uTmFtZVxuICAgICAgICAgICk7XG4gICAgICAgICAgaWYgKGV2ZW50LnRhcmdldCA9PT0gbm9kZTIgJiYgaXNDdXJyZW50QW5pbWF0aW9uKSB7XG4gICAgICAgICAgICBzZW5kKFwiQU5JTUFUSU9OX0VORFwiKTtcbiAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgICAgIGNvbnN0IGhhbmRsZUFuaW1hdGlvblN0YXJ0ID0gKGV2ZW50KSA9PiB7XG4gICAgICAgICAgaWYgKGV2ZW50LnRhcmdldCA9PT0gbm9kZTIpIHtcbiAgICAgICAgICAgIHByZXZBbmltYXRpb25OYW1lID0gZ2V0QW5pbWF0aW9uTmFtZShzdHlsZXMpO1xuICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICAgICAgbm9kZTIuYWRkRXZlbnRMaXN0ZW5lcihcImFuaW1hdGlvbnN0YXJ0XCIsIGhhbmRsZUFuaW1hdGlvblN0YXJ0KTtcbiAgICAgICAgbm9kZTIuYWRkRXZlbnRMaXN0ZW5lcihcImFuaW1hdGlvbmNhbmNlbFwiLCBoYW5kbGVBbmltYXRpb25FbmQpO1xuICAgICAgICBub2RlMi5hZGRFdmVudExpc3RlbmVyKFwiYW5pbWF0aW9uZW5kXCIsIGhhbmRsZUFuaW1hdGlvbkVuZCk7XG4gICAgICAgIG9uQ2xlYW51cCgoKSA9PiB7XG4gICAgICAgICAgbm9kZTIucmVtb3ZlRXZlbnRMaXN0ZW5lcihcImFuaW1hdGlvbnN0YXJ0XCIsIGhhbmRsZUFuaW1hdGlvblN0YXJ0KTtcbiAgICAgICAgICBub2RlMi5yZW1vdmVFdmVudExpc3RlbmVyKFwiYW5pbWF0aW9uY2FuY2VsXCIsIGhhbmRsZUFuaW1hdGlvbkVuZCk7XG4gICAgICAgICAgbm9kZTIucmVtb3ZlRXZlbnRMaXN0ZW5lcihcImFuaW1hdGlvbmVuZFwiLCBoYW5kbGVBbmltYXRpb25FbmQpO1xuICAgICAgICB9KTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHNlbmQoXCJBTklNQVRJT05fRU5EXCIpO1xuICAgICAgfVxuICAgIH0pXG4gICk7XG4gIHJldHVybiB7XG4gICAgaXNQcmVzZW50OiAoKSA9PiBbXCJtb3VudGVkXCIsIFwidW5tb3VudFN1c3BlbmRlZFwiXS5pbmNsdWRlcyhzdGF0ZSgpKSxcbiAgICBzZXRSZWY6IChlbCkgPT4ge1xuICAgICAgaWYgKGVsKSB7XG4gICAgICAgIHN0eWxlcyA9IGdldENvbXB1dGVkU3R5bGUoZWwpO1xuICAgICAgfVxuICAgICAgc2V0Tm9kZShlbCk7XG4gICAgfVxuICB9O1xufVxuZnVuY3Rpb24gZ2V0QW5pbWF0aW9uTmFtZShzdHlsZXMpIHtcbiAgcmV0dXJuIHN0eWxlcz8uYW5pbWF0aW9uTmFtZSB8fCBcIm5vbmVcIjtcbn1cbmZ1bmN0aW9uIGNyZWF0ZVN0YXRlTWFjaGluZShpbml0aWFsU3RhdGUsIG1hY2hpbmUpIHtcbiAgY29uc3QgcmVkdWNlID0gKHN0YXRlMiwgZXZlbnQpID0+IHtcbiAgICBjb25zdCBuZXh0U3RhdGUgPSBtYWNoaW5lW3N0YXRlMl1bZXZlbnRdO1xuICAgIHJldHVybiBuZXh0U3RhdGUgPz8gc3RhdGUyO1xuICB9O1xuICBjb25zdCBbc3RhdGUsIHNldFN0YXRlXSA9IGNyZWF0ZVNpZ25hbChpbml0aWFsU3RhdGUpO1xuICBjb25zdCBzZW5kID0gKGV2ZW50KSA9PiB7XG4gICAgc2V0U3RhdGUoKHByZXYpID0+IHJlZHVjZShwcmV2LCBldmVudCkpO1xuICB9O1xuICByZXR1cm4gW3N0YXRlLCBzZW5kXTtcbn1cblxuLy8gLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL0Brb2JhbHRlK2NvcmVAMC4xMy4xX3NvbGlkLWpzQDEuOC4xNy9ub2RlX21vZHVsZXMvQGtvYmFsdGUvY29yZS9kaXN0L2NodW5rL1NORldTRU9KLmpzXG5mdW5jdGlvbiBQb2x5bW9ycGhpYyhwcm9wcykge1xuICBjb25zdCBbbG9jYWwsIG90aGVyc10gPSBzcGxpdFByb3BzKHByb3BzLCBbXCJhc1wiXSk7XG4gIGlmICghbG9jYWwuYXMpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJba29iYWx0ZV06IFBvbHltb3JwaGljIGlzIG1pc3NpbmcgdGhlIHJlcXVpcmVkIGBhc2AgcHJvcC5cIik7XG4gIH1cbiAgcmV0dXJuIChcbiAgICAvLyBAdHMtaWdub3JlOiBQcm9wcyBhcmUgdmFsaWQgYnV0IG5vdCB3b3J0aCBjYWxjdWxhdGluZ1xuICAgIGNyZWF0ZUNvbXBvbmVudChEeW5hbWljLCBtZXJnZVByb3BzKHtcbiAgICAgIGdldCBjb21wb25lbnQoKSB7XG4gICAgICAgIHJldHVybiBsb2NhbC5hcztcbiAgICAgIH1cbiAgICB9LCBvdGhlcnMpKVxuICApO1xufVxuXG4vLyAuLi8uLi9ub2RlX21vZHVsZXMvLnBucG0vQGtvYmFsdGUrY29yZUAwLjEzLjFfc29saWQtanNAMS44LjE3L25vZGVfbW9kdWxlcy9Aa29iYWx0ZS9jb3JlL2Rpc3QvY2h1bmsvNVpLQUU0VlouanNcbnZhciBfX2RlZlByb3AgPSBPYmplY3QuZGVmaW5lUHJvcGVydHk7XG52YXIgX19leHBvcnQgPSAodGFyZ2V0LCBhbGwpID0+IHtcbiAgZm9yICh2YXIgbmFtZSBpbiBhbGwpXG4gICAgX19kZWZQcm9wKHRhcmdldCwgbmFtZSwgeyBnZXQ6IGFsbFtuYW1lXSwgZW51bWVyYWJsZTogdHJ1ZSB9KTtcbn07XG5cbi8vIC4uLy4uL25vZGVfbW9kdWxlcy8ucG5wbS9Aa29iYWx0ZStjb3JlQDAuMTMuMV9zb2xpZC1qc0AxLjguMTcvbm9kZV9tb2R1bGVzL0Brb2JhbHRlL2NvcmUvZGlzdC9jaHVuay9FNFIyRU1NNC5qc1xuZnVuY3Rpb24gY3JlYXRlUmVnaXN0ZXJJZChzZXR0ZXIpIHtcbiAgcmV0dXJuIChpZCkgPT4ge1xuICAgIHNldHRlcihpZCk7XG4gICAgcmV0dXJuICgpID0+IHNldHRlcih2b2lkIDApO1xuICB9O1xufVxuXG4vLyAuLi8uLi9ub2RlX21vZHVsZXMvLnBucG0vQGtvYmFsdGUrY29yZUAwLjEzLjFfc29saWQtanNAMS44LjE3L25vZGVfbW9kdWxlcy9Aa29iYWx0ZS9jb3JlL2Rpc3QvY2h1bmsvM1FENTM3VFQuanNcbmZ1bmN0aW9uIGNyZWF0ZVRhZ05hbWUocmVmLCBmYWxsYmFjaykge1xuICBjb25zdCBbdGFnTmFtZSwgc2V0VGFnTmFtZV0gPSBjcmVhdGVTaWduYWwoc3RyaW5nT3JVbmRlZmluZWQoZmFsbGJhY2s/LigpKSk7XG4gIGNyZWF0ZUVmZmVjdCgoKSA9PiB7XG4gICAgc2V0VGFnTmFtZShyZWYoKT8udGFnTmFtZS50b0xvd2VyQ2FzZSgpIHx8IHN0cmluZ09yVW5kZWZpbmVkKGZhbGxiYWNrPy4oKSkpO1xuICB9KTtcbiAgcmV0dXJuIHRhZ05hbWU7XG59XG5mdW5jdGlvbiBzdHJpbmdPclVuZGVmaW5lZCh2YWx1ZSkge1xuICByZXR1cm4gaXNTdHJpbmcodmFsdWUpID8gdmFsdWUgOiB2b2lkIDA7XG59XG5cbi8vIC4uLy4uL25vZGVfbW9kdWxlcy8ucG5wbS9Aa29iYWx0ZStjb3JlQDAuMTMuMV9zb2xpZC1qc0AxLjguMTcvbm9kZV9tb2R1bGVzL0Brb2JhbHRlL2NvcmUvZGlzdC9jaHVuay9JWEdUQ0NBNy5qc1xudmFyIEZPUk1fQ09OVFJPTF9QUk9QX05BTUVTID0gW1wiaWRcIiwgXCJuYW1lXCIsIFwidmFsaWRhdGlvblN0YXRlXCIsIFwicmVxdWlyZWRcIiwgXCJkaXNhYmxlZFwiLCBcInJlYWRPbmx5XCJdO1xuZnVuY3Rpb24gY3JlYXRlRm9ybUNvbnRyb2wocHJvcHMpIHtcbiAgY29uc3QgZGVmYXVsdElkID0gYGZvcm0tY29udHJvbC0ke2NyZWF0ZVVuaXF1ZUlkKCl9YDtcbiAgY29uc3QgbWVyZ2VkUHJvcHMgPSBtZXJnZURlZmF1bHRQcm9wcyh7XG4gICAgaWQ6IGRlZmF1bHRJZFxuICB9LCBwcm9wcyk7XG4gIGNvbnN0IFtsYWJlbElkLCBzZXRMYWJlbElkXSA9IGNyZWF0ZVNpZ25hbCgpO1xuICBjb25zdCBbZmllbGRJZCwgc2V0RmllbGRJZF0gPSBjcmVhdGVTaWduYWwoKTtcbiAgY29uc3QgW2Rlc2NyaXB0aW9uSWQsIHNldERlc2NyaXB0aW9uSWRdID0gY3JlYXRlU2lnbmFsKCk7XG4gIGNvbnN0IFtlcnJvck1lc3NhZ2VJZCwgc2V0RXJyb3JNZXNzYWdlSWRdID0gY3JlYXRlU2lnbmFsKCk7XG4gIGNvbnN0IGdldEFyaWFMYWJlbGxlZEJ5ID0gKGZpZWxkSWQyLCBmaWVsZEFyaWFMYWJlbCwgZmllbGRBcmlhTGFiZWxsZWRCeSkgPT4ge1xuICAgIGNvbnN0IGhhc0FyaWFMYWJlbGxlZEJ5ID0gZmllbGRBcmlhTGFiZWxsZWRCeSAhPSBudWxsIHx8IGxhYmVsSWQoKSAhPSBudWxsO1xuICAgIHJldHVybiBbXG4gICAgICBmaWVsZEFyaWFMYWJlbGxlZEJ5LFxuICAgICAgbGFiZWxJZCgpLFxuICAgICAgLy8gSWYgdGhlcmUgaXMgYm90aCBhbiBhcmlhLWxhYmVsIGFuZCBhcmlhLWxhYmVsbGVkYnksIGFkZCB0aGUgZmllbGQgaXRzZWxmIGhhcyBhbiBhcmlhLWxhYmVsbGVkYnlcbiAgICAgIGhhc0FyaWFMYWJlbGxlZEJ5ICYmIGZpZWxkQXJpYUxhYmVsICE9IG51bGwgPyBmaWVsZElkMiA6IHZvaWQgMFxuICAgIF0uZmlsdGVyKEJvb2xlYW4pLmpvaW4oXCIgXCIpIHx8IHZvaWQgMDtcbiAgfTtcbiAgY29uc3QgZ2V0QXJpYURlc2NyaWJlZEJ5ID0gKGZpZWxkQXJpYURlc2NyaWJlZEJ5KSA9PiB7XG4gICAgcmV0dXJuIFtcbiAgICAgIGRlc2NyaXB0aW9uSWQoKSxcbiAgICAgIC8vIFVzZSBhcmlhLWRlc2NyaWJlZGJ5IGZvciBlcnJvciBtZXNzYWdlIGJlY2F1c2UgYXJpYS1lcnJvcm1lc3NhZ2UgaXMgdW5zdXBwb3J0ZWQgdXNpbmcgVm9pY2VPdmVyIG9yIE5WREEuXG4gICAgICAvLyBTZWUgaHR0cHM6Ly9naXRodWIuY29tL2Fkb2JlL3JlYWN0LXNwZWN0cnVtL2lzc3Vlcy8xMzQ2I2lzc3VlY29tbWVudC03NDAxMzYyNjhcbiAgICAgIGVycm9yTWVzc2FnZUlkKCksXG4gICAgICBmaWVsZEFyaWFEZXNjcmliZWRCeVxuICAgIF0uZmlsdGVyKEJvb2xlYW4pLmpvaW4oXCIgXCIpIHx8IHZvaWQgMDtcbiAgfTtcbiAgY29uc3QgZGF0YXNldCA9IGNyZWF0ZU1lbW8oKCkgPT4gKHtcbiAgICBcImRhdGEtdmFsaWRcIjogYWNjZXNzKG1lcmdlZFByb3BzLnZhbGlkYXRpb25TdGF0ZSkgPT09IFwidmFsaWRcIiA/IFwiXCIgOiB2b2lkIDAsXG4gICAgXCJkYXRhLWludmFsaWRcIjogYWNjZXNzKG1lcmdlZFByb3BzLnZhbGlkYXRpb25TdGF0ZSkgPT09IFwiaW52YWxpZFwiID8gXCJcIiA6IHZvaWQgMCxcbiAgICBcImRhdGEtcmVxdWlyZWRcIjogYWNjZXNzKG1lcmdlZFByb3BzLnJlcXVpcmVkKSA/IFwiXCIgOiB2b2lkIDAsXG4gICAgXCJkYXRhLWRpc2FibGVkXCI6IGFjY2VzcyhtZXJnZWRQcm9wcy5kaXNhYmxlZCkgPyBcIlwiIDogdm9pZCAwLFxuICAgIFwiZGF0YS1yZWFkb25seVwiOiBhY2Nlc3MobWVyZ2VkUHJvcHMucmVhZE9ubHkpID8gXCJcIiA6IHZvaWQgMFxuICB9KSk7XG4gIGNvbnN0IGZvcm1Db250cm9sQ29udGV4dCA9IHtcbiAgICBuYW1lOiAoKSA9PiBhY2Nlc3MobWVyZ2VkUHJvcHMubmFtZSkgPz8gYWNjZXNzKG1lcmdlZFByb3BzLmlkKSxcbiAgICBkYXRhc2V0LFxuICAgIHZhbGlkYXRpb25TdGF0ZTogKCkgPT4gYWNjZXNzKG1lcmdlZFByb3BzLnZhbGlkYXRpb25TdGF0ZSksXG4gICAgaXNSZXF1aXJlZDogKCkgPT4gYWNjZXNzKG1lcmdlZFByb3BzLnJlcXVpcmVkKSxcbiAgICBpc0Rpc2FibGVkOiAoKSA9PiBhY2Nlc3MobWVyZ2VkUHJvcHMuZGlzYWJsZWQpLFxuICAgIGlzUmVhZE9ubHk6ICgpID0+IGFjY2VzcyhtZXJnZWRQcm9wcy5yZWFkT25seSksXG4gICAgbGFiZWxJZCxcbiAgICBmaWVsZElkLFxuICAgIGRlc2NyaXB0aW9uSWQsXG4gICAgZXJyb3JNZXNzYWdlSWQsXG4gICAgZ2V0QXJpYUxhYmVsbGVkQnksXG4gICAgZ2V0QXJpYURlc2NyaWJlZEJ5LFxuICAgIGdlbmVyYXRlSWQ6IGNyZWF0ZUdlbmVyYXRlSWQoKCkgPT4gYWNjZXNzKG1lcmdlZFByb3BzLmlkKSksXG4gICAgcmVnaXN0ZXJMYWJlbDogY3JlYXRlUmVnaXN0ZXJJZChzZXRMYWJlbElkKSxcbiAgICByZWdpc3RlckZpZWxkOiBjcmVhdGVSZWdpc3RlcklkKHNldEZpZWxkSWQpLFxuICAgIHJlZ2lzdGVyRGVzY3JpcHRpb246IGNyZWF0ZVJlZ2lzdGVySWQoc2V0RGVzY3JpcHRpb25JZCksXG4gICAgcmVnaXN0ZXJFcnJvck1lc3NhZ2U6IGNyZWF0ZVJlZ2lzdGVySWQoc2V0RXJyb3JNZXNzYWdlSWQpXG4gIH07XG4gIHJldHVybiB7XG4gICAgZm9ybUNvbnRyb2xDb250ZXh0XG4gIH07XG59XG52YXIgRm9ybUNvbnRyb2xDb250ZXh0ID0gY3JlYXRlQ29udGV4dCgpO1xuZnVuY3Rpb24gdXNlRm9ybUNvbnRyb2xDb250ZXh0KCkge1xuICBjb25zdCBjb250ZXh0ID0gdXNlQ29udGV4dChGb3JtQ29udHJvbENvbnRleHQpO1xuICBpZiAoY29udGV4dCA9PT0gdm9pZCAwKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiW2tvYmFsdGVdOiBgdXNlRm9ybUNvbnRyb2xDb250ZXh0YCBtdXN0IGJlIHVzZWQgd2l0aGluIGEgYEZvcm1Db250cm9sQ29udGV4dC5Qcm92aWRlcmAgY29tcG9uZW50XCIpO1xuICB9XG4gIHJldHVybiBjb250ZXh0O1xufVxuZnVuY3Rpb24gRm9ybUNvbnRyb2xEZXNjcmlwdGlvbihwcm9wcykge1xuICBjb25zdCBjb250ZXh0ID0gdXNlRm9ybUNvbnRyb2xDb250ZXh0KCk7XG4gIGNvbnN0IG1lcmdlZFByb3BzID0gbWVyZ2VEZWZhdWx0UHJvcHMoe1xuICAgIGlkOiBjb250ZXh0LmdlbmVyYXRlSWQoXCJkZXNjcmlwdGlvblwiKVxuICB9LCBwcm9wcyk7XG4gIGNyZWF0ZUVmZmVjdCgoKSA9PiBvbkNsZWFudXAoY29udGV4dC5yZWdpc3RlckRlc2NyaXB0aW9uKG1lcmdlZFByb3BzLmlkKSkpO1xuICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KFBvbHltb3JwaGljLCBtZXJnZVByb3BzKHtcbiAgICBhczogXCJkaXZcIlxuICB9LCAoKSA9PiBjb250ZXh0LmRhdGFzZXQoKSwgbWVyZ2VkUHJvcHMpKTtcbn1cbmZ1bmN0aW9uIEZvcm1Db250cm9sRXJyb3JNZXNzYWdlKHByb3BzKSB7XG4gIGNvbnN0IGNvbnRleHQgPSB1c2VGb3JtQ29udHJvbENvbnRleHQoKTtcbiAgY29uc3QgbWVyZ2VkUHJvcHMgPSBtZXJnZURlZmF1bHRQcm9wcyh7XG4gICAgaWQ6IGNvbnRleHQuZ2VuZXJhdGVJZChcImVycm9yLW1lc3NhZ2VcIilcbiAgfSwgcHJvcHMpO1xuICBjb25zdCBbbG9jYWwsIG90aGVyc10gPSBzcGxpdFByb3BzKG1lcmdlZFByb3BzLCBbXCJmb3JjZU1vdW50XCJdKTtcbiAgY29uc3QgaXNJbnZhbGlkID0gKCkgPT4gY29udGV4dC52YWxpZGF0aW9uU3RhdGUoKSA9PT0gXCJpbnZhbGlkXCI7XG4gIGNyZWF0ZUVmZmVjdCgoKSA9PiB7XG4gICAgaWYgKCFpc0ludmFsaWQoKSkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBvbkNsZWFudXAoY29udGV4dC5yZWdpc3RlckVycm9yTWVzc2FnZShvdGhlcnMuaWQpKTtcbiAgfSk7XG4gIHJldHVybiBjcmVhdGVDb21wb25lbnQoU2hvdywge1xuICAgIGdldCB3aGVuKCkge1xuICAgICAgcmV0dXJuIGxvY2FsLmZvcmNlTW91bnQgfHwgaXNJbnZhbGlkKCk7XG4gICAgfSxcbiAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KFBvbHltb3JwaGljLCBtZXJnZVByb3BzKHtcbiAgICAgICAgYXM6IFwiZGl2XCJcbiAgICAgIH0sICgpID0+IGNvbnRleHQuZGF0YXNldCgpLCBvdGhlcnMpKTtcbiAgICB9XG4gIH0pO1xufVxuZnVuY3Rpb24gRm9ybUNvbnRyb2xMYWJlbChwcm9wcykge1xuICBsZXQgcmVmO1xuICBjb25zdCBjb250ZXh0ID0gdXNlRm9ybUNvbnRyb2xDb250ZXh0KCk7XG4gIGNvbnN0IG1lcmdlZFByb3BzID0gbWVyZ2VEZWZhdWx0UHJvcHMoe1xuICAgIGlkOiBjb250ZXh0LmdlbmVyYXRlSWQoXCJsYWJlbFwiKVxuICB9LCBwcm9wcyk7XG4gIGNvbnN0IFtsb2NhbCwgb3RoZXJzXSA9IHNwbGl0UHJvcHMobWVyZ2VkUHJvcHMsIFtcInJlZlwiXSk7XG4gIGNvbnN0IHRhZ05hbWUgPSBjcmVhdGVUYWdOYW1lKCgpID0+IHJlZiwgKCkgPT4gXCJsYWJlbFwiKTtcbiAgY3JlYXRlRWZmZWN0KCgpID0+IG9uQ2xlYW51cChjb250ZXh0LnJlZ2lzdGVyTGFiZWwob3RoZXJzLmlkKSkpO1xuICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KFBvbHltb3JwaGljLCBtZXJnZVByb3BzKHtcbiAgICBhczogXCJsYWJlbFwiLFxuICAgIHJlZihyJCkge1xuICAgICAgY29uc3QgX3JlZiQgPSBtZXJnZVJlZnMoKGVsKSA9PiByZWYgPSBlbCwgbG9jYWwucmVmKTtcbiAgICAgIHR5cGVvZiBfcmVmJCA9PT0gXCJmdW5jdGlvblwiICYmIF9yZWYkKHIkKTtcbiAgICB9LFxuICAgIGdldCBbXCJmb3JcIl0oKSB7XG4gICAgICByZXR1cm4gY3JlYXRlTWVtbygoKSA9PiB0YWdOYW1lKCkgPT09IFwibGFiZWxcIikoKSA/IGNvbnRleHQuZmllbGRJZCgpIDogdm9pZCAwO1xuICAgIH1cbiAgfSwgKCkgPT4gY29udGV4dC5kYXRhc2V0KCksIG90aGVycykpO1xufVxuXG4vLyAuLi8uLi9ub2RlX21vZHVsZXMvLnBucG0vQGtvYmFsdGUrY29yZUAwLjEzLjFfc29saWQtanNAMS44LjE3L25vZGVfbW9kdWxlcy9Aa29iYWx0ZS9jb3JlL2Rpc3QvY2h1bmsvQU5OM0EyUU0uanNcbmZ1bmN0aW9uIGNyZWF0ZUZvcm1SZXNldExpc3RlbmVyKGVsZW1lbnQsIGhhbmRsZXIpIHtcbiAgY3JlYXRlRWZmZWN0KFxuICAgIG9uKGVsZW1lbnQsIChlbGVtZW50MikgPT4ge1xuICAgICAgaWYgKGVsZW1lbnQyID09IG51bGwpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgICAgY29uc3QgZm9ybSA9IGdldENsb3Nlc3RGb3JtKGVsZW1lbnQyKTtcbiAgICAgIGlmIChmb3JtID09IG51bGwpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgICAgZm9ybS5hZGRFdmVudExpc3RlbmVyKFwicmVzZXRcIiwgaGFuZGxlciwgeyBwYXNzaXZlOiB0cnVlIH0pO1xuICAgICAgb25DbGVhbnVwKCgpID0+IHtcbiAgICAgICAgZm9ybS5yZW1vdmVFdmVudExpc3RlbmVyKFwicmVzZXRcIiwgaGFuZGxlcik7XG4gICAgICB9KTtcbiAgICB9KVxuICApO1xufVxuZnVuY3Rpb24gZ2V0Q2xvc2VzdEZvcm0oZWxlbWVudCkge1xuICByZXR1cm4gaXNGb3JtRWxlbWVudChlbGVtZW50KSA/IGVsZW1lbnQuZm9ybSA6IGVsZW1lbnQuY2xvc2VzdChcImZvcm1cIik7XG59XG5mdW5jdGlvbiBpc0Zvcm1FbGVtZW50KGVsZW1lbnQpIHtcbiAgcmV0dXJuIGVsZW1lbnQubWF0Y2hlcyhcInRleHRhcmVhLCBpbnB1dCwgc2VsZWN0LCBidXR0b25cIik7XG59XG5cbi8vIC4uLy4uL25vZGVfbW9kdWxlcy8ucG5wbS9Aa29iYWx0ZStjb3JlQDAuMTMuMV9zb2xpZC1qc0AxLjguMTcvbm9kZV9tb2R1bGVzL0Brb2JhbHRlL2NvcmUvZGlzdC9jaHVuay9aS1lEREhNNi5qc1xudmFyIERBVEFfVE9QX0xBWUVSX0FUVFIgPSBcImRhdGEta2ItdG9wLWxheWVyXCI7XG52YXIgb3JpZ2luYWxCb2R5UG9pbnRlckV2ZW50cztcbnZhciBoYXNEaXNhYmxlZEJvZHlQb2ludGVyRXZlbnRzID0gZmFsc2U7XG52YXIgbGF5ZXJzID0gW107XG5mdW5jdGlvbiBpbmRleE9mKG5vZGUpIHtcbiAgcmV0dXJuIGxheWVycy5maW5kSW5kZXgoKGxheWVyKSA9PiBsYXllci5ub2RlID09PSBub2RlKTtcbn1cbmZ1bmN0aW9uIGZpbmQobm9kZSkge1xuICByZXR1cm4gbGF5ZXJzW2luZGV4T2Yobm9kZSldO1xufVxuZnVuY3Rpb24gaXNUb3BNb3N0TGF5ZXIobm9kZSkge1xuICByZXR1cm4gbGF5ZXJzW2xheWVycy5sZW5ndGggLSAxXS5ub2RlID09PSBub2RlO1xufVxuZnVuY3Rpb24gZ2V0UG9pbnRlckJsb2NraW5nTGF5ZXJzKCkge1xuICByZXR1cm4gbGF5ZXJzLmZpbHRlcigobGF5ZXIpID0+IGxheWVyLmlzUG9pbnRlckJsb2NraW5nKTtcbn1cbmZ1bmN0aW9uIGdldFRvcE1vc3RQb2ludGVyQmxvY2tpbmdMYXllcigpIHtcbiAgcmV0dXJuIFsuLi5nZXRQb2ludGVyQmxvY2tpbmdMYXllcnMoKV0uc2xpY2UoLTEpWzBdO1xufVxuZnVuY3Rpb24gaGFzUG9pbnRlckJsb2NraW5nTGF5ZXIoKSB7XG4gIHJldHVybiBnZXRQb2ludGVyQmxvY2tpbmdMYXllcnMoKS5sZW5ndGggPiAwO1xufVxuZnVuY3Rpb24gaXNCZWxvd1BvaW50ZXJCbG9ja2luZ0xheWVyKG5vZGUpIHtcbiAgY29uc3QgaGlnaGVzdEJsb2NraW5nSW5kZXggPSBpbmRleE9mKGdldFRvcE1vc3RQb2ludGVyQmxvY2tpbmdMYXllcigpPy5ub2RlKTtcbiAgcmV0dXJuIGluZGV4T2Yobm9kZSkgPCBoaWdoZXN0QmxvY2tpbmdJbmRleDtcbn1cbmZ1bmN0aW9uIGFkZExheWVyKGxheWVyKSB7XG4gIGxheWVycy5wdXNoKGxheWVyKTtcbn1cbmZ1bmN0aW9uIHJlbW92ZUxheWVyKG5vZGUpIHtcbiAgY29uc3QgaW5kZXggPSBpbmRleE9mKG5vZGUpO1xuICBpZiAoaW5kZXggPCAwKSB7XG4gICAgcmV0dXJuO1xuICB9XG4gIGxheWVycy5zcGxpY2UoaW5kZXgsIDEpO1xufVxuZnVuY3Rpb24gYXNzaWduUG9pbnRlckV2ZW50VG9MYXllcnMoKSB7XG4gIGZvciAoY29uc3Qge1xuICAgIG5vZGVcbiAgfSBvZiBsYXllcnMpIHtcbiAgICBub2RlLnN0eWxlLnBvaW50ZXJFdmVudHMgPSBpc0JlbG93UG9pbnRlckJsb2NraW5nTGF5ZXIobm9kZSkgPyBcIm5vbmVcIiA6IFwiYXV0b1wiO1xuICB9XG59XG5mdW5jdGlvbiBkaXNhYmxlQm9keVBvaW50ZXJFdmVudHMobm9kZSkge1xuICBpZiAoaGFzUG9pbnRlckJsb2NraW5nTGF5ZXIoKSAmJiAhaGFzRGlzYWJsZWRCb2R5UG9pbnRlckV2ZW50cykge1xuICAgIGNvbnN0IG93bmVyRG9jdW1lbnQgPSBnZXREb2N1bWVudChub2RlKTtcbiAgICBvcmlnaW5hbEJvZHlQb2ludGVyRXZlbnRzID0gZG9jdW1lbnQuYm9keS5zdHlsZS5wb2ludGVyRXZlbnRzO1xuICAgIG93bmVyRG9jdW1lbnQuYm9keS5zdHlsZS5wb2ludGVyRXZlbnRzID0gXCJub25lXCI7XG4gICAgaGFzRGlzYWJsZWRCb2R5UG9pbnRlckV2ZW50cyA9IHRydWU7XG4gIH1cbn1cbmZ1bmN0aW9uIHJlc3RvcmVCb2R5UG9pbnRlckV2ZW50cyhub2RlKSB7XG4gIGlmIChoYXNQb2ludGVyQmxvY2tpbmdMYXllcigpKSB7XG4gICAgcmV0dXJuO1xuICB9XG4gIGNvbnN0IG93bmVyRG9jdW1lbnQgPSBnZXREb2N1bWVudChub2RlKTtcbiAgb3duZXJEb2N1bWVudC5ib2R5LnN0eWxlLnBvaW50ZXJFdmVudHMgPSBvcmlnaW5hbEJvZHlQb2ludGVyRXZlbnRzO1xuICBpZiAob3duZXJEb2N1bWVudC5ib2R5LnN0eWxlLmxlbmd0aCA9PT0gMCkge1xuICAgIG93bmVyRG9jdW1lbnQuYm9keS5yZW1vdmVBdHRyaWJ1dGUoXCJzdHlsZVwiKTtcbiAgfVxuICBoYXNEaXNhYmxlZEJvZHlQb2ludGVyRXZlbnRzID0gZmFsc2U7XG59XG52YXIgbGF5ZXJTdGFjayA9IHtcbiAgbGF5ZXJzLFxuICBpc1RvcE1vc3RMYXllcixcbiAgaGFzUG9pbnRlckJsb2NraW5nTGF5ZXIsXG4gIGlzQmVsb3dQb2ludGVyQmxvY2tpbmdMYXllcixcbiAgYWRkTGF5ZXIsXG4gIHJlbW92ZUxheWVyLFxuICBpbmRleE9mLFxuICBmaW5kLFxuICBhc3NpZ25Qb2ludGVyRXZlbnRUb0xheWVycyxcbiAgZGlzYWJsZUJvZHlQb2ludGVyRXZlbnRzLFxuICByZXN0b3JlQm9keVBvaW50ZXJFdmVudHNcbn07XG5cbi8vIC4uLy4uL25vZGVfbW9kdWxlcy8ucG5wbS9Aa29iYWx0ZStjb3JlQDAuMTMuMV9zb2xpZC1qc0AxLjguMTcvbm9kZV9tb2R1bGVzL0Brb2JhbHRlL2NvcmUvZGlzdC9jaHVuay9FT1M0S1gzUC5qc1xudmFyIGJ1dHRvbl9leHBvcnRzID0ge307XG5fX2V4cG9ydChidXR0b25fZXhwb3J0cywge1xuICBCdXR0b246ICgpID0+IEJ1dHRvbixcbiAgUm9vdDogKCkgPT4gQnV0dG9uUm9vdFxufSk7XG52YXIgQlVUVE9OX0lOUFVUX1RZUEVTID0gW1xuICBcImJ1dHRvblwiLFxuICBcImNvbG9yXCIsXG4gIFwiZmlsZVwiLFxuICBcImltYWdlXCIsXG4gIFwicmVzZXRcIixcbiAgXCJzdWJtaXRcIlxuXTtcbmZ1bmN0aW9uIGlzQnV0dG9uKGVsZW1lbnQpIHtcbiAgY29uc3QgdGFnTmFtZSA9IGVsZW1lbnQudGFnTmFtZS50b0xvd2VyQ2FzZSgpO1xuICBpZiAodGFnTmFtZSA9PT0gXCJidXR0b25cIikge1xuICAgIHJldHVybiB0cnVlO1xuICB9XG4gIGlmICh0YWdOYW1lID09PSBcImlucHV0XCIgJiYgZWxlbWVudC50eXBlKSB7XG4gICAgcmV0dXJuIEJVVFRPTl9JTlBVVF9UWVBFUy5pbmRleE9mKGVsZW1lbnQudHlwZSkgIT09IC0xO1xuICB9XG4gIHJldHVybiBmYWxzZTtcbn1cbmZ1bmN0aW9uIEJ1dHRvblJvb3QocHJvcHMpIHtcbiAgbGV0IHJlZjtcbiAgY29uc3QgbWVyZ2VkUHJvcHMgPSBtZXJnZURlZmF1bHRQcm9wcyh7XG4gICAgdHlwZTogXCJidXR0b25cIlxuICB9LCBwcm9wcyk7XG4gIGNvbnN0IFtsb2NhbCwgb3RoZXJzXSA9IHNwbGl0UHJvcHMobWVyZ2VkUHJvcHMsIFtcInJlZlwiLCBcInR5cGVcIiwgXCJkaXNhYmxlZFwiXSk7XG4gIGNvbnN0IHRhZ05hbWUgPSBjcmVhdGVUYWdOYW1lKCgpID0+IHJlZiwgKCkgPT4gXCJidXR0b25cIik7XG4gIGNvbnN0IGlzTmF0aXZlQnV0dG9uID0gY3JlYXRlTWVtbygoKSA9PiB7XG4gICAgY29uc3QgZWxlbWVudFRhZ05hbWUgPSB0YWdOYW1lKCk7XG4gICAgaWYgKGVsZW1lbnRUYWdOYW1lID09IG51bGwpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgcmV0dXJuIGlzQnV0dG9uKHtcbiAgICAgIHRhZ05hbWU6IGVsZW1lbnRUYWdOYW1lLFxuICAgICAgdHlwZTogbG9jYWwudHlwZVxuICAgIH0pO1xuICB9KTtcbiAgY29uc3QgaXNOYXRpdmVJbnB1dCA9IGNyZWF0ZU1lbW8oKCkgPT4ge1xuICAgIHJldHVybiB0YWdOYW1lKCkgPT09IFwiaW5wdXRcIjtcbiAgfSk7XG4gIGNvbnN0IGlzTmF0aXZlTGluayA9IGNyZWF0ZU1lbW8oKCkgPT4ge1xuICAgIHJldHVybiB0YWdOYW1lKCkgPT09IFwiYVwiICYmIHJlZj8uZ2V0QXR0cmlidXRlKFwiaHJlZlwiKSAhPSBudWxsO1xuICB9KTtcbiAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChQb2x5bW9ycGhpYywgbWVyZ2VQcm9wcyh7XG4gICAgYXM6IFwiYnV0dG9uXCIsXG4gICAgcmVmKHIkKSB7XG4gICAgICBjb25zdCBfcmVmJCA9IG1lcmdlUmVmcygoZWwpID0+IHJlZiA9IGVsLCBsb2NhbC5yZWYpO1xuICAgICAgdHlwZW9mIF9yZWYkID09PSBcImZ1bmN0aW9uXCIgJiYgX3JlZiQociQpO1xuICAgIH0sXG4gICAgZ2V0IHR5cGUoKSB7XG4gICAgICByZXR1cm4gaXNOYXRpdmVCdXR0b24oKSB8fCBpc05hdGl2ZUlucHV0KCkgPyBsb2NhbC50eXBlIDogdm9pZCAwO1xuICAgIH0sXG4gICAgZ2V0IHJvbGUoKSB7XG4gICAgICByZXR1cm4gIWlzTmF0aXZlQnV0dG9uKCkgJiYgIWlzTmF0aXZlTGluaygpID8gXCJidXR0b25cIiA6IHZvaWQgMDtcbiAgICB9LFxuICAgIGdldCB0YWJJbmRleCgpIHtcbiAgICAgIHJldHVybiAhaXNOYXRpdmVCdXR0b24oKSAmJiAhaXNOYXRpdmVMaW5rKCkgJiYgIWxvY2FsLmRpc2FibGVkID8gMCA6IHZvaWQgMDtcbiAgICB9LFxuICAgIGdldCBkaXNhYmxlZCgpIHtcbiAgICAgIHJldHVybiBpc05hdGl2ZUJ1dHRvbigpIHx8IGlzTmF0aXZlSW5wdXQoKSA/IGxvY2FsLmRpc2FibGVkIDogdm9pZCAwO1xuICAgIH0sXG4gICAgZ2V0IFtcImFyaWEtZGlzYWJsZWRcIl0oKSB7XG4gICAgICByZXR1cm4gIWlzTmF0aXZlQnV0dG9uKCkgJiYgIWlzTmF0aXZlSW5wdXQoKSAmJiBsb2NhbC5kaXNhYmxlZCA/IHRydWUgOiB2b2lkIDA7XG4gICAgfSxcbiAgICBnZXQgW1wiZGF0YS1kaXNhYmxlZFwiXSgpIHtcbiAgICAgIHJldHVybiBsb2NhbC5kaXNhYmxlZCA/IFwiXCIgOiB2b2lkIDA7XG4gICAgfVxuICB9LCBvdGhlcnMpKTtcbn1cbnZhciBCdXR0b24gPSBCdXR0b25Sb290O1xuXG4vLyAuLi8uLi9ub2RlX21vZHVsZXMvLnBucG0vQGtvYmFsdGUrY29yZUAwLjEzLjFfc29saWQtanNAMS44LjE3L25vZGVfbW9kdWxlcy9Aa29iYWx0ZS9jb3JlL2Rpc3QvY2h1bmsvWUdEUVhRMkIuanNcbmZ1bmN0aW9uIGNyZWF0ZVRvZ2dsZVN0YXRlKHByb3BzID0ge30pIHtcbiAgY29uc3QgW2lzU2VsZWN0ZWQsIF9zZXRJc1NlbGVjdGVkXSA9IGNyZWF0ZUNvbnRyb2xsYWJsZUJvb2xlYW5TaWduYWwoe1xuICAgIHZhbHVlOiAoKSA9PiBhY2Nlc3MocHJvcHMuaXNTZWxlY3RlZCksXG4gICAgZGVmYXVsdFZhbHVlOiAoKSA9PiAhIWFjY2Vzcyhwcm9wcy5kZWZhdWx0SXNTZWxlY3RlZCksXG4gICAgb25DaGFuZ2U6ICh2YWx1ZSkgPT4gcHJvcHMub25TZWxlY3RlZENoYW5nZT8uKHZhbHVlKVxuICB9KTtcbiAgY29uc3Qgc2V0SXNTZWxlY3RlZCA9ICh2YWx1ZSkgPT4ge1xuICAgIGlmICghYWNjZXNzKHByb3BzLmlzUmVhZE9ubHkpICYmICFhY2Nlc3MocHJvcHMuaXNEaXNhYmxlZCkpIHtcbiAgICAgIF9zZXRJc1NlbGVjdGVkKHZhbHVlKTtcbiAgICB9XG4gIH07XG4gIGNvbnN0IHRvZ2dsZSA9ICgpID0+IHtcbiAgICBpZiAoIWFjY2Vzcyhwcm9wcy5pc1JlYWRPbmx5KSAmJiAhYWNjZXNzKHByb3BzLmlzRGlzYWJsZWQpKSB7XG4gICAgICBfc2V0SXNTZWxlY3RlZCghaXNTZWxlY3RlZCgpKTtcbiAgICB9XG4gIH07XG4gIHJldHVybiB7XG4gICAgaXNTZWxlY3RlZCxcbiAgICBzZXRJc1NlbGVjdGVkLFxuICAgIHRvZ2dsZVxuICB9O1xufVxuXG4vLyAuLi8uLi9ub2RlX21vZHVsZXMvLnBucG0vQGZsb2F0aW5nLXVpK3V0aWxzQDAuMS42L25vZGVfbW9kdWxlcy9AZmxvYXRpbmctdWkvdXRpbHMvZGlzdC9mbG9hdGluZy11aS51dGlscy5tanNcbnZhciBzaWRlcyA9IFtcInRvcFwiLCBcInJpZ2h0XCIsIFwiYm90dG9tXCIsIFwibGVmdFwiXTtcbnZhciBtaW4gPSBNYXRoLm1pbjtcbnZhciBtYXggPSBNYXRoLm1heDtcbnZhciBvcHBvc2l0ZVNpZGVNYXAgPSB7XG4gIGxlZnQ6IFwicmlnaHRcIixcbiAgcmlnaHQ6IFwibGVmdFwiLFxuICBib3R0b206IFwidG9wXCIsXG4gIHRvcDogXCJib3R0b21cIlxufTtcbnZhciBvcHBvc2l0ZUFsaWdubWVudE1hcCA9IHtcbiAgc3RhcnQ6IFwiZW5kXCIsXG4gIGVuZDogXCJzdGFydFwiXG59O1xuZnVuY3Rpb24gY2xhbXAyKHN0YXJ0LCB2YWx1ZSwgZW5kKSB7XG4gIHJldHVybiBtYXgoc3RhcnQsIG1pbih2YWx1ZSwgZW5kKSk7XG59XG5mdW5jdGlvbiBldmFsdWF0ZSh2YWx1ZSwgcGFyYW0pIHtcbiAgcmV0dXJuIHR5cGVvZiB2YWx1ZSA9PT0gXCJmdW5jdGlvblwiID8gdmFsdWUocGFyYW0pIDogdmFsdWU7XG59XG5mdW5jdGlvbiBnZXRTaWRlKHBsYWNlbWVudCkge1xuICByZXR1cm4gcGxhY2VtZW50LnNwbGl0KFwiLVwiKVswXTtcbn1cbmZ1bmN0aW9uIGdldEFsaWdubWVudChwbGFjZW1lbnQpIHtcbiAgcmV0dXJuIHBsYWNlbWVudC5zcGxpdChcIi1cIilbMV07XG59XG5mdW5jdGlvbiBnZXRPcHBvc2l0ZUF4aXMoYXhpcykge1xuICByZXR1cm4gYXhpcyA9PT0gXCJ4XCIgPyBcInlcIiA6IFwieFwiO1xufVxuZnVuY3Rpb24gZ2V0QXhpc0xlbmd0aChheGlzKSB7XG4gIHJldHVybiBheGlzID09PSBcInlcIiA/IFwiaGVpZ2h0XCIgOiBcIndpZHRoXCI7XG59XG5mdW5jdGlvbiBnZXRTaWRlQXhpcyhwbGFjZW1lbnQpIHtcbiAgcmV0dXJuIFtcInRvcFwiLCBcImJvdHRvbVwiXS5pbmNsdWRlcyhnZXRTaWRlKHBsYWNlbWVudCkpID8gXCJ5XCIgOiBcInhcIjtcbn1cbmZ1bmN0aW9uIGdldEFsaWdubWVudEF4aXMocGxhY2VtZW50KSB7XG4gIHJldHVybiBnZXRPcHBvc2l0ZUF4aXMoZ2V0U2lkZUF4aXMocGxhY2VtZW50KSk7XG59XG5mdW5jdGlvbiBnZXRBbGlnbm1lbnRTaWRlcyhwbGFjZW1lbnQsIHJlY3RzLCBydGwpIHtcbiAgaWYgKHJ0bCA9PT0gdm9pZCAwKSB7XG4gICAgcnRsID0gZmFsc2U7XG4gIH1cbiAgY29uc3QgYWxpZ25tZW50ID0gZ2V0QWxpZ25tZW50KHBsYWNlbWVudCk7XG4gIGNvbnN0IGFsaWdubWVudEF4aXMgPSBnZXRBbGlnbm1lbnRBeGlzKHBsYWNlbWVudCk7XG4gIGNvbnN0IGxlbmd0aCA9IGdldEF4aXNMZW5ndGgoYWxpZ25tZW50QXhpcyk7XG4gIGxldCBtYWluQWxpZ25tZW50U2lkZSA9IGFsaWdubWVudEF4aXMgPT09IFwieFwiID8gYWxpZ25tZW50ID09PSAocnRsID8gXCJlbmRcIiA6IFwic3RhcnRcIikgPyBcInJpZ2h0XCIgOiBcImxlZnRcIiA6IGFsaWdubWVudCA9PT0gXCJzdGFydFwiID8gXCJib3R0b21cIiA6IFwidG9wXCI7XG4gIGlmIChyZWN0cy5yZWZlcmVuY2VbbGVuZ3RoXSA+IHJlY3RzLmZsb2F0aW5nW2xlbmd0aF0pIHtcbiAgICBtYWluQWxpZ25tZW50U2lkZSA9IGdldE9wcG9zaXRlUGxhY2VtZW50KG1haW5BbGlnbm1lbnRTaWRlKTtcbiAgfVxuICByZXR1cm4gW21haW5BbGlnbm1lbnRTaWRlLCBnZXRPcHBvc2l0ZVBsYWNlbWVudChtYWluQWxpZ25tZW50U2lkZSldO1xufVxuZnVuY3Rpb24gZ2V0RXhwYW5kZWRQbGFjZW1lbnRzKHBsYWNlbWVudCkge1xuICBjb25zdCBvcHBvc2l0ZVBsYWNlbWVudCA9IGdldE9wcG9zaXRlUGxhY2VtZW50KHBsYWNlbWVudCk7XG4gIHJldHVybiBbZ2V0T3Bwb3NpdGVBbGlnbm1lbnRQbGFjZW1lbnQocGxhY2VtZW50KSwgb3Bwb3NpdGVQbGFjZW1lbnQsIGdldE9wcG9zaXRlQWxpZ25tZW50UGxhY2VtZW50KG9wcG9zaXRlUGxhY2VtZW50KV07XG59XG5mdW5jdGlvbiBnZXRPcHBvc2l0ZUFsaWdubWVudFBsYWNlbWVudChwbGFjZW1lbnQpIHtcbiAgcmV0dXJuIHBsYWNlbWVudC5yZXBsYWNlKC9zdGFydHxlbmQvZywgKGFsaWdubWVudCkgPT4gb3Bwb3NpdGVBbGlnbm1lbnRNYXBbYWxpZ25tZW50XSk7XG59XG5mdW5jdGlvbiBnZXRTaWRlTGlzdChzaWRlLCBpc1N0YXJ0LCBydGwpIHtcbiAgY29uc3QgbHIgPSBbXCJsZWZ0XCIsIFwicmlnaHRcIl07XG4gIGNvbnN0IHJsID0gW1wicmlnaHRcIiwgXCJsZWZ0XCJdO1xuICBjb25zdCB0YiA9IFtcInRvcFwiLCBcImJvdHRvbVwiXTtcbiAgY29uc3QgYnQgPSBbXCJib3R0b21cIiwgXCJ0b3BcIl07XG4gIHN3aXRjaCAoc2lkZSkge1xuICAgIGNhc2UgXCJ0b3BcIjpcbiAgICBjYXNlIFwiYm90dG9tXCI6XG4gICAgICBpZiAocnRsKVxuICAgICAgICByZXR1cm4gaXNTdGFydCA/IHJsIDogbHI7XG4gICAgICByZXR1cm4gaXNTdGFydCA/IGxyIDogcmw7XG4gICAgY2FzZSBcImxlZnRcIjpcbiAgICBjYXNlIFwicmlnaHRcIjpcbiAgICAgIHJldHVybiBpc1N0YXJ0ID8gdGIgOiBidDtcbiAgICBkZWZhdWx0OlxuICAgICAgcmV0dXJuIFtdO1xuICB9XG59XG5mdW5jdGlvbiBnZXRPcHBvc2l0ZUF4aXNQbGFjZW1lbnRzKHBsYWNlbWVudCwgZmxpcEFsaWdubWVudCwgZGlyZWN0aW9uLCBydGwpIHtcbiAgY29uc3QgYWxpZ25tZW50ID0gZ2V0QWxpZ25tZW50KHBsYWNlbWVudCk7XG4gIGxldCBsaXN0ID0gZ2V0U2lkZUxpc3QoZ2V0U2lkZShwbGFjZW1lbnQpLCBkaXJlY3Rpb24gPT09IFwic3RhcnRcIiwgcnRsKTtcbiAgaWYgKGFsaWdubWVudCkge1xuICAgIGxpc3QgPSBsaXN0Lm1hcCgoc2lkZSkgPT4gc2lkZSArIFwiLVwiICsgYWxpZ25tZW50KTtcbiAgICBpZiAoZmxpcEFsaWdubWVudCkge1xuICAgICAgbGlzdCA9IGxpc3QuY29uY2F0KGxpc3QubWFwKGdldE9wcG9zaXRlQWxpZ25tZW50UGxhY2VtZW50KSk7XG4gICAgfVxuICB9XG4gIHJldHVybiBsaXN0O1xufVxuZnVuY3Rpb24gZ2V0T3Bwb3NpdGVQbGFjZW1lbnQocGxhY2VtZW50KSB7XG4gIHJldHVybiBwbGFjZW1lbnQucmVwbGFjZSgvbGVmdHxyaWdodHxib3R0b218dG9wL2csIChzaWRlKSA9PiBvcHBvc2l0ZVNpZGVNYXBbc2lkZV0pO1xufVxuZnVuY3Rpb24gZXhwYW5kUGFkZGluZ09iamVjdChwYWRkaW5nKSB7XG4gIHJldHVybiB7XG4gICAgdG9wOiAwLFxuICAgIHJpZ2h0OiAwLFxuICAgIGJvdHRvbTogMCxcbiAgICBsZWZ0OiAwLFxuICAgIC4uLnBhZGRpbmdcbiAgfTtcbn1cbmZ1bmN0aW9uIGdldFBhZGRpbmdPYmplY3QocGFkZGluZykge1xuICByZXR1cm4gdHlwZW9mIHBhZGRpbmcgIT09IFwibnVtYmVyXCIgPyBleHBhbmRQYWRkaW5nT2JqZWN0KHBhZGRpbmcpIDoge1xuICAgIHRvcDogcGFkZGluZyxcbiAgICByaWdodDogcGFkZGluZyxcbiAgICBib3R0b206IHBhZGRpbmcsXG4gICAgbGVmdDogcGFkZGluZ1xuICB9O1xufVxuZnVuY3Rpb24gcmVjdFRvQ2xpZW50UmVjdChyZWN0KSB7XG4gIHJldHVybiB7XG4gICAgLi4ucmVjdCxcbiAgICB0b3A6IHJlY3QueSxcbiAgICBsZWZ0OiByZWN0LngsXG4gICAgcmlnaHQ6IHJlY3QueCArIHJlY3Qud2lkdGgsXG4gICAgYm90dG9tOiByZWN0LnkgKyByZWN0LmhlaWdodFxuICB9O1xufVxuXG4vLyAuLi8uLi9ub2RlX21vZHVsZXMvLnBucG0vQGZsb2F0aW5nLXVpK2NvcmVAMS41LjAvbm9kZV9tb2R1bGVzL0BmbG9hdGluZy11aS9jb3JlL2Rpc3QvZmxvYXRpbmctdWkuY29yZS5tanNcbmZ1bmN0aW9uIGNvbXB1dGVDb29yZHNGcm9tUGxhY2VtZW50KF9yZWYsIHBsYWNlbWVudCwgcnRsKSB7XG4gIGxldCB7XG4gICAgcmVmZXJlbmNlLFxuICAgIGZsb2F0aW5nXG4gIH0gPSBfcmVmO1xuICBjb25zdCBzaWRlQXhpcyA9IGdldFNpZGVBeGlzKHBsYWNlbWVudCk7XG4gIGNvbnN0IGFsaWdubWVudEF4aXMgPSBnZXRBbGlnbm1lbnRBeGlzKHBsYWNlbWVudCk7XG4gIGNvbnN0IGFsaWduTGVuZ3RoID0gZ2V0QXhpc0xlbmd0aChhbGlnbm1lbnRBeGlzKTtcbiAgY29uc3Qgc2lkZSA9IGdldFNpZGUocGxhY2VtZW50KTtcbiAgY29uc3QgaXNWZXJ0aWNhbCA9IHNpZGVBeGlzID09PSBcInlcIjtcbiAgY29uc3QgY29tbW9uWCA9IHJlZmVyZW5jZS54ICsgcmVmZXJlbmNlLndpZHRoIC8gMiAtIGZsb2F0aW5nLndpZHRoIC8gMjtcbiAgY29uc3QgY29tbW9uWSA9IHJlZmVyZW5jZS55ICsgcmVmZXJlbmNlLmhlaWdodCAvIDIgLSBmbG9hdGluZy5oZWlnaHQgLyAyO1xuICBjb25zdCBjb21tb25BbGlnbiA9IHJlZmVyZW5jZVthbGlnbkxlbmd0aF0gLyAyIC0gZmxvYXRpbmdbYWxpZ25MZW5ndGhdIC8gMjtcbiAgbGV0IGNvb3JkcztcbiAgc3dpdGNoIChzaWRlKSB7XG4gICAgY2FzZSBcInRvcFwiOlxuICAgICAgY29vcmRzID0ge1xuICAgICAgICB4OiBjb21tb25YLFxuICAgICAgICB5OiByZWZlcmVuY2UueSAtIGZsb2F0aW5nLmhlaWdodFxuICAgICAgfTtcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgXCJib3R0b21cIjpcbiAgICAgIGNvb3JkcyA9IHtcbiAgICAgICAgeDogY29tbW9uWCxcbiAgICAgICAgeTogcmVmZXJlbmNlLnkgKyByZWZlcmVuY2UuaGVpZ2h0XG4gICAgICB9O1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSBcInJpZ2h0XCI6XG4gICAgICBjb29yZHMgPSB7XG4gICAgICAgIHg6IHJlZmVyZW5jZS54ICsgcmVmZXJlbmNlLndpZHRoLFxuICAgICAgICB5OiBjb21tb25ZXG4gICAgICB9O1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSBcImxlZnRcIjpcbiAgICAgIGNvb3JkcyA9IHtcbiAgICAgICAgeDogcmVmZXJlbmNlLnggLSBmbG9hdGluZy53aWR0aCxcbiAgICAgICAgeTogY29tbW9uWVxuICAgICAgfTtcbiAgICAgIGJyZWFrO1xuICAgIGRlZmF1bHQ6XG4gICAgICBjb29yZHMgPSB7XG4gICAgICAgIHg6IHJlZmVyZW5jZS54LFxuICAgICAgICB5OiByZWZlcmVuY2UueVxuICAgICAgfTtcbiAgfVxuICBzd2l0Y2ggKGdldEFsaWdubWVudChwbGFjZW1lbnQpKSB7XG4gICAgY2FzZSBcInN0YXJ0XCI6XG4gICAgICBjb29yZHNbYWxpZ25tZW50QXhpc10gLT0gY29tbW9uQWxpZ24gKiAocnRsICYmIGlzVmVydGljYWwgPyAtMSA6IDEpO1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSBcImVuZFwiOlxuICAgICAgY29vcmRzW2FsaWdubWVudEF4aXNdICs9IGNvbW1vbkFsaWduICogKHJ0bCAmJiBpc1ZlcnRpY2FsID8gLTEgOiAxKTtcbiAgICAgIGJyZWFrO1xuICB9XG4gIHJldHVybiBjb29yZHM7XG59XG52YXIgY29tcHV0ZVBvc2l0aW9uID0gYXN5bmMgKHJlZmVyZW5jZSwgZmxvYXRpbmcsIGNvbmZpZykgPT4ge1xuICBjb25zdCB7XG4gICAgcGxhY2VtZW50ID0gXCJib3R0b21cIixcbiAgICBzdHJhdGVneSA9IFwiYWJzb2x1dGVcIixcbiAgICBtaWRkbGV3YXJlID0gW10sXG4gICAgcGxhdGZvcm06IHBsYXRmb3JtMlxuICB9ID0gY29uZmlnO1xuICBjb25zdCB2YWxpZE1pZGRsZXdhcmUgPSBtaWRkbGV3YXJlLmZpbHRlcihCb29sZWFuKTtcbiAgY29uc3QgcnRsID0gYXdhaXQgKHBsYXRmb3JtMi5pc1JUTCA9PSBudWxsID8gdm9pZCAwIDogcGxhdGZvcm0yLmlzUlRMKGZsb2F0aW5nKSk7XG4gIGxldCByZWN0cyA9IGF3YWl0IHBsYXRmb3JtMi5nZXRFbGVtZW50UmVjdHMoe1xuICAgIHJlZmVyZW5jZSxcbiAgICBmbG9hdGluZyxcbiAgICBzdHJhdGVneVxuICB9KTtcbiAgbGV0IHtcbiAgICB4LFxuICAgIHlcbiAgfSA9IGNvbXB1dGVDb29yZHNGcm9tUGxhY2VtZW50KHJlY3RzLCBwbGFjZW1lbnQsIHJ0bCk7XG4gIGxldCBzdGF0ZWZ1bFBsYWNlbWVudCA9IHBsYWNlbWVudDtcbiAgbGV0IG1pZGRsZXdhcmVEYXRhID0ge307XG4gIGxldCByZXNldENvdW50ID0gMDtcbiAgZm9yIChsZXQgaTIgPSAwOyBpMiA8IHZhbGlkTWlkZGxld2FyZS5sZW5ndGg7IGkyKyspIHtcbiAgICBjb25zdCB7XG4gICAgICBuYW1lLFxuICAgICAgZm5cbiAgICB9ID0gdmFsaWRNaWRkbGV3YXJlW2kyXTtcbiAgICBjb25zdCB7XG4gICAgICB4OiBuZXh0WCxcbiAgICAgIHk6IG5leHRZLFxuICAgICAgZGF0YSxcbiAgICAgIHJlc2V0XG4gICAgfSA9IGF3YWl0IGZuKHtcbiAgICAgIHgsXG4gICAgICB5LFxuICAgICAgaW5pdGlhbFBsYWNlbWVudDogcGxhY2VtZW50LFxuICAgICAgcGxhY2VtZW50OiBzdGF0ZWZ1bFBsYWNlbWVudCxcbiAgICAgIHN0cmF0ZWd5LFxuICAgICAgbWlkZGxld2FyZURhdGEsXG4gICAgICByZWN0cyxcbiAgICAgIHBsYXRmb3JtOiBwbGF0Zm9ybTIsXG4gICAgICBlbGVtZW50czoge1xuICAgICAgICByZWZlcmVuY2UsXG4gICAgICAgIGZsb2F0aW5nXG4gICAgICB9XG4gICAgfSk7XG4gICAgeCA9IG5leHRYICE9IG51bGwgPyBuZXh0WCA6IHg7XG4gICAgeSA9IG5leHRZICE9IG51bGwgPyBuZXh0WSA6IHk7XG4gICAgbWlkZGxld2FyZURhdGEgPSB7XG4gICAgICAuLi5taWRkbGV3YXJlRGF0YSxcbiAgICAgIFtuYW1lXToge1xuICAgICAgICAuLi5taWRkbGV3YXJlRGF0YVtuYW1lXSxcbiAgICAgICAgLi4uZGF0YVxuICAgICAgfVxuICAgIH07XG4gICAgaWYgKHJlc2V0ICYmIHJlc2V0Q291bnQgPD0gNTApIHtcbiAgICAgIHJlc2V0Q291bnQrKztcbiAgICAgIGlmICh0eXBlb2YgcmVzZXQgPT09IFwib2JqZWN0XCIpIHtcbiAgICAgICAgaWYgKHJlc2V0LnBsYWNlbWVudCkge1xuICAgICAgICAgIHN0YXRlZnVsUGxhY2VtZW50ID0gcmVzZXQucGxhY2VtZW50O1xuICAgICAgICB9XG4gICAgICAgIGlmIChyZXNldC5yZWN0cykge1xuICAgICAgICAgIHJlY3RzID0gcmVzZXQucmVjdHMgPT09IHRydWUgPyBhd2FpdCBwbGF0Zm9ybTIuZ2V0RWxlbWVudFJlY3RzKHtcbiAgICAgICAgICAgIHJlZmVyZW5jZSxcbiAgICAgICAgICAgIGZsb2F0aW5nLFxuICAgICAgICAgICAgc3RyYXRlZ3lcbiAgICAgICAgICB9KSA6IHJlc2V0LnJlY3RzO1xuICAgICAgICB9XG4gICAgICAgICh7XG4gICAgICAgICAgeCxcbiAgICAgICAgICB5XG4gICAgICAgIH0gPSBjb21wdXRlQ29vcmRzRnJvbVBsYWNlbWVudChyZWN0cywgc3RhdGVmdWxQbGFjZW1lbnQsIHJ0bCkpO1xuICAgICAgfVxuICAgICAgaTIgPSAtMTtcbiAgICAgIGNvbnRpbnVlO1xuICAgIH1cbiAgfVxuICByZXR1cm4ge1xuICAgIHgsXG4gICAgeSxcbiAgICBwbGFjZW1lbnQ6IHN0YXRlZnVsUGxhY2VtZW50LFxuICAgIHN0cmF0ZWd5LFxuICAgIG1pZGRsZXdhcmVEYXRhXG4gIH07XG59O1xuYXN5bmMgZnVuY3Rpb24gZGV0ZWN0T3ZlcmZsb3coc3RhdGUsIG9wdGlvbnMpIHtcbiAgdmFyIF9hd2FpdCRwbGF0Zm9ybSRpc0VsZTtcbiAgaWYgKG9wdGlvbnMgPT09IHZvaWQgMCkge1xuICAgIG9wdGlvbnMgPSB7fTtcbiAgfVxuICBjb25zdCB7XG4gICAgeCxcbiAgICB5LFxuICAgIHBsYXRmb3JtOiBwbGF0Zm9ybTIsXG4gICAgcmVjdHMsXG4gICAgZWxlbWVudHMsXG4gICAgc3RyYXRlZ3lcbiAgfSA9IHN0YXRlO1xuICBjb25zdCB7XG4gICAgYm91bmRhcnkgPSBcImNsaXBwaW5nQW5jZXN0b3JzXCIsXG4gICAgcm9vdEJvdW5kYXJ5ID0gXCJ2aWV3cG9ydFwiLFxuICAgIGVsZW1lbnRDb250ZXh0ID0gXCJmbG9hdGluZ1wiLFxuICAgIGFsdEJvdW5kYXJ5ID0gZmFsc2UsXG4gICAgcGFkZGluZyA9IDBcbiAgfSA9IGV2YWx1YXRlKG9wdGlvbnMsIHN0YXRlKTtcbiAgY29uc3QgcGFkZGluZ09iamVjdCA9IGdldFBhZGRpbmdPYmplY3QocGFkZGluZyk7XG4gIGNvbnN0IGFsdENvbnRleHQgPSBlbGVtZW50Q29udGV4dCA9PT0gXCJmbG9hdGluZ1wiID8gXCJyZWZlcmVuY2VcIiA6IFwiZmxvYXRpbmdcIjtcbiAgY29uc3QgZWxlbWVudCA9IGVsZW1lbnRzW2FsdEJvdW5kYXJ5ID8gYWx0Q29udGV4dCA6IGVsZW1lbnRDb250ZXh0XTtcbiAgY29uc3QgY2xpcHBpbmdDbGllbnRSZWN0ID0gcmVjdFRvQ2xpZW50UmVjdChhd2FpdCBwbGF0Zm9ybTIuZ2V0Q2xpcHBpbmdSZWN0KHtcbiAgICBlbGVtZW50OiAoKF9hd2FpdCRwbGF0Zm9ybSRpc0VsZSA9IGF3YWl0IChwbGF0Zm9ybTIuaXNFbGVtZW50ID09IG51bGwgPyB2b2lkIDAgOiBwbGF0Zm9ybTIuaXNFbGVtZW50KGVsZW1lbnQpKSkgIT0gbnVsbCA/IF9hd2FpdCRwbGF0Zm9ybSRpc0VsZSA6IHRydWUpID8gZWxlbWVudCA6IGVsZW1lbnQuY29udGV4dEVsZW1lbnQgfHwgYXdhaXQgKHBsYXRmb3JtMi5nZXREb2N1bWVudEVsZW1lbnQgPT0gbnVsbCA/IHZvaWQgMCA6IHBsYXRmb3JtMi5nZXREb2N1bWVudEVsZW1lbnQoZWxlbWVudHMuZmxvYXRpbmcpKSxcbiAgICBib3VuZGFyeSxcbiAgICByb290Qm91bmRhcnksXG4gICAgc3RyYXRlZ3lcbiAgfSkpO1xuICBjb25zdCByZWN0ID0gZWxlbWVudENvbnRleHQgPT09IFwiZmxvYXRpbmdcIiA/IHtcbiAgICAuLi5yZWN0cy5mbG9hdGluZyxcbiAgICB4LFxuICAgIHlcbiAgfSA6IHJlY3RzLnJlZmVyZW5jZTtcbiAgY29uc3Qgb2Zmc2V0UGFyZW50ID0gYXdhaXQgKHBsYXRmb3JtMi5nZXRPZmZzZXRQYXJlbnQgPT0gbnVsbCA/IHZvaWQgMCA6IHBsYXRmb3JtMi5nZXRPZmZzZXRQYXJlbnQoZWxlbWVudHMuZmxvYXRpbmcpKTtcbiAgY29uc3Qgb2Zmc2V0U2NhbGUgPSBhd2FpdCAocGxhdGZvcm0yLmlzRWxlbWVudCA9PSBudWxsID8gdm9pZCAwIDogcGxhdGZvcm0yLmlzRWxlbWVudChvZmZzZXRQYXJlbnQpKSA/IGF3YWl0IChwbGF0Zm9ybTIuZ2V0U2NhbGUgPT0gbnVsbCA/IHZvaWQgMCA6IHBsYXRmb3JtMi5nZXRTY2FsZShvZmZzZXRQYXJlbnQpKSB8fCB7XG4gICAgeDogMSxcbiAgICB5OiAxXG4gIH0gOiB7XG4gICAgeDogMSxcbiAgICB5OiAxXG4gIH07XG4gIGNvbnN0IGVsZW1lbnRDbGllbnRSZWN0ID0gcmVjdFRvQ2xpZW50UmVjdChwbGF0Zm9ybTIuY29udmVydE9mZnNldFBhcmVudFJlbGF0aXZlUmVjdFRvVmlld3BvcnRSZWxhdGl2ZVJlY3QgPyBhd2FpdCBwbGF0Zm9ybTIuY29udmVydE9mZnNldFBhcmVudFJlbGF0aXZlUmVjdFRvVmlld3BvcnRSZWxhdGl2ZVJlY3Qoe1xuICAgIHJlY3QsXG4gICAgb2Zmc2V0UGFyZW50LFxuICAgIHN0cmF0ZWd5XG4gIH0pIDogcmVjdCk7XG4gIHJldHVybiB7XG4gICAgdG9wOiAoY2xpcHBpbmdDbGllbnRSZWN0LnRvcCAtIGVsZW1lbnRDbGllbnRSZWN0LnRvcCArIHBhZGRpbmdPYmplY3QudG9wKSAvIG9mZnNldFNjYWxlLnksXG4gICAgYm90dG9tOiAoZWxlbWVudENsaWVudFJlY3QuYm90dG9tIC0gY2xpcHBpbmdDbGllbnRSZWN0LmJvdHRvbSArIHBhZGRpbmdPYmplY3QuYm90dG9tKSAvIG9mZnNldFNjYWxlLnksXG4gICAgbGVmdDogKGNsaXBwaW5nQ2xpZW50UmVjdC5sZWZ0IC0gZWxlbWVudENsaWVudFJlY3QubGVmdCArIHBhZGRpbmdPYmplY3QubGVmdCkgLyBvZmZzZXRTY2FsZS54LFxuICAgIHJpZ2h0OiAoZWxlbWVudENsaWVudFJlY3QucmlnaHQgLSBjbGlwcGluZ0NsaWVudFJlY3QucmlnaHQgKyBwYWRkaW5nT2JqZWN0LnJpZ2h0KSAvIG9mZnNldFNjYWxlLnhcbiAgfTtcbn1cbnZhciBhcnJvdyA9IChvcHRpb25zKSA9PiAoe1xuICBuYW1lOiBcImFycm93XCIsXG4gIG9wdGlvbnMsXG4gIGFzeW5jIGZuKHN0YXRlKSB7XG4gICAgY29uc3Qge1xuICAgICAgeCxcbiAgICAgIHksXG4gICAgICBwbGFjZW1lbnQsXG4gICAgICByZWN0cyxcbiAgICAgIHBsYXRmb3JtOiBwbGF0Zm9ybTIsXG4gICAgICBlbGVtZW50cyxcbiAgICAgIG1pZGRsZXdhcmVEYXRhXG4gICAgfSA9IHN0YXRlO1xuICAgIGNvbnN0IHtcbiAgICAgIGVsZW1lbnQsXG4gICAgICBwYWRkaW5nID0gMFxuICAgIH0gPSBldmFsdWF0ZShvcHRpb25zLCBzdGF0ZSkgfHwge307XG4gICAgaWYgKGVsZW1lbnQgPT0gbnVsbCkge1xuICAgICAgcmV0dXJuIHt9O1xuICAgIH1cbiAgICBjb25zdCBwYWRkaW5nT2JqZWN0ID0gZ2V0UGFkZGluZ09iamVjdChwYWRkaW5nKTtcbiAgICBjb25zdCBjb29yZHMgPSB7XG4gICAgICB4LFxuICAgICAgeVxuICAgIH07XG4gICAgY29uc3QgYXhpcyA9IGdldEFsaWdubWVudEF4aXMocGxhY2VtZW50KTtcbiAgICBjb25zdCBsZW5ndGggPSBnZXRBeGlzTGVuZ3RoKGF4aXMpO1xuICAgIGNvbnN0IGFycm93RGltZW5zaW9ucyA9IGF3YWl0IHBsYXRmb3JtMi5nZXREaW1lbnNpb25zKGVsZW1lbnQpO1xuICAgIGNvbnN0IGlzWUF4aXMgPSBheGlzID09PSBcInlcIjtcbiAgICBjb25zdCBtaW5Qcm9wID0gaXNZQXhpcyA/IFwidG9wXCIgOiBcImxlZnRcIjtcbiAgICBjb25zdCBtYXhQcm9wID0gaXNZQXhpcyA/IFwiYm90dG9tXCIgOiBcInJpZ2h0XCI7XG4gICAgY29uc3QgY2xpZW50UHJvcCA9IGlzWUF4aXMgPyBcImNsaWVudEhlaWdodFwiIDogXCJjbGllbnRXaWR0aFwiO1xuICAgIGNvbnN0IGVuZERpZmYgPSByZWN0cy5yZWZlcmVuY2VbbGVuZ3RoXSArIHJlY3RzLnJlZmVyZW5jZVtheGlzXSAtIGNvb3Jkc1theGlzXSAtIHJlY3RzLmZsb2F0aW5nW2xlbmd0aF07XG4gICAgY29uc3Qgc3RhcnREaWZmID0gY29vcmRzW2F4aXNdIC0gcmVjdHMucmVmZXJlbmNlW2F4aXNdO1xuICAgIGNvbnN0IGFycm93T2Zmc2V0UGFyZW50ID0gYXdhaXQgKHBsYXRmb3JtMi5nZXRPZmZzZXRQYXJlbnQgPT0gbnVsbCA/IHZvaWQgMCA6IHBsYXRmb3JtMi5nZXRPZmZzZXRQYXJlbnQoZWxlbWVudCkpO1xuICAgIGxldCBjbGllbnRTaXplID0gYXJyb3dPZmZzZXRQYXJlbnQgPyBhcnJvd09mZnNldFBhcmVudFtjbGllbnRQcm9wXSA6IDA7XG4gICAgaWYgKCFjbGllbnRTaXplIHx8ICFhd2FpdCAocGxhdGZvcm0yLmlzRWxlbWVudCA9PSBudWxsID8gdm9pZCAwIDogcGxhdGZvcm0yLmlzRWxlbWVudChhcnJvd09mZnNldFBhcmVudCkpKSB7XG4gICAgICBjbGllbnRTaXplID0gZWxlbWVudHMuZmxvYXRpbmdbY2xpZW50UHJvcF0gfHwgcmVjdHMuZmxvYXRpbmdbbGVuZ3RoXTtcbiAgICB9XG4gICAgY29uc3QgY2VudGVyVG9SZWZlcmVuY2UgPSBlbmREaWZmIC8gMiAtIHN0YXJ0RGlmZiAvIDI7XG4gICAgY29uc3QgbGFyZ2VzdFBvc3NpYmxlUGFkZGluZyA9IGNsaWVudFNpemUgLyAyIC0gYXJyb3dEaW1lbnNpb25zW2xlbmd0aF0gLyAyIC0gMTtcbiAgICBjb25zdCBtaW5QYWRkaW5nID0gbWluKHBhZGRpbmdPYmplY3RbbWluUHJvcF0sIGxhcmdlc3RQb3NzaWJsZVBhZGRpbmcpO1xuICAgIGNvbnN0IG1heFBhZGRpbmcgPSBtaW4ocGFkZGluZ09iamVjdFttYXhQcm9wXSwgbGFyZ2VzdFBvc3NpYmxlUGFkZGluZyk7XG4gICAgY29uc3QgbWluJDEgPSBtaW5QYWRkaW5nO1xuICAgIGNvbnN0IG1heDMgPSBjbGllbnRTaXplIC0gYXJyb3dEaW1lbnNpb25zW2xlbmd0aF0gLSBtYXhQYWRkaW5nO1xuICAgIGNvbnN0IGNlbnRlciA9IGNsaWVudFNpemUgLyAyIC0gYXJyb3dEaW1lbnNpb25zW2xlbmd0aF0gLyAyICsgY2VudGVyVG9SZWZlcmVuY2U7XG4gICAgY29uc3Qgb2Zmc2V0MyA9IGNsYW1wMihtaW4kMSwgY2VudGVyLCBtYXgzKTtcbiAgICBjb25zdCBzaG91bGRBZGRPZmZzZXQgPSAhbWlkZGxld2FyZURhdGEuYXJyb3cgJiYgZ2V0QWxpZ25tZW50KHBsYWNlbWVudCkgIT0gbnVsbCAmJiBjZW50ZXIgIT0gb2Zmc2V0MyAmJiByZWN0cy5yZWZlcmVuY2VbbGVuZ3RoXSAvIDIgLSAoY2VudGVyIDwgbWluJDEgPyBtaW5QYWRkaW5nIDogbWF4UGFkZGluZykgLSBhcnJvd0RpbWVuc2lvbnNbbGVuZ3RoXSAvIDIgPCAwO1xuICAgIGNvbnN0IGFsaWdubWVudE9mZnNldCA9IHNob3VsZEFkZE9mZnNldCA/IGNlbnRlciA8IG1pbiQxID8gY2VudGVyIC0gbWluJDEgOiBjZW50ZXIgLSBtYXgzIDogMDtcbiAgICByZXR1cm4ge1xuICAgICAgW2F4aXNdOiBjb29yZHNbYXhpc10gKyBhbGlnbm1lbnRPZmZzZXQsXG4gICAgICBkYXRhOiB7XG4gICAgICAgIFtheGlzXTogb2Zmc2V0MyxcbiAgICAgICAgY2VudGVyT2Zmc2V0OiBjZW50ZXIgLSBvZmZzZXQzIC0gYWxpZ25tZW50T2Zmc2V0LFxuICAgICAgICAuLi5zaG91bGRBZGRPZmZzZXQgJiYge1xuICAgICAgICAgIGFsaWdubWVudE9mZnNldFxuICAgICAgICB9XG4gICAgICB9LFxuICAgICAgcmVzZXQ6IHNob3VsZEFkZE9mZnNldFxuICAgIH07XG4gIH1cbn0pO1xudmFyIGZsaXAgPSBmdW5jdGlvbihvcHRpb25zKSB7XG4gIGlmIChvcHRpb25zID09PSB2b2lkIDApIHtcbiAgICBvcHRpb25zID0ge307XG4gIH1cbiAgcmV0dXJuIHtcbiAgICBuYW1lOiBcImZsaXBcIixcbiAgICBvcHRpb25zLFxuICAgIGFzeW5jIGZuKHN0YXRlKSB7XG4gICAgICB2YXIgX21pZGRsZXdhcmVEYXRhJGFycm93LCBfbWlkZGxld2FyZURhdGEkZmxpcDtcbiAgICAgIGNvbnN0IHtcbiAgICAgICAgcGxhY2VtZW50LFxuICAgICAgICBtaWRkbGV3YXJlRGF0YSxcbiAgICAgICAgcmVjdHMsXG4gICAgICAgIGluaXRpYWxQbGFjZW1lbnQsXG4gICAgICAgIHBsYXRmb3JtOiBwbGF0Zm9ybTIsXG4gICAgICAgIGVsZW1lbnRzXG4gICAgICB9ID0gc3RhdGU7XG4gICAgICBjb25zdCB7XG4gICAgICAgIG1haW5BeGlzOiBjaGVja01haW5BeGlzID0gdHJ1ZSxcbiAgICAgICAgY3Jvc3NBeGlzOiBjaGVja0Nyb3NzQXhpcyA9IHRydWUsXG4gICAgICAgIGZhbGxiYWNrUGxhY2VtZW50czogc3BlY2lmaWVkRmFsbGJhY2tQbGFjZW1lbnRzLFxuICAgICAgICBmYWxsYmFja1N0cmF0ZWd5ID0gXCJiZXN0Rml0XCIsXG4gICAgICAgIGZhbGxiYWNrQXhpc1NpZGVEaXJlY3Rpb24gPSBcIm5vbmVcIixcbiAgICAgICAgZmxpcEFsaWdubWVudCA9IHRydWUsXG4gICAgICAgIC4uLmRldGVjdE92ZXJmbG93T3B0aW9uc1xuICAgICAgfSA9IGV2YWx1YXRlKG9wdGlvbnMsIHN0YXRlKTtcbiAgICAgIGlmICgoX21pZGRsZXdhcmVEYXRhJGFycm93ID0gbWlkZGxld2FyZURhdGEuYXJyb3cpICE9IG51bGwgJiYgX21pZGRsZXdhcmVEYXRhJGFycm93LmFsaWdubWVudE9mZnNldCkge1xuICAgICAgICByZXR1cm4ge307XG4gICAgICB9XG4gICAgICBjb25zdCBzaWRlID0gZ2V0U2lkZShwbGFjZW1lbnQpO1xuICAgICAgY29uc3QgaXNCYXNlUGxhY2VtZW50ID0gZ2V0U2lkZShpbml0aWFsUGxhY2VtZW50KSA9PT0gaW5pdGlhbFBsYWNlbWVudDtcbiAgICAgIGNvbnN0IHJ0bCA9IGF3YWl0IChwbGF0Zm9ybTIuaXNSVEwgPT0gbnVsbCA/IHZvaWQgMCA6IHBsYXRmb3JtMi5pc1JUTChlbGVtZW50cy5mbG9hdGluZykpO1xuICAgICAgY29uc3QgZmFsbGJhY2tQbGFjZW1lbnRzID0gc3BlY2lmaWVkRmFsbGJhY2tQbGFjZW1lbnRzIHx8IChpc0Jhc2VQbGFjZW1lbnQgfHwgIWZsaXBBbGlnbm1lbnQgPyBbZ2V0T3Bwb3NpdGVQbGFjZW1lbnQoaW5pdGlhbFBsYWNlbWVudCldIDogZ2V0RXhwYW5kZWRQbGFjZW1lbnRzKGluaXRpYWxQbGFjZW1lbnQpKTtcbiAgICAgIGlmICghc3BlY2lmaWVkRmFsbGJhY2tQbGFjZW1lbnRzICYmIGZhbGxiYWNrQXhpc1NpZGVEaXJlY3Rpb24gIT09IFwibm9uZVwiKSB7XG4gICAgICAgIGZhbGxiYWNrUGxhY2VtZW50cy5wdXNoKC4uLmdldE9wcG9zaXRlQXhpc1BsYWNlbWVudHMoaW5pdGlhbFBsYWNlbWVudCwgZmxpcEFsaWdubWVudCwgZmFsbGJhY2tBeGlzU2lkZURpcmVjdGlvbiwgcnRsKSk7XG4gICAgICB9XG4gICAgICBjb25zdCBwbGFjZW1lbnRzMiA9IFtpbml0aWFsUGxhY2VtZW50LCAuLi5mYWxsYmFja1BsYWNlbWVudHNdO1xuICAgICAgY29uc3Qgb3ZlcmZsb3cgPSBhd2FpdCBkZXRlY3RPdmVyZmxvdyhzdGF0ZSwgZGV0ZWN0T3ZlcmZsb3dPcHRpb25zKTtcbiAgICAgIGNvbnN0IG92ZXJmbG93cyA9IFtdO1xuICAgICAgbGV0IG92ZXJmbG93c0RhdGEgPSAoKF9taWRkbGV3YXJlRGF0YSRmbGlwID0gbWlkZGxld2FyZURhdGEuZmxpcCkgPT0gbnVsbCA/IHZvaWQgMCA6IF9taWRkbGV3YXJlRGF0YSRmbGlwLm92ZXJmbG93cykgfHwgW107XG4gICAgICBpZiAoY2hlY2tNYWluQXhpcykge1xuICAgICAgICBvdmVyZmxvd3MucHVzaChvdmVyZmxvd1tzaWRlXSk7XG4gICAgICB9XG4gICAgICBpZiAoY2hlY2tDcm9zc0F4aXMpIHtcbiAgICAgICAgY29uc3Qgc2lkZXMyID0gZ2V0QWxpZ25tZW50U2lkZXMocGxhY2VtZW50LCByZWN0cywgcnRsKTtcbiAgICAgICAgb3ZlcmZsb3dzLnB1c2gob3ZlcmZsb3dbc2lkZXMyWzBdXSwgb3ZlcmZsb3dbc2lkZXMyWzFdXSk7XG4gICAgICB9XG4gICAgICBvdmVyZmxvd3NEYXRhID0gWy4uLm92ZXJmbG93c0RhdGEsIHtcbiAgICAgICAgcGxhY2VtZW50LFxuICAgICAgICBvdmVyZmxvd3NcbiAgICAgIH1dO1xuICAgICAgaWYgKCFvdmVyZmxvd3MuZXZlcnkoKHNpZGUyKSA9PiBzaWRlMiA8PSAwKSkge1xuICAgICAgICB2YXIgX21pZGRsZXdhcmVEYXRhJGZsaXAyLCBfb3ZlcmZsb3dzRGF0YSRmaWx0ZXI7XG4gICAgICAgIGNvbnN0IG5leHRJbmRleCA9ICgoKF9taWRkbGV3YXJlRGF0YSRmbGlwMiA9IG1pZGRsZXdhcmVEYXRhLmZsaXApID09IG51bGwgPyB2b2lkIDAgOiBfbWlkZGxld2FyZURhdGEkZmxpcDIuaW5kZXgpIHx8IDApICsgMTtcbiAgICAgICAgY29uc3QgbmV4dFBsYWNlbWVudCA9IHBsYWNlbWVudHMyW25leHRJbmRleF07XG4gICAgICAgIGlmIChuZXh0UGxhY2VtZW50KSB7XG4gICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIGRhdGE6IHtcbiAgICAgICAgICAgICAgaW5kZXg6IG5leHRJbmRleCxcbiAgICAgICAgICAgICAgb3ZlcmZsb3dzOiBvdmVyZmxvd3NEYXRhXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgcmVzZXQ6IHtcbiAgICAgICAgICAgICAgcGxhY2VtZW50OiBuZXh0UGxhY2VtZW50XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfTtcbiAgICAgICAgfVxuICAgICAgICBsZXQgcmVzZXRQbGFjZW1lbnQgPSAoX292ZXJmbG93c0RhdGEkZmlsdGVyID0gb3ZlcmZsb3dzRGF0YS5maWx0ZXIoKGQpID0+IGQub3ZlcmZsb3dzWzBdIDw9IDApLnNvcnQoKGEyLCBiMikgPT4gYTIub3ZlcmZsb3dzWzFdIC0gYjIub3ZlcmZsb3dzWzFdKVswXSkgPT0gbnVsbCA/IHZvaWQgMCA6IF9vdmVyZmxvd3NEYXRhJGZpbHRlci5wbGFjZW1lbnQ7XG4gICAgICAgIGlmICghcmVzZXRQbGFjZW1lbnQpIHtcbiAgICAgICAgICBzd2l0Y2ggKGZhbGxiYWNrU3RyYXRlZ3kpIHtcbiAgICAgICAgICAgIGNhc2UgXCJiZXN0Rml0XCI6IHtcbiAgICAgICAgICAgICAgdmFyIF9vdmVyZmxvd3NEYXRhJG1hcCRzbztcbiAgICAgICAgICAgICAgY29uc3QgcGxhY2VtZW50MiA9IChfb3ZlcmZsb3dzRGF0YSRtYXAkc28gPSBvdmVyZmxvd3NEYXRhLm1hcCgoZCkgPT4gW2QucGxhY2VtZW50LCBkLm92ZXJmbG93cy5maWx0ZXIoKG92ZXJmbG93MikgPT4gb3ZlcmZsb3cyID4gMCkucmVkdWNlKChhY2MsIG92ZXJmbG93MikgPT4gYWNjICsgb3ZlcmZsb3cyLCAwKV0pLnNvcnQoKGEyLCBiMikgPT4gYTJbMV0gLSBiMlsxXSlbMF0pID09IG51bGwgPyB2b2lkIDAgOiBfb3ZlcmZsb3dzRGF0YSRtYXAkc29bMF07XG4gICAgICAgICAgICAgIGlmIChwbGFjZW1lbnQyKSB7XG4gICAgICAgICAgICAgICAgcmVzZXRQbGFjZW1lbnQgPSBwbGFjZW1lbnQyO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY2FzZSBcImluaXRpYWxQbGFjZW1lbnRcIjpcbiAgICAgICAgICAgICAgcmVzZXRQbGFjZW1lbnQgPSBpbml0aWFsUGxhY2VtZW50O1xuICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHBsYWNlbWVudCAhPT0gcmVzZXRQbGFjZW1lbnQpIHtcbiAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgcmVzZXQ6IHtcbiAgICAgICAgICAgICAgcGxhY2VtZW50OiByZXNldFBsYWNlbWVudFxuICAgICAgICAgICAgfVxuICAgICAgICAgIH07XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIHJldHVybiB7fTtcbiAgICB9XG4gIH07XG59O1xuZnVuY3Rpb24gZ2V0U2lkZU9mZnNldHMob3ZlcmZsb3csIHJlY3QpIHtcbiAgcmV0dXJuIHtcbiAgICB0b3A6IG92ZXJmbG93LnRvcCAtIHJlY3QuaGVpZ2h0LFxuICAgIHJpZ2h0OiBvdmVyZmxvdy5yaWdodCAtIHJlY3Qud2lkdGgsXG4gICAgYm90dG9tOiBvdmVyZmxvdy5ib3R0b20gLSByZWN0LmhlaWdodCxcbiAgICBsZWZ0OiBvdmVyZmxvdy5sZWZ0IC0gcmVjdC53aWR0aFxuICB9O1xufVxuZnVuY3Rpb24gaXNBbnlTaWRlRnVsbHlDbGlwcGVkKG92ZXJmbG93KSB7XG4gIHJldHVybiBzaWRlcy5zb21lKChzaWRlKSA9PiBvdmVyZmxvd1tzaWRlXSA+PSAwKTtcbn1cbnZhciBoaWRlID0gZnVuY3Rpb24ob3B0aW9ucykge1xuICBpZiAob3B0aW9ucyA9PT0gdm9pZCAwKSB7XG4gICAgb3B0aW9ucyA9IHt9O1xuICB9XG4gIHJldHVybiB7XG4gICAgbmFtZTogXCJoaWRlXCIsXG4gICAgb3B0aW9ucyxcbiAgICBhc3luYyBmbihzdGF0ZSkge1xuICAgICAgY29uc3Qge1xuICAgICAgICByZWN0c1xuICAgICAgfSA9IHN0YXRlO1xuICAgICAgY29uc3Qge1xuICAgICAgICBzdHJhdGVneSA9IFwicmVmZXJlbmNlSGlkZGVuXCIsXG4gICAgICAgIC4uLmRldGVjdE92ZXJmbG93T3B0aW9uc1xuICAgICAgfSA9IGV2YWx1YXRlKG9wdGlvbnMsIHN0YXRlKTtcbiAgICAgIHN3aXRjaCAoc3RyYXRlZ3kpIHtcbiAgICAgICAgY2FzZSBcInJlZmVyZW5jZUhpZGRlblwiOiB7XG4gICAgICAgICAgY29uc3Qgb3ZlcmZsb3cgPSBhd2FpdCBkZXRlY3RPdmVyZmxvdyhzdGF0ZSwge1xuICAgICAgICAgICAgLi4uZGV0ZWN0T3ZlcmZsb3dPcHRpb25zLFxuICAgICAgICAgICAgZWxlbWVudENvbnRleHQ6IFwicmVmZXJlbmNlXCJcbiAgICAgICAgICB9KTtcbiAgICAgICAgICBjb25zdCBvZmZzZXRzID0gZ2V0U2lkZU9mZnNldHMob3ZlcmZsb3csIHJlY3RzLnJlZmVyZW5jZSk7XG4gICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIGRhdGE6IHtcbiAgICAgICAgICAgICAgcmVmZXJlbmNlSGlkZGVuT2Zmc2V0czogb2Zmc2V0cyxcbiAgICAgICAgICAgICAgcmVmZXJlbmNlSGlkZGVuOiBpc0FueVNpZGVGdWxseUNsaXBwZWQob2Zmc2V0cylcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9O1xuICAgICAgICB9XG4gICAgICAgIGNhc2UgXCJlc2NhcGVkXCI6IHtcbiAgICAgICAgICBjb25zdCBvdmVyZmxvdyA9IGF3YWl0IGRldGVjdE92ZXJmbG93KHN0YXRlLCB7XG4gICAgICAgICAgICAuLi5kZXRlY3RPdmVyZmxvd09wdGlvbnMsXG4gICAgICAgICAgICBhbHRCb3VuZGFyeTogdHJ1ZVxuICAgICAgICAgIH0pO1xuICAgICAgICAgIGNvbnN0IG9mZnNldHMgPSBnZXRTaWRlT2Zmc2V0cyhvdmVyZmxvdywgcmVjdHMuZmxvYXRpbmcpO1xuICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBkYXRhOiB7XG4gICAgICAgICAgICAgIGVzY2FwZWRPZmZzZXRzOiBvZmZzZXRzLFxuICAgICAgICAgICAgICBlc2NhcGVkOiBpc0FueVNpZGVGdWxseUNsaXBwZWQob2Zmc2V0cylcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9O1xuICAgICAgICB9XG4gICAgICAgIGRlZmF1bHQ6IHtcbiAgICAgICAgICByZXR1cm4ge307XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH07XG59O1xuYXN5bmMgZnVuY3Rpb24gY29udmVydFZhbHVlVG9Db29yZHMoc3RhdGUsIG9wdGlvbnMpIHtcbiAgY29uc3Qge1xuICAgIHBsYWNlbWVudCxcbiAgICBwbGF0Zm9ybTogcGxhdGZvcm0yLFxuICAgIGVsZW1lbnRzXG4gIH0gPSBzdGF0ZTtcbiAgY29uc3QgcnRsID0gYXdhaXQgKHBsYXRmb3JtMi5pc1JUTCA9PSBudWxsID8gdm9pZCAwIDogcGxhdGZvcm0yLmlzUlRMKGVsZW1lbnRzLmZsb2F0aW5nKSk7XG4gIGNvbnN0IHNpZGUgPSBnZXRTaWRlKHBsYWNlbWVudCk7XG4gIGNvbnN0IGFsaWdubWVudCA9IGdldEFsaWdubWVudChwbGFjZW1lbnQpO1xuICBjb25zdCBpc1ZlcnRpY2FsID0gZ2V0U2lkZUF4aXMocGxhY2VtZW50KSA9PT0gXCJ5XCI7XG4gIGNvbnN0IG1haW5BeGlzTXVsdGkgPSBbXCJsZWZ0XCIsIFwidG9wXCJdLmluY2x1ZGVzKHNpZGUpID8gLTEgOiAxO1xuICBjb25zdCBjcm9zc0F4aXNNdWx0aSA9IHJ0bCAmJiBpc1ZlcnRpY2FsID8gLTEgOiAxO1xuICBjb25zdCByYXdWYWx1ZSA9IGV2YWx1YXRlKG9wdGlvbnMsIHN0YXRlKTtcbiAgbGV0IHtcbiAgICBtYWluQXhpcyxcbiAgICBjcm9zc0F4aXMsXG4gICAgYWxpZ25tZW50QXhpc1xuICB9ID0gdHlwZW9mIHJhd1ZhbHVlID09PSBcIm51bWJlclwiID8ge1xuICAgIG1haW5BeGlzOiByYXdWYWx1ZSxcbiAgICBjcm9zc0F4aXM6IDAsXG4gICAgYWxpZ25tZW50QXhpczogbnVsbFxuICB9IDoge1xuICAgIG1haW5BeGlzOiAwLFxuICAgIGNyb3NzQXhpczogMCxcbiAgICBhbGlnbm1lbnRBeGlzOiBudWxsLFxuICAgIC4uLnJhd1ZhbHVlXG4gIH07XG4gIGlmIChhbGlnbm1lbnQgJiYgdHlwZW9mIGFsaWdubWVudEF4aXMgPT09IFwibnVtYmVyXCIpIHtcbiAgICBjcm9zc0F4aXMgPSBhbGlnbm1lbnQgPT09IFwiZW5kXCIgPyBhbGlnbm1lbnRBeGlzICogLTEgOiBhbGlnbm1lbnRBeGlzO1xuICB9XG4gIHJldHVybiBpc1ZlcnRpY2FsID8ge1xuICAgIHg6IGNyb3NzQXhpcyAqIGNyb3NzQXhpc011bHRpLFxuICAgIHk6IG1haW5BeGlzICogbWFpbkF4aXNNdWx0aVxuICB9IDoge1xuICAgIHg6IG1haW5BeGlzICogbWFpbkF4aXNNdWx0aSxcbiAgICB5OiBjcm9zc0F4aXMgKiBjcm9zc0F4aXNNdWx0aVxuICB9O1xufVxudmFyIG9mZnNldCA9IGZ1bmN0aW9uKG9wdGlvbnMpIHtcbiAgaWYgKG9wdGlvbnMgPT09IHZvaWQgMCkge1xuICAgIG9wdGlvbnMgPSAwO1xuICB9XG4gIHJldHVybiB7XG4gICAgbmFtZTogXCJvZmZzZXRcIixcbiAgICBvcHRpb25zLFxuICAgIGFzeW5jIGZuKHN0YXRlKSB7XG4gICAgICBjb25zdCB7XG4gICAgICAgIHgsXG4gICAgICAgIHlcbiAgICAgIH0gPSBzdGF0ZTtcbiAgICAgIGNvbnN0IGRpZmZDb29yZHMgPSBhd2FpdCBjb252ZXJ0VmFsdWVUb0Nvb3JkcyhzdGF0ZSwgb3B0aW9ucyk7XG4gICAgICByZXR1cm4ge1xuICAgICAgICB4OiB4ICsgZGlmZkNvb3Jkcy54LFxuICAgICAgICB5OiB5ICsgZGlmZkNvb3Jkcy55LFxuICAgICAgICBkYXRhOiBkaWZmQ29vcmRzXG4gICAgICB9O1xuICAgIH1cbiAgfTtcbn07XG52YXIgc2hpZnQgPSBmdW5jdGlvbihvcHRpb25zKSB7XG4gIGlmIChvcHRpb25zID09PSB2b2lkIDApIHtcbiAgICBvcHRpb25zID0ge307XG4gIH1cbiAgcmV0dXJuIHtcbiAgICBuYW1lOiBcInNoaWZ0XCIsXG4gICAgb3B0aW9ucyxcbiAgICBhc3luYyBmbihzdGF0ZSkge1xuICAgICAgY29uc3Qge1xuICAgICAgICB4LFxuICAgICAgICB5LFxuICAgICAgICBwbGFjZW1lbnRcbiAgICAgIH0gPSBzdGF0ZTtcbiAgICAgIGNvbnN0IHtcbiAgICAgICAgbWFpbkF4aXM6IGNoZWNrTWFpbkF4aXMgPSB0cnVlLFxuICAgICAgICBjcm9zc0F4aXM6IGNoZWNrQ3Jvc3NBeGlzID0gZmFsc2UsXG4gICAgICAgIGxpbWl0ZXIgPSB7XG4gICAgICAgICAgZm46IChfcmVmKSA9PiB7XG4gICAgICAgICAgICBsZXQge1xuICAgICAgICAgICAgICB4OiB4MixcbiAgICAgICAgICAgICAgeTogeTJcbiAgICAgICAgICAgIH0gPSBfcmVmO1xuICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgeDogeDIsXG4gICAgICAgICAgICAgIHk6IHkyXG4gICAgICAgICAgICB9O1xuICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgLi4uZGV0ZWN0T3ZlcmZsb3dPcHRpb25zXG4gICAgICB9ID0gZXZhbHVhdGUob3B0aW9ucywgc3RhdGUpO1xuICAgICAgY29uc3QgY29vcmRzID0ge1xuICAgICAgICB4LFxuICAgICAgICB5XG4gICAgICB9O1xuICAgICAgY29uc3Qgb3ZlcmZsb3cgPSBhd2FpdCBkZXRlY3RPdmVyZmxvdyhzdGF0ZSwgZGV0ZWN0T3ZlcmZsb3dPcHRpb25zKTtcbiAgICAgIGNvbnN0IGNyb3NzQXhpcyA9IGdldFNpZGVBeGlzKGdldFNpZGUocGxhY2VtZW50KSk7XG4gICAgICBjb25zdCBtYWluQXhpcyA9IGdldE9wcG9zaXRlQXhpcyhjcm9zc0F4aXMpO1xuICAgICAgbGV0IG1haW5BeGlzQ29vcmQgPSBjb29yZHNbbWFpbkF4aXNdO1xuICAgICAgbGV0IGNyb3NzQXhpc0Nvb3JkID0gY29vcmRzW2Nyb3NzQXhpc107XG4gICAgICBpZiAoY2hlY2tNYWluQXhpcykge1xuICAgICAgICBjb25zdCBtaW5TaWRlID0gbWFpbkF4aXMgPT09IFwieVwiID8gXCJ0b3BcIiA6IFwibGVmdFwiO1xuICAgICAgICBjb25zdCBtYXhTaWRlID0gbWFpbkF4aXMgPT09IFwieVwiID8gXCJib3R0b21cIiA6IFwicmlnaHRcIjtcbiAgICAgICAgY29uc3QgbWluMyA9IG1haW5BeGlzQ29vcmQgKyBvdmVyZmxvd1ttaW5TaWRlXTtcbiAgICAgICAgY29uc3QgbWF4MyA9IG1haW5BeGlzQ29vcmQgLSBvdmVyZmxvd1ttYXhTaWRlXTtcbiAgICAgICAgbWFpbkF4aXNDb29yZCA9IGNsYW1wMihtaW4zLCBtYWluQXhpc0Nvb3JkLCBtYXgzKTtcbiAgICAgIH1cbiAgICAgIGlmIChjaGVja0Nyb3NzQXhpcykge1xuICAgICAgICBjb25zdCBtaW5TaWRlID0gY3Jvc3NBeGlzID09PSBcInlcIiA/IFwidG9wXCIgOiBcImxlZnRcIjtcbiAgICAgICAgY29uc3QgbWF4U2lkZSA9IGNyb3NzQXhpcyA9PT0gXCJ5XCIgPyBcImJvdHRvbVwiIDogXCJyaWdodFwiO1xuICAgICAgICBjb25zdCBtaW4zID0gY3Jvc3NBeGlzQ29vcmQgKyBvdmVyZmxvd1ttaW5TaWRlXTtcbiAgICAgICAgY29uc3QgbWF4MyA9IGNyb3NzQXhpc0Nvb3JkIC0gb3ZlcmZsb3dbbWF4U2lkZV07XG4gICAgICAgIGNyb3NzQXhpc0Nvb3JkID0gY2xhbXAyKG1pbjMsIGNyb3NzQXhpc0Nvb3JkLCBtYXgzKTtcbiAgICAgIH1cbiAgICAgIGNvbnN0IGxpbWl0ZWRDb29yZHMgPSBsaW1pdGVyLmZuKHtcbiAgICAgICAgLi4uc3RhdGUsXG4gICAgICAgIFttYWluQXhpc106IG1haW5BeGlzQ29vcmQsXG4gICAgICAgIFtjcm9zc0F4aXNdOiBjcm9zc0F4aXNDb29yZFxuICAgICAgfSk7XG4gICAgICByZXR1cm4ge1xuICAgICAgICAuLi5saW1pdGVkQ29vcmRzLFxuICAgICAgICBkYXRhOiB7XG4gICAgICAgICAgeDogbGltaXRlZENvb3Jkcy54IC0geCxcbiAgICAgICAgICB5OiBsaW1pdGVkQ29vcmRzLnkgLSB5XG4gICAgICAgIH1cbiAgICAgIH07XG4gICAgfVxuICB9O1xufTtcbnZhciBzaXplID0gZnVuY3Rpb24ob3B0aW9ucykge1xuICBpZiAob3B0aW9ucyA9PT0gdm9pZCAwKSB7XG4gICAgb3B0aW9ucyA9IHt9O1xuICB9XG4gIHJldHVybiB7XG4gICAgbmFtZTogXCJzaXplXCIsXG4gICAgb3B0aW9ucyxcbiAgICBhc3luYyBmbihzdGF0ZSkge1xuICAgICAgY29uc3Qge1xuICAgICAgICBwbGFjZW1lbnQsXG4gICAgICAgIHJlY3RzLFxuICAgICAgICBwbGF0Zm9ybTogcGxhdGZvcm0yLFxuICAgICAgICBlbGVtZW50c1xuICAgICAgfSA9IHN0YXRlO1xuICAgICAgY29uc3Qge1xuICAgICAgICBhcHBseSA9ICgpID0+IHtcbiAgICAgICAgfSxcbiAgICAgICAgLi4uZGV0ZWN0T3ZlcmZsb3dPcHRpb25zXG4gICAgICB9ID0gZXZhbHVhdGUob3B0aW9ucywgc3RhdGUpO1xuICAgICAgY29uc3Qgb3ZlcmZsb3cgPSBhd2FpdCBkZXRlY3RPdmVyZmxvdyhzdGF0ZSwgZGV0ZWN0T3ZlcmZsb3dPcHRpb25zKTtcbiAgICAgIGNvbnN0IHNpZGUgPSBnZXRTaWRlKHBsYWNlbWVudCk7XG4gICAgICBjb25zdCBhbGlnbm1lbnQgPSBnZXRBbGlnbm1lbnQocGxhY2VtZW50KTtcbiAgICAgIGNvbnN0IGlzWUF4aXMgPSBnZXRTaWRlQXhpcyhwbGFjZW1lbnQpID09PSBcInlcIjtcbiAgICAgIGNvbnN0IHtcbiAgICAgICAgd2lkdGgsXG4gICAgICAgIGhlaWdodFxuICAgICAgfSA9IHJlY3RzLmZsb2F0aW5nO1xuICAgICAgbGV0IGhlaWdodFNpZGU7XG4gICAgICBsZXQgd2lkdGhTaWRlO1xuICAgICAgaWYgKHNpZGUgPT09IFwidG9wXCIgfHwgc2lkZSA9PT0gXCJib3R0b21cIikge1xuICAgICAgICBoZWlnaHRTaWRlID0gc2lkZTtcbiAgICAgICAgd2lkdGhTaWRlID0gYWxpZ25tZW50ID09PSAoYXdhaXQgKHBsYXRmb3JtMi5pc1JUTCA9PSBudWxsID8gdm9pZCAwIDogcGxhdGZvcm0yLmlzUlRMKGVsZW1lbnRzLmZsb2F0aW5nKSkgPyBcInN0YXJ0XCIgOiBcImVuZFwiKSA/IFwibGVmdFwiIDogXCJyaWdodFwiO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgd2lkdGhTaWRlID0gc2lkZTtcbiAgICAgICAgaGVpZ2h0U2lkZSA9IGFsaWdubWVudCA9PT0gXCJlbmRcIiA/IFwidG9wXCIgOiBcImJvdHRvbVwiO1xuICAgICAgfVxuICAgICAgY29uc3Qgb3ZlcmZsb3dBdmFpbGFibGVIZWlnaHQgPSBoZWlnaHQgLSBvdmVyZmxvd1toZWlnaHRTaWRlXTtcbiAgICAgIGNvbnN0IG92ZXJmbG93QXZhaWxhYmxlV2lkdGggPSB3aWR0aCAtIG92ZXJmbG93W3dpZHRoU2lkZV07XG4gICAgICBjb25zdCBub1NoaWZ0ID0gIXN0YXRlLm1pZGRsZXdhcmVEYXRhLnNoaWZ0O1xuICAgICAgbGV0IGF2YWlsYWJsZUhlaWdodCA9IG92ZXJmbG93QXZhaWxhYmxlSGVpZ2h0O1xuICAgICAgbGV0IGF2YWlsYWJsZVdpZHRoID0gb3ZlcmZsb3dBdmFpbGFibGVXaWR0aDtcbiAgICAgIGlmIChpc1lBeGlzKSB7XG4gICAgICAgIGNvbnN0IG1heGltdW1DbGlwcGluZ1dpZHRoID0gd2lkdGggLSBvdmVyZmxvdy5sZWZ0IC0gb3ZlcmZsb3cucmlnaHQ7XG4gICAgICAgIGF2YWlsYWJsZVdpZHRoID0gYWxpZ25tZW50IHx8IG5vU2hpZnQgPyBtaW4ob3ZlcmZsb3dBdmFpbGFibGVXaWR0aCwgbWF4aW11bUNsaXBwaW5nV2lkdGgpIDogbWF4aW11bUNsaXBwaW5nV2lkdGg7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBjb25zdCBtYXhpbXVtQ2xpcHBpbmdIZWlnaHQgPSBoZWlnaHQgLSBvdmVyZmxvdy50b3AgLSBvdmVyZmxvdy5ib3R0b207XG4gICAgICAgIGF2YWlsYWJsZUhlaWdodCA9IGFsaWdubWVudCB8fCBub1NoaWZ0ID8gbWluKG92ZXJmbG93QXZhaWxhYmxlSGVpZ2h0LCBtYXhpbXVtQ2xpcHBpbmdIZWlnaHQpIDogbWF4aW11bUNsaXBwaW5nSGVpZ2h0O1xuICAgICAgfVxuICAgICAgaWYgKG5vU2hpZnQgJiYgIWFsaWdubWVudCkge1xuICAgICAgICBjb25zdCB4TWluID0gbWF4KG92ZXJmbG93LmxlZnQsIDApO1xuICAgICAgICBjb25zdCB4TWF4ID0gbWF4KG92ZXJmbG93LnJpZ2h0LCAwKTtcbiAgICAgICAgY29uc3QgeU1pbiA9IG1heChvdmVyZmxvdy50b3AsIDApO1xuICAgICAgICBjb25zdCB5TWF4ID0gbWF4KG92ZXJmbG93LmJvdHRvbSwgMCk7XG4gICAgICAgIGlmIChpc1lBeGlzKSB7XG4gICAgICAgICAgYXZhaWxhYmxlV2lkdGggPSB3aWR0aCAtIDIgKiAoeE1pbiAhPT0gMCB8fCB4TWF4ICE9PSAwID8geE1pbiArIHhNYXggOiBtYXgob3ZlcmZsb3cubGVmdCwgb3ZlcmZsb3cucmlnaHQpKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBhdmFpbGFibGVIZWlnaHQgPSBoZWlnaHQgLSAyICogKHlNaW4gIT09IDAgfHwgeU1heCAhPT0gMCA/IHlNaW4gKyB5TWF4IDogbWF4KG92ZXJmbG93LnRvcCwgb3ZlcmZsb3cuYm90dG9tKSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGF3YWl0IGFwcGx5KHtcbiAgICAgICAgLi4uc3RhdGUsXG4gICAgICAgIGF2YWlsYWJsZVdpZHRoLFxuICAgICAgICBhdmFpbGFibGVIZWlnaHRcbiAgICAgIH0pO1xuICAgICAgY29uc3QgbmV4dERpbWVuc2lvbnMgPSBhd2FpdCBwbGF0Zm9ybTIuZ2V0RGltZW5zaW9ucyhlbGVtZW50cy5mbG9hdGluZyk7XG4gICAgICBpZiAod2lkdGggIT09IG5leHREaW1lbnNpb25zLndpZHRoIHx8IGhlaWdodCAhPT0gbmV4dERpbWVuc2lvbnMuaGVpZ2h0KSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgcmVzZXQ6IHtcbiAgICAgICAgICAgIHJlY3RzOiB0cnVlXG4gICAgICAgICAgfVxuICAgICAgICB9O1xuICAgICAgfVxuICAgICAgcmV0dXJuIHt9O1xuICAgIH1cbiAgfTtcbn07XG5cbi8vIC4uLy4uL25vZGVfbW9kdWxlcy8ucG5wbS9AZmxvYXRpbmctdWkrdXRpbHNAMC4yLjIvbm9kZV9tb2R1bGVzL0BmbG9hdGluZy11aS91dGlscy9kaXN0L2Zsb2F0aW5nLXVpLnV0aWxzLm1qc1xudmFyIG1pbjIgPSBNYXRoLm1pbjtcbnZhciBtYXgyID0gTWF0aC5tYXg7XG52YXIgcm91bmQgPSBNYXRoLnJvdW5kO1xudmFyIGZsb29yID0gTWF0aC5mbG9vcjtcbnZhciBjcmVhdGVDb29yZHMgPSAodikgPT4gKHtcbiAgeDogdixcbiAgeTogdlxufSk7XG5cbi8vIC4uLy4uL25vZGVfbW9kdWxlcy8ucG5wbS9AZmxvYXRpbmctdWkrdXRpbHNAMC4yLjIvbm9kZV9tb2R1bGVzL0BmbG9hdGluZy11aS91dGlscy9kaXN0L2Zsb2F0aW5nLXVpLnV0aWxzLmRvbS5tanNcbmZ1bmN0aW9uIGdldE5vZGVOYW1lKG5vZGUpIHtcbiAgaWYgKGlzTm9kZShub2RlKSkge1xuICAgIHJldHVybiAobm9kZS5ub2RlTmFtZSB8fCBcIlwiKS50b0xvd2VyQ2FzZSgpO1xuICB9XG4gIHJldHVybiBcIiNkb2N1bWVudFwiO1xufVxuZnVuY3Rpb24gZ2V0V2luZG93Mihub2RlKSB7XG4gIHZhciBfbm9kZSRvd25lckRvY3VtZW50O1xuICByZXR1cm4gKG5vZGUgPT0gbnVsbCB8fCAoX25vZGUkb3duZXJEb2N1bWVudCA9IG5vZGUub3duZXJEb2N1bWVudCkgPT0gbnVsbCA/IHZvaWQgMCA6IF9ub2RlJG93bmVyRG9jdW1lbnQuZGVmYXVsdFZpZXcpIHx8IHdpbmRvdztcbn1cbmZ1bmN0aW9uIGdldERvY3VtZW50RWxlbWVudChub2RlKSB7XG4gIHZhciBfcmVmO1xuICByZXR1cm4gKF9yZWYgPSAoaXNOb2RlKG5vZGUpID8gbm9kZS5vd25lckRvY3VtZW50IDogbm9kZS5kb2N1bWVudCkgfHwgd2luZG93LmRvY3VtZW50KSA9PSBudWxsID8gdm9pZCAwIDogX3JlZi5kb2N1bWVudEVsZW1lbnQ7XG59XG5mdW5jdGlvbiBpc05vZGUodmFsdWUpIHtcbiAgcmV0dXJuIHZhbHVlIGluc3RhbmNlb2YgTm9kZSB8fCB2YWx1ZSBpbnN0YW5jZW9mIGdldFdpbmRvdzIodmFsdWUpLk5vZGU7XG59XG5mdW5jdGlvbiBpc0VsZW1lbnQodmFsdWUpIHtcbiAgcmV0dXJuIHZhbHVlIGluc3RhbmNlb2YgRWxlbWVudCB8fCB2YWx1ZSBpbnN0YW5jZW9mIGdldFdpbmRvdzIodmFsdWUpLkVsZW1lbnQ7XG59XG5mdW5jdGlvbiBpc0hUTUxFbGVtZW50KHZhbHVlKSB7XG4gIHJldHVybiB2YWx1ZSBpbnN0YW5jZW9mIEhUTUxFbGVtZW50IHx8IHZhbHVlIGluc3RhbmNlb2YgZ2V0V2luZG93Mih2YWx1ZSkuSFRNTEVsZW1lbnQ7XG59XG5mdW5jdGlvbiBpc1NoYWRvd1Jvb3QodmFsdWUpIHtcbiAgaWYgKHR5cGVvZiBTaGFkb3dSb290ID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG4gIHJldHVybiB2YWx1ZSBpbnN0YW5jZW9mIFNoYWRvd1Jvb3QgfHwgdmFsdWUgaW5zdGFuY2VvZiBnZXRXaW5kb3cyKHZhbHVlKS5TaGFkb3dSb290O1xufVxuZnVuY3Rpb24gaXNPdmVyZmxvd0VsZW1lbnQoZWxlbWVudCkge1xuICBjb25zdCB7XG4gICAgb3ZlcmZsb3csXG4gICAgb3ZlcmZsb3dYLFxuICAgIG92ZXJmbG93WSxcbiAgICBkaXNwbGF5XG4gIH0gPSBnZXRDb21wdXRlZFN0eWxlMihlbGVtZW50KTtcbiAgcmV0dXJuIC9hdXRvfHNjcm9sbHxvdmVybGF5fGhpZGRlbnxjbGlwLy50ZXN0KG92ZXJmbG93ICsgb3ZlcmZsb3dZICsgb3ZlcmZsb3dYKSAmJiAhW1wiaW5saW5lXCIsIFwiY29udGVudHNcIl0uaW5jbHVkZXMoZGlzcGxheSk7XG59XG5mdW5jdGlvbiBpc1RhYmxlRWxlbWVudChlbGVtZW50KSB7XG4gIHJldHVybiBbXCJ0YWJsZVwiLCBcInRkXCIsIFwidGhcIl0uaW5jbHVkZXMoZ2V0Tm9kZU5hbWUoZWxlbWVudCkpO1xufVxuZnVuY3Rpb24gaXNDb250YWluaW5nQmxvY2soZWxlbWVudCkge1xuICBjb25zdCB3ZWJraXQgPSBpc1dlYktpdCgpO1xuICBjb25zdCBjc3MgPSBnZXRDb21wdXRlZFN0eWxlMihlbGVtZW50KTtcbiAgcmV0dXJuIGNzcy50cmFuc2Zvcm0gIT09IFwibm9uZVwiIHx8IGNzcy5wZXJzcGVjdGl2ZSAhPT0gXCJub25lXCIgfHwgKGNzcy5jb250YWluZXJUeXBlID8gY3NzLmNvbnRhaW5lclR5cGUgIT09IFwibm9ybWFsXCIgOiBmYWxzZSkgfHwgIXdlYmtpdCAmJiAoY3NzLmJhY2tkcm9wRmlsdGVyID8gY3NzLmJhY2tkcm9wRmlsdGVyICE9PSBcIm5vbmVcIiA6IGZhbHNlKSB8fCAhd2Via2l0ICYmIChjc3MuZmlsdGVyID8gY3NzLmZpbHRlciAhPT0gXCJub25lXCIgOiBmYWxzZSkgfHwgW1widHJhbnNmb3JtXCIsIFwicGVyc3BlY3RpdmVcIiwgXCJmaWx0ZXJcIl0uc29tZSgodmFsdWUpID0+IChjc3Mud2lsbENoYW5nZSB8fCBcIlwiKS5pbmNsdWRlcyh2YWx1ZSkpIHx8IFtcInBhaW50XCIsIFwibGF5b3V0XCIsIFwic3RyaWN0XCIsIFwiY29udGVudFwiXS5zb21lKCh2YWx1ZSkgPT4gKGNzcy5jb250YWluIHx8IFwiXCIpLmluY2x1ZGVzKHZhbHVlKSk7XG59XG5mdW5jdGlvbiBnZXRDb250YWluaW5nQmxvY2soZWxlbWVudCkge1xuICBsZXQgY3VycmVudE5vZGUgPSBnZXRQYXJlbnROb2RlKGVsZW1lbnQpO1xuICB3aGlsZSAoaXNIVE1MRWxlbWVudChjdXJyZW50Tm9kZSkgJiYgIWlzTGFzdFRyYXZlcnNhYmxlTm9kZShjdXJyZW50Tm9kZSkpIHtcbiAgICBpZiAoaXNDb250YWluaW5nQmxvY2soY3VycmVudE5vZGUpKSB7XG4gICAgICByZXR1cm4gY3VycmVudE5vZGU7XG4gICAgfVxuICAgIGN1cnJlbnROb2RlID0gZ2V0UGFyZW50Tm9kZShjdXJyZW50Tm9kZSk7XG4gIH1cbiAgcmV0dXJuIG51bGw7XG59XG5mdW5jdGlvbiBpc1dlYktpdCgpIHtcbiAgaWYgKHR5cGVvZiBDU1MgPT09IFwidW5kZWZpbmVkXCIgfHwgIUNTUy5zdXBwb3J0cylcbiAgICByZXR1cm4gZmFsc2U7XG4gIHJldHVybiBDU1Muc3VwcG9ydHMoXCItd2Via2l0LWJhY2tkcm9wLWZpbHRlclwiLCBcIm5vbmVcIik7XG59XG5mdW5jdGlvbiBpc0xhc3RUcmF2ZXJzYWJsZU5vZGUobm9kZSkge1xuICByZXR1cm4gW1wiaHRtbFwiLCBcImJvZHlcIiwgXCIjZG9jdW1lbnRcIl0uaW5jbHVkZXMoZ2V0Tm9kZU5hbWUobm9kZSkpO1xufVxuZnVuY3Rpb24gZ2V0Q29tcHV0ZWRTdHlsZTIoZWxlbWVudCkge1xuICByZXR1cm4gZ2V0V2luZG93MihlbGVtZW50KS5nZXRDb21wdXRlZFN0eWxlKGVsZW1lbnQpO1xufVxuZnVuY3Rpb24gZ2V0Tm9kZVNjcm9sbChlbGVtZW50KSB7XG4gIGlmIChpc0VsZW1lbnQoZWxlbWVudCkpIHtcbiAgICByZXR1cm4ge1xuICAgICAgc2Nyb2xsTGVmdDogZWxlbWVudC5zY3JvbGxMZWZ0LFxuICAgICAgc2Nyb2xsVG9wOiBlbGVtZW50LnNjcm9sbFRvcFxuICAgIH07XG4gIH1cbiAgcmV0dXJuIHtcbiAgICBzY3JvbGxMZWZ0OiBlbGVtZW50LnBhZ2VYT2Zmc2V0LFxuICAgIHNjcm9sbFRvcDogZWxlbWVudC5wYWdlWU9mZnNldFxuICB9O1xufVxuZnVuY3Rpb24gZ2V0UGFyZW50Tm9kZShub2RlKSB7XG4gIGlmIChnZXROb2RlTmFtZShub2RlKSA9PT0gXCJodG1sXCIpIHtcbiAgICByZXR1cm4gbm9kZTtcbiAgfVxuICBjb25zdCByZXN1bHQgPSAoXG4gICAgLy8gU3RlcCBpbnRvIHRoZSBzaGFkb3cgRE9NIG9mIHRoZSBwYXJlbnQgb2YgYSBzbG90dGVkIG5vZGUuXG4gICAgbm9kZS5hc3NpZ25lZFNsb3QgfHwgLy8gRE9NIEVsZW1lbnQgZGV0ZWN0ZWQuXG4gICAgbm9kZS5wYXJlbnROb2RlIHx8IC8vIFNoYWRvd1Jvb3QgZGV0ZWN0ZWQuXG4gICAgaXNTaGFkb3dSb290KG5vZGUpICYmIG5vZGUuaG9zdCB8fCAvLyBGYWxsYmFjay5cbiAgICBnZXREb2N1bWVudEVsZW1lbnQobm9kZSlcbiAgKTtcbiAgcmV0dXJuIGlzU2hhZG93Um9vdChyZXN1bHQpID8gcmVzdWx0Lmhvc3QgOiByZXN1bHQ7XG59XG5mdW5jdGlvbiBnZXROZWFyZXN0T3ZlcmZsb3dBbmNlc3Rvcihub2RlKSB7XG4gIGNvbnN0IHBhcmVudE5vZGUgPSBnZXRQYXJlbnROb2RlKG5vZGUpO1xuICBpZiAoaXNMYXN0VHJhdmVyc2FibGVOb2RlKHBhcmVudE5vZGUpKSB7XG4gICAgcmV0dXJuIG5vZGUub3duZXJEb2N1bWVudCA/IG5vZGUub3duZXJEb2N1bWVudC5ib2R5IDogbm9kZS5ib2R5O1xuICB9XG4gIGlmIChpc0hUTUxFbGVtZW50KHBhcmVudE5vZGUpICYmIGlzT3ZlcmZsb3dFbGVtZW50KHBhcmVudE5vZGUpKSB7XG4gICAgcmV0dXJuIHBhcmVudE5vZGU7XG4gIH1cbiAgcmV0dXJuIGdldE5lYXJlc3RPdmVyZmxvd0FuY2VzdG9yKHBhcmVudE5vZGUpO1xufVxuZnVuY3Rpb24gZ2V0T3ZlcmZsb3dBbmNlc3RvcnMobm9kZSwgbGlzdCwgdHJhdmVyc2VJZnJhbWVzKSB7XG4gIHZhciBfbm9kZSRvd25lckRvY3VtZW50MjtcbiAgaWYgKGxpc3QgPT09IHZvaWQgMCkge1xuICAgIGxpc3QgPSBbXTtcbiAgfVxuICBpZiAodHJhdmVyc2VJZnJhbWVzID09PSB2b2lkIDApIHtcbiAgICB0cmF2ZXJzZUlmcmFtZXMgPSB0cnVlO1xuICB9XG4gIGNvbnN0IHNjcm9sbGFibGVBbmNlc3RvciA9IGdldE5lYXJlc3RPdmVyZmxvd0FuY2VzdG9yKG5vZGUpO1xuICBjb25zdCBpc0JvZHkgPSBzY3JvbGxhYmxlQW5jZXN0b3IgPT09ICgoX25vZGUkb3duZXJEb2N1bWVudDIgPSBub2RlLm93bmVyRG9jdW1lbnQpID09IG51bGwgPyB2b2lkIDAgOiBfbm9kZSRvd25lckRvY3VtZW50Mi5ib2R5KTtcbiAgY29uc3Qgd2luID0gZ2V0V2luZG93MihzY3JvbGxhYmxlQW5jZXN0b3IpO1xuICBpZiAoaXNCb2R5KSB7XG4gICAgcmV0dXJuIGxpc3QuY29uY2F0KHdpbiwgd2luLnZpc3VhbFZpZXdwb3J0IHx8IFtdLCBpc092ZXJmbG93RWxlbWVudChzY3JvbGxhYmxlQW5jZXN0b3IpID8gc2Nyb2xsYWJsZUFuY2VzdG9yIDogW10sIHdpbi5mcmFtZUVsZW1lbnQgJiYgdHJhdmVyc2VJZnJhbWVzID8gZ2V0T3ZlcmZsb3dBbmNlc3RvcnMod2luLmZyYW1lRWxlbWVudCkgOiBbXSk7XG4gIH1cbiAgcmV0dXJuIGxpc3QuY29uY2F0KHNjcm9sbGFibGVBbmNlc3RvciwgZ2V0T3ZlcmZsb3dBbmNlc3RvcnMoc2Nyb2xsYWJsZUFuY2VzdG9yLCBbXSwgdHJhdmVyc2VJZnJhbWVzKSk7XG59XG5cbi8vIC4uLy4uL25vZGVfbW9kdWxlcy8ucG5wbS9AZmxvYXRpbmctdWkrZG9tQDEuNi41L25vZGVfbW9kdWxlcy9AZmxvYXRpbmctdWkvZG9tL2Rpc3QvZmxvYXRpbmctdWkuZG9tLm1qc1xuZnVuY3Rpb24gZ2V0Q3NzRGltZW5zaW9ucyhlbGVtZW50KSB7XG4gIGNvbnN0IGNzcyA9IGdldENvbXB1dGVkU3R5bGUyKGVsZW1lbnQpO1xuICBsZXQgd2lkdGggPSBwYXJzZUZsb2F0KGNzcy53aWR0aCkgfHwgMDtcbiAgbGV0IGhlaWdodCA9IHBhcnNlRmxvYXQoY3NzLmhlaWdodCkgfHwgMDtcbiAgY29uc3QgaGFzT2Zmc2V0ID0gaXNIVE1MRWxlbWVudChlbGVtZW50KTtcbiAgY29uc3Qgb2Zmc2V0V2lkdGggPSBoYXNPZmZzZXQgPyBlbGVtZW50Lm9mZnNldFdpZHRoIDogd2lkdGg7XG4gIGNvbnN0IG9mZnNldEhlaWdodCA9IGhhc09mZnNldCA/IGVsZW1lbnQub2Zmc2V0SGVpZ2h0IDogaGVpZ2h0O1xuICBjb25zdCBzaG91bGRGYWxsYmFjayA9IHJvdW5kKHdpZHRoKSAhPT0gb2Zmc2V0V2lkdGggfHwgcm91bmQoaGVpZ2h0KSAhPT0gb2Zmc2V0SGVpZ2h0O1xuICBpZiAoc2hvdWxkRmFsbGJhY2spIHtcbiAgICB3aWR0aCA9IG9mZnNldFdpZHRoO1xuICAgIGhlaWdodCA9IG9mZnNldEhlaWdodDtcbiAgfVxuICByZXR1cm4ge1xuICAgIHdpZHRoLFxuICAgIGhlaWdodCxcbiAgICAkOiBzaG91bGRGYWxsYmFja1xuICB9O1xufVxuZnVuY3Rpb24gdW53cmFwRWxlbWVudChlbGVtZW50KSB7XG4gIHJldHVybiAhaXNFbGVtZW50KGVsZW1lbnQpID8gZWxlbWVudC5jb250ZXh0RWxlbWVudCA6IGVsZW1lbnQ7XG59XG5mdW5jdGlvbiBnZXRTY2FsZShlbGVtZW50KSB7XG4gIGNvbnN0IGRvbUVsZW1lbnQgPSB1bndyYXBFbGVtZW50KGVsZW1lbnQpO1xuICBpZiAoIWlzSFRNTEVsZW1lbnQoZG9tRWxlbWVudCkpIHtcbiAgICByZXR1cm4gY3JlYXRlQ29vcmRzKDEpO1xuICB9XG4gIGNvbnN0IHJlY3QgPSBkb21FbGVtZW50LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xuICBjb25zdCB7XG4gICAgd2lkdGgsXG4gICAgaGVpZ2h0LFxuICAgICRcbiAgfSA9IGdldENzc0RpbWVuc2lvbnMoZG9tRWxlbWVudCk7XG4gIGxldCB4ID0gKCQgPyByb3VuZChyZWN0LndpZHRoKSA6IHJlY3Qud2lkdGgpIC8gd2lkdGg7XG4gIGxldCB5ID0gKCQgPyByb3VuZChyZWN0LmhlaWdodCkgOiByZWN0LmhlaWdodCkgLyBoZWlnaHQ7XG4gIGlmICgheCB8fCAhTnVtYmVyLmlzRmluaXRlKHgpKSB7XG4gICAgeCA9IDE7XG4gIH1cbiAgaWYgKCF5IHx8ICFOdW1iZXIuaXNGaW5pdGUoeSkpIHtcbiAgICB5ID0gMTtcbiAgfVxuICByZXR1cm4ge1xuICAgIHgsXG4gICAgeVxuICB9O1xufVxudmFyIG5vT2Zmc2V0cyA9IC8qIEBfX1BVUkVfXyAqLyBjcmVhdGVDb29yZHMoMCk7XG5mdW5jdGlvbiBnZXRWaXN1YWxPZmZzZXRzKGVsZW1lbnQpIHtcbiAgY29uc3Qgd2luID0gZ2V0V2luZG93MihlbGVtZW50KTtcbiAgaWYgKCFpc1dlYktpdCgpIHx8ICF3aW4udmlzdWFsVmlld3BvcnQpIHtcbiAgICByZXR1cm4gbm9PZmZzZXRzO1xuICB9XG4gIHJldHVybiB7XG4gICAgeDogd2luLnZpc3VhbFZpZXdwb3J0Lm9mZnNldExlZnQsXG4gICAgeTogd2luLnZpc3VhbFZpZXdwb3J0Lm9mZnNldFRvcFxuICB9O1xufVxuZnVuY3Rpb24gc2hvdWxkQWRkVmlzdWFsT2Zmc2V0cyhlbGVtZW50LCBpc0ZpeGVkLCBmbG9hdGluZ09mZnNldFBhcmVudCkge1xuICBpZiAoaXNGaXhlZCA9PT0gdm9pZCAwKSB7XG4gICAgaXNGaXhlZCA9IGZhbHNlO1xuICB9XG4gIGlmICghZmxvYXRpbmdPZmZzZXRQYXJlbnQgfHwgaXNGaXhlZCAmJiBmbG9hdGluZ09mZnNldFBhcmVudCAhPT0gZ2V0V2luZG93MihlbGVtZW50KSkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuICByZXR1cm4gaXNGaXhlZDtcbn1cbmZ1bmN0aW9uIGdldEJvdW5kaW5nQ2xpZW50UmVjdChlbGVtZW50LCBpbmNsdWRlU2NhbGUsIGlzRml4ZWRTdHJhdGVneSwgb2Zmc2V0UGFyZW50KSB7XG4gIGlmIChpbmNsdWRlU2NhbGUgPT09IHZvaWQgMCkge1xuICAgIGluY2x1ZGVTY2FsZSA9IGZhbHNlO1xuICB9XG4gIGlmIChpc0ZpeGVkU3RyYXRlZ3kgPT09IHZvaWQgMCkge1xuICAgIGlzRml4ZWRTdHJhdGVneSA9IGZhbHNlO1xuICB9XG4gIGNvbnN0IGNsaWVudFJlY3QgPSBlbGVtZW50LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xuICBjb25zdCBkb21FbGVtZW50ID0gdW53cmFwRWxlbWVudChlbGVtZW50KTtcbiAgbGV0IHNjYWxlID0gY3JlYXRlQ29vcmRzKDEpO1xuICBpZiAoaW5jbHVkZVNjYWxlKSB7XG4gICAgaWYgKG9mZnNldFBhcmVudCkge1xuICAgICAgaWYgKGlzRWxlbWVudChvZmZzZXRQYXJlbnQpKSB7XG4gICAgICAgIHNjYWxlID0gZ2V0U2NhbGUob2Zmc2V0UGFyZW50KTtcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgc2NhbGUgPSBnZXRTY2FsZShlbGVtZW50KTtcbiAgICB9XG4gIH1cbiAgY29uc3QgdmlzdWFsT2Zmc2V0cyA9IHNob3VsZEFkZFZpc3VhbE9mZnNldHMoZG9tRWxlbWVudCwgaXNGaXhlZFN0cmF0ZWd5LCBvZmZzZXRQYXJlbnQpID8gZ2V0VmlzdWFsT2Zmc2V0cyhkb21FbGVtZW50KSA6IGNyZWF0ZUNvb3JkcygwKTtcbiAgbGV0IHggPSAoY2xpZW50UmVjdC5sZWZ0ICsgdmlzdWFsT2Zmc2V0cy54KSAvIHNjYWxlLng7XG4gIGxldCB5ID0gKGNsaWVudFJlY3QudG9wICsgdmlzdWFsT2Zmc2V0cy55KSAvIHNjYWxlLnk7XG4gIGxldCB3aWR0aCA9IGNsaWVudFJlY3Qud2lkdGggLyBzY2FsZS54O1xuICBsZXQgaGVpZ2h0ID0gY2xpZW50UmVjdC5oZWlnaHQgLyBzY2FsZS55O1xuICBpZiAoZG9tRWxlbWVudCkge1xuICAgIGNvbnN0IHdpbiA9IGdldFdpbmRvdzIoZG9tRWxlbWVudCk7XG4gICAgY29uc3Qgb2Zmc2V0V2luID0gb2Zmc2V0UGFyZW50ICYmIGlzRWxlbWVudChvZmZzZXRQYXJlbnQpID8gZ2V0V2luZG93MihvZmZzZXRQYXJlbnQpIDogb2Zmc2V0UGFyZW50O1xuICAgIGxldCBjdXJyZW50V2luID0gd2luO1xuICAgIGxldCBjdXJyZW50SUZyYW1lID0gY3VycmVudFdpbi5mcmFtZUVsZW1lbnQ7XG4gICAgd2hpbGUgKGN1cnJlbnRJRnJhbWUgJiYgb2Zmc2V0UGFyZW50ICYmIG9mZnNldFdpbiAhPT0gY3VycmVudFdpbikge1xuICAgICAgY29uc3QgaWZyYW1lU2NhbGUgPSBnZXRTY2FsZShjdXJyZW50SUZyYW1lKTtcbiAgICAgIGNvbnN0IGlmcmFtZVJlY3QgPSBjdXJyZW50SUZyYW1lLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xuICAgICAgY29uc3QgY3NzID0gZ2V0Q29tcHV0ZWRTdHlsZTIoY3VycmVudElGcmFtZSk7XG4gICAgICBjb25zdCBsZWZ0ID0gaWZyYW1lUmVjdC5sZWZ0ICsgKGN1cnJlbnRJRnJhbWUuY2xpZW50TGVmdCArIHBhcnNlRmxvYXQoY3NzLnBhZGRpbmdMZWZ0KSkgKiBpZnJhbWVTY2FsZS54O1xuICAgICAgY29uc3QgdG9wID0gaWZyYW1lUmVjdC50b3AgKyAoY3VycmVudElGcmFtZS5jbGllbnRUb3AgKyBwYXJzZUZsb2F0KGNzcy5wYWRkaW5nVG9wKSkgKiBpZnJhbWVTY2FsZS55O1xuICAgICAgeCAqPSBpZnJhbWVTY2FsZS54O1xuICAgICAgeSAqPSBpZnJhbWVTY2FsZS55O1xuICAgICAgd2lkdGggKj0gaWZyYW1lU2NhbGUueDtcbiAgICAgIGhlaWdodCAqPSBpZnJhbWVTY2FsZS55O1xuICAgICAgeCArPSBsZWZ0O1xuICAgICAgeSArPSB0b3A7XG4gICAgICBjdXJyZW50V2luID0gZ2V0V2luZG93MihjdXJyZW50SUZyYW1lKTtcbiAgICAgIGN1cnJlbnRJRnJhbWUgPSBjdXJyZW50V2luLmZyYW1lRWxlbWVudDtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHJlY3RUb0NsaWVudFJlY3Qoe1xuICAgIHdpZHRoLFxuICAgIGhlaWdodCxcbiAgICB4LFxuICAgIHlcbiAgfSk7XG59XG52YXIgdG9wTGF5ZXJTZWxlY3RvcnMgPSBbXCI6cG9wb3Zlci1vcGVuXCIsIFwiOm1vZGFsXCJdO1xuZnVuY3Rpb24gaXNUb3BMYXllcihlbGVtZW50KSB7XG4gIHJldHVybiB0b3BMYXllclNlbGVjdG9ycy5zb21lKChzZWxlY3RvcikgPT4ge1xuICAgIHRyeSB7XG4gICAgICByZXR1cm4gZWxlbWVudC5tYXRjaGVzKHNlbGVjdG9yKTtcbiAgICB9IGNhdGNoIChlMikge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgfSk7XG59XG5mdW5jdGlvbiBjb252ZXJ0T2Zmc2V0UGFyZW50UmVsYXRpdmVSZWN0VG9WaWV3cG9ydFJlbGF0aXZlUmVjdChfcmVmKSB7XG4gIGxldCB7XG4gICAgZWxlbWVudHMsXG4gICAgcmVjdCxcbiAgICBvZmZzZXRQYXJlbnQsXG4gICAgc3RyYXRlZ3lcbiAgfSA9IF9yZWY7XG4gIGNvbnN0IGlzRml4ZWQgPSBzdHJhdGVneSA9PT0gXCJmaXhlZFwiO1xuICBjb25zdCBkb2N1bWVudEVsZW1lbnQgPSBnZXREb2N1bWVudEVsZW1lbnQob2Zmc2V0UGFyZW50KTtcbiAgY29uc3QgdG9wTGF5ZXIgPSBlbGVtZW50cyA/IGlzVG9wTGF5ZXIoZWxlbWVudHMuZmxvYXRpbmcpIDogZmFsc2U7XG4gIGlmIChvZmZzZXRQYXJlbnQgPT09IGRvY3VtZW50RWxlbWVudCB8fCB0b3BMYXllciAmJiBpc0ZpeGVkKSB7XG4gICAgcmV0dXJuIHJlY3Q7XG4gIH1cbiAgbGV0IHNjcm9sbCA9IHtcbiAgICBzY3JvbGxMZWZ0OiAwLFxuICAgIHNjcm9sbFRvcDogMFxuICB9O1xuICBsZXQgc2NhbGUgPSBjcmVhdGVDb29yZHMoMSk7XG4gIGNvbnN0IG9mZnNldHMgPSBjcmVhdGVDb29yZHMoMCk7XG4gIGNvbnN0IGlzT2Zmc2V0UGFyZW50QW5FbGVtZW50ID0gaXNIVE1MRWxlbWVudChvZmZzZXRQYXJlbnQpO1xuICBpZiAoaXNPZmZzZXRQYXJlbnRBbkVsZW1lbnQgfHwgIWlzT2Zmc2V0UGFyZW50QW5FbGVtZW50ICYmICFpc0ZpeGVkKSB7XG4gICAgaWYgKGdldE5vZGVOYW1lKG9mZnNldFBhcmVudCkgIT09IFwiYm9keVwiIHx8IGlzT3ZlcmZsb3dFbGVtZW50KGRvY3VtZW50RWxlbWVudCkpIHtcbiAgICAgIHNjcm9sbCA9IGdldE5vZGVTY3JvbGwob2Zmc2V0UGFyZW50KTtcbiAgICB9XG4gICAgaWYgKGlzSFRNTEVsZW1lbnQob2Zmc2V0UGFyZW50KSkge1xuICAgICAgY29uc3Qgb2Zmc2V0UmVjdCA9IGdldEJvdW5kaW5nQ2xpZW50UmVjdChvZmZzZXRQYXJlbnQpO1xuICAgICAgc2NhbGUgPSBnZXRTY2FsZShvZmZzZXRQYXJlbnQpO1xuICAgICAgb2Zmc2V0cy54ID0gb2Zmc2V0UmVjdC54ICsgb2Zmc2V0UGFyZW50LmNsaWVudExlZnQ7XG4gICAgICBvZmZzZXRzLnkgPSBvZmZzZXRSZWN0LnkgKyBvZmZzZXRQYXJlbnQuY2xpZW50VG9wO1xuICAgIH1cbiAgfVxuICByZXR1cm4ge1xuICAgIHdpZHRoOiByZWN0LndpZHRoICogc2NhbGUueCxcbiAgICBoZWlnaHQ6IHJlY3QuaGVpZ2h0ICogc2NhbGUueSxcbiAgICB4OiByZWN0LnggKiBzY2FsZS54IC0gc2Nyb2xsLnNjcm9sbExlZnQgKiBzY2FsZS54ICsgb2Zmc2V0cy54LFxuICAgIHk6IHJlY3QueSAqIHNjYWxlLnkgLSBzY3JvbGwuc2Nyb2xsVG9wICogc2NhbGUueSArIG9mZnNldHMueVxuICB9O1xufVxuZnVuY3Rpb24gZ2V0Q2xpZW50UmVjdHMoZWxlbWVudCkge1xuICByZXR1cm4gQXJyYXkuZnJvbShlbGVtZW50LmdldENsaWVudFJlY3RzKCkpO1xufVxuZnVuY3Rpb24gZ2V0V2luZG93U2Nyb2xsQmFyWChlbGVtZW50KSB7XG4gIHJldHVybiBnZXRCb3VuZGluZ0NsaWVudFJlY3QoZ2V0RG9jdW1lbnRFbGVtZW50KGVsZW1lbnQpKS5sZWZ0ICsgZ2V0Tm9kZVNjcm9sbChlbGVtZW50KS5zY3JvbGxMZWZ0O1xufVxuZnVuY3Rpb24gZ2V0RG9jdW1lbnRSZWN0KGVsZW1lbnQpIHtcbiAgY29uc3QgaHRtbCA9IGdldERvY3VtZW50RWxlbWVudChlbGVtZW50KTtcbiAgY29uc3Qgc2Nyb2xsID0gZ2V0Tm9kZVNjcm9sbChlbGVtZW50KTtcbiAgY29uc3QgYm9keSA9IGVsZW1lbnQub3duZXJEb2N1bWVudC5ib2R5O1xuICBjb25zdCB3aWR0aCA9IG1heDIoaHRtbC5zY3JvbGxXaWR0aCwgaHRtbC5jbGllbnRXaWR0aCwgYm9keS5zY3JvbGxXaWR0aCwgYm9keS5jbGllbnRXaWR0aCk7XG4gIGNvbnN0IGhlaWdodCA9IG1heDIoaHRtbC5zY3JvbGxIZWlnaHQsIGh0bWwuY2xpZW50SGVpZ2h0LCBib2R5LnNjcm9sbEhlaWdodCwgYm9keS5jbGllbnRIZWlnaHQpO1xuICBsZXQgeCA9IC1zY3JvbGwuc2Nyb2xsTGVmdCArIGdldFdpbmRvd1Njcm9sbEJhclgoZWxlbWVudCk7XG4gIGNvbnN0IHkgPSAtc2Nyb2xsLnNjcm9sbFRvcDtcbiAgaWYgKGdldENvbXB1dGVkU3R5bGUyKGJvZHkpLmRpcmVjdGlvbiA9PT0gXCJydGxcIikge1xuICAgIHggKz0gbWF4MihodG1sLmNsaWVudFdpZHRoLCBib2R5LmNsaWVudFdpZHRoKSAtIHdpZHRoO1xuICB9XG4gIHJldHVybiB7XG4gICAgd2lkdGgsXG4gICAgaGVpZ2h0LFxuICAgIHgsXG4gICAgeVxuICB9O1xufVxuZnVuY3Rpb24gZ2V0Vmlld3BvcnRSZWN0KGVsZW1lbnQsIHN0cmF0ZWd5KSB7XG4gIGNvbnN0IHdpbiA9IGdldFdpbmRvdzIoZWxlbWVudCk7XG4gIGNvbnN0IGh0bWwgPSBnZXREb2N1bWVudEVsZW1lbnQoZWxlbWVudCk7XG4gIGNvbnN0IHZpc3VhbFZpZXdwb3J0ID0gd2luLnZpc3VhbFZpZXdwb3J0O1xuICBsZXQgd2lkdGggPSBodG1sLmNsaWVudFdpZHRoO1xuICBsZXQgaGVpZ2h0ID0gaHRtbC5jbGllbnRIZWlnaHQ7XG4gIGxldCB4ID0gMDtcbiAgbGV0IHkgPSAwO1xuICBpZiAodmlzdWFsVmlld3BvcnQpIHtcbiAgICB3aWR0aCA9IHZpc3VhbFZpZXdwb3J0LndpZHRoO1xuICAgIGhlaWdodCA9IHZpc3VhbFZpZXdwb3J0LmhlaWdodDtcbiAgICBjb25zdCB2aXN1YWxWaWV3cG9ydEJhc2VkID0gaXNXZWJLaXQoKTtcbiAgICBpZiAoIXZpc3VhbFZpZXdwb3J0QmFzZWQgfHwgdmlzdWFsVmlld3BvcnRCYXNlZCAmJiBzdHJhdGVneSA9PT0gXCJmaXhlZFwiKSB7XG4gICAgICB4ID0gdmlzdWFsVmlld3BvcnQub2Zmc2V0TGVmdDtcbiAgICAgIHkgPSB2aXN1YWxWaWV3cG9ydC5vZmZzZXRUb3A7XG4gICAgfVxuICB9XG4gIHJldHVybiB7XG4gICAgd2lkdGgsXG4gICAgaGVpZ2h0LFxuICAgIHgsXG4gICAgeVxuICB9O1xufVxuZnVuY3Rpb24gZ2V0SW5uZXJCb3VuZGluZ0NsaWVudFJlY3QoZWxlbWVudCwgc3RyYXRlZ3kpIHtcbiAgY29uc3QgY2xpZW50UmVjdCA9IGdldEJvdW5kaW5nQ2xpZW50UmVjdChlbGVtZW50LCB0cnVlLCBzdHJhdGVneSA9PT0gXCJmaXhlZFwiKTtcbiAgY29uc3QgdG9wID0gY2xpZW50UmVjdC50b3AgKyBlbGVtZW50LmNsaWVudFRvcDtcbiAgY29uc3QgbGVmdCA9IGNsaWVudFJlY3QubGVmdCArIGVsZW1lbnQuY2xpZW50TGVmdDtcbiAgY29uc3Qgc2NhbGUgPSBpc0hUTUxFbGVtZW50KGVsZW1lbnQpID8gZ2V0U2NhbGUoZWxlbWVudCkgOiBjcmVhdGVDb29yZHMoMSk7XG4gIGNvbnN0IHdpZHRoID0gZWxlbWVudC5jbGllbnRXaWR0aCAqIHNjYWxlLng7XG4gIGNvbnN0IGhlaWdodCA9IGVsZW1lbnQuY2xpZW50SGVpZ2h0ICogc2NhbGUueTtcbiAgY29uc3QgeCA9IGxlZnQgKiBzY2FsZS54O1xuICBjb25zdCB5ID0gdG9wICogc2NhbGUueTtcbiAgcmV0dXJuIHtcbiAgICB3aWR0aCxcbiAgICBoZWlnaHQsXG4gICAgeCxcbiAgICB5XG4gIH07XG59XG5mdW5jdGlvbiBnZXRDbGllbnRSZWN0RnJvbUNsaXBwaW5nQW5jZXN0b3IoZWxlbWVudCwgY2xpcHBpbmdBbmNlc3Rvciwgc3RyYXRlZ3kpIHtcbiAgbGV0IHJlY3Q7XG4gIGlmIChjbGlwcGluZ0FuY2VzdG9yID09PSBcInZpZXdwb3J0XCIpIHtcbiAgICByZWN0ID0gZ2V0Vmlld3BvcnRSZWN0KGVsZW1lbnQsIHN0cmF0ZWd5KTtcbiAgfSBlbHNlIGlmIChjbGlwcGluZ0FuY2VzdG9yID09PSBcImRvY3VtZW50XCIpIHtcbiAgICByZWN0ID0gZ2V0RG9jdW1lbnRSZWN0KGdldERvY3VtZW50RWxlbWVudChlbGVtZW50KSk7XG4gIH0gZWxzZSBpZiAoaXNFbGVtZW50KGNsaXBwaW5nQW5jZXN0b3IpKSB7XG4gICAgcmVjdCA9IGdldElubmVyQm91bmRpbmdDbGllbnRSZWN0KGNsaXBwaW5nQW5jZXN0b3IsIHN0cmF0ZWd5KTtcbiAgfSBlbHNlIHtcbiAgICBjb25zdCB2aXN1YWxPZmZzZXRzID0gZ2V0VmlzdWFsT2Zmc2V0cyhlbGVtZW50KTtcbiAgICByZWN0ID0ge1xuICAgICAgLi4uY2xpcHBpbmdBbmNlc3RvcixcbiAgICAgIHg6IGNsaXBwaW5nQW5jZXN0b3IueCAtIHZpc3VhbE9mZnNldHMueCxcbiAgICAgIHk6IGNsaXBwaW5nQW5jZXN0b3IueSAtIHZpc3VhbE9mZnNldHMueVxuICAgIH07XG4gIH1cbiAgcmV0dXJuIHJlY3RUb0NsaWVudFJlY3QocmVjdCk7XG59XG5mdW5jdGlvbiBoYXNGaXhlZFBvc2l0aW9uQW5jZXN0b3IoZWxlbWVudCwgc3RvcE5vZGUpIHtcbiAgY29uc3QgcGFyZW50Tm9kZSA9IGdldFBhcmVudE5vZGUoZWxlbWVudCk7XG4gIGlmIChwYXJlbnROb2RlID09PSBzdG9wTm9kZSB8fCAhaXNFbGVtZW50KHBhcmVudE5vZGUpIHx8IGlzTGFzdFRyYXZlcnNhYmxlTm9kZShwYXJlbnROb2RlKSkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuICByZXR1cm4gZ2V0Q29tcHV0ZWRTdHlsZTIocGFyZW50Tm9kZSkucG9zaXRpb24gPT09IFwiZml4ZWRcIiB8fCBoYXNGaXhlZFBvc2l0aW9uQW5jZXN0b3IocGFyZW50Tm9kZSwgc3RvcE5vZGUpO1xufVxuZnVuY3Rpb24gZ2V0Q2xpcHBpbmdFbGVtZW50QW5jZXN0b3JzKGVsZW1lbnQsIGNhY2hlMikge1xuICBjb25zdCBjYWNoZWRSZXN1bHQgPSBjYWNoZTIuZ2V0KGVsZW1lbnQpO1xuICBpZiAoY2FjaGVkUmVzdWx0KSB7XG4gICAgcmV0dXJuIGNhY2hlZFJlc3VsdDtcbiAgfVxuICBsZXQgcmVzdWx0ID0gZ2V0T3ZlcmZsb3dBbmNlc3RvcnMoZWxlbWVudCwgW10sIGZhbHNlKS5maWx0ZXIoKGVsKSA9PiBpc0VsZW1lbnQoZWwpICYmIGdldE5vZGVOYW1lKGVsKSAhPT0gXCJib2R5XCIpO1xuICBsZXQgY3VycmVudENvbnRhaW5pbmdCbG9ja0NvbXB1dGVkU3R5bGUgPSBudWxsO1xuICBjb25zdCBlbGVtZW50SXNGaXhlZCA9IGdldENvbXB1dGVkU3R5bGUyKGVsZW1lbnQpLnBvc2l0aW9uID09PSBcImZpeGVkXCI7XG4gIGxldCBjdXJyZW50Tm9kZSA9IGVsZW1lbnRJc0ZpeGVkID8gZ2V0UGFyZW50Tm9kZShlbGVtZW50KSA6IGVsZW1lbnQ7XG4gIHdoaWxlIChpc0VsZW1lbnQoY3VycmVudE5vZGUpICYmICFpc0xhc3RUcmF2ZXJzYWJsZU5vZGUoY3VycmVudE5vZGUpKSB7XG4gICAgY29uc3QgY29tcHV0ZWRTdHlsZSA9IGdldENvbXB1dGVkU3R5bGUyKGN1cnJlbnROb2RlKTtcbiAgICBjb25zdCBjdXJyZW50Tm9kZUlzQ29udGFpbmluZyA9IGlzQ29udGFpbmluZ0Jsb2NrKGN1cnJlbnROb2RlKTtcbiAgICBpZiAoIWN1cnJlbnROb2RlSXNDb250YWluaW5nICYmIGNvbXB1dGVkU3R5bGUucG9zaXRpb24gPT09IFwiZml4ZWRcIikge1xuICAgICAgY3VycmVudENvbnRhaW5pbmdCbG9ja0NvbXB1dGVkU3R5bGUgPSBudWxsO1xuICAgIH1cbiAgICBjb25zdCBzaG91bGREcm9wQ3VycmVudE5vZGUgPSBlbGVtZW50SXNGaXhlZCA/ICFjdXJyZW50Tm9kZUlzQ29udGFpbmluZyAmJiAhY3VycmVudENvbnRhaW5pbmdCbG9ja0NvbXB1dGVkU3R5bGUgOiAhY3VycmVudE5vZGVJc0NvbnRhaW5pbmcgJiYgY29tcHV0ZWRTdHlsZS5wb3NpdGlvbiA9PT0gXCJzdGF0aWNcIiAmJiAhIWN1cnJlbnRDb250YWluaW5nQmxvY2tDb21wdXRlZFN0eWxlICYmIFtcImFic29sdXRlXCIsIFwiZml4ZWRcIl0uaW5jbHVkZXMoY3VycmVudENvbnRhaW5pbmdCbG9ja0NvbXB1dGVkU3R5bGUucG9zaXRpb24pIHx8IGlzT3ZlcmZsb3dFbGVtZW50KGN1cnJlbnROb2RlKSAmJiAhY3VycmVudE5vZGVJc0NvbnRhaW5pbmcgJiYgaGFzRml4ZWRQb3NpdGlvbkFuY2VzdG9yKGVsZW1lbnQsIGN1cnJlbnROb2RlKTtcbiAgICBpZiAoc2hvdWxkRHJvcEN1cnJlbnROb2RlKSB7XG4gICAgICByZXN1bHQgPSByZXN1bHQuZmlsdGVyKChhbmNlc3RvcikgPT4gYW5jZXN0b3IgIT09IGN1cnJlbnROb2RlKTtcbiAgICB9IGVsc2Uge1xuICAgICAgY3VycmVudENvbnRhaW5pbmdCbG9ja0NvbXB1dGVkU3R5bGUgPSBjb21wdXRlZFN0eWxlO1xuICAgIH1cbiAgICBjdXJyZW50Tm9kZSA9IGdldFBhcmVudE5vZGUoY3VycmVudE5vZGUpO1xuICB9XG4gIGNhY2hlMi5zZXQoZWxlbWVudCwgcmVzdWx0KTtcbiAgcmV0dXJuIHJlc3VsdDtcbn1cbmZ1bmN0aW9uIGdldENsaXBwaW5nUmVjdChfcmVmKSB7XG4gIGxldCB7XG4gICAgZWxlbWVudCxcbiAgICBib3VuZGFyeSxcbiAgICByb290Qm91bmRhcnksXG4gICAgc3RyYXRlZ3lcbiAgfSA9IF9yZWY7XG4gIGNvbnN0IGVsZW1lbnRDbGlwcGluZ0FuY2VzdG9ycyA9IGJvdW5kYXJ5ID09PSBcImNsaXBwaW5nQW5jZXN0b3JzXCIgPyBpc1RvcExheWVyKGVsZW1lbnQpID8gW10gOiBnZXRDbGlwcGluZ0VsZW1lbnRBbmNlc3RvcnMoZWxlbWVudCwgdGhpcy5fYykgOiBbXS5jb25jYXQoYm91bmRhcnkpO1xuICBjb25zdCBjbGlwcGluZ0FuY2VzdG9ycyA9IFsuLi5lbGVtZW50Q2xpcHBpbmdBbmNlc3RvcnMsIHJvb3RCb3VuZGFyeV07XG4gIGNvbnN0IGZpcnN0Q2xpcHBpbmdBbmNlc3RvciA9IGNsaXBwaW5nQW5jZXN0b3JzWzBdO1xuICBjb25zdCBjbGlwcGluZ1JlY3QgPSBjbGlwcGluZ0FuY2VzdG9ycy5yZWR1Y2UoKGFjY1JlY3QsIGNsaXBwaW5nQW5jZXN0b3IpID0+IHtcbiAgICBjb25zdCByZWN0ID0gZ2V0Q2xpZW50UmVjdEZyb21DbGlwcGluZ0FuY2VzdG9yKGVsZW1lbnQsIGNsaXBwaW5nQW5jZXN0b3IsIHN0cmF0ZWd5KTtcbiAgICBhY2NSZWN0LnRvcCA9IG1heDIocmVjdC50b3AsIGFjY1JlY3QudG9wKTtcbiAgICBhY2NSZWN0LnJpZ2h0ID0gbWluMihyZWN0LnJpZ2h0LCBhY2NSZWN0LnJpZ2h0KTtcbiAgICBhY2NSZWN0LmJvdHRvbSA9IG1pbjIocmVjdC5ib3R0b20sIGFjY1JlY3QuYm90dG9tKTtcbiAgICBhY2NSZWN0LmxlZnQgPSBtYXgyKHJlY3QubGVmdCwgYWNjUmVjdC5sZWZ0KTtcbiAgICByZXR1cm4gYWNjUmVjdDtcbiAgfSwgZ2V0Q2xpZW50UmVjdEZyb21DbGlwcGluZ0FuY2VzdG9yKGVsZW1lbnQsIGZpcnN0Q2xpcHBpbmdBbmNlc3Rvciwgc3RyYXRlZ3kpKTtcbiAgcmV0dXJuIHtcbiAgICB3aWR0aDogY2xpcHBpbmdSZWN0LnJpZ2h0IC0gY2xpcHBpbmdSZWN0LmxlZnQsXG4gICAgaGVpZ2h0OiBjbGlwcGluZ1JlY3QuYm90dG9tIC0gY2xpcHBpbmdSZWN0LnRvcCxcbiAgICB4OiBjbGlwcGluZ1JlY3QubGVmdCxcbiAgICB5OiBjbGlwcGluZ1JlY3QudG9wXG4gIH07XG59XG5mdW5jdGlvbiBnZXREaW1lbnNpb25zKGVsZW1lbnQpIHtcbiAgY29uc3Qge1xuICAgIHdpZHRoLFxuICAgIGhlaWdodFxuICB9ID0gZ2V0Q3NzRGltZW5zaW9ucyhlbGVtZW50KTtcbiAgcmV0dXJuIHtcbiAgICB3aWR0aCxcbiAgICBoZWlnaHRcbiAgfTtcbn1cbmZ1bmN0aW9uIGdldFJlY3RSZWxhdGl2ZVRvT2Zmc2V0UGFyZW50KGVsZW1lbnQsIG9mZnNldFBhcmVudCwgc3RyYXRlZ3kpIHtcbiAgY29uc3QgaXNPZmZzZXRQYXJlbnRBbkVsZW1lbnQgPSBpc0hUTUxFbGVtZW50KG9mZnNldFBhcmVudCk7XG4gIGNvbnN0IGRvY3VtZW50RWxlbWVudCA9IGdldERvY3VtZW50RWxlbWVudChvZmZzZXRQYXJlbnQpO1xuICBjb25zdCBpc0ZpeGVkID0gc3RyYXRlZ3kgPT09IFwiZml4ZWRcIjtcbiAgY29uc3QgcmVjdCA9IGdldEJvdW5kaW5nQ2xpZW50UmVjdChlbGVtZW50LCB0cnVlLCBpc0ZpeGVkLCBvZmZzZXRQYXJlbnQpO1xuICBsZXQgc2Nyb2xsID0ge1xuICAgIHNjcm9sbExlZnQ6IDAsXG4gICAgc2Nyb2xsVG9wOiAwXG4gIH07XG4gIGNvbnN0IG9mZnNldHMgPSBjcmVhdGVDb29yZHMoMCk7XG4gIGlmIChpc09mZnNldFBhcmVudEFuRWxlbWVudCB8fCAhaXNPZmZzZXRQYXJlbnRBbkVsZW1lbnQgJiYgIWlzRml4ZWQpIHtcbiAgICBpZiAoZ2V0Tm9kZU5hbWUob2Zmc2V0UGFyZW50KSAhPT0gXCJib2R5XCIgfHwgaXNPdmVyZmxvd0VsZW1lbnQoZG9jdW1lbnRFbGVtZW50KSkge1xuICAgICAgc2Nyb2xsID0gZ2V0Tm9kZVNjcm9sbChvZmZzZXRQYXJlbnQpO1xuICAgIH1cbiAgICBpZiAoaXNPZmZzZXRQYXJlbnRBbkVsZW1lbnQpIHtcbiAgICAgIGNvbnN0IG9mZnNldFJlY3QgPSBnZXRCb3VuZGluZ0NsaWVudFJlY3Qob2Zmc2V0UGFyZW50LCB0cnVlLCBpc0ZpeGVkLCBvZmZzZXRQYXJlbnQpO1xuICAgICAgb2Zmc2V0cy54ID0gb2Zmc2V0UmVjdC54ICsgb2Zmc2V0UGFyZW50LmNsaWVudExlZnQ7XG4gICAgICBvZmZzZXRzLnkgPSBvZmZzZXRSZWN0LnkgKyBvZmZzZXRQYXJlbnQuY2xpZW50VG9wO1xuICAgIH0gZWxzZSBpZiAoZG9jdW1lbnRFbGVtZW50KSB7XG4gICAgICBvZmZzZXRzLnggPSBnZXRXaW5kb3dTY3JvbGxCYXJYKGRvY3VtZW50RWxlbWVudCk7XG4gICAgfVxuICB9XG4gIGNvbnN0IHggPSByZWN0LmxlZnQgKyBzY3JvbGwuc2Nyb2xsTGVmdCAtIG9mZnNldHMueDtcbiAgY29uc3QgeSA9IHJlY3QudG9wICsgc2Nyb2xsLnNjcm9sbFRvcCAtIG9mZnNldHMueTtcbiAgcmV0dXJuIHtcbiAgICB4LFxuICAgIHksXG4gICAgd2lkdGg6IHJlY3Qud2lkdGgsXG4gICAgaGVpZ2h0OiByZWN0LmhlaWdodFxuICB9O1xufVxuZnVuY3Rpb24gaXNTdGF0aWNQb3NpdGlvbmVkKGVsZW1lbnQpIHtcbiAgcmV0dXJuIGdldENvbXB1dGVkU3R5bGUyKGVsZW1lbnQpLnBvc2l0aW9uID09PSBcInN0YXRpY1wiO1xufVxuZnVuY3Rpb24gZ2V0VHJ1ZU9mZnNldFBhcmVudChlbGVtZW50LCBwb2x5ZmlsbCkge1xuICBpZiAoIWlzSFRNTEVsZW1lbnQoZWxlbWVudCkgfHwgZ2V0Q29tcHV0ZWRTdHlsZTIoZWxlbWVudCkucG9zaXRpb24gPT09IFwiZml4ZWRcIikge1xuICAgIHJldHVybiBudWxsO1xuICB9XG4gIGlmIChwb2x5ZmlsbCkge1xuICAgIHJldHVybiBwb2x5ZmlsbChlbGVtZW50KTtcbiAgfVxuICByZXR1cm4gZWxlbWVudC5vZmZzZXRQYXJlbnQ7XG59XG5mdW5jdGlvbiBnZXRPZmZzZXRQYXJlbnQoZWxlbWVudCwgcG9seWZpbGwpIHtcbiAgY29uc3Qgd2luID0gZ2V0V2luZG93MihlbGVtZW50KTtcbiAgaWYgKGlzVG9wTGF5ZXIoZWxlbWVudCkpIHtcbiAgICByZXR1cm4gd2luO1xuICB9XG4gIGlmICghaXNIVE1MRWxlbWVudChlbGVtZW50KSkge1xuICAgIGxldCBzdmdPZmZzZXRQYXJlbnQgPSBnZXRQYXJlbnROb2RlKGVsZW1lbnQpO1xuICAgIHdoaWxlIChzdmdPZmZzZXRQYXJlbnQgJiYgIWlzTGFzdFRyYXZlcnNhYmxlTm9kZShzdmdPZmZzZXRQYXJlbnQpKSB7XG4gICAgICBpZiAoaXNFbGVtZW50KHN2Z09mZnNldFBhcmVudCkgJiYgIWlzU3RhdGljUG9zaXRpb25lZChzdmdPZmZzZXRQYXJlbnQpKSB7XG4gICAgICAgIHJldHVybiBzdmdPZmZzZXRQYXJlbnQ7XG4gICAgICB9XG4gICAgICBzdmdPZmZzZXRQYXJlbnQgPSBnZXRQYXJlbnROb2RlKHN2Z09mZnNldFBhcmVudCk7XG4gICAgfVxuICAgIHJldHVybiB3aW47XG4gIH1cbiAgbGV0IG9mZnNldFBhcmVudCA9IGdldFRydWVPZmZzZXRQYXJlbnQoZWxlbWVudCwgcG9seWZpbGwpO1xuICB3aGlsZSAob2Zmc2V0UGFyZW50ICYmIGlzVGFibGVFbGVtZW50KG9mZnNldFBhcmVudCkgJiYgaXNTdGF0aWNQb3NpdGlvbmVkKG9mZnNldFBhcmVudCkpIHtcbiAgICBvZmZzZXRQYXJlbnQgPSBnZXRUcnVlT2Zmc2V0UGFyZW50KG9mZnNldFBhcmVudCwgcG9seWZpbGwpO1xuICB9XG4gIGlmIChvZmZzZXRQYXJlbnQgJiYgaXNMYXN0VHJhdmVyc2FibGVOb2RlKG9mZnNldFBhcmVudCkgJiYgaXNTdGF0aWNQb3NpdGlvbmVkKG9mZnNldFBhcmVudCkgJiYgIWlzQ29udGFpbmluZ0Jsb2NrKG9mZnNldFBhcmVudCkpIHtcbiAgICByZXR1cm4gd2luO1xuICB9XG4gIHJldHVybiBvZmZzZXRQYXJlbnQgfHwgZ2V0Q29udGFpbmluZ0Jsb2NrKGVsZW1lbnQpIHx8IHdpbjtcbn1cbnZhciBnZXRFbGVtZW50UmVjdHMgPSBhc3luYyBmdW5jdGlvbihkYXRhKSB7XG4gIGNvbnN0IGdldE9mZnNldFBhcmVudEZuID0gdGhpcy5nZXRPZmZzZXRQYXJlbnQgfHwgZ2V0T2Zmc2V0UGFyZW50O1xuICBjb25zdCBnZXREaW1lbnNpb25zRm4gPSB0aGlzLmdldERpbWVuc2lvbnM7XG4gIGNvbnN0IGZsb2F0aW5nRGltZW5zaW9ucyA9IGF3YWl0IGdldERpbWVuc2lvbnNGbihkYXRhLmZsb2F0aW5nKTtcbiAgcmV0dXJuIHtcbiAgICByZWZlcmVuY2U6IGdldFJlY3RSZWxhdGl2ZVRvT2Zmc2V0UGFyZW50KGRhdGEucmVmZXJlbmNlLCBhd2FpdCBnZXRPZmZzZXRQYXJlbnRGbihkYXRhLmZsb2F0aW5nKSwgZGF0YS5zdHJhdGVneSksXG4gICAgZmxvYXRpbmc6IHtcbiAgICAgIHg6IDAsXG4gICAgICB5OiAwLFxuICAgICAgd2lkdGg6IGZsb2F0aW5nRGltZW5zaW9ucy53aWR0aCxcbiAgICAgIGhlaWdodDogZmxvYXRpbmdEaW1lbnNpb25zLmhlaWdodFxuICAgIH1cbiAgfTtcbn07XG5mdW5jdGlvbiBpc1JUTDIoZWxlbWVudCkge1xuICByZXR1cm4gZ2V0Q29tcHV0ZWRTdHlsZTIoZWxlbWVudCkuZGlyZWN0aW9uID09PSBcInJ0bFwiO1xufVxudmFyIHBsYXRmb3JtID0ge1xuICBjb252ZXJ0T2Zmc2V0UGFyZW50UmVsYXRpdmVSZWN0VG9WaWV3cG9ydFJlbGF0aXZlUmVjdCxcbiAgZ2V0RG9jdW1lbnRFbGVtZW50LFxuICBnZXRDbGlwcGluZ1JlY3QsXG4gIGdldE9mZnNldFBhcmVudCxcbiAgZ2V0RWxlbWVudFJlY3RzLFxuICBnZXRDbGllbnRSZWN0cyxcbiAgZ2V0RGltZW5zaW9ucyxcbiAgZ2V0U2NhbGUsXG4gIGlzRWxlbWVudCxcbiAgaXNSVEw6IGlzUlRMMlxufTtcbmZ1bmN0aW9uIG9ic2VydmVNb3ZlKGVsZW1lbnQsIG9uTW92ZSkge1xuICBsZXQgaW8gPSBudWxsO1xuICBsZXQgdGltZW91dElkO1xuICBjb25zdCByb290ID0gZ2V0RG9jdW1lbnRFbGVtZW50KGVsZW1lbnQpO1xuICBmdW5jdGlvbiBjbGVhbnVwKCkge1xuICAgIHZhciBfaW87XG4gICAgY2xlYXJUaW1lb3V0KHRpbWVvdXRJZCk7XG4gICAgKF9pbyA9IGlvKSA9PSBudWxsIHx8IF9pby5kaXNjb25uZWN0KCk7XG4gICAgaW8gPSBudWxsO1xuICB9XG4gIGZ1bmN0aW9uIHJlZnJlc2goc2tpcCwgdGhyZXNob2xkKSB7XG4gICAgaWYgKHNraXAgPT09IHZvaWQgMCkge1xuICAgICAgc2tpcCA9IGZhbHNlO1xuICAgIH1cbiAgICBpZiAodGhyZXNob2xkID09PSB2b2lkIDApIHtcbiAgICAgIHRocmVzaG9sZCA9IDE7XG4gICAgfVxuICAgIGNsZWFudXAoKTtcbiAgICBjb25zdCB7XG4gICAgICBsZWZ0LFxuICAgICAgdG9wLFxuICAgICAgd2lkdGgsXG4gICAgICBoZWlnaHRcbiAgICB9ID0gZWxlbWVudC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcbiAgICBpZiAoIXNraXApIHtcbiAgICAgIG9uTW92ZSgpO1xuICAgIH1cbiAgICBpZiAoIXdpZHRoIHx8ICFoZWlnaHQpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgY29uc3QgaW5zZXRUb3AgPSBmbG9vcih0b3ApO1xuICAgIGNvbnN0IGluc2V0UmlnaHQgPSBmbG9vcihyb290LmNsaWVudFdpZHRoIC0gKGxlZnQgKyB3aWR0aCkpO1xuICAgIGNvbnN0IGluc2V0Qm90dG9tID0gZmxvb3Iocm9vdC5jbGllbnRIZWlnaHQgLSAodG9wICsgaGVpZ2h0KSk7XG4gICAgY29uc3QgaW5zZXRMZWZ0ID0gZmxvb3IobGVmdCk7XG4gICAgY29uc3Qgcm9vdE1hcmdpbiA9IC1pbnNldFRvcCArIFwicHggXCIgKyAtaW5zZXRSaWdodCArIFwicHggXCIgKyAtaW5zZXRCb3R0b20gKyBcInB4IFwiICsgLWluc2V0TGVmdCArIFwicHhcIjtcbiAgICBjb25zdCBvcHRpb25zID0ge1xuICAgICAgcm9vdE1hcmdpbixcbiAgICAgIHRocmVzaG9sZDogbWF4MigwLCBtaW4yKDEsIHRocmVzaG9sZCkpIHx8IDFcbiAgICB9O1xuICAgIGxldCBpc0ZpcnN0VXBkYXRlID0gdHJ1ZTtcbiAgICBmdW5jdGlvbiBoYW5kbGVPYnNlcnZlKGVudHJpZXMyKSB7XG4gICAgICBjb25zdCByYXRpbyA9IGVudHJpZXMyWzBdLmludGVyc2VjdGlvblJhdGlvO1xuICAgICAgaWYgKHJhdGlvICE9PSB0aHJlc2hvbGQpIHtcbiAgICAgICAgaWYgKCFpc0ZpcnN0VXBkYXRlKSB7XG4gICAgICAgICAgcmV0dXJuIHJlZnJlc2goKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoIXJhdGlvKSB7XG4gICAgICAgICAgdGltZW91dElkID0gc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgICAgICByZWZyZXNoKGZhbHNlLCAxZS03KTtcbiAgICAgICAgICB9LCAxZTMpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHJlZnJlc2goZmFsc2UsIHJhdGlvKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgaXNGaXJzdFVwZGF0ZSA9IGZhbHNlO1xuICAgIH1cbiAgICB0cnkge1xuICAgICAgaW8gPSBuZXcgSW50ZXJzZWN0aW9uT2JzZXJ2ZXIoaGFuZGxlT2JzZXJ2ZSwge1xuICAgICAgICAuLi5vcHRpb25zLFxuICAgICAgICAvLyBIYW5kbGUgPGlmcmFtZT5zXG4gICAgICAgIHJvb3Q6IHJvb3Qub3duZXJEb2N1bWVudFxuICAgICAgfSk7XG4gICAgfSBjYXRjaCAoZTIpIHtcbiAgICAgIGlvID0gbmV3IEludGVyc2VjdGlvbk9ic2VydmVyKGhhbmRsZU9ic2VydmUsIG9wdGlvbnMpO1xuICAgIH1cbiAgICBpby5vYnNlcnZlKGVsZW1lbnQpO1xuICB9XG4gIHJlZnJlc2godHJ1ZSk7XG4gIHJldHVybiBjbGVhbnVwO1xufVxuZnVuY3Rpb24gYXV0b1VwZGF0ZShyZWZlcmVuY2UsIGZsb2F0aW5nLCB1cGRhdGUsIG9wdGlvbnMpIHtcbiAgaWYgKG9wdGlvbnMgPT09IHZvaWQgMCkge1xuICAgIG9wdGlvbnMgPSB7fTtcbiAgfVxuICBjb25zdCB7XG4gICAgYW5jZXN0b3JTY3JvbGwgPSB0cnVlLFxuICAgIGFuY2VzdG9yUmVzaXplID0gdHJ1ZSxcbiAgICBlbGVtZW50UmVzaXplID0gdHlwZW9mIFJlc2l6ZU9ic2VydmVyID09PSBcImZ1bmN0aW9uXCIsXG4gICAgbGF5b3V0U2hpZnQgPSB0eXBlb2YgSW50ZXJzZWN0aW9uT2JzZXJ2ZXIgPT09IFwiZnVuY3Rpb25cIixcbiAgICBhbmltYXRpb25GcmFtZSA9IGZhbHNlXG4gIH0gPSBvcHRpb25zO1xuICBjb25zdCByZWZlcmVuY2VFbCA9IHVud3JhcEVsZW1lbnQocmVmZXJlbmNlKTtcbiAgY29uc3QgYW5jZXN0b3JzID0gYW5jZXN0b3JTY3JvbGwgfHwgYW5jZXN0b3JSZXNpemUgPyBbLi4ucmVmZXJlbmNlRWwgPyBnZXRPdmVyZmxvd0FuY2VzdG9ycyhyZWZlcmVuY2VFbCkgOiBbXSwgLi4uZ2V0T3ZlcmZsb3dBbmNlc3RvcnMoZmxvYXRpbmcpXSA6IFtdO1xuICBhbmNlc3RvcnMuZm9yRWFjaCgoYW5jZXN0b3IpID0+IHtcbiAgICBhbmNlc3RvclNjcm9sbCAmJiBhbmNlc3Rvci5hZGRFdmVudExpc3RlbmVyKFwic2Nyb2xsXCIsIHVwZGF0ZSwge1xuICAgICAgcGFzc2l2ZTogdHJ1ZVxuICAgIH0pO1xuICAgIGFuY2VzdG9yUmVzaXplICYmIGFuY2VzdG9yLmFkZEV2ZW50TGlzdGVuZXIoXCJyZXNpemVcIiwgdXBkYXRlKTtcbiAgfSk7XG4gIGNvbnN0IGNsZWFudXBJbyA9IHJlZmVyZW5jZUVsICYmIGxheW91dFNoaWZ0ID8gb2JzZXJ2ZU1vdmUocmVmZXJlbmNlRWwsIHVwZGF0ZSkgOiBudWxsO1xuICBsZXQgcmVvYnNlcnZlRnJhbWUgPSAtMTtcbiAgbGV0IHJlc2l6ZU9ic2VydmVyID0gbnVsbDtcbiAgaWYgKGVsZW1lbnRSZXNpemUpIHtcbiAgICByZXNpemVPYnNlcnZlciA9IG5ldyBSZXNpemVPYnNlcnZlcigoX3JlZikgPT4ge1xuICAgICAgbGV0IFtmaXJzdEVudHJ5XSA9IF9yZWY7XG4gICAgICBpZiAoZmlyc3RFbnRyeSAmJiBmaXJzdEVudHJ5LnRhcmdldCA9PT0gcmVmZXJlbmNlRWwgJiYgcmVzaXplT2JzZXJ2ZXIpIHtcbiAgICAgICAgcmVzaXplT2JzZXJ2ZXIudW5vYnNlcnZlKGZsb2F0aW5nKTtcbiAgICAgICAgY2FuY2VsQW5pbWF0aW9uRnJhbWUocmVvYnNlcnZlRnJhbWUpO1xuICAgICAgICByZW9ic2VydmVGcmFtZSA9IHJlcXVlc3RBbmltYXRpb25GcmFtZSgoKSA9PiB7XG4gICAgICAgICAgdmFyIF9yZXNpemVPYnNlcnZlcjtcbiAgICAgICAgICAoX3Jlc2l6ZU9ic2VydmVyID0gcmVzaXplT2JzZXJ2ZXIpID09IG51bGwgfHwgX3Jlc2l6ZU9ic2VydmVyLm9ic2VydmUoZmxvYXRpbmcpO1xuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICAgIHVwZGF0ZSgpO1xuICAgIH0pO1xuICAgIGlmIChyZWZlcmVuY2VFbCAmJiAhYW5pbWF0aW9uRnJhbWUpIHtcbiAgICAgIHJlc2l6ZU9ic2VydmVyLm9ic2VydmUocmVmZXJlbmNlRWwpO1xuICAgIH1cbiAgICByZXNpemVPYnNlcnZlci5vYnNlcnZlKGZsb2F0aW5nKTtcbiAgfVxuICBsZXQgZnJhbWVJZDtcbiAgbGV0IHByZXZSZWZSZWN0ID0gYW5pbWF0aW9uRnJhbWUgPyBnZXRCb3VuZGluZ0NsaWVudFJlY3QocmVmZXJlbmNlKSA6IG51bGw7XG4gIGlmIChhbmltYXRpb25GcmFtZSkge1xuICAgIGZyYW1lTG9vcCgpO1xuICB9XG4gIGZ1bmN0aW9uIGZyYW1lTG9vcCgpIHtcbiAgICBjb25zdCBuZXh0UmVmUmVjdCA9IGdldEJvdW5kaW5nQ2xpZW50UmVjdChyZWZlcmVuY2UpO1xuICAgIGlmIChwcmV2UmVmUmVjdCAmJiAobmV4dFJlZlJlY3QueCAhPT0gcHJldlJlZlJlY3QueCB8fCBuZXh0UmVmUmVjdC55ICE9PSBwcmV2UmVmUmVjdC55IHx8IG5leHRSZWZSZWN0LndpZHRoICE9PSBwcmV2UmVmUmVjdC53aWR0aCB8fCBuZXh0UmVmUmVjdC5oZWlnaHQgIT09IHByZXZSZWZSZWN0LmhlaWdodCkpIHtcbiAgICAgIHVwZGF0ZSgpO1xuICAgIH1cbiAgICBwcmV2UmVmUmVjdCA9IG5leHRSZWZSZWN0O1xuICAgIGZyYW1lSWQgPSByZXF1ZXN0QW5pbWF0aW9uRnJhbWUoZnJhbWVMb29wKTtcbiAgfVxuICB1cGRhdGUoKTtcbiAgcmV0dXJuICgpID0+IHtcbiAgICB2YXIgX3Jlc2l6ZU9ic2VydmVyMjtcbiAgICBhbmNlc3RvcnMuZm9yRWFjaCgoYW5jZXN0b3IpID0+IHtcbiAgICAgIGFuY2VzdG9yU2Nyb2xsICYmIGFuY2VzdG9yLnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJzY3JvbGxcIiwgdXBkYXRlKTtcbiAgICAgIGFuY2VzdG9yUmVzaXplICYmIGFuY2VzdG9yLnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJyZXNpemVcIiwgdXBkYXRlKTtcbiAgICB9KTtcbiAgICBjbGVhbnVwSW8gPT0gbnVsbCB8fCBjbGVhbnVwSW8oKTtcbiAgICAoX3Jlc2l6ZU9ic2VydmVyMiA9IHJlc2l6ZU9ic2VydmVyKSA9PSBudWxsIHx8IF9yZXNpemVPYnNlcnZlcjIuZGlzY29ubmVjdCgpO1xuICAgIHJlc2l6ZU9ic2VydmVyID0gbnVsbDtcbiAgICBpZiAoYW5pbWF0aW9uRnJhbWUpIHtcbiAgICAgIGNhbmNlbEFuaW1hdGlvbkZyYW1lKGZyYW1lSWQpO1xuICAgIH1cbiAgfTtcbn1cbnZhciBvZmZzZXQyID0gb2Zmc2V0O1xudmFyIHNoaWZ0MiA9IHNoaWZ0O1xudmFyIGZsaXAyID0gZmxpcDtcbnZhciBzaXplMiA9IHNpemU7XG52YXIgaGlkZTIgPSBoaWRlO1xudmFyIGFycm93MiA9IGFycm93O1xudmFyIGNvbXB1dGVQb3NpdGlvbjIgPSAocmVmZXJlbmNlLCBmbG9hdGluZywgb3B0aW9ucykgPT4ge1xuICBjb25zdCBjYWNoZTIgPSAvKiBAX19QVVJFX18gKi8gbmV3IE1hcCgpO1xuICBjb25zdCBtZXJnZWRPcHRpb25zID0ge1xuICAgIHBsYXRmb3JtLFxuICAgIC4uLm9wdGlvbnNcbiAgfTtcbiAgY29uc3QgcGxhdGZvcm1XaXRoQ2FjaGUgPSB7XG4gICAgLi4ubWVyZ2VkT3B0aW9ucy5wbGF0Zm9ybSxcbiAgICBfYzogY2FjaGUyXG4gIH07XG4gIHJldHVybiBjb21wdXRlUG9zaXRpb24ocmVmZXJlbmNlLCBmbG9hdGluZywge1xuICAgIC4uLm1lcmdlZE9wdGlvbnMsXG4gICAgcGxhdGZvcm06IHBsYXRmb3JtV2l0aENhY2hlXG4gIH0pO1xufTtcblxuLy8gLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL0Brb2JhbHRlK2NvcmVAMC4xMy4xX3NvbGlkLWpzQDEuOC4xNy9ub2RlX21vZHVsZXMvQGtvYmFsdGUvY29yZS9kaXN0L2NodW5rLzZTVVk1VVlELmpzXG52YXIgUG9wcGVyQ29udGV4dCA9IGNyZWF0ZUNvbnRleHQoKTtcbmZ1bmN0aW9uIHVzZVBvcHBlckNvbnRleHQoKSB7XG4gIGNvbnN0IGNvbnRleHQgPSB1c2VDb250ZXh0KFBvcHBlckNvbnRleHQpO1xuICBpZiAoY29udGV4dCA9PT0gdm9pZCAwKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiW2tvYmFsdGVdOiBgdXNlUG9wcGVyQ29udGV4dGAgbXVzdCBiZSB1c2VkIHdpdGhpbiBhIGBQb3BwZXJgIGNvbXBvbmVudFwiKTtcbiAgfVxuICByZXR1cm4gY29udGV4dDtcbn1cbnZhciBfdG1wbCQgPSAvKiBAX19QVVJFX18gKi8gdGVtcGxhdGUoYDxzdmcgZGlzcGxheT1cImJsb2NrXCIgdmlld0JveD1cIjAgMCAzMCAzMFwiPjxnPjxwYXRoIGZpbGw9XCJub25lXCIgZD1cIk0yMywyNy44YzEuMSwxLjIsMy40LDIuMiw1LDIuMmgySDBoMmMxLjcsMCwzLjktMSw1LTIuMmw2LjYtNy4yYzAuNy0wLjgsMi0wLjgsMi43LDBMMjMsMjcuOEwyMywyNy44elwiPjwvcGF0aD48cGF0aCBzdHJva2U9XCJub25lXCIgZD1cIk0yMywyNy44YzEuMSwxLjIsMy40LDIuMiw1LDIuMmgySDBoMmMxLjcsMCwzLjktMSw1LTIuMmw2LjYtNy4yYzAuNy0wLjgsMi0wLjgsMi43LDBMMjMsMjcuOEwyMywyNy44elwiPmApO1xudmFyIERFRkFVTFRfU0laRSA9IDMwO1xudmFyIEhBTEZfREVGQVVMVF9TSVpFID0gREVGQVVMVF9TSVpFIC8gMjtcbnZhciBST1RBVElPTl9ERUcgPSB7XG4gIHRvcDogMTgwLFxuICByaWdodDogLTkwLFxuICBib3R0b206IDAsXG4gIGxlZnQ6IDkwXG59O1xuZnVuY3Rpb24gUG9wcGVyQXJyb3cocHJvcHMpIHtcbiAgY29uc3QgY29udGV4dCA9IHVzZVBvcHBlckNvbnRleHQoKTtcbiAgY29uc3QgbWVyZ2VkUHJvcHMgPSBtZXJnZURlZmF1bHRQcm9wcyh7XG4gICAgc2l6ZTogREVGQVVMVF9TSVpFXG4gIH0sIHByb3BzKTtcbiAgY29uc3QgW2xvY2FsLCBvdGhlcnNdID0gc3BsaXRQcm9wcyhtZXJnZWRQcm9wcywgW1wicmVmXCIsIFwic3R5bGVcIiwgXCJzaXplXCJdKTtcbiAgY29uc3QgZGlyID0gKCkgPT4gY29udGV4dC5jdXJyZW50UGxhY2VtZW50KCkuc3BsaXQoXCItXCIpWzBdO1xuICBjb25zdCBjb250ZW50U3R5bGUgPSBjcmVhdGVDb21wdXRlZFN0eWxlKGNvbnRleHQuY29udGVudFJlZik7XG4gIGNvbnN0IGZpbGwgPSAoKSA9PiBjb250ZW50U3R5bGUoKT8uZ2V0UHJvcGVydHlWYWx1ZShcImJhY2tncm91bmQtY29sb3JcIikgfHwgXCJub25lXCI7XG4gIGNvbnN0IHN0cm9rZSA9ICgpID0+IGNvbnRlbnRTdHlsZSgpPy5nZXRQcm9wZXJ0eVZhbHVlKGBib3JkZXItJHtkaXIoKX0tY29sb3JgKSB8fCBcIm5vbmVcIjtcbiAgY29uc3QgYm9yZGVyV2lkdGggPSAoKSA9PiBjb250ZW50U3R5bGUoKT8uZ2V0UHJvcGVydHlWYWx1ZShgYm9yZGVyLSR7ZGlyKCl9LXdpZHRoYCkgfHwgXCIwcHhcIjtcbiAgY29uc3Qgc3Ryb2tlV2lkdGggPSAoKSA9PiB7XG4gICAgcmV0dXJuIHBhcnNlSW50KGJvcmRlcldpZHRoKCkpICogMiAqIChERUZBVUxUX1NJWkUgLyBsb2NhbC5zaXplKTtcbiAgfTtcbiAgY29uc3Qgcm90YXRlID0gKCkgPT4ge1xuICAgIHJldHVybiBgcm90YXRlKCR7Uk9UQVRJT05fREVHW2RpcigpXX0gJHtIQUxGX0RFRkFVTFRfU0laRX0gJHtIQUxGX0RFRkFVTFRfU0laRX0pYDtcbiAgfTtcbiAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChQb2x5bW9ycGhpYywgbWVyZ2VQcm9wcyh7XG4gICAgYXM6IFwiZGl2XCIsXG4gICAgcmVmKHIkKSB7XG4gICAgICBjb25zdCBfcmVmJCA9IG1lcmdlUmVmcyhjb250ZXh0LnNldEFycm93UmVmLCBsb2NhbC5yZWYpO1xuICAgICAgdHlwZW9mIF9yZWYkID09PSBcImZ1bmN0aW9uXCIgJiYgX3JlZiQociQpO1xuICAgIH0sXG4gICAgXCJhcmlhLWhpZGRlblwiOiBcInRydWVcIixcbiAgICBnZXQgc3R5bGUoKSB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICAvLyBzZXJ2ZXIgc2lkZSByZW5kZXJpbmdcbiAgICAgICAgcG9zaXRpb246IFwiYWJzb2x1dGVcIixcbiAgICAgICAgXCJmb250LXNpemVcIjogYCR7bG9jYWwuc2l6ZX1weGAsXG4gICAgICAgIHdpZHRoOiBcIjFlbVwiLFxuICAgICAgICBoZWlnaHQ6IFwiMWVtXCIsXG4gICAgICAgIFwicG9pbnRlci1ldmVudHNcIjogXCJub25lXCIsXG4gICAgICAgIGZpbGw6IGZpbGwoKSxcbiAgICAgICAgc3Ryb2tlOiBzdHJva2UoKSxcbiAgICAgICAgXCJzdHJva2Utd2lkdGhcIjogc3Ryb2tlV2lkdGgoKSxcbiAgICAgICAgLi4ubG9jYWwuc3R5bGVcbiAgICAgIH07XG4gICAgfVxuICB9LCBvdGhlcnMsIHtcbiAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICBjb25zdCBfZWwkID0gX3RtcGwkKCksIF9lbCQyID0gX2VsJC5maXJzdENoaWxkO1xuICAgICAgY3JlYXRlUmVuZGVyRWZmZWN0KCgpID0+IHNldEF0dHJpYnV0ZShfZWwkMiwgXCJ0cmFuc2Zvcm1cIiwgcm90YXRlKCkpKTtcbiAgICAgIHJldHVybiBfZWwkO1xuICAgIH1cbiAgfSkpO1xufVxuZnVuY3Rpb24gY3JlYXRlQ29tcHV0ZWRTdHlsZShlbGVtZW50KSB7XG4gIGNvbnN0IFtzdHlsZSwgc2V0U3R5bGVdID0gY3JlYXRlU2lnbmFsKCk7XG4gIGNyZWF0ZUVmZmVjdCgoKSA9PiB7XG4gICAgY29uc3QgZWwgPSBlbGVtZW50KCk7XG4gICAgZWwgJiYgc2V0U3R5bGUoZ2V0V2luZG93KGVsKS5nZXRDb21wdXRlZFN0eWxlKGVsKSk7XG4gIH0pO1xuICByZXR1cm4gc3R5bGU7XG59XG5mdW5jdGlvbiBQb3BwZXJQb3NpdGlvbmVyKHByb3BzKSB7XG4gIGNvbnN0IGNvbnRleHQgPSB1c2VQb3BwZXJDb250ZXh0KCk7XG4gIGNvbnN0IFtsb2NhbCwgb3RoZXJzXSA9IHNwbGl0UHJvcHMocHJvcHMsIFtcInJlZlwiLCBcInN0eWxlXCJdKTtcbiAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChQb2x5bW9ycGhpYywgbWVyZ2VQcm9wcyh7XG4gICAgYXM6IFwiZGl2XCIsXG4gICAgcmVmKHIkKSB7XG4gICAgICBjb25zdCBfcmVmJCA9IG1lcmdlUmVmcyhjb250ZXh0LnNldFBvc2l0aW9uZXJSZWYsIGxvY2FsLnJlZik7XG4gICAgICB0eXBlb2YgX3JlZiQgPT09IFwiZnVuY3Rpb25cIiAmJiBfcmVmJChyJCk7XG4gICAgfSxcbiAgICBcImRhdGEtcG9wcGVyLXBvc2l0aW9uZXJcIjogXCJcIixcbiAgICBnZXQgc3R5bGUoKSB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICBwb3NpdGlvbjogXCJhYnNvbHV0ZVwiLFxuICAgICAgICB0b3A6IDAsXG4gICAgICAgIGxlZnQ6IDAsXG4gICAgICAgIFwibWluLXdpZHRoXCI6IFwibWF4LWNvbnRlbnRcIixcbiAgICAgICAgLi4ubG9jYWwuc3R5bGVcbiAgICAgIH07XG4gICAgfVxuICB9LCBvdGhlcnMpKTtcbn1cbmZ1bmN0aW9uIGNyZWF0ZURPTVJlY3QoYW5jaG9yUmVjdCkge1xuICBjb25zdCB7IHggPSAwLCB5ID0gMCwgd2lkdGggPSAwLCBoZWlnaHQgPSAwIH0gPSBhbmNob3JSZWN0ID8/IHt9O1xuICBpZiAodHlwZW9mIERPTVJlY3QgPT09IFwiZnVuY3Rpb25cIikge1xuICAgIHJldHVybiBuZXcgRE9NUmVjdCh4LCB5LCB3aWR0aCwgaGVpZ2h0KTtcbiAgfVxuICBjb25zdCByZWN0ID0ge1xuICAgIHgsXG4gICAgeSxcbiAgICB3aWR0aCxcbiAgICBoZWlnaHQsXG4gICAgdG9wOiB5LFxuICAgIHJpZ2h0OiB4ICsgd2lkdGgsXG4gICAgYm90dG9tOiB5ICsgaGVpZ2h0LFxuICAgIGxlZnQ6IHhcbiAgfTtcbiAgcmV0dXJuIHsgLi4ucmVjdCwgdG9KU09OOiAoKSA9PiByZWN0IH07XG59XG5mdW5jdGlvbiBnZXRBbmNob3JFbGVtZW50KGFuY2hvciwgZ2V0QW5jaG9yUmVjdCkge1xuICBjb25zdCBjb250ZXh0RWxlbWVudCA9IGFuY2hvcjtcbiAgcmV0dXJuIHtcbiAgICBjb250ZXh0RWxlbWVudCxcbiAgICBnZXRCb3VuZGluZ0NsaWVudFJlY3Q6ICgpID0+IHtcbiAgICAgIGNvbnN0IGFuY2hvclJlY3QgPSBnZXRBbmNob3JSZWN0KGFuY2hvcik7XG4gICAgICBpZiAoYW5jaG9yUmVjdCkge1xuICAgICAgICByZXR1cm4gY3JlYXRlRE9NUmVjdChhbmNob3JSZWN0KTtcbiAgICAgIH1cbiAgICAgIGlmIChhbmNob3IpIHtcbiAgICAgICAgcmV0dXJuIGFuY2hvci5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcbiAgICAgIH1cbiAgICAgIHJldHVybiBjcmVhdGVET01SZWN0KCk7XG4gICAgfVxuICB9O1xufVxuZnVuY3Rpb24gaXNWYWxpZFBsYWNlbWVudChmbGlwMjIpIHtcbiAgcmV0dXJuIC9eKD86dG9wfGJvdHRvbXxsZWZ0fHJpZ2h0KSg/Oi0oPzpzdGFydHxlbmQpKT8kLy50ZXN0KGZsaXAyMik7XG59XG52YXIgUkVWRVJTRV9CQVNFX1BMQUNFTUVOVCA9IHtcbiAgdG9wOiBcImJvdHRvbVwiLFxuICByaWdodDogXCJsZWZ0XCIsXG4gIGJvdHRvbTogXCJ0b3BcIixcbiAgbGVmdDogXCJyaWdodFwiXG59O1xuZnVuY3Rpb24gZ2V0VHJhbnNmb3JtT3JpZ2luKHBsYWNlbWVudCwgcmVhZGluZ0RpcmVjdGlvbikge1xuICBjb25zdCBbYmFzZVBsYWNlbWVudCwgYWxpZ25tZW50XSA9IHBsYWNlbWVudC5zcGxpdChcIi1cIik7XG4gIGNvbnN0IHJldmVyc2VQbGFjZW1lbnQgPSBSRVZFUlNFX0JBU0VfUExBQ0VNRU5UW2Jhc2VQbGFjZW1lbnRdO1xuICBpZiAoIWFsaWdubWVudCkge1xuICAgIHJldHVybiBgJHtyZXZlcnNlUGxhY2VtZW50fSBjZW50ZXJgO1xuICB9XG4gIGlmIChiYXNlUGxhY2VtZW50ID09PSBcImxlZnRcIiB8fCBiYXNlUGxhY2VtZW50ID09PSBcInJpZ2h0XCIpIHtcbiAgICByZXR1cm4gYCR7cmV2ZXJzZVBsYWNlbWVudH0gJHthbGlnbm1lbnQgPT09IFwic3RhcnRcIiA/IFwidG9wXCIgOiBcImJvdHRvbVwifWA7XG4gIH1cbiAgaWYgKGFsaWdubWVudCA9PT0gXCJzdGFydFwiKSB7XG4gICAgcmV0dXJuIGAke3JldmVyc2VQbGFjZW1lbnR9ICR7cmVhZGluZ0RpcmVjdGlvbiA9PT0gXCJydGxcIiA/IFwicmlnaHRcIiA6IFwibGVmdFwifWA7XG4gIH1cbiAgcmV0dXJuIGAke3JldmVyc2VQbGFjZW1lbnR9ICR7cmVhZGluZ0RpcmVjdGlvbiA9PT0gXCJydGxcIiA/IFwibGVmdFwiIDogXCJyaWdodFwifWA7XG59XG5mdW5jdGlvbiBQb3BwZXJSb290KHByb3BzKSB7XG4gIGNvbnN0IG1lcmdlZFByb3BzID0gbWVyZ2VEZWZhdWx0UHJvcHMoe1xuICAgIGdldEFuY2hvclJlY3Q6IChhbmNob3IpID0+IGFuY2hvcj8uZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCksXG4gICAgcGxhY2VtZW50OiBcImJvdHRvbVwiLFxuICAgIGd1dHRlcjogMCxcbiAgICBzaGlmdDogMCxcbiAgICBmbGlwOiB0cnVlLFxuICAgIHNsaWRlOiB0cnVlLFxuICAgIG92ZXJsYXA6IGZhbHNlLFxuICAgIHNhbWVXaWR0aDogZmFsc2UsXG4gICAgZml0Vmlld3BvcnQ6IGZhbHNlLFxuICAgIGhpZGVXaGVuRGV0YWNoZWQ6IGZhbHNlLFxuICAgIGRldGFjaGVkUGFkZGluZzogMCxcbiAgICBhcnJvd1BhZGRpbmc6IDQsXG4gICAgb3ZlcmZsb3dQYWRkaW5nOiA4XG4gIH0sIHByb3BzKTtcbiAgY29uc3QgW3Bvc2l0aW9uZXJSZWYsIHNldFBvc2l0aW9uZXJSZWZdID0gY3JlYXRlU2lnbmFsKCk7XG4gIGNvbnN0IFthcnJvd1JlZiwgc2V0QXJyb3dSZWZdID0gY3JlYXRlU2lnbmFsKCk7XG4gIGNvbnN0IFtjdXJyZW50UGxhY2VtZW50LCBzZXRDdXJyZW50UGxhY2VtZW50XSA9IGNyZWF0ZVNpZ25hbChtZXJnZWRQcm9wcy5wbGFjZW1lbnQpO1xuICBjb25zdCBhbmNob3JSZWYgPSAoKSA9PiBnZXRBbmNob3JFbGVtZW50KG1lcmdlZFByb3BzLmFuY2hvclJlZj8uKCksIG1lcmdlZFByb3BzLmdldEFuY2hvclJlY3QpO1xuICBjb25zdCB7XG4gICAgZGlyZWN0aW9uXG4gIH0gPSB1c2VMb2NhbGUoKTtcbiAgYXN5bmMgZnVuY3Rpb24gdXBkYXRlUG9zaXRpb24oKSB7XG4gICAgY29uc3QgcmVmZXJlbmNlRWwgPSBhbmNob3JSZWYoKTtcbiAgICBjb25zdCBmbG9hdGluZ0VsID0gcG9zaXRpb25lclJlZigpO1xuICAgIGNvbnN0IGFycm93RWwgPSBhcnJvd1JlZigpO1xuICAgIGlmICghcmVmZXJlbmNlRWwgfHwgIWZsb2F0aW5nRWwpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgY29uc3QgYXJyb3dPZmZzZXQgPSAoYXJyb3dFbD8uY2xpZW50SGVpZ2h0IHx8IDApIC8gMjtcbiAgICBjb25zdCBmaW5hbEd1dHRlciA9IHR5cGVvZiBtZXJnZWRQcm9wcy5ndXR0ZXIgPT09IFwibnVtYmVyXCIgPyBtZXJnZWRQcm9wcy5ndXR0ZXIgKyBhcnJvd09mZnNldCA6IG1lcmdlZFByb3BzLmd1dHRlciA/PyBhcnJvd09mZnNldDtcbiAgICBmbG9hdGluZ0VsLnN0eWxlLnNldFByb3BlcnR5KFwiLS1rYi1wb3BwZXItY29udGVudC1vdmVyZmxvdy1wYWRkaW5nXCIsIGAke21lcmdlZFByb3BzLm92ZXJmbG93UGFkZGluZ31weGApO1xuICAgIHJlZmVyZW5jZUVsLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xuICAgIGNvbnN0IG1pZGRsZXdhcmUgPSBbXG4gICAgICAvLyBodHRwczovL2Zsb2F0aW5nLXVpLmNvbS9kb2NzL29mZnNldFxuICAgICAgb2Zmc2V0Migoe1xuICAgICAgICBwbGFjZW1lbnRcbiAgICAgIH0pID0+IHtcbiAgICAgICAgY29uc3QgaGFzQWxpZ25tZW50ID0gISFwbGFjZW1lbnQuc3BsaXQoXCItXCIpWzFdO1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgIG1haW5BeGlzOiBmaW5hbEd1dHRlcixcbiAgICAgICAgICBjcm9zc0F4aXM6ICFoYXNBbGlnbm1lbnQgPyBtZXJnZWRQcm9wcy5zaGlmdCA6IHZvaWQgMCxcbiAgICAgICAgICBhbGlnbm1lbnRBeGlzOiBtZXJnZWRQcm9wcy5zaGlmdFxuICAgICAgICB9O1xuICAgICAgfSlcbiAgICBdO1xuICAgIGlmIChtZXJnZWRQcm9wcy5mbGlwICE9PSBmYWxzZSkge1xuICAgICAgY29uc3QgZmFsbGJhY2tQbGFjZW1lbnRzID0gdHlwZW9mIG1lcmdlZFByb3BzLmZsaXAgPT09IFwic3RyaW5nXCIgPyBtZXJnZWRQcm9wcy5mbGlwLnNwbGl0KFwiIFwiKSA6IHZvaWQgMDtcbiAgICAgIGlmIChmYWxsYmFja1BsYWNlbWVudHMgIT09IHZvaWQgMCAmJiAhZmFsbGJhY2tQbGFjZW1lbnRzLmV2ZXJ5KGlzVmFsaWRQbGFjZW1lbnQpKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcImBmbGlwYCBleHBlY3RzIGEgc3BhY2VkLWRlbGltaXRlZCBsaXN0IG9mIHBsYWNlbWVudHNcIik7XG4gICAgICB9XG4gICAgICBtaWRkbGV3YXJlLnB1c2goZmxpcDIoe1xuICAgICAgICBwYWRkaW5nOiBtZXJnZWRQcm9wcy5vdmVyZmxvd1BhZGRpbmcsXG4gICAgICAgIGZhbGxiYWNrUGxhY2VtZW50c1xuICAgICAgfSkpO1xuICAgIH1cbiAgICBpZiAobWVyZ2VkUHJvcHMuc2xpZGUgfHwgbWVyZ2VkUHJvcHMub3ZlcmxhcCkge1xuICAgICAgbWlkZGxld2FyZS5wdXNoKHNoaWZ0Mih7XG4gICAgICAgIG1haW5BeGlzOiBtZXJnZWRQcm9wcy5zbGlkZSxcbiAgICAgICAgY3Jvc3NBeGlzOiBtZXJnZWRQcm9wcy5vdmVybGFwLFxuICAgICAgICBwYWRkaW5nOiBtZXJnZWRQcm9wcy5vdmVyZmxvd1BhZGRpbmdcbiAgICAgIH0pKTtcbiAgICB9XG4gICAgbWlkZGxld2FyZS5wdXNoKHNpemUyKHtcbiAgICAgIHBhZGRpbmc6IG1lcmdlZFByb3BzLm92ZXJmbG93UGFkZGluZyxcbiAgICAgIGFwcGx5KHtcbiAgICAgICAgYXZhaWxhYmxlV2lkdGgsXG4gICAgICAgIGF2YWlsYWJsZUhlaWdodCxcbiAgICAgICAgcmVjdHNcbiAgICAgIH0pIHtcbiAgICAgICAgY29uc3QgcmVmZXJlbmNlV2lkdGggPSBNYXRoLnJvdW5kKHJlY3RzLnJlZmVyZW5jZS53aWR0aCk7XG4gICAgICAgIGF2YWlsYWJsZVdpZHRoID0gTWF0aC5mbG9vcihhdmFpbGFibGVXaWR0aCk7XG4gICAgICAgIGF2YWlsYWJsZUhlaWdodCA9IE1hdGguZmxvb3IoYXZhaWxhYmxlSGVpZ2h0KTtcbiAgICAgICAgZmxvYXRpbmdFbC5zdHlsZS5zZXRQcm9wZXJ0eShcIi0ta2ItcG9wcGVyLWFuY2hvci13aWR0aFwiLCBgJHtyZWZlcmVuY2VXaWR0aH1weGApO1xuICAgICAgICBmbG9hdGluZ0VsLnN0eWxlLnNldFByb3BlcnR5KFwiLS1rYi1wb3BwZXItY29udGVudC1hdmFpbGFibGUtd2lkdGhcIiwgYCR7YXZhaWxhYmxlV2lkdGh9cHhgKTtcbiAgICAgICAgZmxvYXRpbmdFbC5zdHlsZS5zZXRQcm9wZXJ0eShcIi0ta2ItcG9wcGVyLWNvbnRlbnQtYXZhaWxhYmxlLWhlaWdodFwiLCBgJHthdmFpbGFibGVIZWlnaHR9cHhgKTtcbiAgICAgICAgaWYgKG1lcmdlZFByb3BzLnNhbWVXaWR0aCkge1xuICAgICAgICAgIGZsb2F0aW5nRWwuc3R5bGUud2lkdGggPSBgJHtyZWZlcmVuY2VXaWR0aH1weGA7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKG1lcmdlZFByb3BzLmZpdFZpZXdwb3J0KSB7XG4gICAgICAgICAgZmxvYXRpbmdFbC5zdHlsZS5tYXhXaWR0aCA9IGAke2F2YWlsYWJsZVdpZHRofXB4YDtcbiAgICAgICAgICBmbG9hdGluZ0VsLnN0eWxlLm1heEhlaWdodCA9IGAke2F2YWlsYWJsZUhlaWdodH1weGA7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9KSk7XG4gICAgaWYgKG1lcmdlZFByb3BzLmhpZGVXaGVuRGV0YWNoZWQpIHtcbiAgICAgIG1pZGRsZXdhcmUucHVzaChoaWRlMih7XG4gICAgICAgIHBhZGRpbmc6IG1lcmdlZFByb3BzLmRldGFjaGVkUGFkZGluZ1xuICAgICAgfSkpO1xuICAgIH1cbiAgICBpZiAoYXJyb3dFbCkge1xuICAgICAgbWlkZGxld2FyZS5wdXNoKGFycm93Mih7XG4gICAgICAgIGVsZW1lbnQ6IGFycm93RWwsXG4gICAgICAgIHBhZGRpbmc6IG1lcmdlZFByb3BzLmFycm93UGFkZGluZ1xuICAgICAgfSkpO1xuICAgIH1cbiAgICBjb25zdCBwb3MgPSBhd2FpdCBjb21wdXRlUG9zaXRpb24yKHJlZmVyZW5jZUVsLCBmbG9hdGluZ0VsLCB7XG4gICAgICBwbGFjZW1lbnQ6IG1lcmdlZFByb3BzLnBsYWNlbWVudCxcbiAgICAgIHN0cmF0ZWd5OiBcImFic29sdXRlXCIsXG4gICAgICBtaWRkbGV3YXJlLFxuICAgICAgcGxhdGZvcm06IHtcbiAgICAgICAgLi4ucGxhdGZvcm0sXG4gICAgICAgIGlzUlRMOiAoKSA9PiBkaXJlY3Rpb24oKSA9PT0gXCJydGxcIlxuICAgICAgfVxuICAgIH0pO1xuICAgIHNldEN1cnJlbnRQbGFjZW1lbnQocG9zLnBsYWNlbWVudCk7XG4gICAgbWVyZ2VkUHJvcHMub25DdXJyZW50UGxhY2VtZW50Q2hhbmdlPy4ocG9zLnBsYWNlbWVudCk7XG4gICAgaWYgKCFmbG9hdGluZ0VsKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIGZsb2F0aW5nRWwuc3R5bGUuc2V0UHJvcGVydHkoXCItLWtiLXBvcHBlci1jb250ZW50LXRyYW5zZm9ybS1vcmlnaW5cIiwgZ2V0VHJhbnNmb3JtT3JpZ2luKHBvcy5wbGFjZW1lbnQsIGRpcmVjdGlvbigpKSk7XG4gICAgY29uc3QgeCA9IE1hdGgucm91bmQocG9zLngpO1xuICAgIGNvbnN0IHkgPSBNYXRoLnJvdW5kKHBvcy55KTtcbiAgICBsZXQgdmlzaWJpbGl0eTtcbiAgICBpZiAobWVyZ2VkUHJvcHMuaGlkZVdoZW5EZXRhY2hlZCkge1xuICAgICAgdmlzaWJpbGl0eSA9IHBvcy5taWRkbGV3YXJlRGF0YS5oaWRlPy5yZWZlcmVuY2VIaWRkZW4gPyBcImhpZGRlblwiIDogXCJ2aXNpYmxlXCI7XG4gICAgfVxuICAgIE9iamVjdC5hc3NpZ24oZmxvYXRpbmdFbC5zdHlsZSwge1xuICAgICAgdG9wOiBcIjBcIixcbiAgICAgIGxlZnQ6IFwiMFwiLFxuICAgICAgdHJhbnNmb3JtOiBgdHJhbnNsYXRlM2QoJHt4fXB4LCAke3l9cHgsIDApYCxcbiAgICAgIHZpc2liaWxpdHlcbiAgICB9KTtcbiAgICBpZiAoYXJyb3dFbCAmJiBwb3MubWlkZGxld2FyZURhdGEuYXJyb3cpIHtcbiAgICAgIGNvbnN0IHtcbiAgICAgICAgeDogYXJyb3dYLFxuICAgICAgICB5OiBhcnJvd1lcbiAgICAgIH0gPSBwb3MubWlkZGxld2FyZURhdGEuYXJyb3c7XG4gICAgICBjb25zdCBkaXIgPSBwb3MucGxhY2VtZW50LnNwbGl0KFwiLVwiKVswXTtcbiAgICAgIE9iamVjdC5hc3NpZ24oYXJyb3dFbC5zdHlsZSwge1xuICAgICAgICBsZWZ0OiBhcnJvd1ggIT0gbnVsbCA/IGAke2Fycm93WH1weGAgOiBcIlwiLFxuICAgICAgICB0b3A6IGFycm93WSAhPSBudWxsID8gYCR7YXJyb3dZfXB4YCA6IFwiXCIsXG4gICAgICAgIFtkaXJdOiBcIjEwMCVcIlxuICAgICAgfSk7XG4gICAgfVxuICB9XG4gIGNyZWF0ZUVmZmVjdCgoKSA9PiB7XG4gICAgY29uc3QgcmVmZXJlbmNlRWwgPSBhbmNob3JSZWYoKTtcbiAgICBjb25zdCBmbG9hdGluZ0VsID0gcG9zaXRpb25lclJlZigpO1xuICAgIGlmICghcmVmZXJlbmNlRWwgfHwgIWZsb2F0aW5nRWwpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgY29uc3QgY2xlYW51cEF1dG9VcGRhdGUgPSBhdXRvVXBkYXRlKHJlZmVyZW5jZUVsLCBmbG9hdGluZ0VsLCB1cGRhdGVQb3NpdGlvbiwge1xuICAgICAgLy8gSlNET00gZG9lc24ndCBzdXBwb3J0IFJlc2l6ZU9ic2VydmVyXG4gICAgICBlbGVtZW50UmVzaXplOiB0eXBlb2YgUmVzaXplT2JzZXJ2ZXIgPT09IFwiZnVuY3Rpb25cIlxuICAgIH0pO1xuICAgIG9uQ2xlYW51cChjbGVhbnVwQXV0b1VwZGF0ZSk7XG4gIH0pO1xuICBjcmVhdGVFZmZlY3QoKCkgPT4ge1xuICAgIGNvbnN0IHBvc2l0aW9uZXIgPSBwb3NpdGlvbmVyUmVmKCk7XG4gICAgY29uc3QgY29udGVudCA9IG1lcmdlZFByb3BzLmNvbnRlbnRSZWY/LigpO1xuICAgIGlmICghcG9zaXRpb25lciB8fCAhY29udGVudCkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBxdWV1ZU1pY3JvdGFzaygoKSA9PiB7XG4gICAgICBwb3NpdGlvbmVyLnN0eWxlLnpJbmRleCA9IGdldENvbXB1dGVkU3R5bGUoY29udGVudCkuekluZGV4O1xuICAgIH0pO1xuICB9KTtcbiAgY29uc3QgY29udGV4dCA9IHtcbiAgICBjdXJyZW50UGxhY2VtZW50LFxuICAgIGNvbnRlbnRSZWY6ICgpID0+IG1lcmdlZFByb3BzLmNvbnRlbnRSZWY/LigpLFxuICAgIHNldFBvc2l0aW9uZXJSZWYsXG4gICAgc2V0QXJyb3dSZWZcbiAgfTtcbiAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChQb3BwZXJDb250ZXh0LlByb3ZpZGVyLCB7XG4gICAgdmFsdWU6IGNvbnRleHQsXG4gICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgcmV0dXJuIG1lcmdlZFByb3BzLmNoaWxkcmVuO1xuICAgIH1cbiAgfSk7XG59XG52YXIgUG9wcGVyID0gT2JqZWN0LmFzc2lnbihQb3BwZXJSb290LCB7XG4gIEFycm93OiBQb3BwZXJBcnJvdyxcbiAgQ29udGV4dDogUG9wcGVyQ29udGV4dCxcbiAgdXNlUG9wcGVyQ29udGV4dCxcbiAgUG9zaXRpb25lcjogUG9wcGVyUG9zaXRpb25lclxufSk7XG5cbi8vIC4uLy4uL25vZGVfbW9kdWxlcy8ucG5wbS9Aa29iYWx0ZStjb3JlQDAuMTMuMV9zb2xpZC1qc0AxLjguMTcvbm9kZV9tb2R1bGVzL0Brb2JhbHRlL2NvcmUvZGlzdC9jaHVuay9RWjI1UVlFQS5qc1xuZnVuY3Rpb24gY3JlYXRlRXNjYXBlS2V5RG93bihwcm9wcykge1xuICBjb25zdCBoYW5kbGVLZXlEb3duID0gKGV2ZW50KSA9PiB7XG4gICAgaWYgKGV2ZW50LmtleSA9PT0gRXZlbnRLZXkuRXNjYXBlKSB7XG4gICAgICBwcm9wcy5vbkVzY2FwZUtleURvd24/LihldmVudCk7XG4gICAgfVxuICB9O1xuICBjcmVhdGVFZmZlY3QoKCkgPT4ge1xuICAgIGlmIChpc1NlcnZlcikge1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBpZiAoYWNjZXNzKHByb3BzLmlzRGlzYWJsZWQpKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIGNvbnN0IGRvY3VtZW50MiA9IHByb3BzLm93bmVyRG9jdW1lbnQ/LigpID8/IGdldERvY3VtZW50KCk7XG4gICAgZG9jdW1lbnQyLmFkZEV2ZW50TGlzdGVuZXIoXCJrZXlkb3duXCIsIGhhbmRsZUtleURvd24pO1xuICAgIG9uQ2xlYW51cCgoKSA9PiB7XG4gICAgICBkb2N1bWVudDIucmVtb3ZlRXZlbnRMaXN0ZW5lcihcImtleWRvd25cIiwgaGFuZGxlS2V5RG93bik7XG4gICAgfSk7XG4gIH0pO1xufVxuXG4vLyAuLi8uLi9ub2RlX21vZHVsZXMvLnBucG0vQGtvYmFsdGUrY29yZUAwLjEzLjFfc29saWQtanNAMS44LjE3L25vZGVfbW9kdWxlcy9Aa29iYWx0ZS9jb3JlL2Rpc3QvY2h1bmsvUUdDTVlMVEEuanNcbnZhciBQT0lOVEVSX0RPV05fT1VUU0lERV9FVkVOVCA9IFwiaW50ZXJhY3RPdXRzaWRlLnBvaW50ZXJEb3duT3V0c2lkZVwiO1xudmFyIEZPQ1VTX09VVFNJREVfRVZFTlQgPSBcImludGVyYWN0T3V0c2lkZS5mb2N1c091dHNpZGVcIjtcbmZ1bmN0aW9uIGNyZWF0ZUludGVyYWN0T3V0c2lkZShwcm9wcywgcmVmKSB7XG4gIGxldCBwb2ludGVyRG93blRpbWVvdXRJZDtcbiAgbGV0IGNsaWNrSGFuZGxlciA9IG5vb3AzO1xuICBjb25zdCBvd25lckRvY3VtZW50ID0gKCkgPT4gZ2V0RG9jdW1lbnQocmVmKCkpO1xuICBjb25zdCBvblBvaW50ZXJEb3duT3V0c2lkZSA9IChlMikgPT4gcHJvcHMub25Qb2ludGVyRG93bk91dHNpZGU/LihlMik7XG4gIGNvbnN0IG9uRm9jdXNPdXRzaWRlID0gKGUyKSA9PiBwcm9wcy5vbkZvY3VzT3V0c2lkZT8uKGUyKTtcbiAgY29uc3Qgb25JbnRlcmFjdE91dHNpZGUgPSAoZTIpID0+IHByb3BzLm9uSW50ZXJhY3RPdXRzaWRlPy4oZTIpO1xuICBjb25zdCBpc0V2ZW50T3V0c2lkZSA9IChlMikgPT4ge1xuICAgIGNvbnN0IHRhcmdldCA9IGUyLnRhcmdldDtcbiAgICBpZiAoISh0YXJnZXQgaW5zdGFuY2VvZiBIVE1MRWxlbWVudCkpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgaWYgKHRhcmdldC5jbG9zZXN0KGBbJHtEQVRBX1RPUF9MQVlFUl9BVFRSfV1gKSkge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICBpZiAoIWNvbnRhaW5zKG93bmVyRG9jdW1lbnQoKSwgdGFyZ2V0KSkge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICBpZiAoY29udGFpbnMocmVmKCksIHRhcmdldCkpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgcmV0dXJuICFwcm9wcy5zaG91bGRFeGNsdWRlRWxlbWVudD8uKHRhcmdldCk7XG4gIH07XG4gIGNvbnN0IG9uUG9pbnRlckRvd24gPSAoZTIpID0+IHtcbiAgICBmdW5jdGlvbiBoYW5kbGVyKCkge1xuICAgICAgY29uc3QgY29udGFpbmVyID0gcmVmKCk7XG4gICAgICBjb25zdCB0YXJnZXQgPSBlMi50YXJnZXQ7XG4gICAgICBpZiAoIWNvbnRhaW5lciB8fCAhdGFyZ2V0IHx8ICFpc0V2ZW50T3V0c2lkZShlMikpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgICAgY29uc3QgaGFuZGxlcjIgPSBjb21wb3NlRXZlbnRIYW5kbGVycyhbXG4gICAgICAgIG9uUG9pbnRlckRvd25PdXRzaWRlLFxuICAgICAgICBvbkludGVyYWN0T3V0c2lkZVxuICAgICAgXSk7XG4gICAgICB0YXJnZXQuYWRkRXZlbnRMaXN0ZW5lcihQT0lOVEVSX0RPV05fT1VUU0lERV9FVkVOVCwgaGFuZGxlcjIsIHtcbiAgICAgICAgb25jZTogdHJ1ZVxuICAgICAgfSk7XG4gICAgICBjb25zdCBwb2ludGVyRG93bk91dHNpZGVFdmVudCA9IG5ldyBDdXN0b21FdmVudChcbiAgICAgICAgUE9JTlRFUl9ET1dOX09VVFNJREVfRVZFTlQsXG4gICAgICAgIHtcbiAgICAgICAgICBidWJibGVzOiBmYWxzZSxcbiAgICAgICAgICBjYW5jZWxhYmxlOiB0cnVlLFxuICAgICAgICAgIGRldGFpbDoge1xuICAgICAgICAgICAgb3JpZ2luYWxFdmVudDogZTIsXG4gICAgICAgICAgICBpc0NvbnRleHRNZW51OiBlMi5idXR0b24gPT09IDIgfHwgaXNDdHJsS2V5KGUyKSAmJiBlMi5idXR0b24gPT09IDBcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICk7XG4gICAgICB0YXJnZXQuZGlzcGF0Y2hFdmVudChwb2ludGVyRG93bk91dHNpZGVFdmVudCk7XG4gICAgfVxuICAgIGlmIChlMi5wb2ludGVyVHlwZSA9PT0gXCJ0b3VjaFwiKSB7XG4gICAgICBvd25lckRvY3VtZW50KCkucmVtb3ZlRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIGhhbmRsZXIpO1xuICAgICAgY2xpY2tIYW5kbGVyID0gaGFuZGxlcjtcbiAgICAgIG93bmVyRG9jdW1lbnQoKS5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgaGFuZGxlciwgeyBvbmNlOiB0cnVlIH0pO1xuICAgIH0gZWxzZSB7XG4gICAgICBoYW5kbGVyKCk7XG4gICAgfVxuICB9O1xuICBjb25zdCBvbkZvY3VzSW4gPSAoZTIpID0+IHtcbiAgICBjb25zdCBjb250YWluZXIgPSByZWYoKTtcbiAgICBjb25zdCB0YXJnZXQgPSBlMi50YXJnZXQ7XG4gICAgaWYgKCFjb250YWluZXIgfHwgIXRhcmdldCB8fCAhaXNFdmVudE91dHNpZGUoZTIpKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIGNvbnN0IGhhbmRsZXIgPSBjb21wb3NlRXZlbnRIYW5kbGVycyhbXG4gICAgICBvbkZvY3VzT3V0c2lkZSxcbiAgICAgIG9uSW50ZXJhY3RPdXRzaWRlXG4gICAgXSk7XG4gICAgdGFyZ2V0LmFkZEV2ZW50TGlzdGVuZXIoRk9DVVNfT1VUU0lERV9FVkVOVCwgaGFuZGxlciwgeyBvbmNlOiB0cnVlIH0pO1xuICAgIGNvbnN0IGZvY3VzT3V0c2lkZUV2ZW50ID0gbmV3IEN1c3RvbUV2ZW50KEZPQ1VTX09VVFNJREVfRVZFTlQsIHtcbiAgICAgIGJ1YmJsZXM6IGZhbHNlLFxuICAgICAgY2FuY2VsYWJsZTogdHJ1ZSxcbiAgICAgIGRldGFpbDoge1xuICAgICAgICBvcmlnaW5hbEV2ZW50OiBlMixcbiAgICAgICAgaXNDb250ZXh0TWVudTogZmFsc2VcbiAgICAgIH1cbiAgICB9KTtcbiAgICB0YXJnZXQuZGlzcGF0Y2hFdmVudChmb2N1c091dHNpZGVFdmVudCk7XG4gIH07XG4gIGNyZWF0ZUVmZmVjdCgoKSA9PiB7XG4gICAgaWYgKGlzU2VydmVyKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIGlmIChhY2Nlc3MocHJvcHMuaXNEaXNhYmxlZCkpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgcG9pbnRlckRvd25UaW1lb3V0SWQgPSB3aW5kb3cuc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICBvd25lckRvY3VtZW50KCkuYWRkRXZlbnRMaXN0ZW5lcihcInBvaW50ZXJkb3duXCIsIG9uUG9pbnRlckRvd24sIHRydWUpO1xuICAgIH0sIDApO1xuICAgIG93bmVyRG9jdW1lbnQoKS5hZGRFdmVudExpc3RlbmVyKFwiZm9jdXNpblwiLCBvbkZvY3VzSW4sIHRydWUpO1xuICAgIG9uQ2xlYW51cCgoKSA9PiB7XG4gICAgICB3aW5kb3cuY2xlYXJUaW1lb3V0KHBvaW50ZXJEb3duVGltZW91dElkKTtcbiAgICAgIG93bmVyRG9jdW1lbnQoKS5yZW1vdmVFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgY2xpY2tIYW5kbGVyKTtcbiAgICAgIG93bmVyRG9jdW1lbnQoKS5yZW1vdmVFdmVudExpc3RlbmVyKFwicG9pbnRlcmRvd25cIiwgb25Qb2ludGVyRG93biwgdHJ1ZSk7XG4gICAgICBvd25lckRvY3VtZW50KCkucmVtb3ZlRXZlbnRMaXN0ZW5lcihcImZvY3VzaW5cIiwgb25Gb2N1c0luLCB0cnVlKTtcbiAgICB9KTtcbiAgfSk7XG59XG5cbi8vIC4uLy4uL25vZGVfbW9kdWxlcy8ucG5wbS9Aa29iYWx0ZStjb3JlQDAuMTMuMV9zb2xpZC1qc0AxLjguMTcvbm9kZV9tb2R1bGVzL0Brb2JhbHRlL2NvcmUvZGlzdC9jaHVuay83TVVNV0dXUi5qc1xudmFyIERpc21pc3NhYmxlTGF5ZXJDb250ZXh0ID0gY3JlYXRlQ29udGV4dCgpO1xuZnVuY3Rpb24gdXNlT3B0aW9uYWxEaXNtaXNzYWJsZUxheWVyQ29udGV4dCgpIHtcbiAgcmV0dXJuIHVzZUNvbnRleHQoRGlzbWlzc2FibGVMYXllckNvbnRleHQpO1xufVxuZnVuY3Rpb24gRGlzbWlzc2FibGVMYXllcihwcm9wcykge1xuICBsZXQgcmVmO1xuICBjb25zdCBwYXJlbnRDb250ZXh0ID0gdXNlT3B0aW9uYWxEaXNtaXNzYWJsZUxheWVyQ29udGV4dCgpO1xuICBjb25zdCBbbG9jYWwsIG90aGVyc10gPSBzcGxpdFByb3BzKHByb3BzLCBbXCJyZWZcIiwgXCJkaXNhYmxlT3V0c2lkZVBvaW50ZXJFdmVudHNcIiwgXCJleGNsdWRlZEVsZW1lbnRzXCIsIFwib25Fc2NhcGVLZXlEb3duXCIsIFwib25Qb2ludGVyRG93bk91dHNpZGVcIiwgXCJvbkZvY3VzT3V0c2lkZVwiLCBcIm9uSW50ZXJhY3RPdXRzaWRlXCIsIFwib25EaXNtaXNzXCIsIFwiYnlwYXNzVG9wTW9zdExheWVyQ2hlY2tcIl0pO1xuICBjb25zdCBuZXN0ZWRMYXllcnMgPSAvKiBAX19QVVJFX18gKi8gbmV3IFNldChbXSk7XG4gIGNvbnN0IHJlZ2lzdGVyTmVzdGVkTGF5ZXIgPSAoZWxlbWVudCkgPT4ge1xuICAgIG5lc3RlZExheWVycy5hZGQoZWxlbWVudCk7XG4gICAgY29uc3QgcGFyZW50VW5yZWdpc3RlciA9IHBhcmVudENvbnRleHQ/LnJlZ2lzdGVyTmVzdGVkTGF5ZXIoZWxlbWVudCk7XG4gICAgcmV0dXJuICgpID0+IHtcbiAgICAgIG5lc3RlZExheWVycy5kZWxldGUoZWxlbWVudCk7XG4gICAgICBwYXJlbnRVbnJlZ2lzdGVyPy4oKTtcbiAgICB9O1xuICB9O1xuICBjb25zdCBzaG91bGRFeGNsdWRlRWxlbWVudCA9IChlbGVtZW50KSA9PiB7XG4gICAgaWYgKCFyZWYpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgcmV0dXJuIGxvY2FsLmV4Y2x1ZGVkRWxlbWVudHM/LnNvbWUoKG5vZGUpID0+IGNvbnRhaW5zKG5vZGUoKSwgZWxlbWVudCkpIHx8IFsuLi5uZXN0ZWRMYXllcnNdLnNvbWUoKGxheWVyKSA9PiBjb250YWlucyhsYXllciwgZWxlbWVudCkpO1xuICB9O1xuICBjb25zdCBvblBvaW50ZXJEb3duT3V0c2lkZSA9IChlMikgPT4ge1xuICAgIGlmICghcmVmIHx8IGxheWVyU3RhY2suaXNCZWxvd1BvaW50ZXJCbG9ja2luZ0xheWVyKHJlZikpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgaWYgKCFsb2NhbC5ieXBhc3NUb3BNb3N0TGF5ZXJDaGVjayAmJiAhbGF5ZXJTdGFjay5pc1RvcE1vc3RMYXllcihyZWYpKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIGxvY2FsLm9uUG9pbnRlckRvd25PdXRzaWRlPy4oZTIpO1xuICAgIGxvY2FsLm9uSW50ZXJhY3RPdXRzaWRlPy4oZTIpO1xuICAgIGlmICghZTIuZGVmYXVsdFByZXZlbnRlZCkge1xuICAgICAgbG9jYWwub25EaXNtaXNzPy4oKTtcbiAgICB9XG4gIH07XG4gIGNvbnN0IG9uRm9jdXNPdXRzaWRlID0gKGUyKSA9PiB7XG4gICAgbG9jYWwub25Gb2N1c091dHNpZGU/LihlMik7XG4gICAgbG9jYWwub25JbnRlcmFjdE91dHNpZGU/LihlMik7XG4gICAgaWYgKCFlMi5kZWZhdWx0UHJldmVudGVkKSB7XG4gICAgICBsb2NhbC5vbkRpc21pc3M/LigpO1xuICAgIH1cbiAgfTtcbiAgY3JlYXRlSW50ZXJhY3RPdXRzaWRlKHtcbiAgICBzaG91bGRFeGNsdWRlRWxlbWVudCxcbiAgICBvblBvaW50ZXJEb3duT3V0c2lkZSxcbiAgICBvbkZvY3VzT3V0c2lkZVxuICB9LCAoKSA9PiByZWYpO1xuICBjcmVhdGVFc2NhcGVLZXlEb3duKHtcbiAgICBvd25lckRvY3VtZW50OiAoKSA9PiBnZXREb2N1bWVudChyZWYpLFxuICAgIG9uRXNjYXBlS2V5RG93bjogKGUyKSA9PiB7XG4gICAgICBpZiAoIXJlZiB8fCAhbGF5ZXJTdGFjay5pc1RvcE1vc3RMYXllcihyZWYpKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICAgIGxvY2FsLm9uRXNjYXBlS2V5RG93bj8uKGUyKTtcbiAgICAgIGlmICghZTIuZGVmYXVsdFByZXZlbnRlZCAmJiBsb2NhbC5vbkRpc21pc3MpIHtcbiAgICAgICAgZTIucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgbG9jYWwub25EaXNtaXNzKCk7XG4gICAgICB9XG4gICAgfVxuICB9KTtcbiAgb25Nb3VudCgoKSA9PiB7XG4gICAgaWYgKCFyZWYpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgbGF5ZXJTdGFjay5hZGRMYXllcih7XG4gICAgICBub2RlOiByZWYsXG4gICAgICBpc1BvaW50ZXJCbG9ja2luZzogbG9jYWwuZGlzYWJsZU91dHNpZGVQb2ludGVyRXZlbnRzLFxuICAgICAgZGlzbWlzczogbG9jYWwub25EaXNtaXNzXG4gICAgfSk7XG4gICAgY29uc3QgdW5yZWdpc3RlckZyb21QYXJlbnRMYXllciA9IHBhcmVudENvbnRleHQ/LnJlZ2lzdGVyTmVzdGVkTGF5ZXIocmVmKTtcbiAgICBsYXllclN0YWNrLmFzc2lnblBvaW50ZXJFdmVudFRvTGF5ZXJzKCk7XG4gICAgbGF5ZXJTdGFjay5kaXNhYmxlQm9keVBvaW50ZXJFdmVudHMocmVmKTtcbiAgICBvbkNsZWFudXAoKCkgPT4ge1xuICAgICAgaWYgKCFyZWYpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgICAgbGF5ZXJTdGFjay5yZW1vdmVMYXllcihyZWYpO1xuICAgICAgdW5yZWdpc3RlckZyb21QYXJlbnRMYXllcj8uKCk7XG4gICAgICBsYXllclN0YWNrLmFzc2lnblBvaW50ZXJFdmVudFRvTGF5ZXJzKCk7XG4gICAgICBsYXllclN0YWNrLnJlc3RvcmVCb2R5UG9pbnRlckV2ZW50cyhyZWYpO1xuICAgIH0pO1xuICB9KTtcbiAgY3JlYXRlRWZmZWN0KG9uKFsoKSA9PiByZWYsICgpID0+IGxvY2FsLmRpc2FibGVPdXRzaWRlUG9pbnRlckV2ZW50c10sIChbcmVmMiwgZGlzYWJsZU91dHNpZGVQb2ludGVyRXZlbnRzXSkgPT4ge1xuICAgIGlmICghcmVmMikge1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBjb25zdCBsYXllciA9IGxheWVyU3RhY2suZmluZChyZWYyKTtcbiAgICBpZiAobGF5ZXIgJiYgbGF5ZXIuaXNQb2ludGVyQmxvY2tpbmcgIT09IGRpc2FibGVPdXRzaWRlUG9pbnRlckV2ZW50cykge1xuICAgICAgbGF5ZXIuaXNQb2ludGVyQmxvY2tpbmcgPSBkaXNhYmxlT3V0c2lkZVBvaW50ZXJFdmVudHM7XG4gICAgICBsYXllclN0YWNrLmFzc2lnblBvaW50ZXJFdmVudFRvTGF5ZXJzKCk7XG4gICAgfVxuICAgIGlmIChkaXNhYmxlT3V0c2lkZVBvaW50ZXJFdmVudHMpIHtcbiAgICAgIGxheWVyU3RhY2suZGlzYWJsZUJvZHlQb2ludGVyRXZlbnRzKHJlZjIpO1xuICAgIH1cbiAgICBvbkNsZWFudXAoKCkgPT4ge1xuICAgICAgbGF5ZXJTdGFjay5yZXN0b3JlQm9keVBvaW50ZXJFdmVudHMocmVmMik7XG4gICAgfSk7XG4gIH0sIHtcbiAgICBkZWZlcjogdHJ1ZVxuICB9KSk7XG4gIGNvbnN0IGNvbnRleHQgPSB7XG4gICAgcmVnaXN0ZXJOZXN0ZWRMYXllclxuICB9O1xuICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KERpc21pc3NhYmxlTGF5ZXJDb250ZXh0LlByb3ZpZGVyLCB7XG4gICAgdmFsdWU6IGNvbnRleHQsXG4gICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChQb2x5bW9ycGhpYywgbWVyZ2VQcm9wcyh7XG4gICAgICAgIGFzOiBcImRpdlwiLFxuICAgICAgICByZWYociQpIHtcbiAgICAgICAgICBjb25zdCBfcmVmJCA9IG1lcmdlUmVmcygoZWwpID0+IHJlZiA9IGVsLCBsb2NhbC5yZWYpO1xuICAgICAgICAgIHR5cGVvZiBfcmVmJCA9PT0gXCJmdW5jdGlvblwiICYmIF9yZWYkKHIkKTtcbiAgICAgICAgfVxuICAgICAgfSwgb3RoZXJzKSk7XG4gICAgfVxuICB9KTtcbn1cblxuLy8gLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL0Brb2JhbHRlK2NvcmVAMC4xMy4xX3NvbGlkLWpzQDEuOC4xNy9ub2RlX21vZHVsZXMvQGtvYmFsdGUvY29yZS9kaXN0L2NodW5rLzdMQ0FOR0hELmpzXG5mdW5jdGlvbiBjcmVhdGVEaXNjbG9zdXJlU3RhdGUocHJvcHMgPSB7fSkge1xuICBjb25zdCBbaXNPcGVuLCBzZXRJc09wZW5dID0gY3JlYXRlQ29udHJvbGxhYmxlQm9vbGVhblNpZ25hbCh7XG4gICAgdmFsdWU6ICgpID0+IGFjY2Vzcyhwcm9wcy5vcGVuKSxcbiAgICBkZWZhdWx0VmFsdWU6ICgpID0+ICEhYWNjZXNzKHByb3BzLmRlZmF1bHRPcGVuKSxcbiAgICBvbkNoYW5nZTogKHZhbHVlKSA9PiBwcm9wcy5vbk9wZW5DaGFuZ2U/Lih2YWx1ZSlcbiAgfSk7XG4gIGNvbnN0IG9wZW4gPSAoKSA9PiB7XG4gICAgc2V0SXNPcGVuKHRydWUpO1xuICB9O1xuICBjb25zdCBjbG9zZSA9ICgpID0+IHtcbiAgICBzZXRJc09wZW4oZmFsc2UpO1xuICB9O1xuICBjb25zdCB0b2dnbGUgPSAoKSA9PiB7XG4gICAgaXNPcGVuKCkgPyBjbG9zZSgpIDogb3BlbigpO1xuICB9O1xuICByZXR1cm4ge1xuICAgIGlzT3BlbixcbiAgICBzZXRJc09wZW4sXG4gICAgb3BlbixcbiAgICBjbG9zZSxcbiAgICB0b2dnbGVcbiAgfTtcbn1cblxuLy8gLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL0Brb2JhbHRlK2NvcmVAMC4xMy4xX3NvbGlkLWpzQDEuOC4xNy9ub2RlX21vZHVsZXMvQGtvYmFsdGUvY29yZS9kaXN0L2NodW5rL1lYSTc2MlVXLmpzXG52YXIgcmFkaW9fZ3JvdXBfZXhwb3J0cyA9IHt9O1xuX19leHBvcnQocmFkaW9fZ3JvdXBfZXhwb3J0cywge1xuICBEZXNjcmlwdGlvbjogKCkgPT4gRm9ybUNvbnRyb2xEZXNjcmlwdGlvbixcbiAgRXJyb3JNZXNzYWdlOiAoKSA9PiBGb3JtQ29udHJvbEVycm9yTWVzc2FnZSxcbiAgSXRlbTogKCkgPT4gUmFkaW9Hcm91cEl0ZW0sXG4gIEl0ZW1Db250cm9sOiAoKSA9PiBSYWRpb0dyb3VwSXRlbUNvbnRyb2wsXG4gIEl0ZW1EZXNjcmlwdGlvbjogKCkgPT4gUmFkaW9Hcm91cEl0ZW1EZXNjcmlwdGlvbixcbiAgSXRlbUluZGljYXRvcjogKCkgPT4gUmFkaW9Hcm91cEl0ZW1JbmRpY2F0b3IsXG4gIEl0ZW1JbnB1dDogKCkgPT4gUmFkaW9Hcm91cEl0ZW1JbnB1dCxcbiAgSXRlbUxhYmVsOiAoKSA9PiBSYWRpb0dyb3VwSXRlbUxhYmVsLFxuICBMYWJlbDogKCkgPT4gUmFkaW9Hcm91cExhYmVsLFxuICBSYWRpb0dyb3VwOiAoKSA9PiBSYWRpb0dyb3VwLFxuICBSb290OiAoKSA9PiBSYWRpb0dyb3VwUm9vdFxufSk7XG52YXIgUmFkaW9Hcm91cENvbnRleHQgPSBjcmVhdGVDb250ZXh0KCk7XG5mdW5jdGlvbiB1c2VSYWRpb0dyb3VwQ29udGV4dCgpIHtcbiAgY29uc3QgY29udGV4dCA9IHVzZUNvbnRleHQoUmFkaW9Hcm91cENvbnRleHQpO1xuICBpZiAoY29udGV4dCA9PT0gdm9pZCAwKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiW2tvYmFsdGVdOiBgdXNlUmFkaW9Hcm91cENvbnRleHRgIG11c3QgYmUgdXNlZCB3aXRoaW4gYSBgUmFkaW9Hcm91cGAgY29tcG9uZW50XCIpO1xuICB9XG4gIHJldHVybiBjb250ZXh0O1xufVxudmFyIFJhZGlvR3JvdXBJdGVtQ29udGV4dCA9IGNyZWF0ZUNvbnRleHQoKTtcbmZ1bmN0aW9uIHVzZVJhZGlvR3JvdXBJdGVtQ29udGV4dCgpIHtcbiAgY29uc3QgY29udGV4dCA9IHVzZUNvbnRleHQoUmFkaW9Hcm91cEl0ZW1Db250ZXh0KTtcbiAgaWYgKGNvbnRleHQgPT09IHZvaWQgMCkge1xuICAgIHRocm93IG5ldyBFcnJvcihcIltrb2JhbHRlXTogYHVzZVJhZGlvR3JvdXBJdGVtQ29udGV4dGAgbXVzdCBiZSB1c2VkIHdpdGhpbiBhIGBSYWRpb0dyb3VwLkl0ZW1gIGNvbXBvbmVudFwiKTtcbiAgfVxuICByZXR1cm4gY29udGV4dDtcbn1cbmZ1bmN0aW9uIFJhZGlvR3JvdXBJdGVtKHByb3BzKSB7XG4gIGNvbnN0IGZvcm1Db250cm9sQ29udGV4dCA9IHVzZUZvcm1Db250cm9sQ29udGV4dCgpO1xuICBjb25zdCByYWRpb0dyb3VwQ29udGV4dCA9IHVzZVJhZGlvR3JvdXBDb250ZXh0KCk7XG4gIGNvbnN0IGRlZmF1bHRJZCA9IGAke2Zvcm1Db250cm9sQ29udGV4dC5nZW5lcmF0ZUlkKFwiaXRlbVwiKX0tJHtjcmVhdGVVbmlxdWVJZCgpfWA7XG4gIGNvbnN0IG1lcmdlZFByb3BzID0gbWVyZ2VEZWZhdWx0UHJvcHMoe1xuICAgIGlkOiBkZWZhdWx0SWRcbiAgfSwgcHJvcHMpO1xuICBjb25zdCBbbG9jYWwsIG90aGVyc10gPSBzcGxpdFByb3BzKG1lcmdlZFByb3BzLCBbXCJ2YWx1ZVwiLCBcImRpc2FibGVkXCIsIFwib25Qb2ludGVyRG93blwiXSk7XG4gIGNvbnN0IFtpbnB1dElkLCBzZXRJbnB1dElkXSA9IGNyZWF0ZVNpZ25hbCgpO1xuICBjb25zdCBbbGFiZWxJZCwgc2V0TGFiZWxJZF0gPSBjcmVhdGVTaWduYWwoKTtcbiAgY29uc3QgW2Rlc2NyaXB0aW9uSWQsIHNldERlc2NyaXB0aW9uSWRdID0gY3JlYXRlU2lnbmFsKCk7XG4gIGNvbnN0IFtpbnB1dFJlZiwgc2V0SW5wdXRSZWZdID0gY3JlYXRlU2lnbmFsKCk7XG4gIGNvbnN0IFtpc0ZvY3VzZWQsIHNldElzRm9jdXNlZF0gPSBjcmVhdGVTaWduYWwoZmFsc2UpO1xuICBjb25zdCBpc1NlbGVjdGVkID0gY3JlYXRlTWVtbygoKSA9PiB7XG4gICAgcmV0dXJuIHJhZGlvR3JvdXBDb250ZXh0LmlzU2VsZWN0ZWRWYWx1ZShsb2NhbC52YWx1ZSk7XG4gIH0pO1xuICBjb25zdCBpc0Rpc2FibGVkID0gY3JlYXRlTWVtbygoKSA9PiB7XG4gICAgcmV0dXJuIGxvY2FsLmRpc2FibGVkIHx8IGZvcm1Db250cm9sQ29udGV4dC5pc0Rpc2FibGVkKCkgfHwgZmFsc2U7XG4gIH0pO1xuICBjb25zdCBvblBvaW50ZXJEb3duID0gKGUyKSA9PiB7XG4gICAgY2FsbEhhbmRsZXIoZTIsIGxvY2FsLm9uUG9pbnRlckRvd24pO1xuICAgIGlmIChpc0ZvY3VzZWQoKSkge1xuICAgICAgZTIucHJldmVudERlZmF1bHQoKTtcbiAgICB9XG4gIH07XG4gIGNvbnN0IGRhdGFzZXQgPSBjcmVhdGVNZW1vKCgpID0+ICh7XG4gICAgLi4uZm9ybUNvbnRyb2xDb250ZXh0LmRhdGFzZXQoKSxcbiAgICBcImRhdGEtZGlzYWJsZWRcIjogaXNEaXNhYmxlZCgpID8gXCJcIiA6IHZvaWQgMCxcbiAgICBcImRhdGEtY2hlY2tlZFwiOiBpc1NlbGVjdGVkKCkgPyBcIlwiIDogdm9pZCAwXG4gIH0pKTtcbiAgY29uc3QgY29udGV4dCA9IHtcbiAgICB2YWx1ZTogKCkgPT4gbG9jYWwudmFsdWUsXG4gICAgZGF0YXNldCxcbiAgICBpc1NlbGVjdGVkLFxuICAgIGlzRGlzYWJsZWQsXG4gICAgaW5wdXRJZCxcbiAgICBsYWJlbElkLFxuICAgIGRlc2NyaXB0aW9uSWQsXG4gICAgaW5wdXRSZWYsXG4gICAgc2VsZWN0OiAoKSA9PiByYWRpb0dyb3VwQ29udGV4dC5zZXRTZWxlY3RlZFZhbHVlKGxvY2FsLnZhbHVlKSxcbiAgICBnZW5lcmF0ZUlkOiBjcmVhdGVHZW5lcmF0ZUlkKCgpID0+IG90aGVycy5pZCksXG4gICAgcmVnaXN0ZXJJbnB1dDogY3JlYXRlUmVnaXN0ZXJJZChzZXRJbnB1dElkKSxcbiAgICByZWdpc3RlckxhYmVsOiBjcmVhdGVSZWdpc3RlcklkKHNldExhYmVsSWQpLFxuICAgIHJlZ2lzdGVyRGVzY3JpcHRpb246IGNyZWF0ZVJlZ2lzdGVySWQoc2V0RGVzY3JpcHRpb25JZCksXG4gICAgc2V0SXNGb2N1c2VkLFxuICAgIHNldElucHV0UmVmXG4gIH07XG4gIHJldHVybiBjcmVhdGVDb21wb25lbnQoUmFkaW9Hcm91cEl0ZW1Db250ZXh0LlByb3ZpZGVyLCB7XG4gICAgdmFsdWU6IGNvbnRleHQsXG4gICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChQb2x5bW9ycGhpYywgbWVyZ2VQcm9wcyh7XG4gICAgICAgIGFzOiBcImRpdlwiLFxuICAgICAgICByb2xlOiBcImdyb3VwXCIsXG4gICAgICAgIG9uUG9pbnRlckRvd25cbiAgICAgIH0sIGRhdGFzZXQsIG90aGVycykpO1xuICAgIH1cbiAgfSk7XG59XG5mdW5jdGlvbiBSYWRpb0dyb3VwSXRlbUNvbnRyb2wocHJvcHMpIHtcbiAgY29uc3QgY29udGV4dCA9IHVzZVJhZGlvR3JvdXBJdGVtQ29udGV4dCgpO1xuICBjb25zdCBtZXJnZWRQcm9wcyA9IG1lcmdlRGVmYXVsdFByb3BzKHtcbiAgICBpZDogY29udGV4dC5nZW5lcmF0ZUlkKFwiY29udHJvbFwiKVxuICB9LCBwcm9wcyk7XG4gIGNvbnN0IFtsb2NhbCwgb3RoZXJzXSA9IHNwbGl0UHJvcHMobWVyZ2VkUHJvcHMsIFtcIm9uQ2xpY2tcIiwgXCJvbktleURvd25cIl0pO1xuICBjb25zdCBvbkNsaWNrID0gKGUyKSA9PiB7XG4gICAgY2FsbEhhbmRsZXIoZTIsIGxvY2FsLm9uQ2xpY2spO1xuICAgIGNvbnRleHQuc2VsZWN0KCk7XG4gICAgY29udGV4dC5pbnB1dFJlZigpPy5mb2N1cygpO1xuICB9O1xuICBjb25zdCBvbktleURvd24gPSAoZTIpID0+IHtcbiAgICBjYWxsSGFuZGxlcihlMiwgbG9jYWwub25LZXlEb3duKTtcbiAgICBpZiAoZTIua2V5ID09PSBFdmVudEtleS5TcGFjZSkge1xuICAgICAgY29udGV4dC5zZWxlY3QoKTtcbiAgICAgIGNvbnRleHQuaW5wdXRSZWYoKT8uZm9jdXMoKTtcbiAgICB9XG4gIH07XG4gIHJldHVybiBjcmVhdGVDb21wb25lbnQoUG9seW1vcnBoaWMsIG1lcmdlUHJvcHMoe1xuICAgIGFzOiBcImRpdlwiLFxuICAgIG9uQ2xpY2ssXG4gICAgb25LZXlEb3duXG4gIH0sICgpID0+IGNvbnRleHQuZGF0YXNldCgpLCBvdGhlcnMpKTtcbn1cbmZ1bmN0aW9uIFJhZGlvR3JvdXBJdGVtRGVzY3JpcHRpb24ocHJvcHMpIHtcbiAgY29uc3QgY29udGV4dCA9IHVzZVJhZGlvR3JvdXBJdGVtQ29udGV4dCgpO1xuICBjb25zdCBtZXJnZWRQcm9wcyA9IG1lcmdlRGVmYXVsdFByb3BzKHtcbiAgICBpZDogY29udGV4dC5nZW5lcmF0ZUlkKFwiZGVzY3JpcHRpb25cIilcbiAgfSwgcHJvcHMpO1xuICBjcmVhdGVFZmZlY3QoKCkgPT4gb25DbGVhbnVwKGNvbnRleHQucmVnaXN0ZXJEZXNjcmlwdGlvbihtZXJnZWRQcm9wcy5pZCkpKTtcbiAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChQb2x5bW9ycGhpYywgbWVyZ2VQcm9wcyh7XG4gICAgYXM6IFwiZGl2XCJcbiAgfSwgKCkgPT4gY29udGV4dC5kYXRhc2V0KCksIG1lcmdlZFByb3BzKSk7XG59XG5mdW5jdGlvbiBSYWRpb0dyb3VwSXRlbUluZGljYXRvcihwcm9wcykge1xuICBjb25zdCBjb250ZXh0ID0gdXNlUmFkaW9Hcm91cEl0ZW1Db250ZXh0KCk7XG4gIGNvbnN0IG1lcmdlZFByb3BzID0gbWVyZ2VEZWZhdWx0UHJvcHMoe1xuICAgIGlkOiBjb250ZXh0LmdlbmVyYXRlSWQoXCJpbmRpY2F0b3JcIilcbiAgfSwgcHJvcHMpO1xuICBjb25zdCBbbG9jYWwsIG90aGVyc10gPSBzcGxpdFByb3BzKG1lcmdlZFByb3BzLCBbXCJyZWZcIiwgXCJmb3JjZU1vdW50XCJdKTtcbiAgY29uc3QgcHJlc2VuY2UgPSBjcmVhdGVQcmVzZW5jZSgoKSA9PiBsb2NhbC5mb3JjZU1vdW50IHx8IGNvbnRleHQuaXNTZWxlY3RlZCgpKTtcbiAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChTaG93LCB7XG4gICAgZ2V0IHdoZW4oKSB7XG4gICAgICByZXR1cm4gcHJlc2VuY2UuaXNQcmVzZW50KCk7XG4gICAgfSxcbiAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KFBvbHltb3JwaGljLCBtZXJnZVByb3BzKHtcbiAgICAgICAgYXM6IFwiZGl2XCIsXG4gICAgICAgIHJlZihyJCkge1xuICAgICAgICAgIGNvbnN0IF9yZWYkID0gbWVyZ2VSZWZzKHByZXNlbmNlLnNldFJlZiwgbG9jYWwucmVmKTtcbiAgICAgICAgICB0eXBlb2YgX3JlZiQgPT09IFwiZnVuY3Rpb25cIiAmJiBfcmVmJChyJCk7XG4gICAgICAgIH1cbiAgICAgIH0sICgpID0+IGNvbnRleHQuZGF0YXNldCgpLCBvdGhlcnMpKTtcbiAgICB9XG4gIH0pO1xufVxuZnVuY3Rpb24gUmFkaW9Hcm91cEl0ZW1JbnB1dChwcm9wcykge1xuICBjb25zdCBmb3JtQ29udHJvbENvbnRleHQgPSB1c2VGb3JtQ29udHJvbENvbnRleHQoKTtcbiAgY29uc3QgcmFkaW9Hcm91cENvbnRleHQgPSB1c2VSYWRpb0dyb3VwQ29udGV4dCgpO1xuICBjb25zdCByYWRpb0NvbnRleHQgPSB1c2VSYWRpb0dyb3VwSXRlbUNvbnRleHQoKTtcbiAgY29uc3QgbWVyZ2VkUHJvcHMgPSBtZXJnZURlZmF1bHRQcm9wcyh7XG4gICAgaWQ6IHJhZGlvQ29udGV4dC5nZW5lcmF0ZUlkKFwiaW5wdXRcIilcbiAgfSwgcHJvcHMpO1xuICBjb25zdCBbbG9jYWwsIG90aGVyc10gPSBzcGxpdFByb3BzKG1lcmdlZFByb3BzLCBbXCJyZWZcIiwgXCJzdHlsZVwiLCBcImFyaWEtbGFiZWxsZWRieVwiLCBcImFyaWEtZGVzY3JpYmVkYnlcIiwgXCJvbkNoYW5nZVwiLCBcIm9uRm9jdXNcIiwgXCJvbkJsdXJcIl0pO1xuICBjb25zdCBhcmlhTGFiZWxsZWRCeSA9ICgpID0+IHtcbiAgICByZXR1cm4gW1xuICAgICAgbG9jYWxbXCJhcmlhLWxhYmVsbGVkYnlcIl0sXG4gICAgICByYWRpb0NvbnRleHQubGFiZWxJZCgpLFxuICAgICAgLy8gSWYgdGhlcmUgaXMgYm90aCBhbiBhcmlhLWxhYmVsIGFuZCBhcmlhLWxhYmVsbGVkYnksIGFkZCB0aGUgaW5wdXQgaXRzZWxmIGhhcyBhbiBhcmlhLWxhYmVsbGVkYnlcbiAgICAgIGxvY2FsW1wiYXJpYS1sYWJlbGxlZGJ5XCJdICE9IG51bGwgJiYgb3RoZXJzW1wiYXJpYS1sYWJlbFwiXSAhPSBudWxsID8gb3RoZXJzLmlkIDogdm9pZCAwXG4gICAgXS5maWx0ZXIoQm9vbGVhbikuam9pbihcIiBcIikgfHwgdm9pZCAwO1xuICB9O1xuICBjb25zdCBhcmlhRGVzY3JpYmVkQnkgPSAoKSA9PiB7XG4gICAgcmV0dXJuIFtsb2NhbFtcImFyaWEtZGVzY3JpYmVkYnlcIl0sIHJhZGlvQ29udGV4dC5kZXNjcmlwdGlvbklkKCksIHJhZGlvR3JvdXBDb250ZXh0LmFyaWFEZXNjcmliZWRCeSgpXS5maWx0ZXIoQm9vbGVhbikuam9pbihcIiBcIikgfHwgdm9pZCAwO1xuICB9O1xuICBjb25zdCBbaXNJbnRlcm5hbENoYW5nZUV2ZW50LCBzZXRJc0ludGVybmFsQ2hhbmdlRXZlbnRdID0gY3JlYXRlU2lnbmFsKGZhbHNlKTtcbiAgY29uc3Qgb25DaGFuZ2UgPSAoZTIpID0+IHtcbiAgICBjYWxsSGFuZGxlcihlMiwgbG9jYWwub25DaGFuZ2UpO1xuICAgIGUyLnN0b3BQcm9wYWdhdGlvbigpO1xuICAgIGlmICghaXNJbnRlcm5hbENoYW5nZUV2ZW50KCkpIHtcbiAgICAgIHJhZGlvR3JvdXBDb250ZXh0LnNldFNlbGVjdGVkVmFsdWUocmFkaW9Db250ZXh0LnZhbHVlKCkpO1xuICAgICAgY29uc3QgdGFyZ2V0ID0gZTIudGFyZ2V0O1xuICAgICAgdGFyZ2V0LmNoZWNrZWQgPSByYWRpb0NvbnRleHQuaXNTZWxlY3RlZCgpO1xuICAgIH1cbiAgICBzZXRJc0ludGVybmFsQ2hhbmdlRXZlbnQoZmFsc2UpO1xuICB9O1xuICBjb25zdCBvbkZvY3VzID0gKGUyKSA9PiB7XG4gICAgY2FsbEhhbmRsZXIoZTIsIGxvY2FsLm9uRm9jdXMpO1xuICAgIHJhZGlvQ29udGV4dC5zZXRJc0ZvY3VzZWQodHJ1ZSk7XG4gIH07XG4gIGNvbnN0IG9uQmx1ciA9IChlMikgPT4ge1xuICAgIGNhbGxIYW5kbGVyKGUyLCBsb2NhbC5vbkJsdXIpO1xuICAgIHJhZGlvQ29udGV4dC5zZXRJc0ZvY3VzZWQoZmFsc2UpO1xuICB9O1xuICBjcmVhdGVFZmZlY3Qob24oWygpID0+IHJhZGlvQ29udGV4dC5pc1NlbGVjdGVkKCksICgpID0+IHJhZGlvQ29udGV4dC52YWx1ZSgpXSwgKGMyKSA9PiB7XG4gICAgaWYgKCFjMlswXSAmJiBjMlsxXSA9PT0gcmFkaW9Db250ZXh0LnZhbHVlKCkpXG4gICAgICByZXR1cm47XG4gICAgc2V0SXNJbnRlcm5hbENoYW5nZUV2ZW50KHRydWUpO1xuICAgIGNvbnN0IHJlZiA9IHJhZGlvQ29udGV4dC5pbnB1dFJlZigpO1xuICAgIHJlZj8uZGlzcGF0Y2hFdmVudChuZXcgRXZlbnQoXCJpbnB1dFwiLCB7XG4gICAgICBidWJibGVzOiB0cnVlLFxuICAgICAgY2FuY2VsYWJsZTogdHJ1ZVxuICAgIH0pKTtcbiAgICByZWY/LmRpc3BhdGNoRXZlbnQobmV3IEV2ZW50KFwiY2hhbmdlXCIsIHtcbiAgICAgIGJ1YmJsZXM6IHRydWUsXG4gICAgICBjYW5jZWxhYmxlOiB0cnVlXG4gICAgfSkpO1xuICB9LCB7XG4gICAgZGVmZXI6IHRydWVcbiAgfSkpO1xuICBjcmVhdGVFZmZlY3QoKCkgPT4gb25DbGVhbnVwKHJhZGlvQ29udGV4dC5yZWdpc3RlcklucHV0KG90aGVycy5pZCkpKTtcbiAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChQb2x5bW9ycGhpYywgbWVyZ2VQcm9wcyh7XG4gICAgYXM6IFwiaW5wdXRcIixcbiAgICByZWYociQpIHtcbiAgICAgIGNvbnN0IF9yZWYkID0gbWVyZ2VSZWZzKHJhZGlvQ29udGV4dC5zZXRJbnB1dFJlZiwgbG9jYWwucmVmKTtcbiAgICAgIHR5cGVvZiBfcmVmJCA9PT0gXCJmdW5jdGlvblwiICYmIF9yZWYkKHIkKTtcbiAgICB9LFxuICAgIHR5cGU6IFwicmFkaW9cIixcbiAgICBnZXQgbmFtZSgpIHtcbiAgICAgIHJldHVybiBmb3JtQ29udHJvbENvbnRleHQubmFtZSgpO1xuICAgIH0sXG4gICAgZ2V0IHZhbHVlKCkge1xuICAgICAgcmV0dXJuIHJhZGlvQ29udGV4dC52YWx1ZSgpO1xuICAgIH0sXG4gICAgZ2V0IGNoZWNrZWQoKSB7XG4gICAgICByZXR1cm4gcmFkaW9Db250ZXh0LmlzU2VsZWN0ZWQoKTtcbiAgICB9LFxuICAgIGdldCByZXF1aXJlZCgpIHtcbiAgICAgIHJldHVybiBmb3JtQ29udHJvbENvbnRleHQuaXNSZXF1aXJlZCgpO1xuICAgIH0sXG4gICAgZ2V0IGRpc2FibGVkKCkge1xuICAgICAgcmV0dXJuIHJhZGlvQ29udGV4dC5pc0Rpc2FibGVkKCk7XG4gICAgfSxcbiAgICBnZXQgcmVhZG9ubHkoKSB7XG4gICAgICByZXR1cm4gZm9ybUNvbnRyb2xDb250ZXh0LmlzUmVhZE9ubHkoKTtcbiAgICB9LFxuICAgIGdldCBzdHlsZSgpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIC4uLnZpc3VhbGx5SGlkZGVuU3R5bGVzLFxuICAgICAgICAuLi5sb2NhbC5zdHlsZVxuICAgICAgfTtcbiAgICB9LFxuICAgIGdldCBbXCJhcmlhLWxhYmVsbGVkYnlcIl0oKSB7XG4gICAgICByZXR1cm4gYXJpYUxhYmVsbGVkQnkoKTtcbiAgICB9LFxuICAgIGdldCBbXCJhcmlhLWRlc2NyaWJlZGJ5XCJdKCkge1xuICAgICAgcmV0dXJuIGFyaWFEZXNjcmliZWRCeSgpO1xuICAgIH0sXG4gICAgb25DaGFuZ2UsXG4gICAgb25Gb2N1cyxcbiAgICBvbkJsdXJcbiAgfSwgKCkgPT4gcmFkaW9Db250ZXh0LmRhdGFzZXQoKSwgb3RoZXJzKSk7XG59XG5mdW5jdGlvbiBSYWRpb0dyb3VwSXRlbUxhYmVsKHByb3BzKSB7XG4gIGNvbnN0IGNvbnRleHQgPSB1c2VSYWRpb0dyb3VwSXRlbUNvbnRleHQoKTtcbiAgY29uc3QgbWVyZ2VkUHJvcHMgPSBtZXJnZURlZmF1bHRQcm9wcyh7XG4gICAgaWQ6IGNvbnRleHQuZ2VuZXJhdGVJZChcImxhYmVsXCIpXG4gIH0sIHByb3BzKTtcbiAgY3JlYXRlRWZmZWN0KCgpID0+IG9uQ2xlYW51cChjb250ZXh0LnJlZ2lzdGVyTGFiZWwobWVyZ2VkUHJvcHMuaWQpKSk7XG4gIHJldHVybiBjcmVhdGVDb21wb25lbnQoUG9seW1vcnBoaWMsIG1lcmdlUHJvcHMoe1xuICAgIGFzOiBcImxhYmVsXCIsXG4gICAgZ2V0IFtcImZvclwiXSgpIHtcbiAgICAgIHJldHVybiBjb250ZXh0LmlucHV0SWQoKTtcbiAgICB9XG4gIH0sICgpID0+IGNvbnRleHQuZGF0YXNldCgpLCBtZXJnZWRQcm9wcykpO1xufVxuZnVuY3Rpb24gUmFkaW9Hcm91cExhYmVsKHByb3BzKSB7XG4gIHJldHVybiBjcmVhdGVDb21wb25lbnQoRm9ybUNvbnRyb2xMYWJlbCwgbWVyZ2VQcm9wcyh7XG4gICAgYXM6IFwic3BhblwiXG4gIH0sIHByb3BzKSk7XG59XG5mdW5jdGlvbiBSYWRpb0dyb3VwUm9vdChwcm9wcykge1xuICBsZXQgcmVmO1xuICBjb25zdCBkZWZhdWx0SWQgPSBgcmFkaW9ncm91cC0ke2NyZWF0ZVVuaXF1ZUlkKCl9YDtcbiAgY29uc3QgbWVyZ2VkUHJvcHMgPSBtZXJnZURlZmF1bHRQcm9wcyh7XG4gICAgaWQ6IGRlZmF1bHRJZCxcbiAgICBvcmllbnRhdGlvbjogXCJ2ZXJ0aWNhbFwiXG4gIH0sIHByb3BzKTtcbiAgY29uc3QgW2xvY2FsLCBmb3JtQ29udHJvbFByb3BzLCBvdGhlcnNdID0gc3BsaXRQcm9wcyhtZXJnZWRQcm9wcywgW1wicmVmXCIsIFwidmFsdWVcIiwgXCJkZWZhdWx0VmFsdWVcIiwgXCJvbkNoYW5nZVwiLCBcIm9yaWVudGF0aW9uXCIsIFwiYXJpYS1sYWJlbGxlZGJ5XCIsIFwiYXJpYS1kZXNjcmliZWRieVwiXSwgRk9STV9DT05UUk9MX1BST1BfTkFNRVMpO1xuICBjb25zdCBbc2VsZWN0ZWQsIHNldFNlbGVjdGVkXSA9IGNyZWF0ZUNvbnRyb2xsYWJsZVNpZ25hbCh7XG4gICAgdmFsdWU6ICgpID0+IGxvY2FsLnZhbHVlLFxuICAgIGRlZmF1bHRWYWx1ZTogKCkgPT4gbG9jYWwuZGVmYXVsdFZhbHVlLFxuICAgIG9uQ2hhbmdlOiAodmFsdWUpID0+IGxvY2FsLm9uQ2hhbmdlPy4odmFsdWUpXG4gIH0pO1xuICBjb25zdCB7XG4gICAgZm9ybUNvbnRyb2xDb250ZXh0XG4gIH0gPSBjcmVhdGVGb3JtQ29udHJvbChmb3JtQ29udHJvbFByb3BzKTtcbiAgY3JlYXRlRm9ybVJlc2V0TGlzdGVuZXIoKCkgPT4gcmVmLCAoKSA9PiBzZXRTZWxlY3RlZChsb2NhbC5kZWZhdWx0VmFsdWUgPz8gXCJcIikpO1xuICBjb25zdCBhcmlhTGFiZWxsZWRCeSA9ICgpID0+IHtcbiAgICByZXR1cm4gZm9ybUNvbnRyb2xDb250ZXh0LmdldEFyaWFMYWJlbGxlZEJ5KGFjY2Vzcyhmb3JtQ29udHJvbFByb3BzLmlkKSwgb3RoZXJzW1wiYXJpYS1sYWJlbFwiXSwgbG9jYWxbXCJhcmlhLWxhYmVsbGVkYnlcIl0pO1xuICB9O1xuICBjb25zdCBhcmlhRGVzY3JpYmVkQnkgPSAoKSA9PiB7XG4gICAgcmV0dXJuIGZvcm1Db250cm9sQ29udGV4dC5nZXRBcmlhRGVzY3JpYmVkQnkobG9jYWxbXCJhcmlhLWRlc2NyaWJlZGJ5XCJdKTtcbiAgfTtcbiAgY29uc3QgaXNTZWxlY3RlZFZhbHVlID0gKHZhbHVlKSA9PiB7XG4gICAgcmV0dXJuIHZhbHVlID09PSBzZWxlY3RlZCgpO1xuICB9O1xuICBjb25zdCBjb250ZXh0ID0ge1xuICAgIGFyaWFEZXNjcmliZWRCeSxcbiAgICBpc1NlbGVjdGVkVmFsdWUsXG4gICAgc2V0U2VsZWN0ZWRWYWx1ZTogKHZhbHVlKSA9PiB7XG4gICAgICBpZiAoZm9ybUNvbnRyb2xDb250ZXh0LmlzUmVhZE9ubHkoKSB8fCBmb3JtQ29udHJvbENvbnRleHQuaXNEaXNhYmxlZCgpKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICAgIHNldFNlbGVjdGVkKHZhbHVlKTtcbiAgICAgIGlmIChyZWYpXG4gICAgICAgIGZvciAoY29uc3QgZWwgb2YgcmVmLnF1ZXJ5U2VsZWN0b3JBbGwoXCJbdHlwZT0ncmFkaW8nXVwiKSkge1xuICAgICAgICAgIGNvbnN0IHJhZGlvID0gZWw7XG4gICAgICAgICAgcmFkaW8uY2hlY2tlZCA9IGlzU2VsZWN0ZWRWYWx1ZShyYWRpby52YWx1ZSk7XG4gICAgICAgIH1cbiAgICB9XG4gIH07XG4gIHJldHVybiBjcmVhdGVDb21wb25lbnQoRm9ybUNvbnRyb2xDb250ZXh0LlByb3ZpZGVyLCB7XG4gICAgdmFsdWU6IGZvcm1Db250cm9sQ29udGV4dCxcbiAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KFJhZGlvR3JvdXBDb250ZXh0LlByb3ZpZGVyLCB7XG4gICAgICAgIHZhbHVlOiBjb250ZXh0LFxuICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChQb2x5bW9ycGhpYywgbWVyZ2VQcm9wcyh7XG4gICAgICAgICAgICBhczogXCJkaXZcIixcbiAgICAgICAgICAgIHJlZihyJCkge1xuICAgICAgICAgICAgICBjb25zdCBfcmVmJCA9IG1lcmdlUmVmcygoZWwpID0+IHJlZiA9IGVsLCBsb2NhbC5yZWYpO1xuICAgICAgICAgICAgICB0eXBlb2YgX3JlZiQgPT09IFwiZnVuY3Rpb25cIiAmJiBfcmVmJChyJCk7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgcm9sZTogXCJyYWRpb2dyb3VwXCIsXG4gICAgICAgICAgICBnZXQgaWQoKSB7XG4gICAgICAgICAgICAgIHJldHVybiBhY2Nlc3MoZm9ybUNvbnRyb2xQcm9wcy5pZCk7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZ2V0IFtcImFyaWEtaW52YWxpZFwiXSgpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIGZvcm1Db250cm9sQ29udGV4dC52YWxpZGF0aW9uU3RhdGUoKSA9PT0gXCJpbnZhbGlkXCIgfHwgdm9pZCAwO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGdldCBbXCJhcmlhLXJlcXVpcmVkXCJdKCkge1xuICAgICAgICAgICAgICByZXR1cm4gZm9ybUNvbnRyb2xDb250ZXh0LmlzUmVxdWlyZWQoKSB8fCB2b2lkIDA7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZ2V0IFtcImFyaWEtZGlzYWJsZWRcIl0oKSB7XG4gICAgICAgICAgICAgIHJldHVybiBmb3JtQ29udHJvbENvbnRleHQuaXNEaXNhYmxlZCgpIHx8IHZvaWQgMDtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBnZXQgW1wiYXJpYS1yZWFkb25seVwiXSgpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIGZvcm1Db250cm9sQ29udGV4dC5pc1JlYWRPbmx5KCkgfHwgdm9pZCAwO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGdldCBbXCJhcmlhLW9yaWVudGF0aW9uXCJdKCkge1xuICAgICAgICAgICAgICByZXR1cm4gbG9jYWwub3JpZW50YXRpb247XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZ2V0IFtcImFyaWEtbGFiZWxsZWRieVwiXSgpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIGFyaWFMYWJlbGxlZEJ5KCk7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZ2V0IFtcImFyaWEtZGVzY3JpYmVkYnlcIl0oKSB7XG4gICAgICAgICAgICAgIHJldHVybiBhcmlhRGVzY3JpYmVkQnkoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9LCAoKSA9PiBmb3JtQ29udHJvbENvbnRleHQuZGF0YXNldCgpLCBvdGhlcnMpKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfVxuICB9KTtcbn1cbnZhciBSYWRpb0dyb3VwID0gT2JqZWN0LmFzc2lnbihSYWRpb0dyb3VwUm9vdCwge1xuICBEZXNjcmlwdGlvbjogRm9ybUNvbnRyb2xEZXNjcmlwdGlvbixcbiAgRXJyb3JNZXNzYWdlOiBGb3JtQ29udHJvbEVycm9yTWVzc2FnZSxcbiAgSXRlbTogUmFkaW9Hcm91cEl0ZW0sXG4gIEl0ZW1Db250cm9sOiBSYWRpb0dyb3VwSXRlbUNvbnRyb2wsXG4gIEl0ZW1EZXNjcmlwdGlvbjogUmFkaW9Hcm91cEl0ZW1EZXNjcmlwdGlvbixcbiAgSXRlbUluZGljYXRvcjogUmFkaW9Hcm91cEl0ZW1JbmRpY2F0b3IsXG4gIEl0ZW1JbnB1dDogUmFkaW9Hcm91cEl0ZW1JbnB1dCxcbiAgSXRlbUxhYmVsOiBSYWRpb0dyb3VwSXRlbUxhYmVsLFxuICBMYWJlbDogUmFkaW9Hcm91cExhYmVsXG59KTtcblxuLy8gLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL0Brb2JhbHRlK2NvcmVAMC4xMy4xX3NvbGlkLWpzQDEuOC4xNy9ub2RlX21vZHVsZXMvQGtvYmFsdGUvY29yZS9kaXN0L2NodW5rL0ZITFhIRlpOLmpzXG52YXIgTGlzdEtleWJvYXJkRGVsZWdhdGUgPSBjbGFzcyB7XG4gIGNvbGxlY3Rpb247XG4gIHJlZjtcbiAgY29sbGF0b3I7XG4gIGNvbnN0cnVjdG9yKGNvbGxlY3Rpb24sIHJlZiwgY29sbGF0b3IpIHtcbiAgICB0aGlzLmNvbGxlY3Rpb24gPSBjb2xsZWN0aW9uO1xuICAgIHRoaXMucmVmID0gcmVmO1xuICAgIHRoaXMuY29sbGF0b3IgPSBjb2xsYXRvcjtcbiAgfVxuICBnZXRLZXlCZWxvdyhrZXkpIHtcbiAgICBsZXQga2V5QWZ0ZXIgPSB0aGlzLmNvbGxlY3Rpb24oKS5nZXRLZXlBZnRlcihrZXkpO1xuICAgIHdoaWxlIChrZXlBZnRlciAhPSBudWxsKSB7XG4gICAgICBjb25zdCBpdGVtID0gdGhpcy5jb2xsZWN0aW9uKCkuZ2V0SXRlbShrZXlBZnRlcik7XG4gICAgICBpZiAoaXRlbSAmJiBpdGVtLnR5cGUgPT09IFwiaXRlbVwiICYmICFpdGVtLmRpc2FibGVkKSB7XG4gICAgICAgIHJldHVybiBrZXlBZnRlcjtcbiAgICAgIH1cbiAgICAgIGtleUFmdGVyID0gdGhpcy5jb2xsZWN0aW9uKCkuZ2V0S2V5QWZ0ZXIoa2V5QWZ0ZXIpO1xuICAgIH1cbiAgfVxuICBnZXRLZXlBYm92ZShrZXkpIHtcbiAgICBsZXQga2V5QmVmb3JlID0gdGhpcy5jb2xsZWN0aW9uKCkuZ2V0S2V5QmVmb3JlKGtleSk7XG4gICAgd2hpbGUgKGtleUJlZm9yZSAhPSBudWxsKSB7XG4gICAgICBjb25zdCBpdGVtID0gdGhpcy5jb2xsZWN0aW9uKCkuZ2V0SXRlbShrZXlCZWZvcmUpO1xuICAgICAgaWYgKGl0ZW0gJiYgaXRlbS50eXBlID09PSBcIml0ZW1cIiAmJiAhaXRlbS5kaXNhYmxlZCkge1xuICAgICAgICByZXR1cm4ga2V5QmVmb3JlO1xuICAgICAgfVxuICAgICAga2V5QmVmb3JlID0gdGhpcy5jb2xsZWN0aW9uKCkuZ2V0S2V5QmVmb3JlKGtleUJlZm9yZSk7XG4gICAgfVxuICB9XG4gIGdldEZpcnN0S2V5KCkge1xuICAgIGxldCBrZXkgPSB0aGlzLmNvbGxlY3Rpb24oKS5nZXRGaXJzdEtleSgpO1xuICAgIHdoaWxlIChrZXkgIT0gbnVsbCkge1xuICAgICAgY29uc3QgaXRlbSA9IHRoaXMuY29sbGVjdGlvbigpLmdldEl0ZW0oa2V5KTtcbiAgICAgIGlmIChpdGVtICYmIGl0ZW0udHlwZSA9PT0gXCJpdGVtXCIgJiYgIWl0ZW0uZGlzYWJsZWQpIHtcbiAgICAgICAgcmV0dXJuIGtleTtcbiAgICAgIH1cbiAgICAgIGtleSA9IHRoaXMuY29sbGVjdGlvbigpLmdldEtleUFmdGVyKGtleSk7XG4gICAgfVxuICB9XG4gIGdldExhc3RLZXkoKSB7XG4gICAgbGV0IGtleSA9IHRoaXMuY29sbGVjdGlvbigpLmdldExhc3RLZXkoKTtcbiAgICB3aGlsZSAoa2V5ICE9IG51bGwpIHtcbiAgICAgIGNvbnN0IGl0ZW0gPSB0aGlzLmNvbGxlY3Rpb24oKS5nZXRJdGVtKGtleSk7XG4gICAgICBpZiAoaXRlbSAmJiBpdGVtLnR5cGUgPT09IFwiaXRlbVwiICYmICFpdGVtLmRpc2FibGVkKSB7XG4gICAgICAgIHJldHVybiBrZXk7XG4gICAgICB9XG4gICAgICBrZXkgPSB0aGlzLmNvbGxlY3Rpb24oKS5nZXRLZXlCZWZvcmUoa2V5KTtcbiAgICB9XG4gIH1cbiAgZ2V0SXRlbShrZXkpIHtcbiAgICByZXR1cm4gdGhpcy5yZWY/LigpPy5xdWVyeVNlbGVjdG9yKGBbZGF0YS1rZXk9XCIke2tleX1cIl1gKSA/PyBudWxsO1xuICB9XG4gIC8vIFRPRE86IG5vdCB3b3JraW5nIGNvcnJlY3RseVxuICBnZXRLZXlQYWdlQWJvdmUoa2V5KSB7XG4gICAgY29uc3QgbWVudSA9IHRoaXMucmVmPy4oKTtcbiAgICBsZXQgaXRlbSA9IHRoaXMuZ2V0SXRlbShrZXkpO1xuICAgIGlmICghbWVudSB8fCAhaXRlbSkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBjb25zdCBwYWdlWSA9IE1hdGgubWF4KFxuICAgICAgMCxcbiAgICAgIGl0ZW0ub2Zmc2V0VG9wICsgaXRlbS5vZmZzZXRIZWlnaHQgLSBtZW51Lm9mZnNldEhlaWdodFxuICAgICk7XG4gICAgbGV0IGtleUFib3ZlID0ga2V5O1xuICAgIHdoaWxlIChrZXlBYm92ZSAmJiBpdGVtICYmIGl0ZW0ub2Zmc2V0VG9wID4gcGFnZVkpIHtcbiAgICAgIGtleUFib3ZlID0gdGhpcy5nZXRLZXlBYm92ZShrZXlBYm92ZSk7XG4gICAgICBpdGVtID0ga2V5QWJvdmUgIT0gbnVsbCA/IHRoaXMuZ2V0SXRlbShrZXlBYm92ZSkgOiBudWxsO1xuICAgIH1cbiAgICByZXR1cm4ga2V5QWJvdmU7XG4gIH1cbiAgLy8gVE9ETzogbm90IHdvcmtpbmcgY29ycmVjdGx5XG4gIGdldEtleVBhZ2VCZWxvdyhrZXkpIHtcbiAgICBjb25zdCBtZW51ID0gdGhpcy5yZWY/LigpO1xuICAgIGxldCBpdGVtID0gdGhpcy5nZXRJdGVtKGtleSk7XG4gICAgaWYgKCFtZW51IHx8ICFpdGVtKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIGNvbnN0IHBhZ2VZID0gTWF0aC5taW4oXG4gICAgICBtZW51LnNjcm9sbEhlaWdodCxcbiAgICAgIGl0ZW0ub2Zmc2V0VG9wIC0gaXRlbS5vZmZzZXRIZWlnaHQgKyBtZW51Lm9mZnNldEhlaWdodFxuICAgICk7XG4gICAgbGV0IGtleUJlbG93ID0ga2V5O1xuICAgIHdoaWxlIChrZXlCZWxvdyAmJiBpdGVtICYmIGl0ZW0ub2Zmc2V0VG9wIDwgcGFnZVkpIHtcbiAgICAgIGtleUJlbG93ID0gdGhpcy5nZXRLZXlCZWxvdyhrZXlCZWxvdyk7XG4gICAgICBpdGVtID0ga2V5QmVsb3cgIT0gbnVsbCA/IHRoaXMuZ2V0SXRlbShrZXlCZWxvdykgOiBudWxsO1xuICAgIH1cbiAgICByZXR1cm4ga2V5QmVsb3c7XG4gIH1cbiAgZ2V0S2V5Rm9yU2VhcmNoKHNlYXJjaCwgZnJvbUtleSkge1xuICAgIGNvbnN0IGNvbGxhdG9yID0gdGhpcy5jb2xsYXRvcj8uKCk7XG4gICAgaWYgKCFjb2xsYXRvcikge1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBsZXQga2V5ID0gZnJvbUtleSAhPSBudWxsID8gdGhpcy5nZXRLZXlCZWxvdyhmcm9tS2V5KSA6IHRoaXMuZ2V0Rmlyc3RLZXkoKTtcbiAgICB3aGlsZSAoa2V5ICE9IG51bGwpIHtcbiAgICAgIGNvbnN0IGl0ZW0gPSB0aGlzLmNvbGxlY3Rpb24oKS5nZXRJdGVtKGtleSk7XG4gICAgICBpZiAoaXRlbSkge1xuICAgICAgICBjb25zdCBzdWJzdHJpbmcgPSBpdGVtLnRleHRWYWx1ZS5zbGljZSgwLCBzZWFyY2gubGVuZ3RoKTtcbiAgICAgICAgaWYgKGl0ZW0udGV4dFZhbHVlICYmIGNvbGxhdG9yLmNvbXBhcmUoc3Vic3RyaW5nLCBzZWFyY2gpID09PSAwKSB7XG4gICAgICAgICAgcmV0dXJuIGtleTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAga2V5ID0gdGhpcy5nZXRLZXlCZWxvdyhrZXkpO1xuICAgIH1cbiAgfVxufTtcbmZ1bmN0aW9uIGNyZWF0ZVNlbGVjdGFibGVMaXN0KHByb3BzLCByZWYsIHNjcm9sbFJlZikge1xuICBjb25zdCBjb2xsYXRvciA9IGNyZWF0ZUNvbGxhdG9yKHsgdXNhZ2U6IFwic2VhcmNoXCIsIHNlbnNpdGl2aXR5OiBcImJhc2VcIiB9KTtcbiAgY29uc3QgZGVsZWdhdGUgPSBjcmVhdGVNZW1vKCgpID0+IHtcbiAgICBjb25zdCBrZXlib2FyZERlbGVnYXRlID0gYWNjZXNzKHByb3BzLmtleWJvYXJkRGVsZWdhdGUpO1xuICAgIGlmIChrZXlib2FyZERlbGVnYXRlKSB7XG4gICAgICByZXR1cm4ga2V5Ym9hcmREZWxlZ2F0ZTtcbiAgICB9XG4gICAgcmV0dXJuIG5ldyBMaXN0S2V5Ym9hcmREZWxlZ2F0ZShwcm9wcy5jb2xsZWN0aW9uLCByZWYsIGNvbGxhdG9yKTtcbiAgfSk7XG4gIHJldHVybiBjcmVhdGVTZWxlY3RhYmxlQ29sbGVjdGlvbihcbiAgICB7XG4gICAgICBzZWxlY3Rpb25NYW5hZ2VyOiAoKSA9PiBhY2Nlc3MocHJvcHMuc2VsZWN0aW9uTWFuYWdlciksXG4gICAgICBrZXlib2FyZERlbGVnYXRlOiBkZWxlZ2F0ZSxcbiAgICAgIGF1dG9Gb2N1czogKCkgPT4gYWNjZXNzKHByb3BzLmF1dG9Gb2N1cyksXG4gICAgICBkZWZlckF1dG9Gb2N1czogKCkgPT4gYWNjZXNzKHByb3BzLmRlZmVyQXV0b0ZvY3VzKSxcbiAgICAgIHNob3VsZEZvY3VzV3JhcDogKCkgPT4gYWNjZXNzKHByb3BzLnNob3VsZEZvY3VzV3JhcCksXG4gICAgICBkaXNhbGxvd0VtcHR5U2VsZWN0aW9uOiAoKSA9PiBhY2Nlc3MocHJvcHMuZGlzYWxsb3dFbXB0eVNlbGVjdGlvbiksXG4gICAgICBzZWxlY3RPbkZvY3VzOiAoKSA9PiBhY2Nlc3MocHJvcHMuc2VsZWN0T25Gb2N1cyksXG4gICAgICBkaXNhbGxvd1R5cGVBaGVhZDogKCkgPT4gYWNjZXNzKHByb3BzLmRpc2FsbG93VHlwZUFoZWFkKSxcbiAgICAgIHNob3VsZFVzZVZpcnR1YWxGb2N1czogKCkgPT4gYWNjZXNzKHByb3BzLnNob3VsZFVzZVZpcnR1YWxGb2N1cyksXG4gICAgICBhbGxvd3NUYWJOYXZpZ2F0aW9uOiAoKSA9PiBhY2Nlc3MocHJvcHMuYWxsb3dzVGFiTmF2aWdhdGlvbiksXG4gICAgICBpc1ZpcnR1YWxpemVkOiAoKSA9PiBhY2Nlc3MocHJvcHMuaXNWaXJ0dWFsaXplZCksXG4gICAgICBzY3JvbGxUb0tleTogKGtleSkgPT4gYWNjZXNzKHByb3BzLnNjcm9sbFRvS2V5KT8uKGtleSlcbiAgICB9LFxuICAgIHJlZixcbiAgICBzY3JvbGxSZWZcbiAgKTtcbn1cblxuLy8gLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL0Brb2JhbHRlK2NvcmVAMC4xMy4xX3NvbGlkLWpzQDEuOC4xNy9ub2RlX21vZHVsZXMvQGtvYmFsdGUvY29yZS9kaXN0L2NodW5rL0lTS0haTUhTLmpzXG52YXIgQVVUT0ZPQ1VTX09OX01PVU5UX0VWRU5UID0gXCJmb2N1c1Njb3BlLmF1dG9Gb2N1c09uTW91bnRcIjtcbnZhciBBVVRPRk9DVVNfT05fVU5NT1VOVF9FVkVOVCA9IFwiZm9jdXNTY29wZS5hdXRvRm9jdXNPblVubW91bnRcIjtcbnZhciBFVkVOVF9PUFRJT05TID0ge1xuICBidWJibGVzOiBmYWxzZSxcbiAgY2FuY2VsYWJsZTogdHJ1ZVxufTtcbnZhciBmb2N1c1Njb3BlU3RhY2sgPSB7XG4gIC8qKiBBIHN0YWNrIG9mIGZvY3VzIHNjb3Blcywgd2l0aCB0aGUgYWN0aXZlIG9uZSBhdCB0aGUgdG9wICovXG4gIHN0YWNrOiBbXSxcbiAgYWN0aXZlKCkge1xuICAgIHJldHVybiB0aGlzLnN0YWNrWzBdO1xuICB9LFxuICBhZGQoc2NvcGUpIHtcbiAgICBpZiAoc2NvcGUgIT09IHRoaXMuYWN0aXZlKCkpIHtcbiAgICAgIHRoaXMuYWN0aXZlKCk/LnBhdXNlKCk7XG4gICAgfVxuICAgIHRoaXMuc3RhY2sgPSByZW1vdmVJdGVtRnJvbUFycmF5KHRoaXMuc3RhY2ssIHNjb3BlKTtcbiAgICB0aGlzLnN0YWNrLnVuc2hpZnQoc2NvcGUpO1xuICB9LFxuICByZW1vdmUoc2NvcGUpIHtcbiAgICB0aGlzLnN0YWNrID0gcmVtb3ZlSXRlbUZyb21BcnJheSh0aGlzLnN0YWNrLCBzY29wZSk7XG4gICAgdGhpcy5hY3RpdmUoKT8ucmVzdW1lKCk7XG4gIH1cbn07XG5mdW5jdGlvbiBjcmVhdGVGb2N1c1Njb3BlKHByb3BzLCByZWYpIHtcbiAgY29uc3QgW2lzUGF1c2VkLCBzZXRJc1BhdXNlZF0gPSBjcmVhdGVTaWduYWwoZmFsc2UpO1xuICBjb25zdCBmb2N1c1Njb3BlID0ge1xuICAgIHBhdXNlKCkge1xuICAgICAgc2V0SXNQYXVzZWQodHJ1ZSk7XG4gICAgfSxcbiAgICByZXN1bWUoKSB7XG4gICAgICBzZXRJc1BhdXNlZChmYWxzZSk7XG4gICAgfVxuICB9O1xuICBsZXQgbGFzdEZvY3VzZWRFbGVtZW50ID0gbnVsbDtcbiAgY29uc3Qgb25Nb3VudEF1dG9Gb2N1cyA9IChlMikgPT4gcHJvcHMub25Nb3VudEF1dG9Gb2N1cz8uKGUyKTtcbiAgY29uc3Qgb25Vbm1vdW50QXV0b0ZvY3VzID0gKGUyKSA9PiBwcm9wcy5vblVubW91bnRBdXRvRm9jdXM/LihlMik7XG4gIGNvbnN0IG93bmVyRG9jdW1lbnQgPSAoKSA9PiBnZXREb2N1bWVudChyZWYoKSk7XG4gIGNvbnN0IGNyZWF0ZVNlbnRpbmVsID0gKCkgPT4ge1xuICAgIGNvbnN0IGVsZW1lbnQgPSBvd25lckRvY3VtZW50KCkuY3JlYXRlRWxlbWVudChcInNwYW5cIik7XG4gICAgZWxlbWVudC5zZXRBdHRyaWJ1dGUoXCJkYXRhLWZvY3VzLXRyYXBcIiwgXCJcIik7XG4gICAgZWxlbWVudC50YWJJbmRleCA9IDA7XG4gICAgT2JqZWN0LmFzc2lnbihlbGVtZW50LnN0eWxlLCB2aXN1YWxseUhpZGRlblN0eWxlcyk7XG4gICAgcmV0dXJuIGVsZW1lbnQ7XG4gIH07XG4gIGNvbnN0IHRhYmJhYmxlcyA9ICgpID0+IHtcbiAgICBjb25zdCBjb250YWluZXIgPSByZWYoKTtcbiAgICBpZiAoIWNvbnRhaW5lcikge1xuICAgICAgcmV0dXJuIFtdO1xuICAgIH1cbiAgICByZXR1cm4gZ2V0QWxsVGFiYmFibGVJbihjb250YWluZXIsIHRydWUpLmZpbHRlcigoZWwpID0+ICFlbC5oYXNBdHRyaWJ1dGUoXCJkYXRhLWZvY3VzLXRyYXBcIikpO1xuICB9O1xuICBjb25zdCBmaXJzdFRhYmJhYmxlID0gKCkgPT4ge1xuICAgIGNvbnN0IGl0ZW1zID0gdGFiYmFibGVzKCk7XG4gICAgcmV0dXJuIGl0ZW1zLmxlbmd0aCA+IDAgPyBpdGVtc1swXSA6IG51bGw7XG4gIH07XG4gIGNvbnN0IGxhc3RUYWJiYWJsZSA9ICgpID0+IHtcbiAgICBjb25zdCBpdGVtcyA9IHRhYmJhYmxlcygpO1xuICAgIHJldHVybiBpdGVtcy5sZW5ndGggPiAwID8gaXRlbXNbaXRlbXMubGVuZ3RoIC0gMV0gOiBudWxsO1xuICB9O1xuICBjb25zdCBzaG91bGRQcmV2ZW50VW5tb3VudEF1dG9Gb2N1cyA9ICgpID0+IHtcbiAgICBjb25zdCBjb250YWluZXIgPSByZWYoKTtcbiAgICBpZiAoIWNvbnRhaW5lcikge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICBjb25zdCBhY3RpdmVFbGVtZW50ID0gZ2V0QWN0aXZlRWxlbWVudChjb250YWluZXIpO1xuICAgIGlmICghYWN0aXZlRWxlbWVudCkge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICBpZiAoY29udGFpbnMoY29udGFpbmVyLCBhY3RpdmVFbGVtZW50KSkge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICByZXR1cm4gaXNGb2N1c2FibGUoYWN0aXZlRWxlbWVudCk7XG4gIH07XG4gIGNyZWF0ZUVmZmVjdCgoKSA9PiB7XG4gICAgaWYgKGlzU2VydmVyKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIGNvbnN0IGNvbnRhaW5lciA9IHJlZigpO1xuICAgIGlmICghY29udGFpbmVyKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIGZvY3VzU2NvcGVTdGFjay5hZGQoZm9jdXNTY29wZSk7XG4gICAgY29uc3QgcHJldmlvdXNseUZvY3VzZWRFbGVtZW50ID0gZ2V0QWN0aXZlRWxlbWVudChjb250YWluZXIpO1xuICAgIGNvbnN0IGhhc0ZvY3VzZWRDYW5kaWRhdGUgPSBjb250YWlucyhjb250YWluZXIsIHByZXZpb3VzbHlGb2N1c2VkRWxlbWVudCk7XG4gICAgaWYgKCFoYXNGb2N1c2VkQ2FuZGlkYXRlKSB7XG4gICAgICBjb25zdCBtb3VudEV2ZW50ID0gbmV3IEN1c3RvbUV2ZW50KEFVVE9GT0NVU19PTl9NT1VOVF9FVkVOVCwgRVZFTlRfT1BUSU9OUyk7XG4gICAgICBjb250YWluZXIuYWRkRXZlbnRMaXN0ZW5lcihBVVRPRk9DVVNfT05fTU9VTlRfRVZFTlQsIG9uTW91bnRBdXRvRm9jdXMpO1xuICAgICAgY29udGFpbmVyLmRpc3BhdGNoRXZlbnQobW91bnRFdmVudCk7XG4gICAgICBpZiAoIW1vdW50RXZlbnQuZGVmYXVsdFByZXZlbnRlZCkge1xuICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgICBmb2N1c1dpdGhvdXRTY3JvbGxpbmcoZmlyc3RUYWJiYWJsZSgpKTtcbiAgICAgICAgICBpZiAoZ2V0QWN0aXZlRWxlbWVudChjb250YWluZXIpID09PSBwcmV2aW91c2x5Rm9jdXNlZEVsZW1lbnQpIHtcbiAgICAgICAgICAgIGZvY3VzV2l0aG91dFNjcm9sbGluZyhjb250YWluZXIpO1xuICAgICAgICAgIH1cbiAgICAgICAgfSwgMCk7XG4gICAgICB9XG4gICAgfVxuICAgIG9uQ2xlYW51cCgoKSA9PiB7XG4gICAgICBjb250YWluZXIucmVtb3ZlRXZlbnRMaXN0ZW5lcihBVVRPRk9DVVNfT05fTU9VTlRfRVZFTlQsIG9uTW91bnRBdXRvRm9jdXMpO1xuICAgICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgIGNvbnN0IHVubW91bnRFdmVudCA9IG5ldyBDdXN0b21FdmVudChBVVRPRk9DVVNfT05fVU5NT1VOVF9FVkVOVCwgRVZFTlRfT1BUSU9OUyk7XG4gICAgICAgIGlmIChzaG91bGRQcmV2ZW50VW5tb3VudEF1dG9Gb2N1cygpKSB7XG4gICAgICAgICAgdW5tb3VudEV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgIH1cbiAgICAgICAgY29udGFpbmVyLmFkZEV2ZW50TGlzdGVuZXIoQVVUT0ZPQ1VTX09OX1VOTU9VTlRfRVZFTlQsIG9uVW5tb3VudEF1dG9Gb2N1cyk7XG4gICAgICAgIGNvbnRhaW5lci5kaXNwYXRjaEV2ZW50KHVubW91bnRFdmVudCk7XG4gICAgICAgIGlmICghdW5tb3VudEV2ZW50LmRlZmF1bHRQcmV2ZW50ZWQpIHtcbiAgICAgICAgICBmb2N1c1dpdGhvdXRTY3JvbGxpbmcocHJldmlvdXNseUZvY3VzZWRFbGVtZW50ID8/IG93bmVyRG9jdW1lbnQoKS5ib2R5KTtcbiAgICAgICAgfVxuICAgICAgICBjb250YWluZXIucmVtb3ZlRXZlbnRMaXN0ZW5lcihBVVRPRk9DVVNfT05fVU5NT1VOVF9FVkVOVCwgb25Vbm1vdW50QXV0b0ZvY3VzKTtcbiAgICAgICAgZm9jdXNTY29wZVN0YWNrLnJlbW92ZShmb2N1c1Njb3BlKTtcbiAgICAgIH0sIDApO1xuICAgIH0pO1xuICB9KTtcbiAgY3JlYXRlRWZmZWN0KCgpID0+IHtcbiAgICBpZiAoaXNTZXJ2ZXIpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgY29uc3QgY29udGFpbmVyID0gcmVmKCk7XG4gICAgaWYgKCFjb250YWluZXIgfHwgIWFjY2Vzcyhwcm9wcy50cmFwRm9jdXMpIHx8IGlzUGF1c2VkKCkpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgY29uc3Qgb25Gb2N1c0luID0gKGV2ZW50KSA9PiB7XG4gICAgICBjb25zdCB0YXJnZXQgPSBldmVudC50YXJnZXQ7XG4gICAgICBpZiAodGFyZ2V0Py5jbG9zZXN0KGBbJHtEQVRBX1RPUF9MQVlFUl9BVFRSfV1gKSkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICBpZiAoY29udGFpbnMoY29udGFpbmVyLCB0YXJnZXQpKSB7XG4gICAgICAgIGxhc3RGb2N1c2VkRWxlbWVudCA9IHRhcmdldDtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGZvY3VzV2l0aG91dFNjcm9sbGluZyhsYXN0Rm9jdXNlZEVsZW1lbnQpO1xuICAgICAgfVxuICAgIH07XG4gICAgY29uc3Qgb25Gb2N1c091dCA9IChldmVudCkgPT4ge1xuICAgICAgY29uc3QgcmVsYXRlZFRhcmdldCA9IGV2ZW50LnJlbGF0ZWRUYXJnZXQ7XG4gICAgICBjb25zdCB0YXJnZXQgPSByZWxhdGVkVGFyZ2V0ID8/IGdldEFjdGl2ZUVsZW1lbnQoY29udGFpbmVyKTtcbiAgICAgIGlmICh0YXJnZXQ/LmNsb3Nlc3QoYFske0RBVEFfVE9QX0xBWUVSX0FUVFJ9XWApKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICAgIGlmICghY29udGFpbnMoY29udGFpbmVyLCB0YXJnZXQpKSB7XG4gICAgICAgIGZvY3VzV2l0aG91dFNjcm9sbGluZyhsYXN0Rm9jdXNlZEVsZW1lbnQpO1xuICAgICAgfVxuICAgIH07XG4gICAgb3duZXJEb2N1bWVudCgpLmFkZEV2ZW50TGlzdGVuZXIoXCJmb2N1c2luXCIsIG9uRm9jdXNJbik7XG4gICAgb3duZXJEb2N1bWVudCgpLmFkZEV2ZW50TGlzdGVuZXIoXCJmb2N1c291dFwiLCBvbkZvY3VzT3V0KTtcbiAgICBvbkNsZWFudXAoKCkgPT4ge1xuICAgICAgb3duZXJEb2N1bWVudCgpLnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJmb2N1c2luXCIsIG9uRm9jdXNJbik7XG4gICAgICBvd25lckRvY3VtZW50KCkucmVtb3ZlRXZlbnRMaXN0ZW5lcihcImZvY3Vzb3V0XCIsIG9uRm9jdXNPdXQpO1xuICAgIH0pO1xuICB9KTtcbiAgY3JlYXRlRWZmZWN0KCgpID0+IHtcbiAgICBpZiAoaXNTZXJ2ZXIpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgY29uc3QgY29udGFpbmVyID0gcmVmKCk7XG4gICAgaWYgKCFjb250YWluZXIgfHwgIWFjY2Vzcyhwcm9wcy50cmFwRm9jdXMpIHx8IGlzUGF1c2VkKCkpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgY29uc3Qgc3RhcnRTZW50aW5lbCA9IGNyZWF0ZVNlbnRpbmVsKCk7XG4gICAgY29udGFpbmVyLmluc2VydEFkamFjZW50RWxlbWVudChcImFmdGVyYmVnaW5cIiwgc3RhcnRTZW50aW5lbCk7XG4gICAgY29uc3QgZW5kU2VudGluZWwgPSBjcmVhdGVTZW50aW5lbCgpO1xuICAgIGNvbnRhaW5lci5pbnNlcnRBZGphY2VudEVsZW1lbnQoXCJiZWZvcmVlbmRcIiwgZW5kU2VudGluZWwpO1xuICAgIGZ1bmN0aW9uIG9uRm9jdXMoZXZlbnQpIHtcbiAgICAgIGNvbnN0IGZpcnN0ID0gZmlyc3RUYWJiYWJsZSgpO1xuICAgICAgY29uc3QgbGFzdCA9IGxhc3RUYWJiYWJsZSgpO1xuICAgICAgaWYgKGV2ZW50LnJlbGF0ZWRUYXJnZXQgPT09IGZpcnN0KSB7XG4gICAgICAgIGZvY3VzV2l0aG91dFNjcm9sbGluZyhsYXN0KTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGZvY3VzV2l0aG91dFNjcm9sbGluZyhmaXJzdCk7XG4gICAgICB9XG4gICAgfVxuICAgIHN0YXJ0U2VudGluZWwuYWRkRXZlbnRMaXN0ZW5lcihcImZvY3VzaW5cIiwgb25Gb2N1cyk7XG4gICAgZW5kU2VudGluZWwuYWRkRXZlbnRMaXN0ZW5lcihcImZvY3VzaW5cIiwgb25Gb2N1cyk7XG4gICAgY29uc3Qgb2JzZXJ2ZXIgPSBuZXcgTXV0YXRpb25PYnNlcnZlcigobXV0YXRpb25zKSA9PiB7XG4gICAgICBmb3IgKGNvbnN0IG11dGF0aW9uIG9mIG11dGF0aW9ucykge1xuICAgICAgICBpZiAobXV0YXRpb24ucHJldmlvdXNTaWJsaW5nID09PSBlbmRTZW50aW5lbCkge1xuICAgICAgICAgIGVuZFNlbnRpbmVsLnJlbW92ZSgpO1xuICAgICAgICAgIGNvbnRhaW5lci5pbnNlcnRBZGphY2VudEVsZW1lbnQoXCJiZWZvcmVlbmRcIiwgZW5kU2VudGluZWwpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChtdXRhdGlvbi5uZXh0U2libGluZyA9PT0gc3RhcnRTZW50aW5lbCkge1xuICAgICAgICAgIHN0YXJ0U2VudGluZWwucmVtb3ZlKCk7XG4gICAgICAgICAgY29udGFpbmVyLmluc2VydEFkamFjZW50RWxlbWVudChcImFmdGVyYmVnaW5cIiwgc3RhcnRTZW50aW5lbCk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9KTtcbiAgICBvYnNlcnZlci5vYnNlcnZlKGNvbnRhaW5lciwge1xuICAgICAgY2hpbGRMaXN0OiB0cnVlLFxuICAgICAgc3VidHJlZTogZmFsc2VcbiAgICB9KTtcbiAgICBvbkNsZWFudXAoKCkgPT4ge1xuICAgICAgc3RhcnRTZW50aW5lbC5yZW1vdmVFdmVudExpc3RlbmVyKFwiZm9jdXNpblwiLCBvbkZvY3VzKTtcbiAgICAgIGVuZFNlbnRpbmVsLnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJmb2N1c2luXCIsIG9uRm9jdXMpO1xuICAgICAgc3RhcnRTZW50aW5lbC5yZW1vdmUoKTtcbiAgICAgIGVuZFNlbnRpbmVsLnJlbW92ZSgpO1xuICAgICAgb2JzZXJ2ZXIuZGlzY29ubmVjdCgpO1xuICAgIH0pO1xuICB9KTtcbn1cblxuLy8gLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL0Brb2JhbHRlK2NvcmVAMC4xMy4xX3NvbGlkLWpzQDEuOC4xNy9ub2RlX21vZHVsZXMvQGtvYmFsdGUvY29yZS9kaXN0L2NodW5rL1lBN0RDWU1CLmpzXG52YXIgREFUQV9MSVZFX0FOTk9VTkNFUl9BVFRSID0gXCJkYXRhLWxpdmUtYW5ub3VuY2VyXCI7XG5cbi8vIC4uLy4uL25vZGVfbW9kdWxlcy8ucG5wbS9Aa29iYWx0ZStjb3JlQDAuMTMuMV9zb2xpZC1qc0AxLjguMTcvbm9kZV9tb2R1bGVzL0Brb2JhbHRlL2NvcmUvZGlzdC9jaHVuay9UWkdFMkFRSC5qc1xuZnVuY3Rpb24gY3JlYXRlSGlkZU91dHNpZGUocHJvcHMpIHtcbiAgY3JlYXRlRWZmZWN0KCgpID0+IHtcbiAgICBpZiAoYWNjZXNzKHByb3BzLmlzRGlzYWJsZWQpKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIG9uQ2xlYW51cChhcmlhSGlkZU91dHNpZGUoYWNjZXNzKHByb3BzLnRhcmdldHMpLCBhY2Nlc3MocHJvcHMucm9vdCkpKTtcbiAgfSk7XG59XG52YXIgcmVmQ291bnRNYXAgPSAvKiBAX19QVVJFX18gKi8gbmV3IFdlYWtNYXAoKTtcbnZhciBvYnNlcnZlclN0YWNrID0gW107XG5mdW5jdGlvbiBhcmlhSGlkZU91dHNpZGUodGFyZ2V0cywgcm9vdCA9IGRvY3VtZW50LmJvZHkpIHtcbiAgY29uc3QgdmlzaWJsZU5vZGVzID0gbmV3IFNldCh0YXJnZXRzKTtcbiAgY29uc3QgaGlkZGVuTm9kZXMgPSAvKiBAX19QVVJFX18gKi8gbmV3IFNldCgpO1xuICBjb25zdCB3YWxrID0gKHJvb3QyKSA9PiB7XG4gICAgZm9yIChjb25zdCBlbGVtZW50IG9mIHJvb3QyLnF1ZXJ5U2VsZWN0b3JBbGwoXG4gICAgICBgWyR7REFUQV9MSVZFX0FOTk9VTkNFUl9BVFRSfV0sIFske0RBVEFfVE9QX0xBWUVSX0FUVFJ9XWBcbiAgICApKSB7XG4gICAgICB2aXNpYmxlTm9kZXMuYWRkKGVsZW1lbnQpO1xuICAgIH1cbiAgICBjb25zdCBhY2NlcHROb2RlID0gKG5vZGUpID0+IHtcbiAgICAgIGlmICh2aXNpYmxlTm9kZXMuaGFzKG5vZGUpIHx8IG5vZGUucGFyZW50RWxlbWVudCAmJiBoaWRkZW5Ob2Rlcy5oYXMobm9kZS5wYXJlbnRFbGVtZW50KSAmJiBub2RlLnBhcmVudEVsZW1lbnQuZ2V0QXR0cmlidXRlKFwicm9sZVwiKSAhPT0gXCJyb3dcIikge1xuICAgICAgICByZXR1cm4gTm9kZUZpbHRlci5GSUxURVJfUkVKRUNUO1xuICAgICAgfVxuICAgICAgZm9yIChjb25zdCB0YXJnZXQgb2YgdmlzaWJsZU5vZGVzKSB7XG4gICAgICAgIGlmIChub2RlLmNvbnRhaW5zKHRhcmdldCkpIHtcbiAgICAgICAgICByZXR1cm4gTm9kZUZpbHRlci5GSUxURVJfU0tJUDtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgcmV0dXJuIE5vZGVGaWx0ZXIuRklMVEVSX0FDQ0VQVDtcbiAgICB9O1xuICAgIGNvbnN0IHdhbGtlciA9IGRvY3VtZW50LmNyZWF0ZVRyZWVXYWxrZXIocm9vdDIsIE5vZGVGaWx0ZXIuU0hPV19FTEVNRU5ULCB7XG4gICAgICBhY2NlcHROb2RlXG4gICAgfSk7XG4gICAgY29uc3QgYWNjZXB0Um9vdCA9IGFjY2VwdE5vZGUocm9vdDIpO1xuICAgIGlmIChhY2NlcHRSb290ID09PSBOb2RlRmlsdGVyLkZJTFRFUl9BQ0NFUFQpIHtcbiAgICAgIGhpZGUzKHJvb3QyKTtcbiAgICB9XG4gICAgaWYgKGFjY2VwdFJvb3QgIT09IE5vZGVGaWx0ZXIuRklMVEVSX1JFSkVDVCkge1xuICAgICAgbGV0IG5vZGUgPSB3YWxrZXIubmV4dE5vZGUoKTtcbiAgICAgIHdoaWxlIChub2RlICE9IG51bGwpIHtcbiAgICAgICAgaGlkZTMobm9kZSk7XG4gICAgICAgIG5vZGUgPSB3YWxrZXIubmV4dE5vZGUoKTtcbiAgICAgIH1cbiAgICB9XG4gIH07XG4gIGNvbnN0IGhpZGUzID0gKG5vZGUpID0+IHtcbiAgICBjb25zdCByZWZDb3VudCA9IHJlZkNvdW50TWFwLmdldChub2RlKSA/PyAwO1xuICAgIGlmIChub2RlLmdldEF0dHJpYnV0ZShcImFyaWEtaGlkZGVuXCIpID09PSBcInRydWVcIiAmJiByZWZDb3VudCA9PT0gMCkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBpZiAocmVmQ291bnQgPT09IDApIHtcbiAgICAgIG5vZGUuc2V0QXR0cmlidXRlKFwiYXJpYS1oaWRkZW5cIiwgXCJ0cnVlXCIpO1xuICAgIH1cbiAgICBoaWRkZW5Ob2Rlcy5hZGQobm9kZSk7XG4gICAgcmVmQ291bnRNYXAuc2V0KG5vZGUsIHJlZkNvdW50ICsgMSk7XG4gIH07XG4gIGlmIChvYnNlcnZlclN0YWNrLmxlbmd0aCkge1xuICAgIG9ic2VydmVyU3RhY2tbb2JzZXJ2ZXJTdGFjay5sZW5ndGggLSAxXS5kaXNjb25uZWN0KCk7XG4gIH1cbiAgd2Fsayhyb290KTtcbiAgY29uc3Qgb2JzZXJ2ZXIgPSBuZXcgTXV0YXRpb25PYnNlcnZlcigoY2hhbmdlcykgPT4ge1xuICAgIGZvciAoY29uc3QgY2hhbmdlIG9mIGNoYW5nZXMpIHtcbiAgICAgIGlmIChjaGFuZ2UudHlwZSAhPT0gXCJjaGlsZExpc3RcIiB8fCBjaGFuZ2UuYWRkZWROb2Rlcy5sZW5ndGggPT09IDApIHtcbiAgICAgICAgY29udGludWU7XG4gICAgICB9XG4gICAgICBpZiAoIVsuLi52aXNpYmxlTm9kZXMsIC4uLmhpZGRlbk5vZGVzXS5zb21lKFxuICAgICAgICAobm9kZSkgPT4gbm9kZS5jb250YWlucyhjaGFuZ2UudGFyZ2V0KVxuICAgICAgKSkge1xuICAgICAgICBmb3IgKGNvbnN0IG5vZGUgb2YgY2hhbmdlLnJlbW92ZWROb2Rlcykge1xuICAgICAgICAgIGlmIChub2RlIGluc3RhbmNlb2YgRWxlbWVudCkge1xuICAgICAgICAgICAgdmlzaWJsZU5vZGVzLmRlbGV0ZShub2RlKTtcbiAgICAgICAgICAgIGhpZGRlbk5vZGVzLmRlbGV0ZShub2RlKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgZm9yIChjb25zdCBub2RlIG9mIGNoYW5nZS5hZGRlZE5vZGVzKSB7XG4gICAgICAgICAgaWYgKChub2RlIGluc3RhbmNlb2YgSFRNTEVsZW1lbnQgfHwgbm9kZSBpbnN0YW5jZW9mIFNWR0VsZW1lbnQpICYmIChub2RlLmRhdGFzZXQubGl2ZUFubm91bmNlciA9PT0gXCJ0cnVlXCIgfHwgbm9kZS5kYXRhc2V0LnJlYWN0QXJpYVRvcExheWVyID09PSBcInRydWVcIikpIHtcbiAgICAgICAgICAgIHZpc2libGVOb2Rlcy5hZGQobm9kZSk7XG4gICAgICAgICAgfSBlbHNlIGlmIChub2RlIGluc3RhbmNlb2YgRWxlbWVudCkge1xuICAgICAgICAgICAgd2Fsayhub2RlKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH0pO1xuICBvYnNlcnZlci5vYnNlcnZlKHJvb3QsIHsgY2hpbGRMaXN0OiB0cnVlLCBzdWJ0cmVlOiB0cnVlIH0pO1xuICBjb25zdCBvYnNlcnZlcldyYXBwZXIgPSB7XG4gICAgb2JzZXJ2ZSgpIHtcbiAgICAgIG9ic2VydmVyLm9ic2VydmUocm9vdCwgeyBjaGlsZExpc3Q6IHRydWUsIHN1YnRyZWU6IHRydWUgfSk7XG4gICAgfSxcbiAgICBkaXNjb25uZWN0KCkge1xuICAgICAgb2JzZXJ2ZXIuZGlzY29ubmVjdCgpO1xuICAgIH1cbiAgfTtcbiAgb2JzZXJ2ZXJTdGFjay5wdXNoKG9ic2VydmVyV3JhcHBlcik7XG4gIHJldHVybiAoKSA9PiB7XG4gICAgb2JzZXJ2ZXIuZGlzY29ubmVjdCgpO1xuICAgIGZvciAoY29uc3Qgbm9kZSBvZiBoaWRkZW5Ob2Rlcykge1xuICAgICAgY29uc3QgY291bnQgPSByZWZDb3VudE1hcC5nZXQobm9kZSk7XG4gICAgICBpZiAoY291bnQgPT0gbnVsbCkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICBpZiAoY291bnQgPT09IDEpIHtcbiAgICAgICAgbm9kZS5yZW1vdmVBdHRyaWJ1dGUoXCJhcmlhLWhpZGRlblwiKTtcbiAgICAgICAgcmVmQ291bnRNYXAuZGVsZXRlKG5vZGUpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmVmQ291bnRNYXAuc2V0KG5vZGUsIGNvdW50IC0gMSk7XG4gICAgICB9XG4gICAgfVxuICAgIGlmIChvYnNlcnZlcldyYXBwZXIgPT09IG9ic2VydmVyU3RhY2tbb2JzZXJ2ZXJTdGFjay5sZW5ndGggLSAxXSkge1xuICAgICAgb2JzZXJ2ZXJTdGFjay5wb3AoKTtcbiAgICAgIGlmIChvYnNlcnZlclN0YWNrLmxlbmd0aCkge1xuICAgICAgICBvYnNlcnZlclN0YWNrW29ic2VydmVyU3RhY2subGVuZ3RoIC0gMV0ub2JzZXJ2ZSgpO1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICBvYnNlcnZlclN0YWNrLnNwbGljZShvYnNlcnZlclN0YWNrLmluZGV4T2Yob2JzZXJ2ZXJXcmFwcGVyKSwgMSk7XG4gICAgfVxuICB9O1xufVxuXG4vLyAuLi8uLi9ub2RlX21vZHVsZXMvLnBucG0vQGNvcnZ1K3V0aWxzQDAuMi4wX3NvbGlkLWpzQDEuOC4xNy9ub2RlX21vZHVsZXMvQGNvcnZ1L3V0aWxzL2Rpc3QvY2h1bmsvT1pDSTRORE4uanNcbnZhciBhY2Nlc3MyID0gKHYpID0+IHR5cGVvZiB2ID09PSBcImZ1bmN0aW9uXCIgPyB2KCkgOiB2O1xuXG4vLyAuLi8uLi9ub2RlX21vZHVsZXMvLnBucG0vQGNvcnZ1K3V0aWxzQDAuMi4wX3NvbGlkLWpzQDEuOC4xNy9ub2RlX21vZHVsZXMvQGNvcnZ1L3V0aWxzL2Rpc3QvY2h1bmsvNlBZVUtTV1EuanNcbnZhciBhY3RpdmVTdHlsZXMgPSAvKiBAX19QVVJFX18gKi8gbmV3IE1hcCgpO1xudmFyIGNyZWF0ZVN0eWxlID0gKHByb3BzKSA9PiB7XG4gIGNyZWF0ZUVmZmVjdCgoKSA9PiB7XG4gICAgY29uc3Qgc3R5bGUgPSBhY2Nlc3MyKHByb3BzLnN0eWxlKSA/PyB7fTtcbiAgICBjb25zdCBwcm9wZXJ0aWVzID0gYWNjZXNzMihwcm9wcy5wcm9wZXJ0aWVzKSA/PyBbXTtcbiAgICBjb25zdCBvcmlnaW5hbFN0eWxlcyA9IHt9O1xuICAgIGZvciAoY29uc3Qga2V5IGluIHN0eWxlKSB7XG4gICAgICBvcmlnaW5hbFN0eWxlc1trZXldID0gcHJvcHMuZWxlbWVudC5zdHlsZVtrZXldO1xuICAgIH1cbiAgICBjb25zdCBhY3RpdmVTdHlsZSA9IGFjdGl2ZVN0eWxlcy5nZXQocHJvcHMua2V5KTtcbiAgICBpZiAoYWN0aXZlU3R5bGUpIHtcbiAgICAgIGFjdGl2ZVN0eWxlLmFjdGl2ZUNvdW50Kys7XG4gICAgfSBlbHNlIHtcbiAgICAgIGFjdGl2ZVN0eWxlcy5zZXQocHJvcHMua2V5LCB7XG4gICAgICAgIGFjdGl2ZUNvdW50OiAxLFxuICAgICAgICBvcmlnaW5hbFN0eWxlcyxcbiAgICAgICAgcHJvcGVydGllczogcHJvcGVydGllcy5tYXAoKHByb3BlcnR5KSA9PiBwcm9wZXJ0eS5rZXkpXG4gICAgICB9KTtcbiAgICB9XG4gICAgT2JqZWN0LmFzc2lnbihwcm9wcy5lbGVtZW50LnN0eWxlLCBwcm9wcy5zdHlsZSk7XG4gICAgZm9yIChjb25zdCBwcm9wZXJ0eSBvZiBwcm9wZXJ0aWVzKSB7XG4gICAgICBwcm9wcy5lbGVtZW50LnN0eWxlLnNldFByb3BlcnR5KHByb3BlcnR5LmtleSwgcHJvcGVydHkudmFsdWUpO1xuICAgIH1cbiAgICBvbkNsZWFudXAoKCkgPT4ge1xuICAgICAgY29uc3QgYWN0aXZlU3R5bGUyID0gYWN0aXZlU3R5bGVzLmdldChwcm9wcy5rZXkpO1xuICAgICAgaWYgKCFhY3RpdmVTdHlsZTIpXG4gICAgICAgIHJldHVybjtcbiAgICAgIGlmIChhY3RpdmVTdHlsZTIuYWN0aXZlQ291bnQgIT09IDEpIHtcbiAgICAgICAgYWN0aXZlU3R5bGUyLmFjdGl2ZUNvdW50LS07XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICAgIGFjdGl2ZVN0eWxlcy5kZWxldGUocHJvcHMua2V5KTtcbiAgICAgIGZvciAoY29uc3QgW2tleSwgdmFsdWVdIG9mIE9iamVjdC5lbnRyaWVzKGFjdGl2ZVN0eWxlMi5vcmlnaW5hbFN0eWxlcykpIHtcbiAgICAgICAgcHJvcHMuZWxlbWVudC5zdHlsZVtrZXldID0gdmFsdWU7XG4gICAgICB9XG4gICAgICBmb3IgKGNvbnN0IHByb3BlcnR5IG9mIGFjdGl2ZVN0eWxlMi5wcm9wZXJ0aWVzKSB7XG4gICAgICAgIHByb3BzLmVsZW1lbnQuc3R5bGUucmVtb3ZlUHJvcGVydHkocHJvcGVydHkpO1xuICAgICAgfVxuICAgICAgaWYgKHByb3BzLmVsZW1lbnQuc3R5bGUubGVuZ3RoID09PSAwKSB7XG4gICAgICAgIHByb3BzLmVsZW1lbnQucmVtb3ZlQXR0cmlidXRlKFwic3R5bGVcIik7XG4gICAgICB9XG4gICAgICBwcm9wcy5jbGVhbnVwPy4oKTtcbiAgICB9KTtcbiAgfSk7XG59O1xudmFyIHN0eWxlX2RlZmF1bHQgPSBjcmVhdGVTdHlsZTtcblxuLy8gLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL0Bjb3J2dSt1dGlsc0AwLjIuMF9zb2xpZC1qc0AxLjguMTcvbm9kZV9tb2R1bGVzL0Bjb3J2dS91dGlscy9kaXN0L3Njcm9sbC9pbmRleC5qc1xudmFyIGdldFNjcm9sbERpbWVuc2lvbnMgPSAoZWxlbWVudCwgYXhpcykgPT4ge1xuICBzd2l0Y2ggKGF4aXMpIHtcbiAgICBjYXNlIFwieFwiOlxuICAgICAgcmV0dXJuIFtlbGVtZW50LmNsaWVudFdpZHRoLCBlbGVtZW50LnNjcm9sbExlZnQsIGVsZW1lbnQuc2Nyb2xsV2lkdGhdO1xuICAgIGNhc2UgXCJ5XCI6XG4gICAgICByZXR1cm4gW2VsZW1lbnQuY2xpZW50SGVpZ2h0LCBlbGVtZW50LnNjcm9sbFRvcCwgZWxlbWVudC5zY3JvbGxIZWlnaHRdO1xuICB9XG59O1xudmFyIGlzU2Nyb2xsQ29udGFpbmVyID0gKGVsZW1lbnQsIGF4aXMpID0+IHtcbiAgY29uc3Qgc3R5bGVzID0gZ2V0Q29tcHV0ZWRTdHlsZShlbGVtZW50KTtcbiAgY29uc3Qgb3ZlcmZsb3cgPSBheGlzID09PSBcInhcIiA/IHN0eWxlcy5vdmVyZmxvd1ggOiBzdHlsZXMub3ZlcmZsb3dZO1xuICByZXR1cm4gb3ZlcmZsb3cgPT09IFwiYXV0b1wiIHx8IG92ZXJmbG93ID09PSBcInNjcm9sbFwiIHx8IC8vIFRoZSBIVE1MIGVsZW1lbnQgaXMgYSBzY3JvbGwgY29udGFpbmVyIGlmIGl0IGhhcyBvdmVyZmxvdyB2aXNpYmxlXG4gIGVsZW1lbnQudGFnTmFtZSA9PT0gXCJIVE1MXCIgJiYgb3ZlcmZsb3cgPT09IFwidmlzaWJsZVwiO1xufTtcbnZhciBnZXRTY3JvbGxBdExvY2F0aW9uID0gKGxvY2F0aW9uLCBheGlzLCBzdG9wQXQpID0+IHtcbiAgY29uc3QgZGlyZWN0aW9uRmFjdG9yID0gYXhpcyA9PT0gXCJ4XCIgJiYgd2luZG93LmdldENvbXB1dGVkU3R5bGUobG9jYXRpb24pLmRpcmVjdGlvbiA9PT0gXCJydGxcIiA/IC0xIDogMTtcbiAgbGV0IGN1cnJlbnRFbGVtZW50ID0gbG9jYXRpb247XG4gIGxldCBhdmFpbGFibGVTY3JvbGwgPSAwO1xuICBsZXQgYXZhaWxhYmxlU2Nyb2xsVG9wID0gMDtcbiAgbGV0IHdyYXBwZXJSZWFjaGVkID0gZmFsc2U7XG4gIGRvIHtcbiAgICBjb25zdCBbY2xpZW50U2l6ZSwgc2Nyb2xsT2Zmc2V0LCBzY3JvbGxTaXplXSA9IGdldFNjcm9sbERpbWVuc2lvbnMoXG4gICAgICBjdXJyZW50RWxlbWVudCxcbiAgICAgIGF4aXNcbiAgICApO1xuICAgIGNvbnN0IHNjcm9sbGVkID0gc2Nyb2xsU2l6ZSAtIGNsaWVudFNpemUgLSBkaXJlY3Rpb25GYWN0b3IgKiBzY3JvbGxPZmZzZXQ7XG4gICAgaWYgKChzY3JvbGxPZmZzZXQgIT09IDAgfHwgc2Nyb2xsZWQgIT09IDApICYmIGlzU2Nyb2xsQ29udGFpbmVyKGN1cnJlbnRFbGVtZW50LCBheGlzKSkge1xuICAgICAgYXZhaWxhYmxlU2Nyb2xsICs9IHNjcm9sbGVkO1xuICAgICAgYXZhaWxhYmxlU2Nyb2xsVG9wICs9IHNjcm9sbE9mZnNldDtcbiAgICB9XG4gICAgaWYgKGN1cnJlbnRFbGVtZW50ID09PSAoc3RvcEF0ID8/IGRvY3VtZW50LmRvY3VtZW50RWxlbWVudCkpIHtcbiAgICAgIHdyYXBwZXJSZWFjaGVkID0gdHJ1ZTtcbiAgICB9IGVsc2Uge1xuICAgICAgY3VycmVudEVsZW1lbnQgPSBjdXJyZW50RWxlbWVudC5fJGhvc3QgPz8gY3VycmVudEVsZW1lbnQucGFyZW50RWxlbWVudDtcbiAgICB9XG4gIH0gd2hpbGUgKGN1cnJlbnRFbGVtZW50ICYmICF3cmFwcGVyUmVhY2hlZCk7XG4gIHJldHVybiBbYXZhaWxhYmxlU2Nyb2xsLCBhdmFpbGFibGVTY3JvbGxUb3BdO1xufTtcblxuLy8gLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL3NvbGlkLXByZXZlbnQtc2Nyb2xsQDAuMS43X3NvbGlkLWpzQDEuOC4xNy9ub2RlX21vZHVsZXMvc29saWQtcHJldmVudC1zY3JvbGwvZGlzdC9pbmRleC5qc1xudmFyIFtwcmV2ZW50U2Nyb2xsU3RhY2ssIHNldFByZXZlbnRTY3JvbGxTdGFja10gPSBjcmVhdGVTaWduYWwoW10pO1xudmFyIGlzQWN0aXZlID0gKGlkKSA9PiBwcmV2ZW50U2Nyb2xsU3RhY2soKS5pbmRleE9mKGlkKSA9PT0gcHJldmVudFNjcm9sbFN0YWNrKCkubGVuZ3RoIC0gMTtcbnZhciBjcmVhdGVQcmV2ZW50U2Nyb2xsID0gKHByb3BzKSA9PiB7XG4gIGNvbnN0IGRlZmF1bHRlZFByb3BzID0gbWVyZ2VQcm9wcyhcbiAgICB7XG4gICAgICBlbGVtZW50OiBudWxsLFxuICAgICAgZW5hYmxlZDogdHJ1ZSxcbiAgICAgIGhpZGVTY3JvbGxiYXI6IHRydWUsXG4gICAgICBwcmV2ZW50U2Nyb2xsYmFyU2hpZnQ6IHRydWUsXG4gICAgICBwcmV2ZW50U2Nyb2xsYmFyU2hpZnRNb2RlOiBcInBhZGRpbmdcIixcbiAgICAgIGFsbG93UGluY2hab29tOiBmYWxzZVxuICAgIH0sXG4gICAgcHJvcHNcbiAgKTtcbiAgY29uc3QgcHJldmVudFNjcm9sbElkID0gY3JlYXRlVW5pcXVlSWQoKTtcbiAgbGV0IGN1cnJlbnRUb3VjaFN0YXJ0ID0gWzAsIDBdO1xuICBsZXQgY3VycmVudFRvdWNoU3RhcnRBeGlzID0gbnVsbDtcbiAgbGV0IGN1cnJlbnRUb3VjaFN0YXJ0RGVsdGEgPSBudWxsO1xuICBjcmVhdGVFZmZlY3QoKCkgPT4ge1xuICAgIGlmICghYWNjZXNzMihkZWZhdWx0ZWRQcm9wcy5lbmFibGVkKSlcbiAgICAgIHJldHVybjtcbiAgICBzZXRQcmV2ZW50U2Nyb2xsU3RhY2soKHN0YWNrKSA9PiBbLi4uc3RhY2ssIHByZXZlbnRTY3JvbGxJZF0pO1xuICAgIG9uQ2xlYW51cCgoKSA9PiB7XG4gICAgICBzZXRQcmV2ZW50U2Nyb2xsU3RhY2soXG4gICAgICAgIChzdGFjaykgPT4gc3RhY2suZmlsdGVyKChpZCkgPT4gaWQgIT09IHByZXZlbnRTY3JvbGxJZClcbiAgICAgICk7XG4gICAgfSk7XG4gIH0pO1xuICBjcmVhdGVFZmZlY3QoKCkgPT4ge1xuICAgIGlmICghYWNjZXNzMihkZWZhdWx0ZWRQcm9wcy5lbmFibGVkKSB8fCAhYWNjZXNzMihkZWZhdWx0ZWRQcm9wcy5oaWRlU2Nyb2xsYmFyKSlcbiAgICAgIHJldHVybjtcbiAgICBjb25zdCB7IGJvZHkgfSA9IGRvY3VtZW50O1xuICAgIGNvbnN0IHNjcm9sbGJhcldpZHRoID0gd2luZG93LmlubmVyV2lkdGggLSBib2R5Lm9mZnNldFdpZHRoO1xuICAgIHN0eWxlX2RlZmF1bHQoe1xuICAgICAga2V5OiBcInByZXZlbnQtc2Nyb2xsLW92ZXJmbG93XCIsXG4gICAgICBlbGVtZW50OiBib2R5LFxuICAgICAgc3R5bGU6IHtcbiAgICAgICAgb3ZlcmZsb3c6IFwiaGlkZGVuXCJcbiAgICAgIH1cbiAgICB9KTtcbiAgICBpZiAoYWNjZXNzMihkZWZhdWx0ZWRQcm9wcy5wcmV2ZW50U2Nyb2xsYmFyU2hpZnQpKSB7XG4gICAgICBjb25zdCBzdHlsZSA9IHt9O1xuICAgICAgY29uc3QgcHJvcGVydGllcyA9IFtdO1xuICAgICAgaWYgKHNjcm9sbGJhcldpZHRoID4gMCkge1xuICAgICAgICBpZiAoYWNjZXNzMihkZWZhdWx0ZWRQcm9wcy5wcmV2ZW50U2Nyb2xsYmFyU2hpZnRNb2RlKSA9PT0gXCJwYWRkaW5nXCIpIHtcbiAgICAgICAgICBzdHlsZS5wYWRkaW5nUmlnaHQgPSBgY2FsYygke3dpbmRvdy5nZXRDb21wdXRlZFN0eWxlKGJvZHkpLnBhZGRpbmdSaWdodH0gKyAke3Njcm9sbGJhcldpZHRofXB4KWA7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgc3R5bGUubWFyZ2luUmlnaHQgPSBgY2FsYygke3dpbmRvdy5nZXRDb21wdXRlZFN0eWxlKGJvZHkpLm1hcmdpblJpZ2h0fSArICR7c2Nyb2xsYmFyV2lkdGh9cHgpYDtcbiAgICAgICAgfVxuICAgICAgICBwcm9wZXJ0aWVzLnB1c2goe1xuICAgICAgICAgIGtleTogXCItLXNjcm9sbGJhci13aWR0aFwiLFxuICAgICAgICAgIHZhbHVlOiBgJHtzY3JvbGxiYXJXaWR0aH1weGBcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgICBjb25zdCBvZmZzZXRUb3AgPSB3aW5kb3cuc2Nyb2xsWTtcbiAgICAgIGNvbnN0IG9mZnNldExlZnQgPSB3aW5kb3cuc2Nyb2xsWDtcbiAgICAgIHN0eWxlX2RlZmF1bHQoe1xuICAgICAgICBrZXk6IFwicHJldmVudC1zY3JvbGwtc2Nyb2xsYmFyXCIsXG4gICAgICAgIGVsZW1lbnQ6IGJvZHksXG4gICAgICAgIHN0eWxlLFxuICAgICAgICBwcm9wZXJ0aWVzLFxuICAgICAgICBjbGVhbnVwOiAoKSA9PiB7XG4gICAgICAgICAgaWYgKHNjcm9sbGJhcldpZHRoID4gMCkge1xuICAgICAgICAgICAgd2luZG93LnNjcm9sbFRvKG9mZnNldExlZnQsIG9mZnNldFRvcCk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9XG4gIH0pO1xuICBjcmVhdGVFZmZlY3QoKCkgPT4ge1xuICAgIGlmICghaXNBY3RpdmUocHJldmVudFNjcm9sbElkKSB8fCAhYWNjZXNzMihkZWZhdWx0ZWRQcm9wcy5lbmFibGVkKSlcbiAgICAgIHJldHVybjtcbiAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwid2hlZWxcIiwgbWF5YmVQcmV2ZW50V2hlZWwsIHtcbiAgICAgIHBhc3NpdmU6IGZhbHNlXG4gICAgfSk7XG4gICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcInRvdWNoc3RhcnRcIiwgbG9nVG91Y2hTdGFydCwge1xuICAgICAgcGFzc2l2ZTogZmFsc2VcbiAgICB9KTtcbiAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwidG91Y2htb3ZlXCIsIG1heWJlUHJldmVudFRvdWNoLCB7XG4gICAgICBwYXNzaXZlOiBmYWxzZVxuICAgIH0pO1xuICAgIG9uQ2xlYW51cCgoKSA9PiB7XG4gICAgICBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKFwid2hlZWxcIiwgbWF5YmVQcmV2ZW50V2hlZWwpO1xuICAgICAgZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcihcInRvdWNoc3RhcnRcIiwgbG9nVG91Y2hTdGFydCk7XG4gICAgICBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKFwidG91Y2htb3ZlXCIsIG1heWJlUHJldmVudFRvdWNoKTtcbiAgICB9KTtcbiAgfSk7XG4gIGNvbnN0IGxvZ1RvdWNoU3RhcnQgPSAoZXZlbnQpID0+IHtcbiAgICBjdXJyZW50VG91Y2hTdGFydCA9IGdldFRvdWNoWFkoZXZlbnQpO1xuICAgIGN1cnJlbnRUb3VjaFN0YXJ0QXhpcyA9IG51bGw7XG4gICAgY3VycmVudFRvdWNoU3RhcnREZWx0YSA9IG51bGw7XG4gIH07XG4gIGNvbnN0IG1heWJlUHJldmVudFdoZWVsID0gKGV2ZW50KSA9PiB7XG4gICAgY29uc3QgdGFyZ2V0ID0gZXZlbnQudGFyZ2V0O1xuICAgIGNvbnN0IHdyYXBwZXIgPSBhY2Nlc3MyKGRlZmF1bHRlZFByb3BzLmVsZW1lbnQpO1xuICAgIGNvbnN0IGRlbHRhID0gZ2V0RGVsdGFYWShldmVudCk7XG4gICAgY29uc3QgYXhpcyA9IE1hdGguYWJzKGRlbHRhWzBdKSA+IE1hdGguYWJzKGRlbHRhWzFdKSA/IFwieFwiIDogXCJ5XCI7XG4gICAgY29uc3QgYXhpc0RlbHRhID0gYXhpcyA9PT0gXCJ4XCIgPyBkZWx0YVswXSA6IGRlbHRhWzFdO1xuICAgIGNvbnN0IHJlc3VsdHNJblNjcm9sbCA9IHdvdWxkU2Nyb2xsKHRhcmdldCwgYXhpcywgYXhpc0RlbHRhLCB3cmFwcGVyKTtcbiAgICBsZXQgc2hvdWxkQ2FuY2VsO1xuICAgIGlmICh3cmFwcGVyICYmIGNvbnRhaW5zMih3cmFwcGVyLCB0YXJnZXQpKSB7XG4gICAgICBzaG91bGRDYW5jZWwgPSAhcmVzdWx0c0luU2Nyb2xsO1xuICAgIH0gZWxzZSB7XG4gICAgICBzaG91bGRDYW5jZWwgPSB0cnVlO1xuICAgIH1cbiAgICBpZiAoc2hvdWxkQ2FuY2VsICYmIGV2ZW50LmNhbmNlbGFibGUpIHtcbiAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgfVxuICB9O1xuICBjb25zdCBtYXliZVByZXZlbnRUb3VjaCA9IChldmVudCkgPT4ge1xuICAgIGNvbnN0IHdyYXBwZXIgPSBhY2Nlc3MyKGRlZmF1bHRlZFByb3BzLmVsZW1lbnQpO1xuICAgIGNvbnN0IHRhcmdldCA9IGV2ZW50LnRhcmdldDtcbiAgICBsZXQgc2hvdWxkQ2FuY2VsO1xuICAgIGlmIChldmVudC50b3VjaGVzLmxlbmd0aCA9PT0gMikge1xuICAgICAgc2hvdWxkQ2FuY2VsID0gIWFjY2VzczIoZGVmYXVsdGVkUHJvcHMuYWxsb3dQaW5jaFpvb20pO1xuICAgIH0gZWxzZSB7XG4gICAgICBpZiAoY3VycmVudFRvdWNoU3RhcnRBeGlzID09IG51bGwgfHwgY3VycmVudFRvdWNoU3RhcnREZWx0YSA9PT0gbnVsbCkge1xuICAgICAgICBjb25zdCBkZWx0YSA9IGdldFRvdWNoWFkoZXZlbnQpLm1hcChcbiAgICAgICAgICAodG91Y2gsIGkyKSA9PiBjdXJyZW50VG91Y2hTdGFydFtpMl0gLSB0b3VjaFxuICAgICAgICApO1xuICAgICAgICBjb25zdCBheGlzID0gTWF0aC5hYnMoZGVsdGFbMF0pID4gTWF0aC5hYnMoZGVsdGFbMV0pID8gXCJ4XCIgOiBcInlcIjtcbiAgICAgICAgY3VycmVudFRvdWNoU3RhcnRBeGlzID0gYXhpcztcbiAgICAgICAgY3VycmVudFRvdWNoU3RhcnREZWx0YSA9IGF4aXMgPT09IFwieFwiID8gZGVsdGFbMF0gOiBkZWx0YVsxXTtcbiAgICAgIH1cbiAgICAgIGlmICh0YXJnZXQudHlwZSA9PT0gXCJyYW5nZVwiKSB7XG4gICAgICAgIHNob3VsZENhbmNlbCA9IGZhbHNlO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgY29uc3Qgd291bGRSZXN1bHRJblNjcm9sbCA9IHdvdWxkU2Nyb2xsKFxuICAgICAgICAgIHRhcmdldCxcbiAgICAgICAgICBjdXJyZW50VG91Y2hTdGFydEF4aXMsXG4gICAgICAgICAgY3VycmVudFRvdWNoU3RhcnREZWx0YSxcbiAgICAgICAgICB3cmFwcGVyXG4gICAgICAgICk7XG4gICAgICAgIGlmICh3cmFwcGVyICYmIGNvbnRhaW5zMih3cmFwcGVyLCB0YXJnZXQpKSB7XG4gICAgICAgICAgc2hvdWxkQ2FuY2VsID0gIXdvdWxkUmVzdWx0SW5TY3JvbGw7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgc2hvdWxkQ2FuY2VsID0gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgICBpZiAoc2hvdWxkQ2FuY2VsICYmIGV2ZW50LmNhbmNlbGFibGUpIHtcbiAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgfVxuICB9O1xufTtcbnZhciBnZXREZWx0YVhZID0gKGV2ZW50KSA9PiBbXG4gIGV2ZW50LmRlbHRhWCxcbiAgZXZlbnQuZGVsdGFZXG5dO1xudmFyIGdldFRvdWNoWFkgPSAoZXZlbnQpID0+IGV2ZW50LmNoYW5nZWRUb3VjaGVzWzBdID8gW2V2ZW50LmNoYW5nZWRUb3VjaGVzWzBdLmNsaWVudFgsIGV2ZW50LmNoYW5nZWRUb3VjaGVzWzBdLmNsaWVudFldIDogWzAsIDBdO1xudmFyIHdvdWxkU2Nyb2xsID0gKHRhcmdldCwgYXhpcywgZGVsdGEsIHdyYXBwZXIpID0+IHtcbiAgY29uc3QgdGFyZ2V0SW5XcmFwcGVyID0gd3JhcHBlciAhPT0gbnVsbCAmJiBjb250YWluczIod3JhcHBlciwgdGFyZ2V0KTtcbiAgY29uc3QgW2F2YWlsYWJsZVNjcm9sbCwgYXZhaWxhYmxlU2Nyb2xsVG9wXSA9IGdldFNjcm9sbEF0TG9jYXRpb24oXG4gICAgdGFyZ2V0LFxuICAgIGF4aXMsXG4gICAgdGFyZ2V0SW5XcmFwcGVyID8gd3JhcHBlciA6IHZvaWQgMFxuICApO1xuICBpZiAoZGVsdGEgPiAwICYmIE1hdGguYWJzKGF2YWlsYWJsZVNjcm9sbCkgPD0gMSkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuICBpZiAoZGVsdGEgPCAwICYmIE1hdGguYWJzKGF2YWlsYWJsZVNjcm9sbFRvcCkgPCAxKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG4gIHJldHVybiB0cnVlO1xufTtcbnZhciBjb250YWluczIgPSAod3JhcHBlciwgdGFyZ2V0KSA9PiB7XG4gIGlmICh3cmFwcGVyLmNvbnRhaW5zKHRhcmdldCkpXG4gICAgcmV0dXJuIHRydWU7XG4gIGxldCBjdXJyZW50RWxlbWVudCA9IHRhcmdldDtcbiAgd2hpbGUgKGN1cnJlbnRFbGVtZW50KSB7XG4gICAgaWYgKGN1cnJlbnRFbGVtZW50ID09PSB3cmFwcGVyKVxuICAgICAgcmV0dXJuIHRydWU7XG4gICAgY3VycmVudEVsZW1lbnQgPSBjdXJyZW50RWxlbWVudC5fJGhvc3QgPz8gY3VycmVudEVsZW1lbnQucGFyZW50RWxlbWVudDtcbiAgfVxuICByZXR1cm4gZmFsc2U7XG59O1xudmFyIHByZXZlbnRTY3JvbGxfZGVmYXVsdCA9IGNyZWF0ZVByZXZlbnRTY3JvbGw7XG52YXIgc3JjX2RlZmF1bHQgPSBwcmV2ZW50U2Nyb2xsX2RlZmF1bHQ7XG5cbi8vIC4uLy4uL25vZGVfbW9kdWxlcy8ucG5wbS9Aa29iYWx0ZStjb3JlQDAuMTMuMV9zb2xpZC1qc0AxLjguMTcvbm9kZV9tb2R1bGVzL0Brb2JhbHRlL2NvcmUvZGlzdC9jaHVuay9GRVdWRFZSTy5qc1xudmFyIE1lbnVDb250ZXh0ID0gY3JlYXRlQ29udGV4dCgpO1xuZnVuY3Rpb24gdXNlT3B0aW9uYWxNZW51Q29udGV4dCgpIHtcbiAgcmV0dXJuIHVzZUNvbnRleHQoTWVudUNvbnRleHQpO1xufVxuZnVuY3Rpb24gdXNlTWVudUNvbnRleHQoKSB7XG4gIGNvbnN0IGNvbnRleHQgPSB1c2VPcHRpb25hbE1lbnVDb250ZXh0KCk7XG4gIGlmIChjb250ZXh0ID09PSB2b2lkIDApIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJba29iYWx0ZV06IGB1c2VNZW51Q29udGV4dGAgbXVzdCBiZSB1c2VkIHdpdGhpbiBhIGBNZW51YCBjb21wb25lbnRcIik7XG4gIH1cbiAgcmV0dXJuIGNvbnRleHQ7XG59XG52YXIgTWVudUl0ZW1Db250ZXh0ID0gY3JlYXRlQ29udGV4dCgpO1xuZnVuY3Rpb24gdXNlTWVudUl0ZW1Db250ZXh0KCkge1xuICBjb25zdCBjb250ZXh0ID0gdXNlQ29udGV4dChNZW51SXRlbUNvbnRleHQpO1xuICBpZiAoY29udGV4dCA9PT0gdm9pZCAwKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiW2tvYmFsdGVdOiBgdXNlTWVudUl0ZW1Db250ZXh0YCBtdXN0IGJlIHVzZWQgd2l0aGluIGEgYE1lbnUuSXRlbWAgY29tcG9uZW50XCIpO1xuICB9XG4gIHJldHVybiBjb250ZXh0O1xufVxudmFyIE1lbnVSb290Q29udGV4dCA9IGNyZWF0ZUNvbnRleHQoKTtcbmZ1bmN0aW9uIHVzZU1lbnVSb290Q29udGV4dCgpIHtcbiAgY29uc3QgY29udGV4dCA9IHVzZUNvbnRleHQoTWVudVJvb3RDb250ZXh0KTtcbiAgaWYgKGNvbnRleHQgPT09IHZvaWQgMCkge1xuICAgIHRocm93IG5ldyBFcnJvcihcIltrb2JhbHRlXTogYHVzZU1lbnVSb290Q29udGV4dGAgbXVzdCBiZSB1c2VkIHdpdGhpbiBhIGBNZW51Um9vdGAgY29tcG9uZW50XCIpO1xuICB9XG4gIHJldHVybiBjb250ZXh0O1xufVxuZnVuY3Rpb24gTWVudUl0ZW1CYXNlKHByb3BzKSB7XG4gIGxldCByZWY7XG4gIGNvbnN0IHJvb3RDb250ZXh0ID0gdXNlTWVudVJvb3RDb250ZXh0KCk7XG4gIGNvbnN0IG1lbnVDb250ZXh0ID0gdXNlTWVudUNvbnRleHQoKTtcbiAgY29uc3QgbWVyZ2VkUHJvcHMgPSBtZXJnZURlZmF1bHRQcm9wcyh7XG4gICAgaWQ6IHJvb3RDb250ZXh0LmdlbmVyYXRlSWQoYGl0ZW0tJHtjcmVhdGVVbmlxdWVJZCgpfWApXG4gIH0sIHByb3BzKTtcbiAgY29uc3QgW2xvY2FsLCBvdGhlcnNdID0gc3BsaXRQcm9wcyhtZXJnZWRQcm9wcywgW1wicmVmXCIsIFwidGV4dFZhbHVlXCIsIFwiZGlzYWJsZWRcIiwgXCJjbG9zZU9uU2VsZWN0XCIsIFwiY2hlY2tlZFwiLCBcImluZGV0ZXJtaW5hdGVcIiwgXCJvblNlbGVjdFwiLCBcIm9uUG9pbnRlck1vdmVcIiwgXCJvblBvaW50ZXJMZWF2ZVwiLCBcIm9uUG9pbnRlckRvd25cIiwgXCJvblBvaW50ZXJVcFwiLCBcIm9uQ2xpY2tcIiwgXCJvbktleURvd25cIiwgXCJvbk1vdXNlRG93blwiLCBcIm9uRm9jdXNcIl0pO1xuICBjb25zdCBbbGFiZWxJZCwgc2V0TGFiZWxJZF0gPSBjcmVhdGVTaWduYWwoKTtcbiAgY29uc3QgW2Rlc2NyaXB0aW9uSWQsIHNldERlc2NyaXB0aW9uSWRdID0gY3JlYXRlU2lnbmFsKCk7XG4gIGNvbnN0IFtsYWJlbFJlZiwgc2V0TGFiZWxSZWZdID0gY3JlYXRlU2lnbmFsKCk7XG4gIGNvbnN0IHNlbGVjdGlvbk1hbmFnZXIgPSAoKSA9PiBtZW51Q29udGV4dC5saXN0U3RhdGUoKS5zZWxlY3Rpb25NYW5hZ2VyKCk7XG4gIGNvbnN0IGtleSA9ICgpID0+IG90aGVycy5pZDtcbiAgY29uc3QgaXNIaWdobGlnaHRlZCA9ICgpID0+IHNlbGVjdGlvbk1hbmFnZXIoKS5mb2N1c2VkS2V5KCkgPT09IGtleSgpO1xuICBjb25zdCBvblNlbGVjdCA9ICgpID0+IHtcbiAgICBsb2NhbC5vblNlbGVjdD8uKCk7XG4gICAgaWYgKGxvY2FsLmNsb3NlT25TZWxlY3QpIHtcbiAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICBtZW51Q29udGV4dC5jbG9zZSh0cnVlKTtcbiAgICAgIH0pO1xuICAgIH1cbiAgfTtcbiAgY3JlYXRlRG9tQ29sbGVjdGlvbkl0ZW0oe1xuICAgIGdldEl0ZW06ICgpID0+ICh7XG4gICAgICByZWY6ICgpID0+IHJlZixcbiAgICAgIHR5cGU6IFwiaXRlbVwiLFxuICAgICAga2V5OiBrZXkoKSxcbiAgICAgIHRleHRWYWx1ZTogbG9jYWwudGV4dFZhbHVlID8/IGxhYmVsUmVmKCk/LnRleHRDb250ZW50ID8/IHJlZj8udGV4dENvbnRlbnQgPz8gXCJcIixcbiAgICAgIGRpc2FibGVkOiBsb2NhbC5kaXNhYmxlZCA/PyBmYWxzZVxuICAgIH0pXG4gIH0pO1xuICBjb25zdCBzZWxlY3RhYmxlSXRlbSA9IGNyZWF0ZVNlbGVjdGFibGVJdGVtKHtcbiAgICBrZXksXG4gICAgc2VsZWN0aW9uTWFuYWdlcixcbiAgICBzaG91bGRTZWxlY3RPblByZXNzVXA6IHRydWUsXG4gICAgYWxsb3dzRGlmZmVyZW50UHJlc3NPcmlnaW46IHRydWUsXG4gICAgZGlzYWJsZWQ6ICgpID0+IGxvY2FsLmRpc2FibGVkXG4gIH0sICgpID0+IHJlZik7XG4gIGNvbnN0IG9uUG9pbnRlck1vdmUgPSAoZTIpID0+IHtcbiAgICBjYWxsSGFuZGxlcihlMiwgbG9jYWwub25Qb2ludGVyTW92ZSk7XG4gICAgaWYgKGUyLnBvaW50ZXJUeXBlICE9PSBcIm1vdXNlXCIpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgaWYgKGxvY2FsLmRpc2FibGVkKSB7XG4gICAgICBtZW51Q29udGV4dC5vbkl0ZW1MZWF2ZShlMik7XG4gICAgfSBlbHNlIHtcbiAgICAgIG1lbnVDb250ZXh0Lm9uSXRlbUVudGVyKGUyKTtcbiAgICAgIGlmICghZTIuZGVmYXVsdFByZXZlbnRlZCkge1xuICAgICAgICBmb2N1c1dpdGhvdXRTY3JvbGxpbmcoZTIuY3VycmVudFRhcmdldCk7XG4gICAgICAgIG1lbnVDb250ZXh0Lmxpc3RTdGF0ZSgpLnNlbGVjdGlvbk1hbmFnZXIoKS5zZXRGb2N1c2VkKHRydWUpO1xuICAgICAgICBtZW51Q29udGV4dC5saXN0U3RhdGUoKS5zZWxlY3Rpb25NYW5hZ2VyKCkuc2V0Rm9jdXNlZEtleShrZXkoKSk7XG4gICAgICB9XG4gICAgfVxuICB9O1xuICBjb25zdCBvblBvaW50ZXJMZWF2ZSA9IChlMikgPT4ge1xuICAgIGNhbGxIYW5kbGVyKGUyLCBsb2NhbC5vblBvaW50ZXJMZWF2ZSk7XG4gICAgaWYgKGUyLnBvaW50ZXJUeXBlICE9PSBcIm1vdXNlXCIpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgbWVudUNvbnRleHQub25JdGVtTGVhdmUoZTIpO1xuICB9O1xuICBjb25zdCBvblBvaW50ZXJVcCA9IChlMikgPT4ge1xuICAgIGNhbGxIYW5kbGVyKGUyLCBsb2NhbC5vblBvaW50ZXJVcCk7XG4gICAgaWYgKCFsb2NhbC5kaXNhYmxlZCAmJiBlMi5idXR0b24gPT09IDApIHtcbiAgICAgIG9uU2VsZWN0KCk7XG4gICAgfVxuICB9O1xuICBjb25zdCBvbktleURvd24gPSAoZTIpID0+IHtcbiAgICBjYWxsSGFuZGxlcihlMiwgbG9jYWwub25LZXlEb3duKTtcbiAgICBpZiAoZTIucmVwZWF0KSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIGlmIChsb2NhbC5kaXNhYmxlZCkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBzd2l0Y2ggKGUyLmtleSkge1xuICAgICAgY2FzZSBcIkVudGVyXCI6XG4gICAgICBjYXNlIFwiIFwiOlxuICAgICAgICBvblNlbGVjdCgpO1xuICAgICAgICBicmVhaztcbiAgICB9XG4gIH07XG4gIGNvbnN0IGFyaWFDaGVja2VkID0gY3JlYXRlTWVtbygoKSA9PiB7XG4gICAgaWYgKGxvY2FsLmluZGV0ZXJtaW5hdGUpIHtcbiAgICAgIHJldHVybiBcIm1peGVkXCI7XG4gICAgfVxuICAgIGlmIChsb2NhbC5jaGVja2VkID09IG51bGwpIHtcbiAgICAgIHJldHVybiB2b2lkIDA7XG4gICAgfVxuICAgIHJldHVybiBsb2NhbC5jaGVja2VkO1xuICB9KTtcbiAgY29uc3QgZGF0YXNldCA9IGNyZWF0ZU1lbW8oKCkgPT4gKHtcbiAgICBcImRhdGEtaW5kZXRlcm1pbmF0ZVwiOiBsb2NhbC5pbmRldGVybWluYXRlID8gXCJcIiA6IHZvaWQgMCxcbiAgICBcImRhdGEtY2hlY2tlZFwiOiBsb2NhbC5jaGVja2VkICYmICFsb2NhbC5pbmRldGVybWluYXRlID8gXCJcIiA6IHZvaWQgMCxcbiAgICBcImRhdGEtZGlzYWJsZWRcIjogbG9jYWwuZGlzYWJsZWQgPyBcIlwiIDogdm9pZCAwLFxuICAgIFwiZGF0YS1oaWdobGlnaHRlZFwiOiBpc0hpZ2hsaWdodGVkKCkgPyBcIlwiIDogdm9pZCAwXG4gIH0pKTtcbiAgY29uc3QgY29udGV4dCA9IHtcbiAgICBpc0NoZWNrZWQ6ICgpID0+IGxvY2FsLmNoZWNrZWQsXG4gICAgZGF0YXNldCxcbiAgICBzZXRMYWJlbFJlZixcbiAgICBnZW5lcmF0ZUlkOiBjcmVhdGVHZW5lcmF0ZUlkKCgpID0+IG90aGVycy5pZCksXG4gICAgcmVnaXN0ZXJMYWJlbDogY3JlYXRlUmVnaXN0ZXJJZChzZXRMYWJlbElkKSxcbiAgICByZWdpc3RlckRlc2NyaXB0aW9uOiBjcmVhdGVSZWdpc3RlcklkKHNldERlc2NyaXB0aW9uSWQpXG4gIH07XG4gIHJldHVybiBjcmVhdGVDb21wb25lbnQoTWVudUl0ZW1Db250ZXh0LlByb3ZpZGVyLCB7XG4gICAgdmFsdWU6IGNvbnRleHQsXG4gICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChQb2x5bW9ycGhpYywgbWVyZ2VQcm9wcyh7XG4gICAgICAgIGFzOiBcImRpdlwiLFxuICAgICAgICByZWYociQpIHtcbiAgICAgICAgICBjb25zdCBfcmVmJCA9IG1lcmdlUmVmcygoZWwpID0+IHJlZiA9IGVsLCBsb2NhbC5yZWYpO1xuICAgICAgICAgIHR5cGVvZiBfcmVmJCA9PT0gXCJmdW5jdGlvblwiICYmIF9yZWYkKHIkKTtcbiAgICAgICAgfSxcbiAgICAgICAgZ2V0IHRhYkluZGV4KCkge1xuICAgICAgICAgIHJldHVybiBzZWxlY3RhYmxlSXRlbS50YWJJbmRleCgpO1xuICAgICAgICB9LFxuICAgICAgICBnZXQgW1wiYXJpYS1jaGVja2VkXCJdKCkge1xuICAgICAgICAgIHJldHVybiBhcmlhQ2hlY2tlZCgpO1xuICAgICAgICB9LFxuICAgICAgICBnZXQgW1wiYXJpYS1kaXNhYmxlZFwiXSgpIHtcbiAgICAgICAgICByZXR1cm4gbG9jYWwuZGlzYWJsZWQ7XG4gICAgICAgIH0sXG4gICAgICAgIGdldCBbXCJhcmlhLWxhYmVsbGVkYnlcIl0oKSB7XG4gICAgICAgICAgcmV0dXJuIGxhYmVsSWQoKTtcbiAgICAgICAgfSxcbiAgICAgICAgZ2V0IFtcImFyaWEtZGVzY3JpYmVkYnlcIl0oKSB7XG4gICAgICAgICAgcmV0dXJuIGRlc2NyaXB0aW9uSWQoKTtcbiAgICAgICAgfSxcbiAgICAgICAgZ2V0IFtcImRhdGEta2V5XCJdKCkge1xuICAgICAgICAgIHJldHVybiBzZWxlY3RhYmxlSXRlbS5kYXRhS2V5KCk7XG4gICAgICAgIH0sXG4gICAgICAgIGdldCBvblBvaW50ZXJEb3duKCkge1xuICAgICAgICAgIHJldHVybiBjb21wb3NlRXZlbnRIYW5kbGVycyhbbG9jYWwub25Qb2ludGVyRG93biwgc2VsZWN0YWJsZUl0ZW0ub25Qb2ludGVyRG93bl0pO1xuICAgICAgICB9LFxuICAgICAgICBnZXQgb25Qb2ludGVyVXAoKSB7XG4gICAgICAgICAgcmV0dXJuIGNvbXBvc2VFdmVudEhhbmRsZXJzKFtvblBvaW50ZXJVcCwgc2VsZWN0YWJsZUl0ZW0ub25Qb2ludGVyVXBdKTtcbiAgICAgICAgfSxcbiAgICAgICAgZ2V0IG9uQ2xpY2soKSB7XG4gICAgICAgICAgcmV0dXJuIGNvbXBvc2VFdmVudEhhbmRsZXJzKFtsb2NhbC5vbkNsaWNrLCBzZWxlY3RhYmxlSXRlbS5vbkNsaWNrXSk7XG4gICAgICAgIH0sXG4gICAgICAgIGdldCBvbktleURvd24oKSB7XG4gICAgICAgICAgcmV0dXJuIGNvbXBvc2VFdmVudEhhbmRsZXJzKFtvbktleURvd24sIHNlbGVjdGFibGVJdGVtLm9uS2V5RG93bl0pO1xuICAgICAgICB9LFxuICAgICAgICBnZXQgb25Nb3VzZURvd24oKSB7XG4gICAgICAgICAgcmV0dXJuIGNvbXBvc2VFdmVudEhhbmRsZXJzKFtsb2NhbC5vbk1vdXNlRG93biwgc2VsZWN0YWJsZUl0ZW0ub25Nb3VzZURvd25dKTtcbiAgICAgICAgfSxcbiAgICAgICAgZ2V0IG9uRm9jdXMoKSB7XG4gICAgICAgICAgcmV0dXJuIGNvbXBvc2VFdmVudEhhbmRsZXJzKFtsb2NhbC5vbkZvY3VzLCBzZWxlY3RhYmxlSXRlbS5vbkZvY3VzXSk7XG4gICAgICAgIH0sXG4gICAgICAgIG9uUG9pbnRlck1vdmUsXG4gICAgICAgIG9uUG9pbnRlckxlYXZlXG4gICAgICB9LCBkYXRhc2V0LCBvdGhlcnMpKTtcbiAgICB9XG4gIH0pO1xufVxuZnVuY3Rpb24gTWVudUNoZWNrYm94SXRlbShwcm9wcykge1xuICBjb25zdCBtZXJnZWRQcm9wcyA9IG1lcmdlRGVmYXVsdFByb3BzKHtcbiAgICBjbG9zZU9uU2VsZWN0OiBmYWxzZVxuICB9LCBwcm9wcyk7XG4gIGNvbnN0IFtsb2NhbCwgb3RoZXJzXSA9IHNwbGl0UHJvcHMobWVyZ2VkUHJvcHMsIFtcImNoZWNrZWRcIiwgXCJkZWZhdWx0Q2hlY2tlZFwiLCBcIm9uQ2hhbmdlXCIsIFwib25TZWxlY3RcIl0pO1xuICBjb25zdCBzdGF0ZSA9IGNyZWF0ZVRvZ2dsZVN0YXRlKHtcbiAgICBpc1NlbGVjdGVkOiAoKSA9PiBsb2NhbC5jaGVja2VkLFxuICAgIGRlZmF1bHRJc1NlbGVjdGVkOiAoKSA9PiBsb2NhbC5kZWZhdWx0Q2hlY2tlZCxcbiAgICBvblNlbGVjdGVkQ2hhbmdlOiAoY2hlY2tlZCkgPT4gbG9jYWwub25DaGFuZ2U/LihjaGVja2VkKSxcbiAgICBpc0Rpc2FibGVkOiAoKSA9PiBvdGhlcnMuZGlzYWJsZWRcbiAgfSk7XG4gIGNvbnN0IG9uU2VsZWN0ID0gKCkgPT4ge1xuICAgIGxvY2FsLm9uU2VsZWN0Py4oKTtcbiAgICBzdGF0ZS50b2dnbGUoKTtcbiAgfTtcbiAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChNZW51SXRlbUJhc2UsIG1lcmdlUHJvcHMoe1xuICAgIHJvbGU6IFwibWVudWl0ZW1jaGVja2JveFwiLFxuICAgIGdldCBjaGVja2VkKCkge1xuICAgICAgcmV0dXJuIHN0YXRlLmlzU2VsZWN0ZWQoKTtcbiAgICB9LFxuICAgIG9uU2VsZWN0XG4gIH0sIG90aGVycykpO1xufVxudmFyIE1lbnViYXJDb250ZXh0ID0gY3JlYXRlQ29udGV4dCgpO1xuZnVuY3Rpb24gdXNlT3B0aW9uYWxNZW51YmFyQ29udGV4dCgpIHtcbiAgcmV0dXJuIHVzZUNvbnRleHQoTWVudWJhckNvbnRleHQpO1xufVxuZnVuY3Rpb24gTWVudUNvbnRlbnRCYXNlKHByb3BzKSB7XG4gIGxldCByZWY7XG4gIGNvbnN0IHJvb3RDb250ZXh0ID0gdXNlTWVudVJvb3RDb250ZXh0KCk7XG4gIGNvbnN0IGNvbnRleHQgPSB1c2VNZW51Q29udGV4dCgpO1xuICBjb25zdCBvcHRpb25hbE1lbnViYXJDb250ZXh0ID0gdXNlT3B0aW9uYWxNZW51YmFyQ29udGV4dCgpO1xuICBjb25zdCBtZXJnZWRQcm9wcyA9IG1lcmdlRGVmYXVsdFByb3BzKHtcbiAgICBpZDogcm9vdENvbnRleHQuZ2VuZXJhdGVJZChgY29udGVudC0ke2NyZWF0ZVVuaXF1ZUlkKCl9YClcbiAgfSwgcHJvcHMpO1xuICBjb25zdCBbbG9jYWwsIG90aGVyc10gPSBzcGxpdFByb3BzKG1lcmdlZFByb3BzLCBbXCJyZWZcIiwgXCJpZFwiLCBcInN0eWxlXCIsIFwib25PcGVuQXV0b0ZvY3VzXCIsIFwib25DbG9zZUF1dG9Gb2N1c1wiLCBcIm9uRXNjYXBlS2V5RG93blwiLCBcIm9uRm9jdXNPdXRzaWRlXCIsIFwib25Qb2ludGVyRW50ZXJcIiwgXCJvblBvaW50ZXJNb3ZlXCIsIFwib25LZXlEb3duXCIsIFwib25Nb3VzZURvd25cIiwgXCJvbkZvY3VzSW5cIiwgXCJvbkZvY3VzT3V0XCJdKTtcbiAgbGV0IGxhc3RQb2ludGVyWCA9IDA7XG4gIGNvbnN0IGlzUm9vdE1vZGFsQ29udGVudCA9ICgpID0+IHtcbiAgICByZXR1cm4gY29udGV4dC5wYXJlbnRNZW51Q29udGV4dCgpID09IG51bGwgJiYgb3B0aW9uYWxNZW51YmFyQ29udGV4dCA9PT0gdm9pZCAwICYmIHJvb3RDb250ZXh0LmlzTW9kYWwoKTtcbiAgfTtcbiAgY29uc3Qgc2VsZWN0YWJsZUxpc3QgPSBjcmVhdGVTZWxlY3RhYmxlTGlzdCh7XG4gICAgc2VsZWN0aW9uTWFuYWdlcjogY29udGV4dC5saXN0U3RhdGUoKS5zZWxlY3Rpb25NYW5hZ2VyLFxuICAgIGNvbGxlY3Rpb246IGNvbnRleHQubGlzdFN0YXRlKCkuY29sbGVjdGlvbixcbiAgICBhdXRvRm9jdXM6IGNvbnRleHQuYXV0b0ZvY3VzLFxuICAgIGRlZmVyQXV0b0ZvY3VzOiB0cnVlLFxuICAgIC8vIGVuc3VyZSBhbGwgbWVudSBpdGVtcyBhcmUgbW91bnRlZCBhbmQgY29sbGVjdGlvbiBpcyBub3QgZW1wdHkgYmVmb3JlIHRyeWluZyB0byBhdXRvZm9jdXMuXG4gICAgc2hvdWxkRm9jdXNXcmFwOiB0cnVlLFxuICAgIGRpc2FsbG93VHlwZUFoZWFkOiAoKSA9PiAhY29udGV4dC5saXN0U3RhdGUoKS5zZWxlY3Rpb25NYW5hZ2VyKCkuaXNGb2N1c2VkKClcbiAgfSwgKCkgPT4gcmVmKTtcbiAgY3JlYXRlRm9jdXNTY29wZSh7XG4gICAgdHJhcEZvY3VzOiAoKSA9PiBpc1Jvb3RNb2RhbENvbnRlbnQoKSAmJiBjb250ZXh0LmlzT3BlbigpLFxuICAgIG9uTW91bnRBdXRvRm9jdXM6IChldmVudCkgPT4ge1xuICAgICAgaWYgKG9wdGlvbmFsTWVudWJhckNvbnRleHQgPT09IHZvaWQgMClcbiAgICAgICAgbG9jYWwub25PcGVuQXV0b0ZvY3VzPy4oZXZlbnQpO1xuICAgIH0sXG4gICAgb25Vbm1vdW50QXV0b0ZvY3VzOiBsb2NhbC5vbkNsb3NlQXV0b0ZvY3VzXG4gIH0sICgpID0+IHJlZik7XG4gIGNvbnN0IG9uS2V5RG93biA9IChlMikgPT4ge1xuICAgIGlmICghY29udGFpbnMoZTIuY3VycmVudFRhcmdldCwgZTIudGFyZ2V0KSkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBpZiAoZTIua2V5ID09PSBcIlRhYlwiICYmIGNvbnRleHQuaXNPcGVuKCkpIHtcbiAgICAgIGUyLnByZXZlbnREZWZhdWx0KCk7XG4gICAgfVxuICAgIGlmIChvcHRpb25hbE1lbnViYXJDb250ZXh0ICE9PSB2b2lkIDApIHtcbiAgICAgIGlmIChlMi5jdXJyZW50VGFyZ2V0LmdldEF0dHJpYnV0ZShcImFyaWEtaGFzcG9wdXBcIikgIT09IFwidHJ1ZVwiKVxuICAgICAgICBzd2l0Y2ggKGUyLmtleSkge1xuICAgICAgICAgIGNhc2UgXCJBcnJvd1JpZ2h0XCI6XG4gICAgICAgICAgICBlMi5zdG9wUHJvcGFnYXRpb24oKTtcbiAgICAgICAgICAgIGUyLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgICBjb250ZXh0LmNsb3NlKHRydWUpO1xuICAgICAgICAgICAgb3B0aW9uYWxNZW51YmFyQ29udGV4dC5zZXRBdXRvRm9jdXNNZW51KHRydWUpO1xuICAgICAgICAgICAgb3B0aW9uYWxNZW51YmFyQ29udGV4dC5uZXh0TWVudSgpO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgY2FzZSBcIkFycm93TGVmdFwiOlxuICAgICAgICAgICAgaWYgKGUyLmN1cnJlbnRUYXJnZXQuaGFzQXR0cmlidXRlKFwiZGF0YS1jbG9zZWRcIikpXG4gICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgZTIuc3RvcFByb3BhZ2F0aW9uKCk7XG4gICAgICAgICAgICBlMi5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgICAgY29udGV4dC5jbG9zZSh0cnVlKTtcbiAgICAgICAgICAgIG9wdGlvbmFsTWVudWJhckNvbnRleHQuc2V0QXV0b0ZvY3VzTWVudSh0cnVlKTtcbiAgICAgICAgICAgIG9wdGlvbmFsTWVudWJhckNvbnRleHQucHJldmlvdXNNZW51KCk7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgIH1cbiAgfTtcbiAgY29uc3Qgb25Fc2NhcGVLZXlEb3duID0gKGUyKSA9PiB7XG4gICAgbG9jYWwub25Fc2NhcGVLZXlEb3duPy4oZTIpO1xuICAgIG9wdGlvbmFsTWVudWJhckNvbnRleHQ/LnNldEF1dG9Gb2N1c01lbnUoZmFsc2UpO1xuICAgIGNvbnRleHQuY2xvc2UodHJ1ZSk7XG4gIH07XG4gIGNvbnN0IG9uRm9jdXNPdXRzaWRlID0gKGUyKSA9PiB7XG4gICAgbG9jYWwub25Gb2N1c091dHNpZGU/LihlMik7XG4gICAgaWYgKHJvb3RDb250ZXh0LmlzTW9kYWwoKSkge1xuICAgICAgZTIucHJldmVudERlZmF1bHQoKTtcbiAgICB9XG4gIH07XG4gIGNvbnN0IG9uUG9pbnRlckVudGVyID0gKGUyKSA9PiB7XG4gICAgY2FsbEhhbmRsZXIoZTIsIGxvY2FsLm9uUG9pbnRlckVudGVyKTtcbiAgICBpZiAoIWNvbnRleHQuaXNPcGVuKCkpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgY29udGV4dC5wYXJlbnRNZW51Q29udGV4dCgpPy5saXN0U3RhdGUoKS5zZWxlY3Rpb25NYW5hZ2VyKCkuc2V0Rm9jdXNlZChmYWxzZSk7XG4gICAgY29udGV4dC5wYXJlbnRNZW51Q29udGV4dCgpPy5saXN0U3RhdGUoKS5zZWxlY3Rpb25NYW5hZ2VyKCkuc2V0Rm9jdXNlZEtleSh2b2lkIDApO1xuICB9O1xuICBjb25zdCBvblBvaW50ZXJNb3ZlID0gKGUyKSA9PiB7XG4gICAgY2FsbEhhbmRsZXIoZTIsIGxvY2FsLm9uUG9pbnRlck1vdmUpO1xuICAgIGlmIChlMi5wb2ludGVyVHlwZSAhPT0gXCJtb3VzZVwiKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIGNvbnN0IHRhcmdldCA9IGUyLnRhcmdldDtcbiAgICBjb25zdCBwb2ludGVyWEhhc0NoYW5nZWQgPSBsYXN0UG9pbnRlclggIT09IGUyLmNsaWVudFg7XG4gICAgaWYgKGNvbnRhaW5zKGUyLmN1cnJlbnRUYXJnZXQsIHRhcmdldCkgJiYgcG9pbnRlclhIYXNDaGFuZ2VkKSB7XG4gICAgICBjb250ZXh0LnNldFBvaW50ZXJEaXIoZTIuY2xpZW50WCA+IGxhc3RQb2ludGVyWCA/IFwicmlnaHRcIiA6IFwibGVmdFwiKTtcbiAgICAgIGxhc3RQb2ludGVyWCA9IGUyLmNsaWVudFg7XG4gICAgfVxuICB9O1xuICBjcmVhdGVFZmZlY3QoKCkgPT4gb25DbGVhbnVwKGNvbnRleHQucmVnaXN0ZXJDb250ZW50SWQobG9jYWwuaWQpKSk7XG4gIHJldHVybiBjcmVhdGVDb21wb25lbnQoU2hvdywge1xuICAgIGdldCB3aGVuKCkge1xuICAgICAgcmV0dXJuIGNvbnRleHQuY29udGVudFByZXNlbmNlLmlzUHJlc2VudCgpO1xuICAgIH0sXG4gICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChQb3BwZXIuUG9zaXRpb25lciwge1xuICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChEaXNtaXNzYWJsZUxheWVyLCBtZXJnZVByb3BzKHtcbiAgICAgICAgICAgIHJlZihyJCkge1xuICAgICAgICAgICAgICBjb25zdCBfcmVmJCA9IG1lcmdlUmVmcygoZWwpID0+IHtcbiAgICAgICAgICAgICAgICBjb250ZXh0LnNldENvbnRlbnRSZWYoZWwpO1xuICAgICAgICAgICAgICAgIGNvbnRleHQuY29udGVudFByZXNlbmNlLnNldFJlZihlbCk7XG4gICAgICAgICAgICAgICAgcmVmID0gZWw7XG4gICAgICAgICAgICAgIH0sIGxvY2FsLnJlZik7XG4gICAgICAgICAgICAgIHR5cGVvZiBfcmVmJCA9PT0gXCJmdW5jdGlvblwiICYmIF9yZWYkKHIkKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICByb2xlOiBcIm1lbnVcIixcbiAgICAgICAgICAgIGdldCBpZCgpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIGxvY2FsLmlkO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGdldCB0YWJJbmRleCgpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIHNlbGVjdGFibGVMaXN0LnRhYkluZGV4KCk7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZ2V0IGRpc2FibGVPdXRzaWRlUG9pbnRlckV2ZW50cygpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZU1lbW8oKCkgPT4gISFpc1Jvb3RNb2RhbENvbnRlbnQoKSkoKSAmJiBjb250ZXh0LmlzT3BlbigpO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGdldCBleGNsdWRlZEVsZW1lbnRzKCkge1xuICAgICAgICAgICAgICByZXR1cm4gW2NvbnRleHQudHJpZ2dlclJlZl07XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgYnlwYXNzVG9wTW9zdExheWVyQ2hlY2s6IHRydWUsXG4gICAgICAgICAgICBnZXQgc3R5bGUoKSB7XG4gICAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgXCItLWtiLW1lbnUtY29udGVudC10cmFuc2Zvcm0tb3JpZ2luXCI6IFwidmFyKC0ta2ItcG9wcGVyLWNvbnRlbnQtdHJhbnNmb3JtLW9yaWdpbilcIixcbiAgICAgICAgICAgICAgICBwb3NpdGlvbjogXCJyZWxhdGl2ZVwiLFxuICAgICAgICAgICAgICAgIC4uLmxvY2FsLnN0eWxlXG4gICAgICAgICAgICAgIH07XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZ2V0IFtcImFyaWEtbGFiZWxsZWRieVwiXSgpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIGNvbnRleHQudHJpZ2dlcklkKCk7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgb25Fc2NhcGVLZXlEb3duLFxuICAgICAgICAgICAgb25Gb2N1c091dHNpZGUsXG4gICAgICAgICAgICBnZXQgb25EaXNtaXNzKCkge1xuICAgICAgICAgICAgICByZXR1cm4gY29udGV4dC5jbG9zZTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBnZXQgb25LZXlEb3duKCkge1xuICAgICAgICAgICAgICByZXR1cm4gY29tcG9zZUV2ZW50SGFuZGxlcnMoW2xvY2FsLm9uS2V5RG93biwgc2VsZWN0YWJsZUxpc3Qub25LZXlEb3duLCBvbktleURvd25dKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBnZXQgb25Nb3VzZURvd24oKSB7XG4gICAgICAgICAgICAgIHJldHVybiBjb21wb3NlRXZlbnRIYW5kbGVycyhbbG9jYWwub25Nb3VzZURvd24sIHNlbGVjdGFibGVMaXN0Lm9uTW91c2VEb3duXSk7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZ2V0IG9uRm9jdXNJbigpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIGNvbXBvc2VFdmVudEhhbmRsZXJzKFtsb2NhbC5vbkZvY3VzSW4sIHNlbGVjdGFibGVMaXN0Lm9uRm9jdXNJbl0pO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGdldCBvbkZvY3VzT3V0KCkge1xuICAgICAgICAgICAgICByZXR1cm4gY29tcG9zZUV2ZW50SGFuZGxlcnMoW2xvY2FsLm9uRm9jdXNPdXQsIHNlbGVjdGFibGVMaXN0Lm9uRm9jdXNPdXRdKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBvblBvaW50ZXJFbnRlcixcbiAgICAgICAgICAgIG9uUG9pbnRlck1vdmVcbiAgICAgICAgICB9LCAoKSA9PiBjb250ZXh0LmRhdGFzZXQoKSwgb3RoZXJzKSk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH1cbiAgfSk7XG59XG5mdW5jdGlvbiBNZW51Q29udGVudChwcm9wcykge1xuICBsZXQgcmVmO1xuICBjb25zdCByb290Q29udGV4dCA9IHVzZU1lbnVSb290Q29udGV4dCgpO1xuICBjb25zdCBjb250ZXh0ID0gdXNlTWVudUNvbnRleHQoKTtcbiAgY29uc3QgW2xvY2FsLCBvdGhlcnNdID0gc3BsaXRQcm9wcyhwcm9wcywgW1wicmVmXCJdKTtcbiAgc3JjX2RlZmF1bHQoe1xuICAgIGVsZW1lbnQ6ICgpID0+IHJlZiA/PyBudWxsLFxuICAgIGVuYWJsZWQ6ICgpID0+IGNvbnRleHQuaXNPcGVuKCkgJiYgcm9vdENvbnRleHQucHJldmVudFNjcm9sbCgpXG4gIH0pO1xuICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KE1lbnVDb250ZW50QmFzZSwgbWVyZ2VQcm9wcyh7XG4gICAgcmVmKHIkKSB7XG4gICAgICBjb25zdCBfcmVmJCA9IG1lcmdlUmVmcygoZWwpID0+IHtcbiAgICAgICAgcmVmID0gZWw7XG4gICAgICB9LCBsb2NhbC5yZWYpO1xuICAgICAgdHlwZW9mIF9yZWYkID09PSBcImZ1bmN0aW9uXCIgJiYgX3JlZiQociQpO1xuICAgIH1cbiAgfSwgb3RoZXJzKSk7XG59XG52YXIgTWVudUdyb3VwQ29udGV4dCA9IGNyZWF0ZUNvbnRleHQoKTtcbmZ1bmN0aW9uIHVzZU1lbnVHcm91cENvbnRleHQoKSB7XG4gIGNvbnN0IGNvbnRleHQgPSB1c2VDb250ZXh0KE1lbnVHcm91cENvbnRleHQpO1xuICBpZiAoY29udGV4dCA9PT0gdm9pZCAwKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiW2tvYmFsdGVdOiBgdXNlTWVudUdyb3VwQ29udGV4dGAgbXVzdCBiZSB1c2VkIHdpdGhpbiBhIGBNZW51Lkdyb3VwYCBjb21wb25lbnRcIik7XG4gIH1cbiAgcmV0dXJuIGNvbnRleHQ7XG59XG5mdW5jdGlvbiBNZW51R3JvdXAocHJvcHMpIHtcbiAgY29uc3Qgcm9vdENvbnRleHQgPSB1c2VNZW51Um9vdENvbnRleHQoKTtcbiAgY29uc3QgbWVyZ2VkUHJvcHMgPSBtZXJnZURlZmF1bHRQcm9wcyh7XG4gICAgaWQ6IHJvb3RDb250ZXh0LmdlbmVyYXRlSWQoYGdyb3VwLSR7Y3JlYXRlVW5pcXVlSWQoKX1gKVxuICB9LCBwcm9wcyk7XG4gIGNvbnN0IFtsYWJlbElkLCBzZXRMYWJlbElkXSA9IGNyZWF0ZVNpZ25hbCgpO1xuICBjb25zdCBjb250ZXh0ID0ge1xuICAgIGdlbmVyYXRlSWQ6IGNyZWF0ZUdlbmVyYXRlSWQoKCkgPT4gbWVyZ2VkUHJvcHMuaWQpLFxuICAgIHJlZ2lzdGVyTGFiZWxJZDogY3JlYXRlUmVnaXN0ZXJJZChzZXRMYWJlbElkKVxuICB9O1xuICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KE1lbnVHcm91cENvbnRleHQuUHJvdmlkZXIsIHtcbiAgICB2YWx1ZTogY29udGV4dCxcbiAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KFBvbHltb3JwaGljLCBtZXJnZVByb3BzKHtcbiAgICAgICAgYXM6IFwiZGl2XCIsXG4gICAgICAgIHJvbGU6IFwiZ3JvdXBcIixcbiAgICAgICAgZ2V0IFtcImFyaWEtbGFiZWxsZWRieVwiXSgpIHtcbiAgICAgICAgICByZXR1cm4gbGFiZWxJZCgpO1xuICAgICAgICB9XG4gICAgICB9LCBtZXJnZWRQcm9wcykpO1xuICAgIH1cbiAgfSk7XG59XG5mdW5jdGlvbiBNZW51R3JvdXBMYWJlbChwcm9wcykge1xuICBjb25zdCBjb250ZXh0ID0gdXNlTWVudUdyb3VwQ29udGV4dCgpO1xuICBjb25zdCBtZXJnZWRQcm9wcyA9IG1lcmdlRGVmYXVsdFByb3BzKHtcbiAgICBpZDogY29udGV4dC5nZW5lcmF0ZUlkKFwibGFiZWxcIilcbiAgfSwgcHJvcHMpO1xuICBjb25zdCBbbG9jYWwsIG90aGVyc10gPSBzcGxpdFByb3BzKG1lcmdlZFByb3BzLCBbXCJpZFwiXSk7XG4gIGNyZWF0ZUVmZmVjdCgoKSA9PiBvbkNsZWFudXAoY29udGV4dC5yZWdpc3RlckxhYmVsSWQobG9jYWwuaWQpKSk7XG4gIHJldHVybiBjcmVhdGVDb21wb25lbnQoUG9seW1vcnBoaWMsIG1lcmdlUHJvcHMoe1xuICAgIGFzOiBcInNwYW5cIixcbiAgICBnZXQgaWQoKSB7XG4gICAgICByZXR1cm4gbG9jYWwuaWQ7XG4gICAgfSxcbiAgICBcImFyaWEtaGlkZGVuXCI6IFwidHJ1ZVwiXG4gIH0sIG90aGVycykpO1xufVxuZnVuY3Rpb24gTWVudUljb24ocHJvcHMpIHtcbiAgY29uc3QgY29udGV4dCA9IHVzZU1lbnVDb250ZXh0KCk7XG4gIGNvbnN0IG1lcmdlZFByb3BzID0gbWVyZ2VEZWZhdWx0UHJvcHMoe1xuICAgIGNoaWxkcmVuOiBcIlxcdTI1QkNcIlxuICB9LCBwcm9wcyk7XG4gIHJldHVybiBjcmVhdGVDb21wb25lbnQoUG9seW1vcnBoaWMsIG1lcmdlUHJvcHMoe1xuICAgIGFzOiBcInNwYW5cIixcbiAgICBcImFyaWEtaGlkZGVuXCI6IFwidHJ1ZVwiXG4gIH0sICgpID0+IGNvbnRleHQuZGF0YXNldCgpLCBtZXJnZWRQcm9wcykpO1xufVxuZnVuY3Rpb24gTWVudUl0ZW0ocHJvcHMpIHtcbiAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChNZW51SXRlbUJhc2UsIG1lcmdlUHJvcHMoe1xuICAgIHJvbGU6IFwibWVudWl0ZW1cIixcbiAgICBjbG9zZU9uU2VsZWN0OiB0cnVlXG4gIH0sIHByb3BzKSk7XG59XG5mdW5jdGlvbiBNZW51SXRlbURlc2NyaXB0aW9uKHByb3BzKSB7XG4gIGNvbnN0IGNvbnRleHQgPSB1c2VNZW51SXRlbUNvbnRleHQoKTtcbiAgY29uc3QgbWVyZ2VkUHJvcHMgPSBtZXJnZURlZmF1bHRQcm9wcyh7XG4gICAgaWQ6IGNvbnRleHQuZ2VuZXJhdGVJZChcImRlc2NyaXB0aW9uXCIpXG4gIH0sIHByb3BzKTtcbiAgY29uc3QgW2xvY2FsLCBvdGhlcnNdID0gc3BsaXRQcm9wcyhtZXJnZWRQcm9wcywgW1wiaWRcIl0pO1xuICBjcmVhdGVFZmZlY3QoKCkgPT4gb25DbGVhbnVwKGNvbnRleHQucmVnaXN0ZXJEZXNjcmlwdGlvbihsb2NhbC5pZCkpKTtcbiAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChQb2x5bW9ycGhpYywgbWVyZ2VQcm9wcyh7XG4gICAgYXM6IFwiZGl2XCIsXG4gICAgZ2V0IGlkKCkge1xuICAgICAgcmV0dXJuIGxvY2FsLmlkO1xuICAgIH1cbiAgfSwgKCkgPT4gY29udGV4dC5kYXRhc2V0KCksIG90aGVycykpO1xufVxuZnVuY3Rpb24gTWVudUl0ZW1JbmRpY2F0b3IocHJvcHMpIHtcbiAgY29uc3QgY29udGV4dCA9IHVzZU1lbnVJdGVtQ29udGV4dCgpO1xuICBjb25zdCBtZXJnZWRQcm9wcyA9IG1lcmdlRGVmYXVsdFByb3BzKHtcbiAgICBpZDogY29udGV4dC5nZW5lcmF0ZUlkKFwiaW5kaWNhdG9yXCIpXG4gIH0sIHByb3BzKTtcbiAgY29uc3QgW2xvY2FsLCBvdGhlcnNdID0gc3BsaXRQcm9wcyhtZXJnZWRQcm9wcywgW1wiZm9yY2VNb3VudFwiXSk7XG4gIHJldHVybiBjcmVhdGVDb21wb25lbnQoU2hvdywge1xuICAgIGdldCB3aGVuKCkge1xuICAgICAgcmV0dXJuIGxvY2FsLmZvcmNlTW91bnQgfHwgY29udGV4dC5pc0NoZWNrZWQoKTtcbiAgICB9LFxuICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoUG9seW1vcnBoaWMsIG1lcmdlUHJvcHMoe1xuICAgICAgICBhczogXCJkaXZcIlxuICAgICAgfSwgKCkgPT4gY29udGV4dC5kYXRhc2V0KCksIG90aGVycykpO1xuICAgIH1cbiAgfSk7XG59XG5mdW5jdGlvbiBNZW51SXRlbUxhYmVsKHByb3BzKSB7XG4gIGNvbnN0IGNvbnRleHQgPSB1c2VNZW51SXRlbUNvbnRleHQoKTtcbiAgY29uc3QgbWVyZ2VkUHJvcHMgPSBtZXJnZURlZmF1bHRQcm9wcyh7XG4gICAgaWQ6IGNvbnRleHQuZ2VuZXJhdGVJZChcImxhYmVsXCIpXG4gIH0sIHByb3BzKTtcbiAgY29uc3QgW2xvY2FsLCBvdGhlcnNdID0gc3BsaXRQcm9wcyhtZXJnZWRQcm9wcywgW1wicmVmXCIsIFwiaWRcIl0pO1xuICBjcmVhdGVFZmZlY3QoKCkgPT4gb25DbGVhbnVwKGNvbnRleHQucmVnaXN0ZXJMYWJlbChsb2NhbC5pZCkpKTtcbiAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChQb2x5bW9ycGhpYywgbWVyZ2VQcm9wcyh7XG4gICAgYXM6IFwiZGl2XCIsXG4gICAgcmVmKHIkKSB7XG4gICAgICBjb25zdCBfcmVmJCA9IG1lcmdlUmVmcyhjb250ZXh0LnNldExhYmVsUmVmLCBsb2NhbC5yZWYpO1xuICAgICAgdHlwZW9mIF9yZWYkID09PSBcImZ1bmN0aW9uXCIgJiYgX3JlZiQociQpO1xuICAgIH0sXG4gICAgZ2V0IGlkKCkge1xuICAgICAgcmV0dXJuIGxvY2FsLmlkO1xuICAgIH1cbiAgfSwgKCkgPT4gY29udGV4dC5kYXRhc2V0KCksIG90aGVycykpO1xufVxuZnVuY3Rpb24gTWVudVBvcnRhbChwcm9wcykge1xuICBjb25zdCBjb250ZXh0ID0gdXNlTWVudUNvbnRleHQoKTtcbiAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChTaG93LCB7XG4gICAgZ2V0IHdoZW4oKSB7XG4gICAgICByZXR1cm4gY29udGV4dC5jb250ZW50UHJlc2VuY2UuaXNQcmVzZW50KCk7XG4gICAgfSxcbiAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KFBvcnRhbCwgcHJvcHMpO1xuICAgIH1cbiAgfSk7XG59XG52YXIgTWVudVJhZGlvR3JvdXBDb250ZXh0ID0gY3JlYXRlQ29udGV4dCgpO1xuZnVuY3Rpb24gdXNlTWVudVJhZGlvR3JvdXBDb250ZXh0KCkge1xuICBjb25zdCBjb250ZXh0ID0gdXNlQ29udGV4dChNZW51UmFkaW9Hcm91cENvbnRleHQpO1xuICBpZiAoY29udGV4dCA9PT0gdm9pZCAwKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiW2tvYmFsdGVdOiBgdXNlTWVudVJhZGlvR3JvdXBDb250ZXh0YCBtdXN0IGJlIHVzZWQgd2l0aGluIGEgYE1lbnUuUmFkaW9Hcm91cGAgY29tcG9uZW50XCIpO1xuICB9XG4gIHJldHVybiBjb250ZXh0O1xufVxuZnVuY3Rpb24gTWVudVJhZGlvR3JvdXAocHJvcHMpIHtcbiAgY29uc3Qgcm9vdENvbnRleHQgPSB1c2VNZW51Um9vdENvbnRleHQoKTtcbiAgY29uc3QgZGVmYXVsdElkID0gcm9vdENvbnRleHQuZ2VuZXJhdGVJZChgcmFkaW9ncm91cC0ke2NyZWF0ZVVuaXF1ZUlkKCl9YCk7XG4gIGNvbnN0IG1lcmdlZFByb3BzID0gbWVyZ2VEZWZhdWx0UHJvcHMoe1xuICAgIGlkOiBkZWZhdWx0SWRcbiAgfSwgcHJvcHMpO1xuICBjb25zdCBbbG9jYWwsIG90aGVyc10gPSBzcGxpdFByb3BzKG1lcmdlZFByb3BzLCBbXCJ2YWx1ZVwiLCBcImRlZmF1bHRWYWx1ZVwiLCBcIm9uQ2hhbmdlXCIsIFwiZGlzYWJsZWRcIl0pO1xuICBjb25zdCBbc2VsZWN0ZWQsIHNldFNlbGVjdGVkXSA9IGNyZWF0ZUNvbnRyb2xsYWJsZVNpZ25hbCh7XG4gICAgdmFsdWU6ICgpID0+IGxvY2FsLnZhbHVlLFxuICAgIGRlZmF1bHRWYWx1ZTogKCkgPT4gbG9jYWwuZGVmYXVsdFZhbHVlLFxuICAgIG9uQ2hhbmdlOiAodmFsdWUpID0+IGxvY2FsLm9uQ2hhbmdlPy4odmFsdWUpXG4gIH0pO1xuICBjb25zdCBjb250ZXh0ID0ge1xuICAgIGlzRGlzYWJsZWQ6ICgpID0+IGxvY2FsLmRpc2FibGVkLFxuICAgIGlzU2VsZWN0ZWRWYWx1ZTogKHZhbHVlKSA9PiB2YWx1ZSA9PT0gc2VsZWN0ZWQoKSxcbiAgICBzZXRTZWxlY3RlZFZhbHVlOiBzZXRTZWxlY3RlZFxuICB9O1xuICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KE1lbnVSYWRpb0dyb3VwQ29udGV4dC5Qcm92aWRlciwge1xuICAgIHZhbHVlOiBjb250ZXh0LFxuICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoTWVudUdyb3VwLCBvdGhlcnMpO1xuICAgIH1cbiAgfSk7XG59XG5mdW5jdGlvbiBNZW51UmFkaW9JdGVtKHByb3BzKSB7XG4gIGNvbnN0IGNvbnRleHQgPSB1c2VNZW51UmFkaW9Hcm91cENvbnRleHQoKTtcbiAgY29uc3QgbWVyZ2VkUHJvcHMgPSBtZXJnZURlZmF1bHRQcm9wcyh7XG4gICAgY2xvc2VPblNlbGVjdDogZmFsc2VcbiAgfSwgcHJvcHMpO1xuICBjb25zdCBbbG9jYWwsIG90aGVyc10gPSBzcGxpdFByb3BzKG1lcmdlZFByb3BzLCBbXCJ2YWx1ZVwiLCBcIm9uU2VsZWN0XCJdKTtcbiAgY29uc3Qgb25TZWxlY3QgPSAoKSA9PiB7XG4gICAgbG9jYWwub25TZWxlY3Q/LigpO1xuICAgIGNvbnRleHQuc2V0U2VsZWN0ZWRWYWx1ZShsb2NhbC52YWx1ZSk7XG4gIH07XG4gIHJldHVybiBjcmVhdGVDb21wb25lbnQoTWVudUl0ZW1CYXNlLCBtZXJnZVByb3BzKHtcbiAgICByb2xlOiBcIm1lbnVpdGVtcmFkaW9cIixcbiAgICBnZXQgY2hlY2tlZCgpIHtcbiAgICAgIHJldHVybiBjb250ZXh0LmlzU2VsZWN0ZWRWYWx1ZShsb2NhbC52YWx1ZSk7XG4gICAgfSxcbiAgICBvblNlbGVjdFxuICB9LCBvdGhlcnMpKTtcbn1cbmZ1bmN0aW9uIGdldFBvaW50ZXJHcmFjZUFyZWEocGxhY2VtZW50LCBldmVudCwgY29udGVudEVsKSB7XG4gIGNvbnN0IGJhc2VQbGFjZW1lbnQgPSBwbGFjZW1lbnQuc3BsaXQoXCItXCIpWzBdO1xuICBjb25zdCBjb250ZW50UmVjdCA9IGNvbnRlbnRFbC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcbiAgY29uc3QgcG9seWdvbiA9IFtdO1xuICBjb25zdCBwb2ludGVyWCA9IGV2ZW50LmNsaWVudFg7XG4gIGNvbnN0IHBvaW50ZXJZID0gZXZlbnQuY2xpZW50WTtcbiAgc3dpdGNoIChiYXNlUGxhY2VtZW50KSB7XG4gICAgY2FzZSBcInRvcFwiOlxuICAgICAgcG9seWdvbi5wdXNoKFtwb2ludGVyWCwgcG9pbnRlclkgKyA1XSk7XG4gICAgICBwb2x5Z29uLnB1c2goW2NvbnRlbnRSZWN0LmxlZnQsIGNvbnRlbnRSZWN0LmJvdHRvbV0pO1xuICAgICAgcG9seWdvbi5wdXNoKFtjb250ZW50UmVjdC5sZWZ0LCBjb250ZW50UmVjdC50b3BdKTtcbiAgICAgIHBvbHlnb24ucHVzaChbY29udGVudFJlY3QucmlnaHQsIGNvbnRlbnRSZWN0LnRvcF0pO1xuICAgICAgcG9seWdvbi5wdXNoKFtjb250ZW50UmVjdC5yaWdodCwgY29udGVudFJlY3QuYm90dG9tXSk7XG4gICAgICBicmVhaztcbiAgICBjYXNlIFwicmlnaHRcIjpcbiAgICAgIHBvbHlnb24ucHVzaChbcG9pbnRlclggLSA1LCBwb2ludGVyWV0pO1xuICAgICAgcG9seWdvbi5wdXNoKFtjb250ZW50UmVjdC5sZWZ0LCBjb250ZW50UmVjdC50b3BdKTtcbiAgICAgIHBvbHlnb24ucHVzaChbY29udGVudFJlY3QucmlnaHQsIGNvbnRlbnRSZWN0LnRvcF0pO1xuICAgICAgcG9seWdvbi5wdXNoKFtjb250ZW50UmVjdC5yaWdodCwgY29udGVudFJlY3QuYm90dG9tXSk7XG4gICAgICBwb2x5Z29uLnB1c2goW2NvbnRlbnRSZWN0LmxlZnQsIGNvbnRlbnRSZWN0LmJvdHRvbV0pO1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSBcImJvdHRvbVwiOlxuICAgICAgcG9seWdvbi5wdXNoKFtwb2ludGVyWCwgcG9pbnRlclkgLSA1XSk7XG4gICAgICBwb2x5Z29uLnB1c2goW2NvbnRlbnRSZWN0LnJpZ2h0LCBjb250ZW50UmVjdC50b3BdKTtcbiAgICAgIHBvbHlnb24ucHVzaChbY29udGVudFJlY3QucmlnaHQsIGNvbnRlbnRSZWN0LmJvdHRvbV0pO1xuICAgICAgcG9seWdvbi5wdXNoKFtjb250ZW50UmVjdC5sZWZ0LCBjb250ZW50UmVjdC5ib3R0b21dKTtcbiAgICAgIHBvbHlnb24ucHVzaChbY29udGVudFJlY3QubGVmdCwgY29udGVudFJlY3QudG9wXSk7XG4gICAgICBicmVhaztcbiAgICBjYXNlIFwibGVmdFwiOlxuICAgICAgcG9seWdvbi5wdXNoKFtwb2ludGVyWCArIDUsIHBvaW50ZXJZXSk7XG4gICAgICBwb2x5Z29uLnB1c2goW2NvbnRlbnRSZWN0LnJpZ2h0LCBjb250ZW50UmVjdC5ib3R0b21dKTtcbiAgICAgIHBvbHlnb24ucHVzaChbY29udGVudFJlY3QubGVmdCwgY29udGVudFJlY3QuYm90dG9tXSk7XG4gICAgICBwb2x5Z29uLnB1c2goW2NvbnRlbnRSZWN0LmxlZnQsIGNvbnRlbnRSZWN0LnRvcF0pO1xuICAgICAgcG9seWdvbi5wdXNoKFtjb250ZW50UmVjdC5yaWdodCwgY29udGVudFJlY3QudG9wXSk7XG4gICAgICBicmVhaztcbiAgfVxuICByZXR1cm4gcG9seWdvbjtcbn1cbmZ1bmN0aW9uIGlzUG9pbnRlckluR3JhY2VBcmVhKGV2ZW50LCBhcmVhKSB7XG4gIGlmICghYXJlYSkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuICByZXR1cm4gaXNQb2ludEluUG9seWdvbihbZXZlbnQuY2xpZW50WCwgZXZlbnQuY2xpZW50WV0sIGFyZWEpO1xufVxuZnVuY3Rpb24gTWVudShwcm9wcykge1xuICBjb25zdCByb290Q29udGV4dCA9IHVzZU1lbnVSb290Q29udGV4dCgpO1xuICBjb25zdCBwYXJlbnREb21Db2xsZWN0aW9uQ29udGV4dCA9IHVzZU9wdGlvbmFsRG9tQ29sbGVjdGlvbkNvbnRleHQoKTtcbiAgY29uc3QgcGFyZW50TWVudUNvbnRleHQgPSB1c2VPcHRpb25hbE1lbnVDb250ZXh0KCk7XG4gIGNvbnN0IG1lcmdlZFByb3BzID0gbWVyZ2VEZWZhdWx0UHJvcHMoe1xuICAgIHBsYWNlbWVudDogXCJib3R0b20tc3RhcnRcIlxuICB9LCBwcm9wcyk7XG4gIGNvbnN0IFtsb2NhbCwgb3RoZXJzXSA9IHNwbGl0UHJvcHMobWVyZ2VkUHJvcHMsIFtcIm9wZW5cIiwgXCJkZWZhdWx0T3BlblwiLCBcIm9uT3BlbkNoYW5nZVwiXSk7XG4gIGxldCBwb2ludGVyR3JhY2VUaW1lb3V0SWQgPSAwO1xuICBsZXQgcG9pbnRlckdyYWNlSW50ZW50ID0gbnVsbDtcbiAgbGV0IHBvaW50ZXJEaXIgPSBcInJpZ2h0XCI7XG4gIGNvbnN0IFt0cmlnZ2VySWQsIHNldFRyaWdnZXJJZF0gPSBjcmVhdGVTaWduYWwoKTtcbiAgY29uc3QgW2NvbnRlbnRJZCwgc2V0Q29udGVudElkXSA9IGNyZWF0ZVNpZ25hbCgpO1xuICBjb25zdCBbdHJpZ2dlclJlZiwgc2V0VHJpZ2dlclJlZl0gPSBjcmVhdGVTaWduYWwoKTtcbiAgY29uc3QgW2NvbnRlbnRSZWYsIHNldENvbnRlbnRSZWZdID0gY3JlYXRlU2lnbmFsKCk7XG4gIGNvbnN0IFtmb2N1c1N0cmF0ZWd5LCBzZXRGb2N1c1N0cmF0ZWd5XSA9IGNyZWF0ZVNpZ25hbCh0cnVlKTtcbiAgY29uc3QgW2N1cnJlbnRQbGFjZW1lbnQsIHNldEN1cnJlbnRQbGFjZW1lbnRdID0gY3JlYXRlU2lnbmFsKG90aGVycy5wbGFjZW1lbnQpO1xuICBjb25zdCBbbmVzdGVkTWVudXMsIHNldE5lc3RlZE1lbnVzXSA9IGNyZWF0ZVNpZ25hbChbXSk7XG4gIGNvbnN0IFtpdGVtcywgc2V0SXRlbXNdID0gY3JlYXRlU2lnbmFsKFtdKTtcbiAgY29uc3Qge1xuICAgIERvbUNvbGxlY3Rpb25Qcm92aWRlclxuICB9ID0gY3JlYXRlRG9tQ29sbGVjdGlvbih7XG4gICAgaXRlbXMsXG4gICAgb25JdGVtc0NoYW5nZTogc2V0SXRlbXNcbiAgfSk7XG4gIGNvbnN0IGRpc2Nsb3N1cmVTdGF0ZSA9IGNyZWF0ZURpc2Nsb3N1cmVTdGF0ZSh7XG4gICAgb3BlbjogKCkgPT4gbG9jYWwub3BlbixcbiAgICBkZWZhdWx0T3BlbjogKCkgPT4gbG9jYWwuZGVmYXVsdE9wZW4sXG4gICAgb25PcGVuQ2hhbmdlOiAoaXNPcGVuKSA9PiBsb2NhbC5vbk9wZW5DaGFuZ2U/Lihpc09wZW4pXG4gIH0pO1xuICBjb25zdCBjb250ZW50UHJlc2VuY2UgPSBjcmVhdGVQcmVzZW5jZSgoKSA9PiByb290Q29udGV4dC5mb3JjZU1vdW50KCkgfHwgZGlzY2xvc3VyZVN0YXRlLmlzT3BlbigpKTtcbiAgY29uc3QgbGlzdFN0YXRlID0gY3JlYXRlTGlzdFN0YXRlKHtcbiAgICBzZWxlY3Rpb25Nb2RlOiBcIm5vbmVcIixcbiAgICBkYXRhU291cmNlOiBpdGVtc1xuICB9KTtcbiAgY29uc3Qgb3BlbiA9IChmb2N1c1N0cmF0ZWd5MikgPT4ge1xuICAgIHNldEZvY3VzU3RyYXRlZ3koZm9jdXNTdHJhdGVneTIpO1xuICAgIGRpc2Nsb3N1cmVTdGF0ZS5vcGVuKCk7XG4gIH07XG4gIGNvbnN0IGNsb3NlID0gKHJlY3Vyc2l2ZWx5ID0gZmFsc2UpID0+IHtcbiAgICBkaXNjbG9zdXJlU3RhdGUuY2xvc2UoKTtcbiAgICBpZiAocmVjdXJzaXZlbHkgJiYgcGFyZW50TWVudUNvbnRleHQpIHtcbiAgICAgIHBhcmVudE1lbnVDb250ZXh0LmNsb3NlKHRydWUpO1xuICAgIH1cbiAgfTtcbiAgY29uc3QgdG9nZ2xlID0gKGZvY3VzU3RyYXRlZ3kyKSA9PiB7XG4gICAgc2V0Rm9jdXNTdHJhdGVneShmb2N1c1N0cmF0ZWd5Mik7XG4gICAgZGlzY2xvc3VyZVN0YXRlLnRvZ2dsZSgpO1xuICB9O1xuICBjb25zdCBmb2N1c0NvbnRlbnQgPSAoKSA9PiB7XG4gICAgY29uc3QgY29udGVudCA9IGNvbnRlbnRSZWYoKTtcbiAgICBpZiAoY29udGVudCkge1xuICAgICAgZm9jdXNXaXRob3V0U2Nyb2xsaW5nKGNvbnRlbnQpO1xuICAgICAgbGlzdFN0YXRlLnNlbGVjdGlvbk1hbmFnZXIoKS5zZXRGb2N1c2VkKHRydWUpO1xuICAgICAgbGlzdFN0YXRlLnNlbGVjdGlvbk1hbmFnZXIoKS5zZXRGb2N1c2VkS2V5KHZvaWQgMCk7XG4gICAgfVxuICB9O1xuICBjb25zdCByZWdpc3Rlck5lc3RlZE1lbnUgPSAoZWxlbWVudCkgPT4ge1xuICAgIHNldE5lc3RlZE1lbnVzKChwcmV2KSA9PiBbLi4ucHJldiwgZWxlbWVudF0pO1xuICAgIGNvbnN0IHBhcmVudFVucmVnaXN0ZXIgPSBwYXJlbnRNZW51Q29udGV4dD8ucmVnaXN0ZXJOZXN0ZWRNZW51KGVsZW1lbnQpO1xuICAgIHJldHVybiAoKSA9PiB7XG4gICAgICBzZXROZXN0ZWRNZW51cygocHJldikgPT4gcmVtb3ZlSXRlbUZyb21BcnJheShwcmV2LCBlbGVtZW50KSk7XG4gICAgICBwYXJlbnRVbnJlZ2lzdGVyPy4oKTtcbiAgICB9O1xuICB9O1xuICBjb25zdCBpc1BvaW50ZXJNb3ZpbmdUb1N1Ym1lbnUgPSAoZTIpID0+IHtcbiAgICBjb25zdCBpc01vdmluZ1Rvd2FyZHMgPSBwb2ludGVyRGlyID09PSBwb2ludGVyR3JhY2VJbnRlbnQ/LnNpZGU7XG4gICAgcmV0dXJuIGlzTW92aW5nVG93YXJkcyAmJiBpc1BvaW50ZXJJbkdyYWNlQXJlYShlMiwgcG9pbnRlckdyYWNlSW50ZW50Py5hcmVhKTtcbiAgfTtcbiAgY29uc3Qgb25JdGVtRW50ZXIgPSAoZTIpID0+IHtcbiAgICBpZiAoaXNQb2ludGVyTW92aW5nVG9TdWJtZW51KGUyKSkge1xuICAgICAgZTIucHJldmVudERlZmF1bHQoKTtcbiAgICB9XG4gIH07XG4gIGNvbnN0IG9uSXRlbUxlYXZlID0gKGUyKSA9PiB7XG4gICAgaWYgKGlzUG9pbnRlck1vdmluZ1RvU3VibWVudShlMikpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgZm9jdXNDb250ZW50KCk7XG4gIH07XG4gIGNvbnN0IG9uVHJpZ2dlckxlYXZlID0gKGUyKSA9PiB7XG4gICAgaWYgKGlzUG9pbnRlck1vdmluZ1RvU3VibWVudShlMikpIHtcbiAgICAgIGUyLnByZXZlbnREZWZhdWx0KCk7XG4gICAgfVxuICB9O1xuICBjcmVhdGVIaWRlT3V0c2lkZSh7XG4gICAgaXNEaXNhYmxlZDogKCkgPT4ge1xuICAgICAgcmV0dXJuICEocGFyZW50TWVudUNvbnRleHQgPT0gbnVsbCAmJiBkaXNjbG9zdXJlU3RhdGUuaXNPcGVuKCkgJiYgcm9vdENvbnRleHQuaXNNb2RhbCgpKTtcbiAgICB9LFxuICAgIHRhcmdldHM6ICgpID0+IFtjb250ZW50UmVmKCksIC4uLm5lc3RlZE1lbnVzKCldLmZpbHRlcihCb29sZWFuKVxuICB9KTtcbiAgY3JlYXRlRWZmZWN0KCgpID0+IHtcbiAgICBjb25zdCBjb250ZW50RWwgPSBjb250ZW50UmVmKCk7XG4gICAgaWYgKCFjb250ZW50RWwgfHwgIXBhcmVudE1lbnVDb250ZXh0KSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIGNvbnN0IHBhcmVudFVucmVnaXN0ZXIgPSBwYXJlbnRNZW51Q29udGV4dC5yZWdpc3Rlck5lc3RlZE1lbnUoY29udGVudEVsKTtcbiAgICBvbkNsZWFudXAoKCkgPT4ge1xuICAgICAgcGFyZW50VW5yZWdpc3RlcigpO1xuICAgIH0pO1xuICB9KTtcbiAgY29uc3QgZGF0YXNldCA9IGNyZWF0ZU1lbW8oKCkgPT4gKHtcbiAgICBcImRhdGEtZXhwYW5kZWRcIjogZGlzY2xvc3VyZVN0YXRlLmlzT3BlbigpID8gXCJcIiA6IHZvaWQgMCxcbiAgICBcImRhdGEtY2xvc2VkXCI6ICFkaXNjbG9zdXJlU3RhdGUuaXNPcGVuKCkgPyBcIlwiIDogdm9pZCAwXG4gIH0pKTtcbiAgY29uc3QgY29udGV4dCA9IHtcbiAgICBkYXRhc2V0LFxuICAgIGlzT3BlbjogZGlzY2xvc3VyZVN0YXRlLmlzT3BlbixcbiAgICBjb250ZW50UHJlc2VuY2UsXG4gICAgbmVzdGVkTWVudXMsXG4gICAgY3VycmVudFBsYWNlbWVudCxcbiAgICBwb2ludGVyR3JhY2VUaW1lb3V0SWQ6ICgpID0+IHBvaW50ZXJHcmFjZVRpbWVvdXRJZCxcbiAgICBhdXRvRm9jdXM6IGZvY3VzU3RyYXRlZ3ksXG4gICAgbGlzdFN0YXRlOiAoKSA9PiBsaXN0U3RhdGUsXG4gICAgcGFyZW50TWVudUNvbnRleHQ6ICgpID0+IHBhcmVudE1lbnVDb250ZXh0LFxuICAgIHRyaWdnZXJSZWYsXG4gICAgY29udGVudFJlZixcbiAgICB0cmlnZ2VySWQsXG4gICAgY29udGVudElkLFxuICAgIHNldFRyaWdnZXJSZWYsXG4gICAgc2V0Q29udGVudFJlZixcbiAgICBvcGVuLFxuICAgIGNsb3NlLFxuICAgIHRvZ2dsZSxcbiAgICBmb2N1c0NvbnRlbnQsXG4gICAgb25JdGVtRW50ZXIsXG4gICAgb25JdGVtTGVhdmUsXG4gICAgb25UcmlnZ2VyTGVhdmUsXG4gICAgc2V0UG9pbnRlckRpcjogKGRpcikgPT4gcG9pbnRlckRpciA9IGRpcixcbiAgICBzZXRQb2ludGVyR3JhY2VUaW1lb3V0SWQ6IChpZCkgPT4gcG9pbnRlckdyYWNlVGltZW91dElkID0gaWQsXG4gICAgc2V0UG9pbnRlckdyYWNlSW50ZW50OiAoaW50ZW50KSA9PiBwb2ludGVyR3JhY2VJbnRlbnQgPSBpbnRlbnQsXG4gICAgcmVnaXN0ZXJOZXN0ZWRNZW51LFxuICAgIHJlZ2lzdGVySXRlbVRvUGFyZW50RG9tQ29sbGVjdGlvbjogcGFyZW50RG9tQ29sbGVjdGlvbkNvbnRleHQ/LnJlZ2lzdGVySXRlbSxcbiAgICByZWdpc3RlclRyaWdnZXJJZDogY3JlYXRlUmVnaXN0ZXJJZChzZXRUcmlnZ2VySWQpLFxuICAgIHJlZ2lzdGVyQ29udGVudElkOiBjcmVhdGVSZWdpc3RlcklkKHNldENvbnRlbnRJZClcbiAgfTtcbiAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChEb21Db2xsZWN0aW9uUHJvdmlkZXIsIHtcbiAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KE1lbnVDb250ZXh0LlByb3ZpZGVyLCB7XG4gICAgICAgIHZhbHVlOiBjb250ZXh0LFxuICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChQb3BwZXIsIG1lcmdlUHJvcHMoe1xuICAgICAgICAgICAgYW5jaG9yUmVmOiB0cmlnZ2VyUmVmLFxuICAgICAgICAgICAgY29udGVudFJlZixcbiAgICAgICAgICAgIG9uQ3VycmVudFBsYWNlbWVudENoYW5nZTogc2V0Q3VycmVudFBsYWNlbWVudFxuICAgICAgICAgIH0sIG90aGVycykpO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9XG4gIH0pO1xufVxuZnVuY3Rpb24gTWVudVN1Yihwcm9wcykge1xuICBjb25zdCB7XG4gICAgZGlyZWN0aW9uXG4gIH0gPSB1c2VMb2NhbGUoKTtcbiAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChNZW51LCBtZXJnZVByb3BzKHtcbiAgICBnZXQgcGxhY2VtZW50KCkge1xuICAgICAgcmV0dXJuIGRpcmVjdGlvbigpID09PSBcInJ0bFwiID8gXCJsZWZ0LXN0YXJ0XCIgOiBcInJpZ2h0LXN0YXJ0XCI7XG4gICAgfSxcbiAgICBmbGlwOiB0cnVlXG4gIH0sIHByb3BzKSk7XG59XG52YXIgU1VCX0NMT1NFX0tFWVMgPSB7XG4gIGx0cjogW1wiQXJyb3dMZWZ0XCJdLFxuICBydGw6IFtcIkFycm93UmlnaHRcIl1cbn07XG5mdW5jdGlvbiBNZW51U3ViQ29udGVudChwcm9wcykge1xuICBjb25zdCBjb250ZXh0ID0gdXNlTWVudUNvbnRleHQoKTtcbiAgY29uc3QgW2xvY2FsLCBvdGhlcnNdID0gc3BsaXRQcm9wcyhwcm9wcywgW1wib25Gb2N1c091dHNpZGVcIiwgXCJvbktleURvd25cIl0pO1xuICBjb25zdCB7XG4gICAgZGlyZWN0aW9uXG4gIH0gPSB1c2VMb2NhbGUoKTtcbiAgY29uc3Qgb25PcGVuQXV0b0ZvY3VzID0gKGUyKSA9PiB7XG4gICAgZTIucHJldmVudERlZmF1bHQoKTtcbiAgfTtcbiAgY29uc3Qgb25DbG9zZUF1dG9Gb2N1cyA9IChlMikgPT4ge1xuICAgIGUyLnByZXZlbnREZWZhdWx0KCk7XG4gIH07XG4gIGNvbnN0IG9uRm9jdXNPdXRzaWRlID0gKGUyKSA9PiB7XG4gICAgbG9jYWwub25Gb2N1c091dHNpZGU/LihlMik7XG4gICAgY29uc3QgdGFyZ2V0ID0gZTIudGFyZ2V0O1xuICAgIGlmICghY29udGFpbnMoY29udGV4dC50cmlnZ2VyUmVmKCksIHRhcmdldCkpIHtcbiAgICAgIGNvbnRleHQuY2xvc2UoKTtcbiAgICB9XG4gIH07XG4gIGNvbnN0IG9uS2V5RG93biA9IChlMikgPT4ge1xuICAgIGNhbGxIYW5kbGVyKGUyLCBsb2NhbC5vbktleURvd24pO1xuICAgIGNvbnN0IGlzS2V5RG93bkluc2lkZSA9IGNvbnRhaW5zKGUyLmN1cnJlbnRUYXJnZXQsIGUyLnRhcmdldCk7XG4gICAgY29uc3QgaXNDbG9zZUtleSA9IFNVQl9DTE9TRV9LRVlTW2RpcmVjdGlvbigpXS5pbmNsdWRlcyhlMi5rZXkpO1xuICAgIGNvbnN0IGlzU3ViTWVudSA9IGNvbnRleHQucGFyZW50TWVudUNvbnRleHQoKSAhPSBudWxsO1xuICAgIGlmIChpc0tleURvd25JbnNpZGUgJiYgaXNDbG9zZUtleSAmJiBpc1N1Yk1lbnUpIHtcbiAgICAgIGNvbnRleHQuY2xvc2UoKTtcbiAgICAgIGZvY3VzV2l0aG91dFNjcm9sbGluZyhjb250ZXh0LnRyaWdnZXJSZWYoKSk7XG4gICAgfVxuICB9O1xuICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KE1lbnVDb250ZW50QmFzZSwgbWVyZ2VQcm9wcyh7XG4gICAgb25PcGVuQXV0b0ZvY3VzLFxuICAgIG9uQ2xvc2VBdXRvRm9jdXMsXG4gICAgb25Gb2N1c091dHNpZGUsXG4gICAgb25LZXlEb3duXG4gIH0sIG90aGVycykpO1xufVxudmFyIFNFTEVDVElPTl9LRVlTID0gW1wiRW50ZXJcIiwgXCIgXCJdO1xudmFyIFNVQl9PUEVOX0tFWVMgPSB7XG4gIGx0cjogWy4uLlNFTEVDVElPTl9LRVlTLCBcIkFycm93UmlnaHRcIl0sXG4gIHJ0bDogWy4uLlNFTEVDVElPTl9LRVlTLCBcIkFycm93TGVmdFwiXVxufTtcbmZ1bmN0aW9uIE1lbnVTdWJUcmlnZ2VyKHByb3BzKSB7XG4gIGxldCByZWY7XG4gIGNvbnN0IHJvb3RDb250ZXh0ID0gdXNlTWVudVJvb3RDb250ZXh0KCk7XG4gIGNvbnN0IGNvbnRleHQgPSB1c2VNZW51Q29udGV4dCgpO1xuICBjb25zdCBtZXJnZWRQcm9wcyA9IG1lcmdlRGVmYXVsdFByb3BzKHtcbiAgICBpZDogcm9vdENvbnRleHQuZ2VuZXJhdGVJZChgc3ViLXRyaWdnZXItJHtjcmVhdGVVbmlxdWVJZCgpfWApXG4gIH0sIHByb3BzKTtcbiAgY29uc3QgW2xvY2FsLCBvdGhlcnNdID0gc3BsaXRQcm9wcyhtZXJnZWRQcm9wcywgW1wicmVmXCIsIFwiaWRcIiwgXCJ0ZXh0VmFsdWVcIiwgXCJkaXNhYmxlZFwiLCBcIm9uUG9pbnRlck1vdmVcIiwgXCJvblBvaW50ZXJMZWF2ZVwiLCBcIm9uUG9pbnRlckRvd25cIiwgXCJvblBvaW50ZXJVcFwiLCBcIm9uQ2xpY2tcIiwgXCJvbktleURvd25cIiwgXCJvbk1vdXNlRG93blwiLCBcIm9uRm9jdXNcIl0pO1xuICBsZXQgb3BlblRpbWVvdXRJZCA9IG51bGw7XG4gIGNvbnN0IGNsZWFyT3BlblRpbWVvdXQgPSAoKSA9PiB7XG4gICAgaWYgKGlzU2VydmVyKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIGlmIChvcGVuVGltZW91dElkKSB7XG4gICAgICB3aW5kb3cuY2xlYXJUaW1lb3V0KG9wZW5UaW1lb3V0SWQpO1xuICAgIH1cbiAgICBvcGVuVGltZW91dElkID0gbnVsbDtcbiAgfTtcbiAgY29uc3Qge1xuICAgIGRpcmVjdGlvblxuICB9ID0gdXNlTG9jYWxlKCk7XG4gIGNvbnN0IGtleSA9ICgpID0+IGxvY2FsLmlkO1xuICBjb25zdCBwYXJlbnRTZWxlY3Rpb25NYW5hZ2VyID0gKCkgPT4ge1xuICAgIGNvbnN0IHBhcmVudE1lbnVDb250ZXh0ID0gY29udGV4dC5wYXJlbnRNZW51Q29udGV4dCgpO1xuICAgIGlmIChwYXJlbnRNZW51Q29udGV4dCA9PSBudWxsKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXCJba29iYWx0ZV06IGBNZW51LlN1YlRyaWdnZXJgIG11c3QgYmUgdXNlZCB3aXRoaW4gYSBgTWVudS5TdWJgIGNvbXBvbmVudFwiKTtcbiAgICB9XG4gICAgcmV0dXJuIHBhcmVudE1lbnVDb250ZXh0Lmxpc3RTdGF0ZSgpLnNlbGVjdGlvbk1hbmFnZXIoKTtcbiAgfTtcbiAgY29uc3QgY29sbGVjdGlvbiA9ICgpID0+IGNvbnRleHQubGlzdFN0YXRlKCkuY29sbGVjdGlvbigpO1xuICBjb25zdCBpc0hpZ2hsaWdodGVkID0gKCkgPT4gcGFyZW50U2VsZWN0aW9uTWFuYWdlcigpLmZvY3VzZWRLZXkoKSA9PT0ga2V5KCk7XG4gIGNvbnN0IHNlbGVjdGFibGVJdGVtID0gY3JlYXRlU2VsZWN0YWJsZUl0ZW0oe1xuICAgIGtleSxcbiAgICBzZWxlY3Rpb25NYW5hZ2VyOiBwYXJlbnRTZWxlY3Rpb25NYW5hZ2VyLFxuICAgIHNob3VsZFNlbGVjdE9uUHJlc3NVcDogdHJ1ZSxcbiAgICBhbGxvd3NEaWZmZXJlbnRQcmVzc09yaWdpbjogdHJ1ZSxcbiAgICBkaXNhYmxlZDogKCkgPT4gbG9jYWwuZGlzYWJsZWRcbiAgfSwgKCkgPT4gcmVmKTtcbiAgY29uc3Qgb25DbGljayA9IChlMikgPT4ge1xuICAgIGNhbGxIYW5kbGVyKGUyLCBsb2NhbC5vbkNsaWNrKTtcbiAgICBpZiAoIWNvbnRleHQuaXNPcGVuKCkgJiYgIWxvY2FsLmRpc2FibGVkKSB7XG4gICAgICBjb250ZXh0Lm9wZW4odHJ1ZSk7XG4gICAgfVxuICB9O1xuICBjb25zdCBvblBvaW50ZXJNb3ZlID0gKGUyKSA9PiB7XG4gICAgY2FsbEhhbmRsZXIoZTIsIGxvY2FsLm9uUG9pbnRlck1vdmUpO1xuICAgIGlmIChlMi5wb2ludGVyVHlwZSAhPT0gXCJtb3VzZVwiKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIGNvbnN0IHBhcmVudE1lbnVDb250ZXh0ID0gY29udGV4dC5wYXJlbnRNZW51Q29udGV4dCgpO1xuICAgIHBhcmVudE1lbnVDb250ZXh0Py5vbkl0ZW1FbnRlcihlMik7XG4gICAgaWYgKGUyLmRlZmF1bHRQcmV2ZW50ZWQpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgaWYgKGxvY2FsLmRpc2FibGVkKSB7XG4gICAgICBwYXJlbnRNZW51Q29udGV4dD8ub25JdGVtTGVhdmUoZTIpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBpZiAoIWNvbnRleHQuaXNPcGVuKCkgJiYgIW9wZW5UaW1lb3V0SWQpIHtcbiAgICAgIGNvbnRleHQucGFyZW50TWVudUNvbnRleHQoKT8uc2V0UG9pbnRlckdyYWNlSW50ZW50KG51bGwpO1xuICAgICAgb3BlblRpbWVvdXRJZCA9IHdpbmRvdy5zZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgY29udGV4dC5vcGVuKGZhbHNlKTtcbiAgICAgICAgY2xlYXJPcGVuVGltZW91dCgpO1xuICAgICAgfSwgMTAwKTtcbiAgICB9XG4gICAgcGFyZW50TWVudUNvbnRleHQ/Lm9uSXRlbUVudGVyKGUyKTtcbiAgICBpZiAoIWUyLmRlZmF1bHRQcmV2ZW50ZWQpIHtcbiAgICAgIGlmIChjb250ZXh0Lmxpc3RTdGF0ZSgpLnNlbGVjdGlvbk1hbmFnZXIoKS5pc0ZvY3VzZWQoKSkge1xuICAgICAgICBjb250ZXh0Lmxpc3RTdGF0ZSgpLnNlbGVjdGlvbk1hbmFnZXIoKS5zZXRGb2N1c2VkKGZhbHNlKTtcbiAgICAgICAgY29udGV4dC5saXN0U3RhdGUoKS5zZWxlY3Rpb25NYW5hZ2VyKCkuc2V0Rm9jdXNlZEtleSh2b2lkIDApO1xuICAgICAgfVxuICAgICAgZm9jdXNXaXRob3V0U2Nyb2xsaW5nKGUyLmN1cnJlbnRUYXJnZXQpO1xuICAgICAgcGFyZW50TWVudUNvbnRleHQ/Lmxpc3RTdGF0ZSgpLnNlbGVjdGlvbk1hbmFnZXIoKS5zZXRGb2N1c2VkKHRydWUpO1xuICAgICAgcGFyZW50TWVudUNvbnRleHQ/Lmxpc3RTdGF0ZSgpLnNlbGVjdGlvbk1hbmFnZXIoKS5zZXRGb2N1c2VkS2V5KGtleSgpKTtcbiAgICB9XG4gIH07XG4gIGNvbnN0IG9uUG9pbnRlckxlYXZlID0gKGUyKSA9PiB7XG4gICAgY2FsbEhhbmRsZXIoZTIsIGxvY2FsLm9uUG9pbnRlckxlYXZlKTtcbiAgICBpZiAoZTIucG9pbnRlclR5cGUgIT09IFwibW91c2VcIikge1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBjbGVhck9wZW5UaW1lb3V0KCk7XG4gICAgY29uc3QgcGFyZW50TWVudUNvbnRleHQgPSBjb250ZXh0LnBhcmVudE1lbnVDb250ZXh0KCk7XG4gICAgY29uc3QgY29udGVudEVsID0gY29udGV4dC5jb250ZW50UmVmKCk7XG4gICAgaWYgKGNvbnRlbnRFbCkge1xuICAgICAgcGFyZW50TWVudUNvbnRleHQ/LnNldFBvaW50ZXJHcmFjZUludGVudCh7XG4gICAgICAgIGFyZWE6IGdldFBvaW50ZXJHcmFjZUFyZWEoY29udGV4dC5jdXJyZW50UGxhY2VtZW50KCksIGUyLCBjb250ZW50RWwpLFxuICAgICAgICAvLyBTYWZlIGJlY2F1c2Ugc3ViIG1lbnUgYWx3YXlzIG9wZW4gXCJsZWZ0XCIgb3IgXCJyaWdodFwiLlxuICAgICAgICBzaWRlOiBjb250ZXh0LmN1cnJlbnRQbGFjZW1lbnQoKS5zcGxpdChcIi1cIilbMF1cbiAgICAgIH0pO1xuICAgICAgd2luZG93LmNsZWFyVGltZW91dChwYXJlbnRNZW51Q29udGV4dD8ucG9pbnRlckdyYWNlVGltZW91dElkKCkpO1xuICAgICAgY29uc3QgcG9pbnRlckdyYWNlVGltZW91dElkID0gd2luZG93LnNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICBwYXJlbnRNZW51Q29udGV4dD8uc2V0UG9pbnRlckdyYWNlSW50ZW50KG51bGwpO1xuICAgICAgfSwgMzAwKTtcbiAgICAgIHBhcmVudE1lbnVDb250ZXh0Py5zZXRQb2ludGVyR3JhY2VUaW1lb3V0SWQocG9pbnRlckdyYWNlVGltZW91dElkKTtcbiAgICB9IGVsc2Uge1xuICAgICAgcGFyZW50TWVudUNvbnRleHQ/Lm9uVHJpZ2dlckxlYXZlKGUyKTtcbiAgICAgIGlmIChlMi5kZWZhdWx0UHJldmVudGVkKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICAgIHBhcmVudE1lbnVDb250ZXh0Py5zZXRQb2ludGVyR3JhY2VJbnRlbnQobnVsbCk7XG4gICAgfVxuICAgIHBhcmVudE1lbnVDb250ZXh0Py5vbkl0ZW1MZWF2ZShlMik7XG4gIH07XG4gIGNvbnN0IG9uS2V5RG93biA9IChlMikgPT4ge1xuICAgIGNhbGxIYW5kbGVyKGUyLCBsb2NhbC5vbktleURvd24pO1xuICAgIGlmIChlMi5yZXBlYXQpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgaWYgKGxvY2FsLmRpc2FibGVkKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIGlmIChTVUJfT1BFTl9LRVlTW2RpcmVjdGlvbigpXS5pbmNsdWRlcyhlMi5rZXkpKSB7XG4gICAgICBlMi5zdG9wUHJvcGFnYXRpb24oKTtcbiAgICAgIGUyLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICBwYXJlbnRTZWxlY3Rpb25NYW5hZ2VyKCkuc2V0Rm9jdXNlZChmYWxzZSk7XG4gICAgICBwYXJlbnRTZWxlY3Rpb25NYW5hZ2VyKCkuc2V0Rm9jdXNlZEtleSh2b2lkIDApO1xuICAgICAgaWYgKCFjb250ZXh0LmlzT3BlbigpKSB7XG4gICAgICAgIGNvbnRleHQub3BlbihcImZpcnN0XCIpO1xuICAgICAgfVxuICAgICAgY29udGV4dC5mb2N1c0NvbnRlbnQoKTtcbiAgICAgIGNvbnRleHQubGlzdFN0YXRlKCkuc2VsZWN0aW9uTWFuYWdlcigpLnNldEZvY3VzZWQodHJ1ZSk7XG4gICAgICBjb250ZXh0Lmxpc3RTdGF0ZSgpLnNlbGVjdGlvbk1hbmFnZXIoKS5zZXRGb2N1c2VkS2V5KGNvbGxlY3Rpb24oKS5nZXRGaXJzdEtleSgpKTtcbiAgICB9XG4gIH07XG4gIGNyZWF0ZUVmZmVjdCgoKSA9PiB7XG4gICAgaWYgKGNvbnRleHQucmVnaXN0ZXJJdGVtVG9QYXJlbnREb21Db2xsZWN0aW9uID09IG51bGwpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcIltrb2JhbHRlXTogYE1lbnUuU3ViVHJpZ2dlcmAgbXVzdCBiZSB1c2VkIHdpdGhpbiBhIGBNZW51LlN1YmAgY29tcG9uZW50XCIpO1xuICAgIH1cbiAgICBjb25zdCB1bnJlZ2lzdGVyID0gY29udGV4dC5yZWdpc3Rlckl0ZW1Ub1BhcmVudERvbUNvbGxlY3Rpb24oe1xuICAgICAgcmVmOiAoKSA9PiByZWYsXG4gICAgICB0eXBlOiBcIml0ZW1cIixcbiAgICAgIGtleToga2V5KCksXG4gICAgICB0ZXh0VmFsdWU6IGxvY2FsLnRleHRWYWx1ZSA/PyByZWY/LnRleHRDb250ZW50ID8/IFwiXCIsXG4gICAgICBkaXNhYmxlZDogbG9jYWwuZGlzYWJsZWQgPz8gZmFsc2VcbiAgICB9KTtcbiAgICBvbkNsZWFudXAodW5yZWdpc3Rlcik7XG4gIH0pO1xuICBjcmVhdGVFZmZlY3Qob24oKCkgPT4gY29udGV4dC5wYXJlbnRNZW51Q29udGV4dCgpPy5wb2ludGVyR3JhY2VUaW1lb3V0SWQoKSwgKHBvaW50ZXJHcmFjZVRpbWVyKSA9PiB7XG4gICAgb25DbGVhbnVwKCgpID0+IHtcbiAgICAgIHdpbmRvdy5jbGVhclRpbWVvdXQocG9pbnRlckdyYWNlVGltZXIpO1xuICAgICAgY29udGV4dC5wYXJlbnRNZW51Q29udGV4dCgpPy5zZXRQb2ludGVyR3JhY2VJbnRlbnQobnVsbCk7XG4gICAgfSk7XG4gIH0pKTtcbiAgY3JlYXRlRWZmZWN0KCgpID0+IG9uQ2xlYW51cChjb250ZXh0LnJlZ2lzdGVyVHJpZ2dlcklkKGxvY2FsLmlkKSkpO1xuICBvbkNsZWFudXAoKCkgPT4ge1xuICAgIGNsZWFyT3BlblRpbWVvdXQoKTtcbiAgfSk7XG4gIHJldHVybiBjcmVhdGVDb21wb25lbnQoUG9seW1vcnBoaWMsIG1lcmdlUHJvcHMoe1xuICAgIGFzOiBcImRpdlwiLFxuICAgIHJlZihyJCkge1xuICAgICAgY29uc3QgX3JlZiQgPSBtZXJnZVJlZnMoKGVsKSA9PiB7XG4gICAgICAgIGNvbnRleHQuc2V0VHJpZ2dlclJlZihlbCk7XG4gICAgICAgIHJlZiA9IGVsO1xuICAgICAgfSwgbG9jYWwucmVmKTtcbiAgICAgIHR5cGVvZiBfcmVmJCA9PT0gXCJmdW5jdGlvblwiICYmIF9yZWYkKHIkKTtcbiAgICB9LFxuICAgIGdldCBpZCgpIHtcbiAgICAgIHJldHVybiBsb2NhbC5pZDtcbiAgICB9LFxuICAgIHJvbGU6IFwibWVudWl0ZW1cIixcbiAgICBnZXQgdGFiSW5kZXgoKSB7XG4gICAgICByZXR1cm4gc2VsZWN0YWJsZUl0ZW0udGFiSW5kZXgoKTtcbiAgICB9LFxuICAgIFwiYXJpYS1oYXNwb3B1cFwiOiBcInRydWVcIixcbiAgICBnZXQgW1wiYXJpYS1leHBhbmRlZFwiXSgpIHtcbiAgICAgIHJldHVybiBjb250ZXh0LmlzT3BlbigpO1xuICAgIH0sXG4gICAgZ2V0IFtcImFyaWEtY29udHJvbHNcIl0oKSB7XG4gICAgICByZXR1cm4gY3JlYXRlTWVtbygoKSA9PiAhIWNvbnRleHQuaXNPcGVuKCkpKCkgPyBjb250ZXh0LmNvbnRlbnRJZCgpIDogdm9pZCAwO1xuICAgIH0sXG4gICAgZ2V0IFtcImFyaWEtZGlzYWJsZWRcIl0oKSB7XG4gICAgICByZXR1cm4gbG9jYWwuZGlzYWJsZWQ7XG4gICAgfSxcbiAgICBnZXQgW1wiZGF0YS1rZXlcIl0oKSB7XG4gICAgICByZXR1cm4gc2VsZWN0YWJsZUl0ZW0uZGF0YUtleSgpO1xuICAgIH0sXG4gICAgZ2V0IFtcImRhdGEtaGlnaGxpZ2h0ZWRcIl0oKSB7XG4gICAgICByZXR1cm4gaXNIaWdobGlnaHRlZCgpID8gXCJcIiA6IHZvaWQgMDtcbiAgICB9LFxuICAgIGdldCBbXCJkYXRhLWRpc2FibGVkXCJdKCkge1xuICAgICAgcmV0dXJuIGxvY2FsLmRpc2FibGVkID8gXCJcIiA6IHZvaWQgMDtcbiAgICB9LFxuICAgIGdldCBvblBvaW50ZXJEb3duKCkge1xuICAgICAgcmV0dXJuIGNvbXBvc2VFdmVudEhhbmRsZXJzKFtsb2NhbC5vblBvaW50ZXJEb3duLCBzZWxlY3RhYmxlSXRlbS5vblBvaW50ZXJEb3duXSk7XG4gICAgfSxcbiAgICBnZXQgb25Qb2ludGVyVXAoKSB7XG4gICAgICByZXR1cm4gY29tcG9zZUV2ZW50SGFuZGxlcnMoW2xvY2FsLm9uUG9pbnRlclVwLCBzZWxlY3RhYmxlSXRlbS5vblBvaW50ZXJVcF0pO1xuICAgIH0sXG4gICAgZ2V0IG9uQ2xpY2soKSB7XG4gICAgICByZXR1cm4gY29tcG9zZUV2ZW50SGFuZGxlcnMoW29uQ2xpY2ssIHNlbGVjdGFibGVJdGVtLm9uQ2xpY2tdKTtcbiAgICB9LFxuICAgIGdldCBvbktleURvd24oKSB7XG4gICAgICByZXR1cm4gY29tcG9zZUV2ZW50SGFuZGxlcnMoW29uS2V5RG93biwgc2VsZWN0YWJsZUl0ZW0ub25LZXlEb3duXSk7XG4gICAgfSxcbiAgICBnZXQgb25Nb3VzZURvd24oKSB7XG4gICAgICByZXR1cm4gY29tcG9zZUV2ZW50SGFuZGxlcnMoW2xvY2FsLm9uTW91c2VEb3duLCBzZWxlY3RhYmxlSXRlbS5vbk1vdXNlRG93bl0pO1xuICAgIH0sXG4gICAgZ2V0IG9uRm9jdXMoKSB7XG4gICAgICByZXR1cm4gY29tcG9zZUV2ZW50SGFuZGxlcnMoW2xvY2FsLm9uRm9jdXMsIHNlbGVjdGFibGVJdGVtLm9uRm9jdXNdKTtcbiAgICB9LFxuICAgIG9uUG9pbnRlck1vdmUsXG4gICAgb25Qb2ludGVyTGVhdmVcbiAgfSwgKCkgPT4gY29udGV4dC5kYXRhc2V0KCksIG90aGVycykpO1xufVxuZnVuY3Rpb24gTWVudVJvb3QocHJvcHMpIHtcbiAgY29uc3QgZGVmYXVsdElkID0gYG1lbnUtJHtjcmVhdGVVbmlxdWVJZCgpfWA7XG4gIGNvbnN0IG1lcmdlZFByb3BzID0gbWVyZ2VEZWZhdWx0UHJvcHMoe1xuICAgIGlkOiBkZWZhdWx0SWQsXG4gICAgbW9kYWw6IHRydWVcbiAgfSwgcHJvcHMpO1xuICBjb25zdCBbbG9jYWwsIG90aGVyc10gPSBzcGxpdFByb3BzKG1lcmdlZFByb3BzLCBbXCJpZFwiLCBcIm1vZGFsXCIsIFwicHJldmVudFNjcm9sbFwiLCBcImZvcmNlTW91bnRcIiwgXCJvcGVuXCIsIFwiZGVmYXVsdE9wZW5cIiwgXCJvbk9wZW5DaGFuZ2VcIiwgXCJ2YWx1ZVwiXSk7XG4gIGNvbnN0IGRpc2Nsb3N1cmVTdGF0ZSA9IGNyZWF0ZURpc2Nsb3N1cmVTdGF0ZSh7XG4gICAgb3BlbjogKCkgPT4gbG9jYWwub3BlbixcbiAgICBkZWZhdWx0T3BlbjogKCkgPT4gbG9jYWwuZGVmYXVsdE9wZW4sXG4gICAgb25PcGVuQ2hhbmdlOiAoaXNPcGVuKSA9PiBsb2NhbC5vbk9wZW5DaGFuZ2U/Lihpc09wZW4pXG4gIH0pO1xuICBjb25zdCBjb250ZXh0ID0ge1xuICAgIGlzTW9kYWw6ICgpID0+IGxvY2FsLm1vZGFsID8/IHRydWUsXG4gICAgcHJldmVudFNjcm9sbDogKCkgPT4gbG9jYWwucHJldmVudFNjcm9sbCA/PyBjb250ZXh0LmlzTW9kYWwoKSxcbiAgICBmb3JjZU1vdW50OiAoKSA9PiBsb2NhbC5mb3JjZU1vdW50ID8/IGZhbHNlLFxuICAgIGdlbmVyYXRlSWQ6IGNyZWF0ZUdlbmVyYXRlSWQoKCkgPT4gbG9jYWwuaWQpLFxuICAgIHZhbHVlOiAoKSA9PiBsb2NhbC52YWx1ZVxuICB9O1xuICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KE1lbnVSb290Q29udGV4dC5Qcm92aWRlciwge1xuICAgIHZhbHVlOiBjb250ZXh0LFxuICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoTWVudSwgbWVyZ2VQcm9wcyh7XG4gICAgICAgIGdldCBvcGVuKCkge1xuICAgICAgICAgIHJldHVybiBkaXNjbG9zdXJlU3RhdGUuaXNPcGVuKCk7XG4gICAgICAgIH0sXG4gICAgICAgIGdldCBvbk9wZW5DaGFuZ2UoKSB7XG4gICAgICAgICAgcmV0dXJuIGRpc2Nsb3N1cmVTdGF0ZS5zZXRJc09wZW47XG4gICAgICAgIH1cbiAgICAgIH0sIG90aGVycykpO1xuICAgIH1cbiAgfSk7XG59XG5cbi8vIC4uLy4uL25vZGVfbW9kdWxlcy8ucG5wbS9Aa29iYWx0ZStjb3JlQDAuMTMuMV9zb2xpZC1qc0AxLjguMTcvbm9kZV9tb2R1bGVzL0Brb2JhbHRlL2NvcmUvZGlzdC9jaHVuay83WDY2VkZIUC5qc1xuZnVuY3Rpb24gTWVudVRyaWdnZXIocHJvcHMpIHtcbiAgY29uc3Qgcm9vdENvbnRleHQgPSB1c2VNZW51Um9vdENvbnRleHQoKTtcbiAgY29uc3QgY29udGV4dCA9IHVzZU1lbnVDb250ZXh0KCk7XG4gIGNvbnN0IG9wdGlvbmFsTWVudWJhckNvbnRleHQgPSB1c2VPcHRpb25hbE1lbnViYXJDb250ZXh0KCk7XG4gIGNvbnN0IG1lcmdlZFByb3BzID0gbWVyZ2VEZWZhdWx0UHJvcHMoe1xuICAgIGlkOiByb290Q29udGV4dC5nZW5lcmF0ZUlkKFwidHJpZ2dlclwiKVxuICB9LCBwcm9wcyk7XG4gIGNvbnN0IFtsb2NhbCwgb3RoZXJzXSA9IHNwbGl0UHJvcHMobWVyZ2VkUHJvcHMsIFtcInJlZlwiLCBcImlkXCIsIFwiZGlzYWJsZWRcIiwgXCJvblBvaW50ZXJEb3duXCIsIFwib25DbGlja1wiLCBcIm9uS2V5RG93blwiLCBcIm9uTW91c2VPdmVyXCIsIFwib25Gb2N1c1wiXSk7XG4gIGxldCBrZXk7XG4gIGlmIChvcHRpb25hbE1lbnViYXJDb250ZXh0ICE9PSB2b2lkIDApIHtcbiAgICBrZXkgPSByb290Q29udGV4dC52YWx1ZSgpID8/IGxvY2FsLmlkO1xuICAgIGNyZWF0ZUVmZmVjdCgoKSA9PiB7XG4gICAgICBvcHRpb25hbE1lbnViYXJDb250ZXh0LnJlZ2lzdGVyTWVudShrZXksIFtjb250ZXh0LmNvbnRlbnRSZWYoKSwgLi4uY29udGV4dC5uZXN0ZWRNZW51cygpXSk7XG4gICAgfSk7XG4gICAgY3JlYXRlRWZmZWN0KCgpID0+IHtcbiAgICAgIGlmIChvcHRpb25hbE1lbnViYXJDb250ZXh0LnZhbHVlKCkgPT09IGtleSkge1xuICAgICAgICBjb250ZXh0LnRyaWdnZXJSZWYoKT8uZm9jdXMoKTtcbiAgICAgICAgaWYgKG9wdGlvbmFsTWVudWJhckNvbnRleHQuYXV0b0ZvY3VzTWVudSgpKVxuICAgICAgICAgIGNvbnRleHQub3Blbih0cnVlKTtcbiAgICAgIH0gZWxzZVxuICAgICAgICBjb250ZXh0LmNsb3NlKHRydWUpO1xuICAgIH0pO1xuICAgIGNyZWF0ZUVmZmVjdCgoKSA9PiB7XG4gICAgICBpZiAoY29udGV4dC5pc09wZW4oKSlcbiAgICAgICAgb3B0aW9uYWxNZW51YmFyQ29udGV4dC5zZXRWYWx1ZShrZXkpO1xuICAgIH0pO1xuICAgIG9uQ2xlYW51cCgoKSA9PiB7XG4gICAgICBvcHRpb25hbE1lbnViYXJDb250ZXh0LnVucmVnaXN0ZXJNZW51KGtleSk7XG4gICAgfSk7XG4gICAgaWYgKG9wdGlvbmFsTWVudWJhckNvbnRleHQubGFzdFZhbHVlKCkgPT09IHZvaWQgMClcbiAgICAgIG9wdGlvbmFsTWVudWJhckNvbnRleHQuc2V0TGFzdFZhbHVlKGtleSk7XG4gIH1cbiAgY29uc3QgdGFnTmFtZSA9IGNyZWF0ZVRhZ05hbWUoKCkgPT4gY29udGV4dC50cmlnZ2VyUmVmKCksICgpID0+IFwiYnV0dG9uXCIpO1xuICBjb25zdCBpc05hdGl2ZUxpbmsgPSBjcmVhdGVNZW1vKCgpID0+IHtcbiAgICByZXR1cm4gdGFnTmFtZSgpID09PSBcImFcIiAmJiBjb250ZXh0LnRyaWdnZXJSZWYoKT8uZ2V0QXR0cmlidXRlKFwiaHJlZlwiKSAhPSBudWxsO1xuICB9KTtcbiAgY29uc3QgaGFuZGxlQ2xpY2sgPSAoKSA9PiB7XG4gICAgb3B0aW9uYWxNZW51YmFyQ29udGV4dD8uc2V0QXV0b0ZvY3VzTWVudSh0cnVlKTtcbiAgICBpZiAob3B0aW9uYWxNZW51YmFyQ29udGV4dCAhPT0gdm9pZCAwKVxuICAgICAgY29udGV4dC50b2dnbGUoZmFsc2UpO1xuICAgIGVsc2VcbiAgICAgIGNvbnRleHQudG9nZ2xlKHRydWUpO1xuICAgIGlmIChvcHRpb25hbE1lbnViYXJDb250ZXh0ICE9PSB2b2lkIDAgJiYgIWNvbnRleHQuaXNPcGVuKCkgJiYgb3B0aW9uYWxNZW51YmFyQ29udGV4dC52YWx1ZSgpID09PSBrZXkpIHtcbiAgICAgIG9wdGlvbmFsTWVudWJhckNvbnRleHQuY2xvc2VNZW51KCk7XG4gICAgfVxuICB9O1xuICBjb25zdCBvblBvaW50ZXJEb3duID0gKGUyKSA9PiB7XG4gICAgY2FsbEhhbmRsZXIoZTIsIGxvY2FsLm9uUG9pbnRlckRvd24pO1xuICAgIGUyLmN1cnJlbnRUYXJnZXQuZGF0YXNldC5wb2ludGVyVHlwZSA9IGUyLnBvaW50ZXJUeXBlO1xuICAgIGlmICghbG9jYWwuZGlzYWJsZWQgJiYgZTIucG9pbnRlclR5cGUgIT09IFwidG91Y2hcIiAmJiBlMi5idXR0b24gPT09IDApIHtcbiAgICAgIGhhbmRsZUNsaWNrKCk7XG4gICAgfVxuICB9O1xuICBjb25zdCBvbkNsaWNrID0gKGUyKSA9PiB7XG4gICAgY2FsbEhhbmRsZXIoZTIsIGxvY2FsLm9uQ2xpY2spO1xuICAgIGlmICghbG9jYWwuZGlzYWJsZWQpIHtcbiAgICAgIGlmIChlMi5jdXJyZW50VGFyZ2V0LmRhdGFzZXQucG9pbnRlclR5cGUgPT09IFwidG91Y2hcIilcbiAgICAgICAgaGFuZGxlQ2xpY2soKTtcbiAgICB9XG4gIH07XG4gIGNvbnN0IG9uS2V5RG93biA9IChlMikgPT4ge1xuICAgIGNhbGxIYW5kbGVyKGUyLCBsb2NhbC5vbktleURvd24pO1xuICAgIGlmIChsb2NhbC5kaXNhYmxlZCkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBpZiAoaXNOYXRpdmVMaW5rKCkpIHtcbiAgICAgIHN3aXRjaCAoZTIua2V5KSB7XG4gICAgICAgIGNhc2UgXCJFbnRlclwiOlxuICAgICAgICBjYXNlIFwiIFwiOlxuICAgICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICB9XG4gICAgc3dpdGNoIChlMi5rZXkpIHtcbiAgICAgIGNhc2UgXCJFbnRlclwiOlxuICAgICAgY2FzZSBcIiBcIjpcbiAgICAgIGNhc2UgXCJBcnJvd0Rvd25cIjpcbiAgICAgICAgZTIuc3RvcFByb3BhZ2F0aW9uKCk7XG4gICAgICAgIGUyLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgIHNjcm9sbEludG9WaWV3cG9ydChlMi5jdXJyZW50VGFyZ2V0KTtcbiAgICAgICAgY29udGV4dC50b2dnbGUoXCJmaXJzdFwiKTtcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlIFwiQXJyb3dVcFwiOlxuICAgICAgICBlMi5zdG9wUHJvcGFnYXRpb24oKTtcbiAgICAgICAgZTIucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgY29udGV4dC50b2dnbGUoXCJsYXN0XCIpO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgXCJBcnJvd1JpZ2h0XCI6XG4gICAgICAgIGlmIChvcHRpb25hbE1lbnViYXJDb250ZXh0ID09PSB2b2lkIDApXG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIGUyLnN0b3BQcm9wYWdhdGlvbigpO1xuICAgICAgICBlMi5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICBvcHRpb25hbE1lbnViYXJDb250ZXh0Lm5leHRNZW51KCk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSBcIkFycm93TGVmdFwiOlxuICAgICAgICBpZiAob3B0aW9uYWxNZW51YmFyQ29udGV4dCA9PT0gdm9pZCAwKVxuICAgICAgICAgIGJyZWFrO1xuICAgICAgICBlMi5zdG9wUHJvcGFnYXRpb24oKTtcbiAgICAgICAgZTIucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgb3B0aW9uYWxNZW51YmFyQ29udGV4dC5wcmV2aW91c01lbnUoKTtcbiAgICAgICAgYnJlYWs7XG4gICAgfVxuICB9O1xuICBjb25zdCBvbk1vdXNlT3ZlciA9IChlMikgPT4ge1xuICAgIGNhbGxIYW5kbGVyKGUyLCBsb2NhbC5vbk1vdXNlT3Zlcik7XG4gICAgaWYgKCFsb2NhbC5kaXNhYmxlZCAmJiBvcHRpb25hbE1lbnViYXJDb250ZXh0ICE9PSB2b2lkIDAgJiYgb3B0aW9uYWxNZW51YmFyQ29udGV4dC52YWx1ZSgpICE9PSB2b2lkIDApIHtcbiAgICAgIG9wdGlvbmFsTWVudWJhckNvbnRleHQuc2V0VmFsdWUoa2V5KTtcbiAgICB9XG4gIH07XG4gIGNvbnN0IG9uRm9jdXMgPSAoZTIpID0+IHtcbiAgICBjYWxsSGFuZGxlcihlMiwgbG9jYWwub25Gb2N1cyk7XG4gICAgaWYgKG9wdGlvbmFsTWVudWJhckNvbnRleHQgIT09IHZvaWQgMClcbiAgICAgIG9wdGlvbmFsTWVudWJhckNvbnRleHQuc2V0VmFsdWUoa2V5KTtcbiAgfTtcbiAgY3JlYXRlRWZmZWN0KCgpID0+IG9uQ2xlYW51cChjb250ZXh0LnJlZ2lzdGVyVHJpZ2dlcklkKGxvY2FsLmlkKSkpO1xuICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KEJ1dHRvblJvb3QsIG1lcmdlUHJvcHMoe1xuICAgIHJlZihyJCkge1xuICAgICAgY29uc3QgX3JlZiQgPSBtZXJnZVJlZnMoY29udGV4dC5zZXRUcmlnZ2VyUmVmLCBsb2NhbC5yZWYpO1xuICAgICAgdHlwZW9mIF9yZWYkID09PSBcImZ1bmN0aW9uXCIgJiYgX3JlZiQociQpO1xuICAgIH0sXG4gICAgZ2V0IGlkKCkge1xuICAgICAgcmV0dXJuIGxvY2FsLmlkO1xuICAgIH0sXG4gICAgZ2V0IGRpc2FibGVkKCkge1xuICAgICAgcmV0dXJuIGxvY2FsLmRpc2FibGVkO1xuICAgIH0sXG4gICAgXCJhcmlhLWhhc3BvcHVwXCI6IFwidHJ1ZVwiLFxuICAgIGdldCBbXCJhcmlhLWV4cGFuZGVkXCJdKCkge1xuICAgICAgcmV0dXJuIGNvbnRleHQuaXNPcGVuKCk7XG4gICAgfSxcbiAgICBnZXQgW1wiYXJpYS1jb250cm9sc1wiXSgpIHtcbiAgICAgIHJldHVybiBjcmVhdGVNZW1vKCgpID0+ICEhY29udGV4dC5pc09wZW4oKSkoKSA/IGNvbnRleHQuY29udGVudElkKCkgOiB2b2lkIDA7XG4gICAgfSxcbiAgICBnZXQgW1wiZGF0YS1oaWdobGlnaHRlZFwiXSgpIHtcbiAgICAgIHJldHVybiBrZXkgIT09IHZvaWQgMCAmJiBvcHRpb25hbE1lbnViYXJDb250ZXh0Py52YWx1ZSgpID09PSBrZXkgPyB0cnVlIDogdm9pZCAwO1xuICAgIH0sXG4gICAgZ2V0IHRhYkluZGV4KCkge1xuICAgICAgcmV0dXJuIG9wdGlvbmFsTWVudWJhckNvbnRleHQgIT09IHZvaWQgMCA/IG9wdGlvbmFsTWVudWJhckNvbnRleHQudmFsdWUoKSA9PT0ga2V5IHx8IG9wdGlvbmFsTWVudWJhckNvbnRleHQubGFzdFZhbHVlKCkgPT09IGtleSA/IDAgOiAtMSA6IHZvaWQgMDtcbiAgICB9LFxuICAgIG9uUG9pbnRlckRvd24sXG4gICAgb25Nb3VzZU92ZXIsXG4gICAgb25DbGljayxcbiAgICBvbktleURvd24sXG4gICAgb25Gb2N1cyxcbiAgICByb2xlOiBvcHRpb25hbE1lbnViYXJDb250ZXh0ICE9PSB2b2lkIDAgPyBcIm1lbnVpdGVtXCIgOiB2b2lkIDBcbiAgfSwgKCkgPT4gY29udGV4dC5kYXRhc2V0KCksIG90aGVycykpO1xufVxuXG4vLyAuLi8uLi9ub2RlX21vZHVsZXMvLnBucG0vQGtvYmFsdGUrY29yZUAwLjEzLjFfc29saWQtanNAMS44LjE3L25vZGVfbW9kdWxlcy9Aa29iYWx0ZS9jb3JlL2Rpc3QvY2h1bmsvUVhQRUhWSkQuanNcbnZhciBzZXBhcmF0b3JfZXhwb3J0cyA9IHt9O1xuX19leHBvcnQoc2VwYXJhdG9yX2V4cG9ydHMsIHtcbiAgUm9vdDogKCkgPT4gU2VwYXJhdG9yUm9vdCxcbiAgU2VwYXJhdG9yOiAoKSA9PiBTZXBhcmF0b3Jcbn0pO1xuZnVuY3Rpb24gU2VwYXJhdG9yUm9vdChwcm9wcykge1xuICBsZXQgcmVmO1xuICBjb25zdCBtZXJnZWRQcm9wcyA9IG1lcmdlRGVmYXVsdFByb3BzKHtcbiAgICBvcmllbnRhdGlvbjogXCJob3Jpem9udGFsXCJcbiAgfSwgcHJvcHMpO1xuICBjb25zdCBbbG9jYWwsIG90aGVyc10gPSBzcGxpdFByb3BzKG1lcmdlZFByb3BzLCBbXCJyZWZcIiwgXCJvcmllbnRhdGlvblwiXSk7XG4gIGNvbnN0IHRhZ05hbWUgPSBjcmVhdGVUYWdOYW1lKCgpID0+IHJlZiwgKCkgPT4gXCJoclwiKTtcbiAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChQb2x5bW9ycGhpYywgbWVyZ2VQcm9wcyh7XG4gICAgYXM6IFwiaHJcIixcbiAgICByZWYociQpIHtcbiAgICAgIGNvbnN0IF9yZWYkID0gbWVyZ2VSZWZzKChlbCkgPT4gcmVmID0gZWwsIGxvY2FsLnJlZik7XG4gICAgICB0eXBlb2YgX3JlZiQgPT09IFwiZnVuY3Rpb25cIiAmJiBfcmVmJChyJCk7XG4gICAgfSxcbiAgICBnZXQgcm9sZSgpIHtcbiAgICAgIHJldHVybiB0YWdOYW1lKCkgIT09IFwiaHJcIiA/IFwic2VwYXJhdG9yXCIgOiB2b2lkIDA7XG4gICAgfSxcbiAgICBnZXQgW1wiYXJpYS1vcmllbnRhdGlvblwiXSgpIHtcbiAgICAgIHJldHVybiBsb2NhbC5vcmllbnRhdGlvbiA9PT0gXCJ2ZXJ0aWNhbFwiID8gXCJ2ZXJ0aWNhbFwiIDogdm9pZCAwO1xuICAgIH0sXG4gICAgZ2V0IFtcImRhdGEtb3JpZW50YXRpb25cIl0oKSB7XG4gICAgICByZXR1cm4gbG9jYWwub3JpZW50YXRpb247XG4gICAgfVxuICB9LCBvdGhlcnMpKTtcbn1cbnZhciBTZXBhcmF0b3IgPSBTZXBhcmF0b3JSb290O1xuXG4vLyAuLi8uLi9ub2RlX21vZHVsZXMvLnBucG0vQGtvYmFsdGUrY29yZUAwLjEzLjFfc29saWQtanNAMS44LjE3L25vZGVfbW9kdWxlcy9Aa29iYWx0ZS9jb3JlL2Rpc3QvY2h1bmsvSlRZWE1VRFUuanNcbnZhciBkcm9wZG93bl9tZW51X2V4cG9ydHMgPSB7fTtcbl9fZXhwb3J0KGRyb3Bkb3duX21lbnVfZXhwb3J0cywge1xuICBBcnJvdzogKCkgPT4gUG9wcGVyQXJyb3csXG4gIENoZWNrYm94SXRlbTogKCkgPT4gTWVudUNoZWNrYm94SXRlbSxcbiAgQ29udGVudDogKCkgPT4gRHJvcGRvd25NZW51Q29udGVudCxcbiAgRHJvcGRvd25NZW51OiAoKSA9PiBEcm9wZG93bk1lbnUsXG4gIEdyb3VwOiAoKSA9PiBNZW51R3JvdXAsXG4gIEdyb3VwTGFiZWw6ICgpID0+IE1lbnVHcm91cExhYmVsLFxuICBJY29uOiAoKSA9PiBNZW51SWNvbixcbiAgSXRlbTogKCkgPT4gTWVudUl0ZW0sXG4gIEl0ZW1EZXNjcmlwdGlvbjogKCkgPT4gTWVudUl0ZW1EZXNjcmlwdGlvbixcbiAgSXRlbUluZGljYXRvcjogKCkgPT4gTWVudUl0ZW1JbmRpY2F0b3IsXG4gIEl0ZW1MYWJlbDogKCkgPT4gTWVudUl0ZW1MYWJlbCxcbiAgUG9ydGFsOiAoKSA9PiBNZW51UG9ydGFsLFxuICBSYWRpb0dyb3VwOiAoKSA9PiBNZW51UmFkaW9Hcm91cCxcbiAgUmFkaW9JdGVtOiAoKSA9PiBNZW51UmFkaW9JdGVtLFxuICBSb290OiAoKSA9PiBEcm9wZG93bk1lbnVSb290LFxuICBTZXBhcmF0b3I6ICgpID0+IFNlcGFyYXRvclJvb3QsXG4gIFN1YjogKCkgPT4gTWVudVN1YixcbiAgU3ViQ29udGVudDogKCkgPT4gTWVudVN1YkNvbnRlbnQsXG4gIFN1YlRyaWdnZXI6ICgpID0+IE1lbnVTdWJUcmlnZ2VyLFxuICBUcmlnZ2VyOiAoKSA9PiBNZW51VHJpZ2dlclxufSk7XG5mdW5jdGlvbiBEcm9wZG93bk1lbnVDb250ZW50KHByb3BzKSB7XG4gIGNvbnN0IHJvb3RDb250ZXh0ID0gdXNlTWVudVJvb3RDb250ZXh0KCk7XG4gIGNvbnN0IGNvbnRleHQgPSB1c2VNZW51Q29udGV4dCgpO1xuICBjb25zdCBbbG9jYWwsIG90aGVyc10gPSBzcGxpdFByb3BzKHByb3BzLCBbXCJvbkNsb3NlQXV0b0ZvY3VzXCIsIFwib25JbnRlcmFjdE91dHNpZGVcIl0pO1xuICBsZXQgaGFzSW50ZXJhY3RlZE91dHNpZGUgPSBmYWxzZTtcbiAgY29uc3Qgb25DbG9zZUF1dG9Gb2N1cyA9IChlMikgPT4ge1xuICAgIGxvY2FsLm9uQ2xvc2VBdXRvRm9jdXM/LihlMik7XG4gICAgaWYgKCFoYXNJbnRlcmFjdGVkT3V0c2lkZSkge1xuICAgICAgZm9jdXNXaXRob3V0U2Nyb2xsaW5nKGNvbnRleHQudHJpZ2dlclJlZigpKTtcbiAgICB9XG4gICAgaGFzSW50ZXJhY3RlZE91dHNpZGUgPSBmYWxzZTtcbiAgICBlMi5wcmV2ZW50RGVmYXVsdCgpO1xuICB9O1xuICBjb25zdCBvbkludGVyYWN0T3V0c2lkZSA9IChlMikgPT4ge1xuICAgIGxvY2FsLm9uSW50ZXJhY3RPdXRzaWRlPy4oZTIpO1xuICAgIGlmICghcm9vdENvbnRleHQuaXNNb2RhbCgpIHx8IGUyLmRldGFpbC5pc0NvbnRleHRNZW51KSB7XG4gICAgICBoYXNJbnRlcmFjdGVkT3V0c2lkZSA9IHRydWU7XG4gICAgfVxuICB9O1xuICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KE1lbnVDb250ZW50LCBtZXJnZVByb3BzKHtcbiAgICBvbkNsb3NlQXV0b0ZvY3VzLFxuICAgIG9uSW50ZXJhY3RPdXRzaWRlXG4gIH0sIG90aGVycykpO1xufVxuZnVuY3Rpb24gRHJvcGRvd25NZW51Um9vdChwcm9wcykge1xuICBjb25zdCBkZWZhdWx0SWQgPSBgZHJvcGRvd25tZW51LSR7Y3JlYXRlVW5pcXVlSWQoKX1gO1xuICBjb25zdCBtZXJnZWRQcm9wcyA9IG1lcmdlRGVmYXVsdFByb3BzKHtcbiAgICBpZDogZGVmYXVsdElkXG4gIH0sIHByb3BzKTtcbiAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChNZW51Um9vdCwgbWVyZ2VkUHJvcHMpO1xufVxudmFyIERyb3Bkb3duTWVudSA9IE9iamVjdC5hc3NpZ24oRHJvcGRvd25NZW51Um9vdCwge1xuICBBcnJvdzogUG9wcGVyQXJyb3csXG4gIENoZWNrYm94SXRlbTogTWVudUNoZWNrYm94SXRlbSxcbiAgQ29udGVudDogRHJvcGRvd25NZW51Q29udGVudCxcbiAgR3JvdXA6IE1lbnVHcm91cCxcbiAgR3JvdXBMYWJlbDogTWVudUdyb3VwTGFiZWwsXG4gIEljb246IE1lbnVJY29uLFxuICBJdGVtOiBNZW51SXRlbSxcbiAgSXRlbURlc2NyaXB0aW9uOiBNZW51SXRlbURlc2NyaXB0aW9uLFxuICBJdGVtSW5kaWNhdG9yOiBNZW51SXRlbUluZGljYXRvcixcbiAgSXRlbUxhYmVsOiBNZW51SXRlbUxhYmVsLFxuICBQb3J0YWw6IE1lbnVQb3J0YWwsXG4gIFJhZGlvR3JvdXA6IE1lbnVSYWRpb0dyb3VwLFxuICBSYWRpb0l0ZW06IE1lbnVSYWRpb0l0ZW0sXG4gIFNlcGFyYXRvcjogU2VwYXJhdG9yUm9vdCxcbiAgU3ViOiBNZW51U3ViLFxuICBTdWJDb250ZW50OiBNZW51U3ViQ29udGVudCxcbiAgU3ViVHJpZ2dlcjogTWVudVN1YlRyaWdnZXIsXG4gIFRyaWdnZXI6IE1lbnVUcmlnZ2VyXG59KTtcblxuLy8gc3JjL3RoZW1lLnRzXG52YXIgdG9rZW5zID0ge1xuICBjb2xvcnM6IHtcbiAgICBpbmhlcml0OiBcImluaGVyaXRcIixcbiAgICBjdXJyZW50OiBcImN1cnJlbnRDb2xvclwiLFxuICAgIHRyYW5zcGFyZW50OiBcInRyYW5zcGFyZW50XCIsXG4gICAgYmxhY2s6IFwiIzAwMDAwMFwiLFxuICAgIHdoaXRlOiBcIiNmZmZmZmZcIixcbiAgICBuZXV0cmFsOiB7XG4gICAgICA1MDogXCIjZjlmYWZiXCIsXG4gICAgICAxMDA6IFwiI2YyZjRmN1wiLFxuICAgICAgMjAwOiBcIiNlYWVjZjBcIixcbiAgICAgIDMwMDogXCIjZDBkNWRkXCIsXG4gICAgICA0MDA6IFwiIzk4YTJiM1wiLFxuICAgICAgNTAwOiBcIiM2NjcwODVcIixcbiAgICAgIDYwMDogXCIjNDc1NDY3XCIsXG4gICAgICA3MDA6IFwiIzM0NDA1NFwiLFxuICAgICAgODAwOiBcIiMxZDI5MzlcIixcbiAgICAgIDkwMDogXCIjMTAxODI4XCJcbiAgICB9LFxuICAgIGRhcmtHcmF5OiB7XG4gICAgICA1MDogXCIjNTI1YzdhXCIsXG4gICAgICAxMDA6IFwiIzQ5NTM2ZVwiLFxuICAgICAgMjAwOiBcIiM0MTQ5NjJcIixcbiAgICAgIDMwMDogXCIjMzk0MDU2XCIsXG4gICAgICA0MDA6IFwiIzMxMzc0OVwiLFxuICAgICAgNTAwOiBcIiMyOTJlM2RcIixcbiAgICAgIDYwMDogXCIjMjEyNTMwXCIsXG4gICAgICA3MDA6IFwiIzE5MWMyNFwiLFxuICAgICAgODAwOiBcIiMxMTEzMThcIixcbiAgICAgIDkwMDogXCIjMGIwZDEwXCJcbiAgICB9LFxuICAgIGdyYXk6IHtcbiAgICAgIDUwOiBcIiNmOWZhZmJcIixcbiAgICAgIDEwMDogXCIjZjJmNGY3XCIsXG4gICAgICAyMDA6IFwiI2VhZWNmMFwiLFxuICAgICAgMzAwOiBcIiNkMGQ1ZGRcIixcbiAgICAgIDQwMDogXCIjOThhMmIzXCIsXG4gICAgICA1MDA6IFwiIzY2NzA4NVwiLFxuICAgICAgNjAwOiBcIiM0NzU0NjdcIixcbiAgICAgIDcwMDogXCIjMzQ0MDU0XCIsXG4gICAgICA4MDA6IFwiIzFkMjkzOVwiLFxuICAgICAgOTAwOiBcIiMxMDE4MjhcIlxuICAgIH0sXG4gICAgYmx1ZToge1xuICAgICAgMjU6IFwiI0Y1RkFGRlwiLFxuICAgICAgNTA6IFwiI0VGRjhGRlwiLFxuICAgICAgMTAwOiBcIiNEMUU5RkZcIixcbiAgICAgIDIwMDogXCIjQjJEREZGXCIsXG4gICAgICAzMDA6IFwiIzg0Q0FGRlwiLFxuICAgICAgNDAwOiBcIiM1M0IxRkRcIixcbiAgICAgIDUwMDogXCIjMkU5MEZBXCIsXG4gICAgICA2MDA6IFwiIzE1NzBFRlwiLFxuICAgICAgNzAwOiBcIiMxNzVDRDNcIixcbiAgICAgIDgwMDogXCIjMTg0OUE5XCIsXG4gICAgICA5MDA6IFwiIzE5NDE4NVwiXG4gICAgfSxcbiAgICBncmVlbjoge1xuICAgICAgMjU6IFwiI0Y2RkVGOVwiLFxuICAgICAgNTA6IFwiI0VDRkRGM1wiLFxuICAgICAgMTAwOiBcIiNEMUZBREZcIixcbiAgICAgIDIwMDogXCIjQTZGNEM1XCIsXG4gICAgICAzMDA6IFwiIzZDRTlBNlwiLFxuICAgICAgNDAwOiBcIiMzMkQ1ODNcIixcbiAgICAgIDUwMDogXCIjMTJCNzZBXCIsXG4gICAgICA2MDA6IFwiIzAzOTg1NVwiLFxuICAgICAgNzAwOiBcIiMwMjdBNDhcIixcbiAgICAgIDgwMDogXCIjMDU2MDNBXCIsXG4gICAgICA5MDA6IFwiIzA1NEYzMVwiXG4gICAgfSxcbiAgICByZWQ6IHtcbiAgICAgIDUwOiBcIiNmZWYyZjJcIixcbiAgICAgIDEwMDogXCIjZmVlMmUyXCIsXG4gICAgICAyMDA6IFwiI2ZlY2FjYVwiLFxuICAgICAgMzAwOiBcIiNmY2E1YTVcIixcbiAgICAgIDQwMDogXCIjZjg3MTcxXCIsXG4gICAgICA1MDA6IFwiI2VmNDQ0NFwiLFxuICAgICAgNjAwOiBcIiNkYzI2MjZcIixcbiAgICAgIDcwMDogXCIjYjkxYzFjXCIsXG4gICAgICA4MDA6IFwiIzk5MWIxYlwiLFxuICAgICAgOTAwOiBcIiM3ZjFkMWRcIixcbiAgICAgIDk1MDogXCIjNDUwYTBhXCJcbiAgICB9LFxuICAgIHllbGxvdzoge1xuICAgICAgMjU6IFwiI0ZGRkNGNVwiLFxuICAgICAgNTA6IFwiI0ZGRkFFQlwiLFxuICAgICAgMTAwOiBcIiNGRUYwQzdcIixcbiAgICAgIDIwMDogXCIjRkVERjg5XCIsXG4gICAgICAzMDA6IFwiI0ZFQzg0QlwiLFxuICAgICAgNDAwOiBcIiNGREIwMjJcIixcbiAgICAgIDUwMDogXCIjRjc5MDA5XCIsXG4gICAgICA2MDA6IFwiI0RDNjgwM1wiLFxuICAgICAgNzAwOiBcIiNCNTQ3MDhcIixcbiAgICAgIDgwMDogXCIjOTMzNzBEXCIsXG4gICAgICA5MDA6IFwiIzdBMkUwRVwiXG4gICAgfSxcbiAgICBwdXJwbGU6IHtcbiAgICAgIDI1OiBcIiNGQUZBRkZcIixcbiAgICAgIDUwOiBcIiNGNEYzRkZcIixcbiAgICAgIDEwMDogXCIjRUJFOUZFXCIsXG4gICAgICAyMDA6IFwiI0Q5RDZGRVwiLFxuICAgICAgMzAwOiBcIiNCREI0RkVcIixcbiAgICAgIDQwMDogXCIjOUI4QUZCXCIsXG4gICAgICA1MDA6IFwiIzdBNUFGOFwiLFxuICAgICAgNjAwOiBcIiM2OTM4RUZcIixcbiAgICAgIDcwMDogXCIjNTkyNURDXCIsXG4gICAgICA4MDA6IFwiIzRBMUZCOFwiLFxuICAgICAgOTAwOiBcIiMzRTFDOTZcIlxuICAgIH0sXG4gICAgdGVhbDoge1xuICAgICAgMjU6IFwiI0Y2RkVGQ1wiLFxuICAgICAgNTA6IFwiI0YwRkRGOVwiLFxuICAgICAgMTAwOiBcIiNDQ0ZCRUZcIixcbiAgICAgIDIwMDogXCIjOTlGNkUwXCIsXG4gICAgICAzMDA6IFwiIzVGRTlEMFwiLFxuICAgICAgNDAwOiBcIiMyRUQzQjdcIixcbiAgICAgIDUwMDogXCIjMTVCNzlFXCIsXG4gICAgICA2MDA6IFwiIzBFOTM4NFwiLFxuICAgICAgNzAwOiBcIiMxMDc1NjlcIixcbiAgICAgIDgwMDogXCIjMTI1RDU2XCIsXG4gICAgICA5MDA6IFwiIzEzNEU0OFwiXG4gICAgfSxcbiAgICBwaW5rOiB7XG4gICAgICAyNTogXCIjZmRmMmY4XCIsXG4gICAgICA1MDogXCIjZmNlN2YzXCIsXG4gICAgICAxMDA6IFwiI2ZiY2ZlOFwiLFxuICAgICAgMjAwOiBcIiNmOWE4ZDRcIixcbiAgICAgIDMwMDogXCIjZjQ3MmI2XCIsXG4gICAgICA0MDA6IFwiI2VjNDg5OVwiLFxuICAgICAgNTAwOiBcIiNkYjI3NzdcIixcbiAgICAgIDYwMDogXCIjYmUxODVkXCIsXG4gICAgICA3MDA6IFwiIzlkMTc0ZFwiLFxuICAgICAgODAwOiBcIiM4MzE4NDNcIixcbiAgICAgIDkwMDogXCIjNTAwNzI0XCJcbiAgICB9LFxuICAgIGN5YW46IHtcbiAgICAgIDI1OiBcIiNlY2ZlZmZcIixcbiAgICAgIDUwOiBcIiNjZmZhZmVcIixcbiAgICAgIDEwMDogXCIjYTVmM2ZjXCIsXG4gICAgICAyMDA6IFwiIzY3ZThmOVwiLFxuICAgICAgMzAwOiBcIiMyMmQzZWVcIixcbiAgICAgIDQwMDogXCIjMDZiNmQ0XCIsXG4gICAgICA1MDA6IFwiIzA4OTFiMlwiLFxuICAgICAgNjAwOiBcIiMwZTc0OTBcIixcbiAgICAgIDcwMDogXCIjMTU1ZTc1XCIsXG4gICAgICA4MDA6IFwiIzE2NGU2M1wiLFxuICAgICAgOTAwOiBcIiMwODMzNDRcIlxuICAgIH1cbiAgfSxcbiAgYWxwaGE6IHtcbiAgICAxMDA6IFwiZmZcIixcbiAgICA5MDogXCJlNVwiLFxuICAgIDgwOiBcImNjXCIsXG4gICAgNzA6IFwiYjNcIixcbiAgICA2MDogXCI5OVwiLFxuICAgIDUwOiBcIjgwXCIsXG4gICAgNDA6IFwiNjZcIixcbiAgICAzMDogXCI0ZFwiLFxuICAgIDIwOiBcIjMzXCIsXG4gICAgMTA6IFwiMWFcIixcbiAgICAwOiBcIjAwXCJcbiAgfSxcbiAgZm9udDoge1xuICAgIHNpemU6IHtcbiAgICAgIFwiMnhzXCI6IFwiY2FsYyh2YXIoLS10c3FkLWZvbnQtc2l6ZSkgKiAwLjYyNSlcIixcbiAgICAgIHhzOiBcImNhbGModmFyKC0tdHNxZC1mb250LXNpemUpICogMC43NSlcIixcbiAgICAgIHNtOiBcImNhbGModmFyKC0tdHNxZC1mb250LXNpemUpICogMC44NzUpXCIsXG4gICAgICBtZDogXCJ2YXIoLS10c3FkLWZvbnQtc2l6ZSlcIixcbiAgICAgIGxnOiBcImNhbGModmFyKC0tdHNxZC1mb250LXNpemUpICogMS4xMjUpXCIsXG4gICAgICB4bDogXCJjYWxjKHZhcigtLXRzcWQtZm9udC1zaXplKSAqIDEuMjUpXCIsXG4gICAgICBcIjJ4bFwiOiBcImNhbGModmFyKC0tdHNxZC1mb250LXNpemUpICogMS41KVwiLFxuICAgICAgXCIzeGxcIjogXCJjYWxjKHZhcigtLXRzcWQtZm9udC1zaXplKSAqIDEuODc1KVwiLFxuICAgICAgXCI0eGxcIjogXCJjYWxjKHZhcigtLXRzcWQtZm9udC1zaXplKSAqIDIuMjUpXCIsXG4gICAgICBcIjV4bFwiOiBcImNhbGModmFyKC0tdHNxZC1mb250LXNpemUpICogMylcIixcbiAgICAgIFwiNnhsXCI6IFwiY2FsYyh2YXIoLS10c3FkLWZvbnQtc2l6ZSkgKiAzLjc1KVwiLFxuICAgICAgXCI3eGxcIjogXCJjYWxjKHZhcigtLXRzcWQtZm9udC1zaXplKSAqIDQuNSlcIixcbiAgICAgIFwiOHhsXCI6IFwiY2FsYyh2YXIoLS10c3FkLWZvbnQtc2l6ZSkgKiA2KVwiLFxuICAgICAgXCI5eGxcIjogXCJjYWxjKHZhcigtLXRzcWQtZm9udC1zaXplKSAqIDgpXCJcbiAgICB9LFxuICAgIGxpbmVIZWlnaHQ6IHtcbiAgICAgIHhzOiBcImNhbGModmFyKC0tdHNxZC1mb250LXNpemUpICogMSlcIixcbiAgICAgIHNtOiBcImNhbGModmFyKC0tdHNxZC1mb250LXNpemUpICogMS4yNSlcIixcbiAgICAgIG1kOiBcImNhbGModmFyKC0tdHNxZC1mb250LXNpemUpICogMS41KVwiLFxuICAgICAgbGc6IFwiY2FsYyh2YXIoLS10c3FkLWZvbnQtc2l6ZSkgKiAxLjc1KVwiLFxuICAgICAgeGw6IFwiY2FsYyh2YXIoLS10c3FkLWZvbnQtc2l6ZSkgKiAyKVwiLFxuICAgICAgXCIyeGxcIjogXCJjYWxjKHZhcigtLXRzcWQtZm9udC1zaXplKSAqIDIuMjUpXCIsXG4gICAgICBcIjN4bFwiOiBcImNhbGModmFyKC0tdHNxZC1mb250LXNpemUpICogMi41KVwiLFxuICAgICAgXCI0eGxcIjogXCJjYWxjKHZhcigtLXRzcWQtZm9udC1zaXplKSAqIDIuNzUpXCIsXG4gICAgICBcIjV4bFwiOiBcImNhbGModmFyKC0tdHNxZC1mb250LXNpemUpICogMylcIixcbiAgICAgIFwiNnhsXCI6IFwiY2FsYyh2YXIoLS10c3FkLWZvbnQtc2l6ZSkgKiAzLjI1KVwiLFxuICAgICAgXCI3eGxcIjogXCJjYWxjKHZhcigtLXRzcWQtZm9udC1zaXplKSAqIDMuNSlcIixcbiAgICAgIFwiOHhsXCI6IFwiY2FsYyh2YXIoLS10c3FkLWZvbnQtc2l6ZSkgKiAzLjc1KVwiLFxuICAgICAgXCI5eGxcIjogXCJjYWxjKHZhcigtLXRzcWQtZm9udC1zaXplKSAqIDQpXCJcbiAgICB9LFxuICAgIHdlaWdodDoge1xuICAgICAgdGhpbjogXCIxMDBcIixcbiAgICAgIGV4dHJhbGlnaHQ6IFwiMjAwXCIsXG4gICAgICBsaWdodDogXCIzMDBcIixcbiAgICAgIG5vcm1hbDogXCI0MDBcIixcbiAgICAgIG1lZGl1bTogXCI1MDBcIixcbiAgICAgIHNlbWlib2xkOiBcIjYwMFwiLFxuICAgICAgYm9sZDogXCI3MDBcIixcbiAgICAgIGV4dHJhYm9sZDogXCI4MDBcIixcbiAgICAgIGJsYWNrOiBcIjkwMFwiXG4gICAgfVxuICB9LFxuICBicmVha3BvaW50czoge1xuICAgIHhzOiBcIjMyMHB4XCIsXG4gICAgc206IFwiNjQwcHhcIixcbiAgICBtZDogXCI3NjhweFwiLFxuICAgIGxnOiBcIjEwMjRweFwiLFxuICAgIHhsOiBcIjEyODBweFwiLFxuICAgIFwiMnhsXCI6IFwiMTUzNnB4XCJcbiAgfSxcbiAgYm9yZGVyOiB7XG4gICAgcmFkaXVzOiB7XG4gICAgICBub25lOiBcIjBweFwiLFxuICAgICAgeHM6IFwiY2FsYyh2YXIoLS10c3FkLWZvbnQtc2l6ZSkgKiAwLjEyNSlcIixcbiAgICAgIHNtOiBcImNhbGModmFyKC0tdHNxZC1mb250LXNpemUpICogMC4yNSlcIixcbiAgICAgIG1kOiBcImNhbGModmFyKC0tdHNxZC1mb250LXNpemUpICogMC4zNzUpXCIsXG4gICAgICBsZzogXCJjYWxjKHZhcigtLXRzcWQtZm9udC1zaXplKSAqIDAuNSlcIixcbiAgICAgIHhsOiBcImNhbGModmFyKC0tdHNxZC1mb250LXNpemUpICogMC43NSlcIixcbiAgICAgIFwiMnhsXCI6IFwiY2FsYyh2YXIoLS10c3FkLWZvbnQtc2l6ZSkgKiAxKVwiLFxuICAgICAgXCIzeGxcIjogXCJjYWxjKHZhcigtLXRzcWQtZm9udC1zaXplKSAqIDEuNSlcIixcbiAgICAgIGZ1bGw6IFwiOTk5OXB4XCJcbiAgICB9XG4gIH0sXG4gIHNpemU6IHtcbiAgICAwOiBcIjBweFwiLFxuICAgIDAuMjU6IFwiY2FsYyh2YXIoLS10c3FkLWZvbnQtc2l6ZSkgKiAwLjA2MjUpXCIsXG4gICAgMC41OiBcImNhbGModmFyKC0tdHNxZC1mb250LXNpemUpICogMC4xMjUpXCIsXG4gICAgMTogXCJjYWxjKHZhcigtLXRzcWQtZm9udC1zaXplKSAqIDAuMjUpXCIsXG4gICAgMS41OiBcImNhbGModmFyKC0tdHNxZC1mb250LXNpemUpICogMC4zNzUpXCIsXG4gICAgMjogXCJjYWxjKHZhcigtLXRzcWQtZm9udC1zaXplKSAqIDAuNSlcIixcbiAgICAyLjU6IFwiY2FsYyh2YXIoLS10c3FkLWZvbnQtc2l6ZSkgKiAwLjYyNSlcIixcbiAgICAzOiBcImNhbGModmFyKC0tdHNxZC1mb250LXNpemUpICogMC43NSlcIixcbiAgICAzLjU6IFwiY2FsYyh2YXIoLS10c3FkLWZvbnQtc2l6ZSkgKiAwLjg3NSlcIixcbiAgICA0OiBcImNhbGModmFyKC0tdHNxZC1mb250LXNpemUpICogMSlcIixcbiAgICA0LjU6IFwiY2FsYyh2YXIoLS10c3FkLWZvbnQtc2l6ZSkgKiAxLjEyNSlcIixcbiAgICA1OiBcImNhbGModmFyKC0tdHNxZC1mb250LXNpemUpICogMS4yNSlcIixcbiAgICA1LjU6IFwiY2FsYyh2YXIoLS10c3FkLWZvbnQtc2l6ZSkgKiAxLjM3NSlcIixcbiAgICA2OiBcImNhbGModmFyKC0tdHNxZC1mb250LXNpemUpICogMS41KVwiLFxuICAgIDYuNTogXCJjYWxjKHZhcigtLXRzcWQtZm9udC1zaXplKSAqIDEuNjI1KVwiLFxuICAgIDc6IFwiY2FsYyh2YXIoLS10c3FkLWZvbnQtc2l6ZSkgKiAxLjc1KVwiLFxuICAgIDg6IFwiY2FsYyh2YXIoLS10c3FkLWZvbnQtc2l6ZSkgKiAyKVwiLFxuICAgIDk6IFwiY2FsYyh2YXIoLS10c3FkLWZvbnQtc2l6ZSkgKiAyLjI1KVwiLFxuICAgIDEwOiBcImNhbGModmFyKC0tdHNxZC1mb250LXNpemUpICogMi41KVwiLFxuICAgIDExOiBcImNhbGModmFyKC0tdHNxZC1mb250LXNpemUpICogMi43NSlcIixcbiAgICAxMjogXCJjYWxjKHZhcigtLXRzcWQtZm9udC1zaXplKSAqIDMpXCIsXG4gICAgMTQ6IFwiY2FsYyh2YXIoLS10c3FkLWZvbnQtc2l6ZSkgKiAzLjUpXCIsXG4gICAgMTY6IFwiY2FsYyh2YXIoLS10c3FkLWZvbnQtc2l6ZSkgKiA0KVwiLFxuICAgIDIwOiBcImNhbGModmFyKC0tdHNxZC1mb250LXNpemUpICogNSlcIixcbiAgICAyNDogXCJjYWxjKHZhcigtLXRzcWQtZm9udC1zaXplKSAqIDYpXCIsXG4gICAgMjg6IFwiY2FsYyh2YXIoLS10c3FkLWZvbnQtc2l6ZSkgKiA3KVwiLFxuICAgIDMyOiBcImNhbGModmFyKC0tdHNxZC1mb250LXNpemUpICogOClcIixcbiAgICAzNjogXCJjYWxjKHZhcigtLXRzcWQtZm9udC1zaXplKSAqIDkpXCIsXG4gICAgNDA6IFwiY2FsYyh2YXIoLS10c3FkLWZvbnQtc2l6ZSkgKiAxMClcIixcbiAgICA0NDogXCJjYWxjKHZhcigtLXRzcWQtZm9udC1zaXplKSAqIDExKVwiLFxuICAgIDQ4OiBcImNhbGModmFyKC0tdHNxZC1mb250LXNpemUpICogMTIpXCIsXG4gICAgNTI6IFwiY2FsYyh2YXIoLS10c3FkLWZvbnQtc2l6ZSkgKiAxMylcIixcbiAgICA1NjogXCJjYWxjKHZhcigtLXRzcWQtZm9udC1zaXplKSAqIDE0KVwiLFxuICAgIDYwOiBcImNhbGModmFyKC0tdHNxZC1mb250LXNpemUpICogMTUpXCIsXG4gICAgNjQ6IFwiY2FsYyh2YXIoLS10c3FkLWZvbnQtc2l6ZSkgKiAxNilcIixcbiAgICA3MjogXCJjYWxjKHZhcigtLXRzcWQtZm9udC1zaXplKSAqIDE4KVwiLFxuICAgIDgwOiBcImNhbGModmFyKC0tdHNxZC1mb250LXNpemUpICogMjApXCIsXG4gICAgOTY6IFwiY2FsYyh2YXIoLS10c3FkLWZvbnQtc2l6ZSkgKiAyNClcIlxuICB9LFxuICBzaGFkb3c6IHtcbiAgICB4czogKF8gPSBcInJnYigwIDAgMCAvIDAuMSlcIikgPT4gYDAgMXB4IDJweCAwIHJnYigwIDAgMCAvIDAuMDUpYCxcbiAgICBzbTogKGNvbG9yID0gXCJyZ2IoMCAwIDAgLyAwLjEpXCIpID0+IGAwIDFweCAzcHggMCAke2NvbG9yfSwgMCAxcHggMnB4IC0xcHggJHtjb2xvcn1gLFxuICAgIG1kOiAoY29sb3IgPSBcInJnYigwIDAgMCAvIDAuMSlcIikgPT4gYDAgNHB4IDZweCAtMXB4ICR7Y29sb3J9LCAwIDJweCA0cHggLTJweCAke2NvbG9yfWAsXG4gICAgbGc6IChjb2xvciA9IFwicmdiKDAgMCAwIC8gMC4xKVwiKSA9PiBgMCAxMHB4IDE1cHggLTNweCAke2NvbG9yfSwgMCA0cHggNnB4IC00cHggJHtjb2xvcn1gLFxuICAgIHhsOiAoY29sb3IgPSBcInJnYigwIDAgMCAvIDAuMSlcIikgPT4gYDAgMjBweCAyNXB4IC01cHggJHtjb2xvcn0sIDAgOHB4IDEwcHggLTZweCAke2NvbG9yfWAsXG4gICAgXCIyeGxcIjogKGNvbG9yID0gXCJyZ2IoMCAwIDAgLyAwLjI1KVwiKSA9PiBgMCAyNXB4IDUwcHggLTEycHggJHtjb2xvcn1gLFxuICAgIGlubmVyOiAoY29sb3IgPSBcInJnYigwIDAgMCAvIDAuMDUpXCIpID0+IGBpbnNldCAwIDJweCA0cHggMCAke2NvbG9yfWAsXG4gICAgbm9uZTogKCkgPT4gYG5vbmVgXG4gIH0sXG4gIHpJbmRpY2VzOiB7XG4gICAgaGlkZTogLTEsXG4gICAgYXV0bzogXCJhdXRvXCIsXG4gICAgYmFzZTogMCxcbiAgICBkb2NrZWQ6IDEwLFxuICAgIGRyb3Bkb3duOiAxZTMsXG4gICAgc3RpY2t5OiAxMTAwLFxuICAgIGJhbm5lcjogMTIwMCxcbiAgICBvdmVybGF5OiAxMzAwLFxuICAgIG1vZGFsOiAxNDAwLFxuICAgIHBvcG92ZXI6IDE1MDAsXG4gICAgc2tpcExpbms6IDE2MDAsXG4gICAgdG9hc3Q6IDE3MDAsXG4gICAgdG9vbHRpcDogMTgwMFxuICB9XG59O1xuXG4vLyBzcmMvaWNvbnMvaW5kZXgudHN4XG52YXIgX3RtcGwkMiA9IC8qIEBfX1BVUkVfXyAqLyB0ZW1wbGF0ZShgPHN2ZyB3aWR0aD0xNCBoZWlnaHQ9MTQgdmlld0JveD1cIjAgMCAxNCAxNFwiZmlsbD1ub25lIHhtbG5zPWh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnPjxwYXRoIGQ9XCJNMTMgMTNMOS4wMDAwNyA5TTEwLjMzMzMgNS42NjY2N0MxMC4zMzMzIDguMjQ0IDguMjQ0IDEwLjMzMzMgNS42NjY2NyAxMC4zMzMzQzMuMDg5MzQgMTAuMzMzMyAxIDguMjQ0IDEgNS42NjY2N0MxIDMuMDg5MzQgMy4wODkzNCAxIDUuNjY2NjcgMUM4LjI0NCAxIDEwLjMzMzMgMy4wODkzNCAxMC4zMzMzIDUuNjY2NjdaXCJzdHJva2U9Y3VycmVudENvbG9yIHN0cm9rZS13aWR0aD0xLjY2NjY3IHN0cm9rZS1saW5lY2FwPXJvdW5kIHN0cm9rZS1saW5lam9pbj1yb3VuZD5gKTtcbnZhciBfdG1wbCQyMiA9IC8qIEBfX1BVUkVfXyAqLyB0ZW1wbGF0ZShgPHN2ZyB3aWR0aD0yNCBoZWlnaHQ9MjQgdmlld0JveD1cIjAgMCAyNCAyNFwiZmlsbD1ub25lIHhtbG5zPWh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnPjxwYXRoIGQ9XCJNOSAzSDE1TTMgNkgyMU0xOSA2TDE4LjI5ODcgMTYuNTE5M0MxOC4xOTM1IDE4LjA5NzUgMTguMTQwOSAxOC44ODY3IDE3LjggMTkuNDg1QzE3LjQ5OTkgMjAuMDExOCAxNy4wNDcyIDIwLjQzNTMgMTYuNTAxNyAyMC42OTk3QzE1Ljg4MiAyMSAxNS4wOTExIDIxIDEzLjUwOTMgMjFIMTAuNDkwN0M4LjkwODkxIDIxIDguMTE4MDMgMjEgNy40OTgzNCAyMC42OTk3QzYuOTUyNzYgMjAuNDM1MyA2LjUwMDA5IDIwLjAxMTggNi4xOTk5OCAxOS40ODVDNS44NTkxMSAxOC44ODY3IDUuODA2NSAxOC4wOTc1IDUuNzAxMjkgMTYuNTE5M0w1IDZNMTAgMTAuNVYxNS41TTE0IDEwLjVWMTUuNVwic3Ryb2tlPWN1cnJlbnRDb2xvciBzdHJva2Utd2lkdGg9MiBzdHJva2UtbGluZWNhcD1yb3VuZCBzdHJva2UtbGluZWpvaW49cm91bmQ+YCk7XG52YXIgX3RtcGwkMyA9IC8qIEBfX1BVUkVfXyAqLyB0ZW1wbGF0ZShgPHN2ZyB3aWR0aD0xMCBoZWlnaHQ9NiB2aWV3Qm94PVwiMCAwIDEwIDZcImZpbGw9bm9uZSB4bWxucz1odHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Zz48cGF0aCBkPVwiTTEgMUw1IDVMOSAxXCJzdHJva2U9Y3VycmVudENvbG9yIHN0cm9rZS13aWR0aD0xLjY2NjY3IHN0cm9rZS1saW5lY2FwPXJvdW5kIHN0cm9rZS1saW5lam9pbj1yb3VuZD5gKTtcbnZhciBfdG1wbCQ0ID0gLyogQF9fUFVSRV9fICovIHRlbXBsYXRlKGA8c3ZnIHdpZHRoPTEyIGhlaWdodD0xMiB2aWV3Qm94PVwiMCAwIDE2IDE2XCJmaWxsPW5vbmUgeG1sbnM9aHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmc+PHBhdGggZD1cIk04IDEzLjMzMzNWMi42NjY2N004IDIuNjY2NjdMNCA2LjY2NjY3TTggMi42NjY2N0wxMiA2LjY2NjY3XCJzdHJva2U9Y3VycmVudENvbG9yIHN0cm9rZS13aWR0aD0xLjY2NjY3IHN0cm9rZS1saW5lY2FwPXJvdW5kIHN0cm9rZS1saW5lam9pbj1yb3VuZD5gKTtcbnZhciBfdG1wbCQ1ID0gLyogQF9fUFVSRV9fICovIHRlbXBsYXRlKGA8c3ZnIHdpZHRoPTEyIGhlaWdodD0xMiB2aWV3Qm94PVwiMCAwIDE2IDE2XCJmaWxsPW5vbmUgeG1sbnM9aHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmc+PHBhdGggZD1cIk04IDIuNjY2NjdWMTMuMzMzM004IDEzLjMzMzNMNCA5LjMzMzMzTTggMTMuMzMzM0wxMiA5LjMzMzMzXCJzdHJva2U9Y3VycmVudENvbG9yIHN0cm9rZS13aWR0aD0xLjY2NjY3IHN0cm9rZS1saW5lY2FwPXJvdW5kIHN0cm9rZS1saW5lam9pbj1yb3VuZD5gKTtcbnZhciBfdG1wbCQ2ID0gLyogQF9fUFVSRV9fICovIHRlbXBsYXRlKGA8c3ZnIHZpZXdCb3g9XCIwIDAgMjQgMjRcImhlaWdodD0xMiB3aWR0aD0xMiBmaWxsPW5vbmUgeG1sbnM9aHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmc+PHBhdGggZD1cIk0xMiAydjJtMCAxNnYyTTQgMTJIMm00LjMxNC01LjY4Nkw0LjkgNC45bTEyLjc4NiAxLjQxNEwxOS4xIDQuOU02LjMxNCAxNy42OSA0LjkgMTkuMTA0bTEyLjc4Ni0xLjQxNCAxLjQxNCAxLjQxNE0yMiAxMmgtMm0tMyAwYTUgNSAwIDEgMS0xMCAwIDUgNSAwIDAgMSAxMCAwWlwic3Ryb2tlPWN1cnJlbnRDb2xvciBzdHJva2Utd2lkdGg9MiBzdHJva2UtbGluZWNhcD1yb3VuZCBzdHJva2UtbGluZWpvaW49cm91bmQ+YCk7XG52YXIgX3RtcGwkNyA9IC8qIEBfX1BVUkVfXyAqLyB0ZW1wbGF0ZShgPHN2ZyB2aWV3Qm94PVwiMCAwIDI0IDI0XCJoZWlnaHQ9MTIgd2lkdGg9MTIgZmlsbD1ub25lIHhtbG5zPWh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnPjxwYXRoIGQ9XCJNMjIgMTUuODQ0YTEwLjQyNCAxMC40MjQgMCAwIDEtNC4zMDYuOTI1Yy01Ljc3OSAwLTEwLjQ2My00LjY4NC0xMC40NjMtMTAuNDYyIDAtMS41MzYuMzMtMi45OTQuOTI1LTQuMzA3QTEwLjQ2NCAxMC40NjQgMCAwIDAgMiAxMS41MzhDMiAxNy4zMTYgNi42ODQgMjIgMTIuNDYyIDIyYzQuMjQzIDAgNy44OTYtMi41MjYgOS41MzgtNi4xNTZaXCJzdHJva2U9Y3VycmVudENvbG9yIHN0cm9rZS13aWR0aD0yIHN0cm9rZS1saW5lY2FwPXJvdW5kIHN0cm9rZS1saW5lam9pbj1yb3VuZD5gKTtcbnZhciBfdG1wbCQ4ID0gLyogQF9fUFVSRV9fICovIHRlbXBsYXRlKGA8c3ZnIHZpZXdCb3g9XCIwIDAgMjQgMjRcImhlaWdodD0xMiB3aWR0aD0xMiBmaWxsPW5vbmUgeG1sbnM9aHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmc+PHBhdGggZD1cIk04IDIxaDhtLTQtNHY0bS01LjItNGgxMC40YzEuNjggMCAyLjUyIDAgMy4xNjItLjMyN2EzIDMgMCAwIDAgMS4zMTEtMS4zMTFDMjIgMTQuNzIgMjIgMTMuODggMjIgMTIuMlY3LjhjMC0xLjY4IDAtMi41Mi0uMzI3LTMuMTYyYTMgMyAwIDAgMC0xLjMxMS0xLjMxMUMxOS43MiAzIDE4Ljg4IDMgMTcuMiAzSDYuOGMtMS42OCAwLTIuNTIgMC0zLjE2Mi4zMjdhMyAzIDAgMCAwLTEuMzExIDEuMzExQzIgNS4yOCAyIDYuMTIgMiA3Ljh2NC40YzAgMS42OCAwIDIuNTIuMzI3IDMuMTYyYTMgMyAwIDAgMCAxLjMxMSAxLjMxMUM0LjI4IDE3IDUuMTIgMTcgNi44IDE3Wlwic3Ryb2tlPWN1cnJlbnRDb2xvciBzdHJva2Utd2lkdGg9MiBzdHJva2UtbGluZWNhcD1yb3VuZCBzdHJva2UtbGluZWpvaW49cm91bmQ+YCk7XG52YXIgX3RtcGwkOSA9IC8qIEBfX1BVUkVfXyAqLyB0ZW1wbGF0ZShgPHN2ZyBzdHJva2U9Y3VycmVudENvbG9yIGZpbGw9Y3VycmVudENvbG9yIHN0cm9rZS13aWR0aD0wIHZpZXdCb3g9XCIwIDAgMjQgMjRcImhlaWdodD0xZW0gd2lkdGg9MWVtIHhtbG5zPWh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnPjxwYXRoIGZpbGw9bm9uZSBkPVwiTTAgMGgyNHYyNEgwelwiPjwvcGF0aD48cGF0aCBkPVwiTTEgOWwyIDJjNC45Ny00Ljk3IDEzLjAzLTQuOTcgMTggMGwyLTJDMTYuOTMgMi45MyA3LjA4IDIuOTMgMSA5em04IDhsMyAzIDMtM2E0LjIzNyA0LjIzNyAwIDAwLTYgMHptLTQtNGwyIDJhNy4wNzQgNy4wNzQgMCAwMTEwIDBsMi0yQzE1LjE0IDkuMTQgOC44NyA5LjE0IDUgMTN6XCI+YCk7XG52YXIgX3RtcGwkMTAgPSAvKiBAX19QVVJFX18gKi8gdGVtcGxhdGUoYDxzdmcgc3Ryb2tlLXdpZHRoPTAgdmlld0JveD1cIjAgMCAyNCAyNFwiaGVpZ2h0PTFlbSB3aWR0aD0xZW0geG1sbnM9aHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmc+PHBhdGggZmlsbD1ub25lIGQ9XCJNMjQgLjAxYzAtLjAxIDAtLjAxIDAgMEwwIDB2MjRoMjRWLjAxek0wIDBoMjR2MjRIMFYwem0wIDBoMjR2MjRIMFYwelwiPjwvcGF0aD48cGF0aCBkPVwiTTIyLjk5IDlDMTkuMTUgNS4xNiAxMy44IDMuNzYgOC44NCA0Ljc4bDIuNTIgMi41MmMzLjQ3LS4xNyA2Ljk5IDEuMDUgOS42MyAzLjdsMi0yem0tNCA0YTkuNzkzIDkuNzkzIDAgMDAtNC40OS0yLjU2bDMuNTMgMy41My45Ni0uOTd6TTIgMy4wNUw1LjA3IDYuMUMzLjYgNi44MiAyLjIyIDcuNzggMSA5bDEuOTkgMmMxLjI0LTEuMjQgMi42Ny0yLjE2IDQuMi0yLjc3bDIuMjQgMi4yNEE5LjY4NCA5LjY4NCAwIDAwNSAxM3YuMDFMNi45OSAxNWE3LjA0MiA3LjA0MiAwIDAxNC45Mi0yLjA2TDE4Ljk4IDIwbDEuMjctMS4yNkwzLjI5IDEuNzkgMiAzLjA1ek05IDE3bDMgMyAzLTNhNC4yMzcgNC4yMzcgMCAwMC02IDB6XCI+YCk7XG52YXIgX3RtcGwkMTEgPSAvKiBAX19QVVJFX18gKi8gdGVtcGxhdGUoYDxzdmcgd2lkdGg9MjQgaGVpZ2h0PTI0IHZpZXdCb3g9XCIwIDAgMjQgMjRcImZpbGw9bm9uZSB4bWxucz1odHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Zz48cGF0aCBkPVwiTTkuMzk1MSAxOS4zNzExTDkuOTc5NTUgMjAuNjg1NkMxMC4xNTMzIDIxLjA3NjggMTAuNDM2OCAyMS40MDkzIDEwLjc5NTggMjEuNjQyNkMxMS4xNTQ3IDIxLjg3NTkgMTEuNTczNyAyMi4wMDAxIDEyLjAwMTggMjJDMTIuNDI5OSAyMi4wMDAxIDEyLjg0ODggMjEuODc1OSAxMy4yMDc4IDIxLjY0MjZDMTMuNTY2NyAyMS40MDkzIDEzLjg1MDMgMjEuMDc2OCAxNC4wMjQgMjAuNjg1NkwxNC42MDg0IDE5LjM3MTFDMTQuODE2NSAxOC45MDQ3IDE1LjE2NjQgMTguNTE1OSAxNS42MDg0IDE4LjI2QzE2LjA1MzIgMTguMDAzNCAxNi41Njc4IDE3Ljg5NDEgMTcuMDc4NCAxNy45NDc4TDE4LjUwODQgMTguMUMxOC45MzQxIDE4LjE0NSAxOS4zNjM3IDE4LjA2NTYgMTkuNzQ1MSAxNy44NzEzQzIwLjEyNjUgMTcuNjc3MSAyMC40NDM0IDE3LjM3NjMgMjAuNjU3MyAxNy4wMDU2QzIwLjg3MTUgMTYuNjM1IDIwLjk3MzUgMTYuMjEwMyAyMC45NTExIDE1Ljc4MjlDMjAuOTI4NiAxNS4zNTU1IDIwLjc4MjUgMTQuOTQzOCAyMC41MzA3IDE0LjU5NzhMMTkuNjg0IDEzLjQzNDRDMTkuMzgyNSAxMy4wMTcxIDE5LjIyMTQgMTIuNTE0OCAxOS4yMjQgMTJDMTkuMjIzOSAxMS40ODY2IDE5LjM4NjUgMTAuOTg2NCAxOS42ODg0IDEwLjU3MTFMMjAuNTM1MSA5LjQwNzc4QzIwLjc4NyA5LjA2MTc1IDIwLjkzMyA4LjY1MDA3IDIwLjk1NTUgOC4yMjI2N0MyMC45NzggNy43OTUyOCAyMC44NzU5IDcuMzcwNTQgMjAuNjYxOCA3QzIwLjQ0NzkgNi42MjkyMyAyMC4xMzEgNi4zMjg0OSAxOS43NDk2IDYuMTM0MjNDMTkuMzY4MSA1LjkzOTk3IDE4LjkzODYgNS44NjA1MyAxOC41MTI5IDUuOTA1NTZMMTcuMDgyOSA2LjA1Nzc4QzE2LjU3MjIgNi4xMTE0MSAxNi4wNTc3IDYuMDAyMTIgMTUuNjEyOSA1Ljc0NTU2QzE1LjE3IDUuNDg4MjUgMTQuODIgNS4wOTczNiAxNC42MTI5IDQuNjI4ODlMMTQuMDI0IDMuMzE0NDRDMTMuODUwMyAyLjkyMzE3IDEzLjU2NjcgMi41OTA3MiAxMy4yMDc4IDIuMzU3NEMxMi44NDg4IDIuMTI0MDggMTIuNDI5OSAxLjk5OTkzIDEyLjAwMTggMkMxMS41NzM3IDEuOTk5OTMgMTEuMTU0NyAyLjEyNDA4IDEwLjc5NTggMi4zNTc0QzEwLjQzNjggMi41OTA3MiAxMC4xNTMzIDIuOTIzMTcgOS45Nzk1NSAzLjMxNDQ0TDkuMzk1MSA0LjYyODg5QzkuMTg4MDMgNS4wOTczNiA4LjgzNzk4IDUuNDg4MjUgOC4zOTUxIDUuNzQ1NTZDNy45NTAzMiA2LjAwMjEyIDcuNDM1NzcgNi4xMTE0MSA2LjkyNTEgNi4wNTc3OEw1LjQ5MDY2IDUuOTA1NTZDNS4wNjQ5OSA1Ljg2MDUzIDQuNjM1NCA1LjkzOTk3IDQuMjUzOTcgNi4xMzQyM0MzLjg3MjU1IDYuMzI4NDkgMy41NTU2NyA2LjYyOTIzIDMuMzQxNzcgN0MzLjEyNzU5IDcuMzcwNTQgMy4wMjU1NSA3Ljc5NTI4IDMuMDQ4MDQgOC4yMjI2N0MzLjA3MDUyIDguNjUwMDcgMy4yMTY1NiA5LjA2MTc1IDMuNDY4NDQgOS40MDc3OEw0LjMxNTEgMTAuNTcxMUM0LjYxNzA0IDEwLjk4NjQgNC43Nzk2NCAxMS40ODY2IDQuNzc5NTUgMTJDNC43Nzk2NCAxMi41MTM0IDQuNjE3MDQgMTMuMDEzNyA0LjMxNTEgMTMuNDI4OUwzLjQ2ODQ0IDE0LjU5MjJDMy4yMTY1NiAxNC45MzgyIDMuMDcwNTIgMTUuMzQ5OSAzLjA0ODA0IDE1Ljc3NzNDMy4wMjU1NSAxNi4yMDQ3IDMuMTI3NTkgMTYuNjI5NSAzLjM0MTc3IDE3QzMuNTU1ODkgMTcuMzcwNiAzLjg3MjggMTcuNjcxMiA0LjI1NDE3IDE3Ljg2NTRDNC42MzU1NCAxOC4wNTk2IDUuMDY1MDIgMTguMTM5MiA1LjQ5MDY2IDE4LjA5NDRMNi45MjA2NiAxNy45NDIyQzcuNDMxMzMgMTcuODg4NiA3Ljk0NTg3IDE3Ljk5NzkgOC4zOTA2NiAxOC4yNTQ0QzguODM1MTkgMTguNTExIDkuMTg2ODcgMTguOTAyIDkuMzk1MSAxOS4zNzExWlwic3Ryb2tlPWN1cnJlbnRDb2xvciBzdHJva2Utd2lkdGg9MiBzdHJva2UtbGluZWNhcD1yb3VuZCBzdHJva2UtbGluZWpvaW49cm91bmQ+PC9wYXRoPjxwYXRoIGQ9XCJNMTIgMTVDMTMuNjU2OCAxNSAxNSAxMy42NTY5IDE1IDEyQzE1IDEwLjM0MzEgMTMuNjU2OCA5IDEyIDlDMTAuMzQzMSA5IDguOTk5OTggMTAuMzQzMSA4Ljk5OTk4IDEyQzguOTk5OTggMTMuNjU2OSAxMC4zNDMxIDE1IDEyIDE1Wlwic3Ryb2tlPWN1cnJlbnRDb2xvciBzdHJva2Utd2lkdGg9MiBzdHJva2UtbGluZWNhcD1yb3VuZCBzdHJva2UtbGluZWpvaW49cm91bmQ+YCk7XG52YXIgX3RtcGwkMTIgPSAvKiBAX19QVVJFX18gKi8gdGVtcGxhdGUoYDxzdmcgd2lkdGg9MjQgaGVpZ2h0PTI0IHZpZXdCb3g9XCIwIDAgMjQgMjRcImZpbGw9bm9uZSB4bWxucz1odHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Zz48cGF0aCBkPVwiTTE2IDIxSDE2LjJDMTcuODgwMiAyMSAxOC43MjAyIDIxIDE5LjM2MiAyMC42NzNDMTkuOTI2NSAyMC4zODU0IDIwLjM4NTQgMTkuOTI2NSAyMC42NzMgMTkuMzYyQzIxIDE4LjcyMDIgMjEgMTcuODgwMiAyMSAxNi4yVjcuOEMyMSA2LjExOTg0IDIxIDUuMjc5NzYgMjAuNjczIDQuNjM4MDNDMjAuMzg1NCA0LjA3MzU0IDE5LjkyNjUgMy42MTQ2IDE5LjM2MiAzLjMyNjk4QzE4LjcyMDIgMyAxNy44ODAyIDMgMTYuMiAzSDcuOEM2LjExOTg0IDMgNS4yNzk3NiAzIDQuNjM4MDMgMy4zMjY5OEM0LjA3MzU0IDMuNjE0NiAzLjYxNDYgNC4wNzM1NCAzLjMyNjk4IDQuNjM4MDNDMyA1LjI3OTc2IDMgNi4xMTk4NCAzIDcuOFY4TTExLjUgMTIuNUwxNyA3TTE3IDdIMTJNMTcgN1YxMk02LjIgMjFIOC44QzkuOTIwMSAyMSAxMC40ODAyIDIxIDEwLjkwOCAyMC43ODJDMTEuMjg0MyAyMC41OTAzIDExLjU5MDMgMjAuMjg0MyAxMS43ODIgMTkuOTA4QzEyIDE5LjQ4MDIgMTIgMTguOTIwMSAxMiAxNy44VjE1LjJDMTIgMTQuMDc5OSAxMiAxMy41MTk4IDExLjc4MiAxMy4wOTJDMTEuNTkwMyAxMi43MTU3IDExLjI4NDMgMTIuNDA5NyAxMC45MDggMTIuMjE4QzEwLjQ4MDIgMTIgOS45MjAxMSAxMiA4LjggMTJINi4yQzUuMDc5OSAxMiA0LjUxOTg0IDEyIDQuMDkyMDIgMTIuMjE4QzMuNzE1NjkgMTIuNDA5NyAzLjQwOTczIDEyLjcxNTcgMy4yMTc5OSAxMy4wOTJDMyAxMy41MTk4IDMgMTQuMDc5OSAzIDE1LjJWMTcuOEMzIDE4LjkyMDEgMyAxOS40ODAyIDMuMjE3OTkgMTkuOTA4QzMuNDA5NzMgMjAuMjg0MyAzLjcxNTY5IDIwLjU5MDMgNC4wOTIwMiAyMC43ODJDNC41MTk4NCAyMSA1LjA3OTg5IDIxIDYuMiAyMVpcInN0cm9rZT1jdXJyZW50Q29sb3Igc3Ryb2tlLXdpZHRoPTIgc3Ryb2tlLWxpbmVjYXA9cm91bmQgc3Ryb2tlLWxpbmVqb2luPXJvdW5kPmApO1xudmFyIF90bXBsJDEzID0gLyogQF9fUFVSRV9fICovIHRlbXBsYXRlKGA8c3ZnIHdpZHRoPTI0IGhlaWdodD0yNCB2aWV3Qm94PVwiMCAwIDI0IDI0XCJmaWxsPW5vbmUgeG1sbnM9aHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmc+PHBhdGggY2xhc3M9Y29waWVyIGQ9XCJNOCA4VjUuMkM4IDQuMDc5OSA4IDMuNTE5ODQgOC4yMTc5OSAzLjA5MjAyQzguNDA5NzMgMi43MTU2OSA4LjcxNTY5IDIuNDA5NzMgOS4wOTIwMiAyLjIxNzk5QzkuNTE5ODQgMiAxMC4wNzk5IDIgMTEuMiAySDE4LjhDMTkuOTIwMSAyIDIwLjQ4MDIgMiAyMC45MDggMi4yMTc5OUMyMS4yODQzIDIuNDA5NzMgMjEuNTkwMyAyLjcxNTY5IDIxLjc4MiAzLjA5MjAyQzIyIDMuNTE5ODQgMjIgNC4wNzk5IDIyIDUuMlYxMi44QzIyIDEzLjkyMDEgMjIgMTQuNDgwMiAyMS43ODIgMTQuOTA4QzIxLjU5MDMgMTUuMjg0MyAyMS4yODQzIDE1LjU5MDMgMjAuOTA4IDE1Ljc4MkMyMC40ODAyIDE2IDE5LjkyMDEgMTYgMTguOCAxNkgxNk01LjIgMjJIMTIuOEMxMy45MjAxIDIyIDE0LjQ4MDIgMjIgMTQuOTA4IDIxLjc4MkMxNS4yODQzIDIxLjU5MDMgMTUuNTkwMyAyMS4yODQzIDE1Ljc4MiAyMC45MDhDMTYgMjAuNDgwMiAxNiAxOS45MjAxIDE2IDE4LjhWMTEuMkMxNiAxMC4wNzk5IDE2IDkuNTE5ODQgMTUuNzgyIDkuMDkyMDJDMTUuNTkwMyA4LjcxNTY5IDE1LjI4NDMgOC40MDk3MyAxNC45MDggOC4yMTc5OUMxNC40ODAyIDggMTMuOTIwMSA4IDEyLjggOEg1LjJDNC4wNzk5IDggMy41MTk4NCA4IDMuMDkyMDIgOC4yMTc5OUMyLjcxNTY5IDguNDA5NzMgMi40MDk3MyA4LjcxNTY5IDIuMjE3OTkgOS4wOTIwMkMyIDkuNTE5ODQgMiAxMC4wNzk5IDIgMTEuMlYxOC44QzIgMTkuOTIwMSAyIDIwLjQ4MDIgMi4yMTc5OSAyMC45MDhDMi40MDk3MyAyMS4yODQzIDIuNzE1NjkgMjEuNTkwMyAzLjA5MjAyIDIxLjc4MkMzLjUxOTg0IDIyIDQuMDc5ODkgMjIgNS4yIDIyWlwic3Ryb2tlLXdpZHRoPTIgc3Ryb2tlLWxpbmVjYXA9cm91bmQgc3Ryb2tlLWxpbmVqb2luPXJvdW5kIHN0cm9rZT1jdXJyZW50Q29sb3I+YCk7XG52YXIgX3RtcGwkMTQgPSAvKiBAX19QVVJFX18gKi8gdGVtcGxhdGUoYDxzdmcgd2lkdGg9MjQgaGVpZ2h0PTI0IHZpZXdCb3g9XCIwIDAgMjQgMjRcImZpbGw9bm9uZSB4bWxucz1odHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Zz48cGF0aCBkPVwiTTcuNSAxMkwxMC41IDE1TDE2LjUgOU03LjggMjFIMTYuMkMxNy44ODAyIDIxIDE4LjcyMDIgMjEgMTkuMzYyIDIwLjY3M0MxOS45MjY1IDIwLjM4NTQgMjAuMzg1NCAxOS45MjY1IDIwLjY3MyAxOS4zNjJDMjEgMTguNzIwMiAyMSAxNy44ODAyIDIxIDE2LjJWNy44QzIxIDYuMTE5ODQgMjEgNS4yNzk3NiAyMC42NzMgNC42MzgwM0MyMC4zODU0IDQuMDczNTQgMTkuOTI2NSAzLjYxNDYgMTkuMzYyIDMuMzI2OThDMTguNzIwMiAzIDE3Ljg4MDIgMyAxNi4yIDNINy44QzYuMTE5ODQgMyA1LjI3OTc2IDMgNC42MzgwMyAzLjMyNjk4QzQuMDczNTQgMy42MTQ2IDMuNjE0NiA0LjA3MzU0IDMuMzI2OTggNC42MzgwM0MzIDUuMjc5NzYgMyA2LjExOTg0IDMgNy44VjE2LjJDMyAxNy44ODAyIDMgMTguNzIwMiAzLjMyNjk4IDE5LjM2MkMzLjYxNDYgMTkuOTI2NSA0LjA3MzU0IDIwLjM4NTQgNC42MzgwMyAyMC42NzNDNS4yNzk3NiAyMSA2LjExOTg0IDIxIDcuOCAyMVpcInN0cm9rZS13aWR0aD0yIHN0cm9rZS1saW5lY2FwPXJvdW5kIHN0cm9rZS1saW5lam9pbj1yb3VuZD5gKTtcbnZhciBfdG1wbCQxNSA9IC8qIEBfX1BVUkVfXyAqLyB0ZW1wbGF0ZShgPHN2ZyB3aWR0aD0yNCBoZWlnaHQ9MjQgdmlld0JveD1cIjAgMCAyNCAyNFwiZmlsbD1ub25lIHhtbG5zPWh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnPjxwYXRoIGQ9XCJNOSA5TDE1IDE1TTE1IDlMOSAxNU03LjggMjFIMTYuMkMxNy44ODAyIDIxIDE4LjcyMDIgMjEgMTkuMzYyIDIwLjY3M0MxOS45MjY1IDIwLjM4NTQgMjAuMzg1NCAxOS45MjY1IDIwLjY3MyAxOS4zNjJDMjEgMTguNzIwMiAyMSAxNy44ODAyIDIxIDE2LjJWNy44QzIxIDYuMTE5ODQgMjEgNS4yNzk3NiAyMC42NzMgNC42MzgwM0MyMC4zODU0IDQuMDczNTQgMTkuOTI2NSAzLjYxNDYgMTkuMzYyIDMuMzI2OThDMTguNzIwMiAzIDE3Ljg4MDIgMyAxNi4yIDNINy44QzYuMTE5ODQgMyA1LjI3OTc2IDMgNC42MzgwMyAzLjMyNjk4QzQuMDczNTQgMy42MTQ2IDMuNjE0NiA0LjA3MzU0IDMuMzI2OTggNC42MzgwM0MzIDUuMjc5NzYgMyA2LjExOTg0IDMgNy44VjE2LjJDMyAxNy44ODAyIDMgMTguNzIwMiAzLjMyNjk4IDE5LjM2MkMzLjYxNDYgMTkuOTI2NSA0LjA3MzU0IDIwLjM4NTQgNC42MzgwMyAyMC42NzNDNS4yNzk3NiAyMSA2LjExOTg0IDIxIDcuOCAyMVpcInN0cm9rZT0jRjA0NDM4IHN0cm9rZS13aWR0aD0yIHN0cm9rZS1saW5lY2FwPXJvdW5kIHN0cm9rZS1saW5lam9pbj1yb3VuZD5gKTtcbnZhciBfdG1wbCQxNiA9IC8qIEBfX1BVUkVfXyAqLyB0ZW1wbGF0ZShgPHN2ZyB3aWR0aD0yNCBoZWlnaHQ9MjQgdmlld0JveD1cIjAgMCAyNCAyNFwiZmlsbD1ub25lIHN0cm9rZT1jdXJyZW50Q29sb3Igc3Ryb2tlLXdpZHRoPTIgeG1sbnM9aHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmc+PHJlY3QgY2xhc3M9bGlzdCB3aWR0aD0yMCBoZWlnaHQ9MjAgeT0yIHg9MiByeD0yPjwvcmVjdD48bGluZSBjbGFzcz1saXN0LWl0ZW0geTE9NyB5Mj03IHgxPTYgeDI9MTg+PC9saW5lPjxsaW5lIGNsYXNzPWxpc3QtaXRlbSB5Mj0xMiB5MT0xMiB4MT02IHgyPTE4PjwvbGluZT48bGluZSBjbGFzcz1saXN0LWl0ZW0geTE9MTcgeTI9MTcgeDE9NiB4Mj0xOD5gKTtcbnZhciBfdG1wbCQxNyA9IC8qIEBfX1BVUkVfXyAqLyB0ZW1wbGF0ZShgPHN2ZyB2aWV3Qm94PVwiMCAwIDI0IDI0XCJoZWlnaHQ9MjAgd2lkdGg9MjAgZmlsbD1ub25lIHhtbG5zPWh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnPjxwYXRoIGQ9XCJNMyA3LjhjMC0xLjY4IDAtMi41Mi4zMjctMy4xNjJhMyAzIDAgMCAxIDEuMzExLTEuMzExQzUuMjggMyA2LjEyIDMgNy44IDNoOC40YzEuNjggMCAyLjUyIDAgMy4xNjIuMzI3YTMgMyAwIDAgMSAxLjMxMSAxLjMxMUMyMSA1LjI4IDIxIDYuMTIgMjEgNy44djguNGMwIDEuNjggMCAyLjUyLS4zMjcgMy4xNjJhMyAzIDAgMCAxLTEuMzExIDEuMzExQzE4LjcyIDIxIDE3Ljg4IDIxIDE2LjIgMjFINy44Yy0xLjY4IDAtMi41MiAwLTMuMTYyLS4zMjdhMyAzIDAgMCAxLTEuMzExLTEuMzExQzMgMTguNzIgMyAxNy44OCAzIDE2LjJWNy44Wlwic3Ryb2tlLXdpZHRoPTIgc3Ryb2tlLWxpbmVjYXA9cm91bmQgc3Ryb2tlLWxpbmVqb2luPXJvdW5kPmApO1xudmFyIF90bXBsJDE4ID0gLyogQF9fUFVSRV9fICovIHRlbXBsYXRlKGA8c3ZnIHdpZHRoPTE0IGhlaWdodD0xNCB2aWV3Qm94PVwiMCAwIDI0IDI0XCJmaWxsPW5vbmUgeG1sbnM9aHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmc+PHBhdGggZD1cIk03LjUgMTJMMTAuNSAxNUwxNi41IDlNMjIgMTJDMjIgMTcuNTIyOCAxNy41MjI4IDIyIDEyIDIyQzYuNDc3MTUgMjIgMiAxNy41MjI4IDIgMTJDMiA2LjQ3NzE1IDYuNDc3MTUgMiAxMiAyQzE3LjUyMjggMiAyMiA2LjQ3NzE1IDIyIDEyWlwic3Ryb2tlPWN1cnJlbnRDb2xvciBzdHJva2Utd2lkdGg9MiBzdHJva2UtbGluZWNhcD1yb3VuZCBzdHJva2UtbGluZWpvaW49cm91bmQ+YCk7XG52YXIgX3RtcGwkMTkgPSAvKiBAX19QVVJFX18gKi8gdGVtcGxhdGUoYDxzdmcgd2lkdGg9MTQgaGVpZ2h0PTE0IHZpZXdCb3g9XCIwIDAgMjQgMjRcImZpbGw9bm9uZSB4bWxucz1odHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Zz48cGF0aCBkPVwiTTEyIDJWNk0xMiAxOFYyMk02IDEySDJNMjIgMTJIMThNMTkuMDc4NCAxOS4wNzg0TDE2LjI1IDE2LjI1TTE5LjA3ODQgNC45OTk5NEwxNi4yNSA3LjgyODM3TTQuOTIxNTcgMTkuMDc4NEw3Ljc1IDE2LjI1TTQuOTIxNTcgNC45OTk5NEw3Ljc1IDcuODI4MzdcInN0cm9rZT1jdXJyZW50Q29sb3Igc3Ryb2tlLXdpZHRoPTIgc3Ryb2tlLWxpbmVjYXA9cm91bmQgc3Ryb2tlLWxpbmVqb2luPXJvdW5kPjwvcGF0aD48YW5pbWF0ZVRyYW5zZm9ybSBhdHRyaWJ1dGVOYW1lPXRyYW5zZm9ybSBhdHRyaWJ1dGVUeXBlPVhNTCB0eXBlPXJvdGF0ZSBmcm9tPTAgdG89MzYwIGR1cj0ycyByZXBlYXRDb3VudD1pbmRlZmluaXRlPmApO1xudmFyIF90bXBsJDIwID0gLyogQF9fUFVSRV9fICovIHRlbXBsYXRlKGA8c3ZnIHdpZHRoPTE0IGhlaWdodD0xNCB2aWV3Qm94PVwiMCAwIDI0IDI0XCJmaWxsPW5vbmUgeG1sbnM9aHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmc+PHBhdGggZD1cIk0xNSA5TDkgMTVNOSA5TDE1IDE1TTIyIDEyQzIyIDE3LjUyMjggMTcuNTIyOCAyMiAxMiAyMkM2LjQ3NzE1IDIyIDIgMTcuNTIyOCAyIDEyQzIgNi40NzcxNSA2LjQ3NzE1IDIgMTIgMkMxNy41MjI4IDIgMjIgNi40NzcxNSAyMiAxMlpcInN0cm9rZT1jdXJyZW50Q29sb3Igc3Ryb2tlLXdpZHRoPTIgc3Ryb2tlLWxpbmVjYXA9cm91bmQgc3Ryb2tlLWxpbmVqb2luPXJvdW5kPmApO1xudmFyIF90bXBsJDIxID0gLyogQF9fUFVSRV9fICovIHRlbXBsYXRlKGA8c3ZnIHdpZHRoPTE0IGhlaWdodD0xNCB2aWV3Qm94PVwiMCAwIDI0IDI0XCJmaWxsPW5vbmUgeG1sbnM9aHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmc+PHBhdGggZD1cIk05LjUgMTVWOU0xNC41IDE1VjlNMjIgMTJDMjIgMTcuNTIyOCAxNy41MjI4IDIyIDEyIDIyQzYuNDc3MTUgMjIgMiAxNy41MjI4IDIgMTJDMiA2LjQ3NzE1IDYuNDc3MTUgMiAxMiAyQzE3LjUyMjggMiAyMiA2LjQ3NzE1IDIyIDEyWlwic3Ryb2tlPWN1cnJlbnRDb2xvciBzdHJva2Utd2lkdGg9MiBzdHJva2UtbGluZWNhcD1yb3VuZCBzdHJva2UtbGluZWpvaW49cm91bmQ+YCk7XG52YXIgX3RtcGwkMjIyID0gLyogQF9fUFVSRV9fICovIHRlbXBsYXRlKGA8c3ZnIHZlcnNpb249MS4wIHZpZXdCb3g9XCIwIDAgNjMzIDYzM1wiPjxsaW5lYXJHcmFkaWVudCB4MT0tNjY2LjQ1IHgyPS02NjYuNDUgeTE9MTYzLjI4IHkyPTE2My45OSBncmFkaWVudFRyYW5zZm9ybT1cIm1hdHJpeCg2MzMgMCAwIDYzMyA0MjIxNzcgLTEwMzM1OClcImdyYWRpZW50VW5pdHM9dXNlclNwYWNlT25Vc2U+PHN0b3Agc3RvcC1jb2xvcj0jNkJEQUZGIG9mZnNldD0wPjwvc3RvcD48c3RvcCBzdG9wLWNvbG9yPSNGOUZGQjUgb2Zmc2V0PS4zMj48L3N0b3A+PHN0b3Agc3RvcC1jb2xvcj0jRkZBNzcwIG9mZnNldD0uNzE+PC9zdG9wPjxzdG9wIHN0b3AtY29sb3I9I0ZGNzM3MyBvZmZzZXQ9MT48L3N0b3A+PC9saW5lYXJHcmFkaWVudD48Y2lyY2xlIGN4PTMxNi41IGN5PTMxNi41IHI9MzE2LjU+PC9jaXJjbGU+PGRlZnM+PGZpbHRlciB4PS0xMzcuNSB5PTQxMiB3aWR0aD00NTQgaGVpZ2h0PTM5Ni45IGZpbHRlclVuaXRzPXVzZXJTcGFjZU9uVXNlPjxmZUNvbG9yTWF0cml4IHZhbHVlcz1cIjEgMCAwIDAgMCAgMCAxIDAgMCAwICAwIDAgMSAwIDAgIDAgMCAwIDEgMFwiPjwvZmVDb2xvck1hdHJpeD48L2ZpbHRlcj48L2RlZnM+PG1hc2sgeD0tMTM3LjUgeT00MTIgd2lkdGg9NDU0IGhlaWdodD0zOTYuOSBtYXNrVW5pdHM9dXNlclNwYWNlT25Vc2U+PGc+PGNpcmNsZSBjeD0zMTYuNSBjeT0zMTYuNSByPTMxNi41IGZpbGw9I2ZmZj48L2NpcmNsZT48L2c+PC9tYXNrPjxnPjxlbGxpcHNlIGN4PTg5LjUgY3k9NjEwLjUgcng9MjE0LjUgcnk9MTg2IGZpbGw9IzAxNTA2NCBzdHJva2U9IzAwQ0ZFMiBzdHJva2Utd2lkdGg9MjU+PC9lbGxpcHNlPjwvZz48ZGVmcz48ZmlsdGVyIHg9MzE2LjUgeT00MTIgd2lkdGg9NDU0IGhlaWdodD0zOTYuOSBmaWx0ZXJVbml0cz11c2VyU3BhY2VPblVzZT48ZmVDb2xvck1hdHJpeCB2YWx1ZXM9XCIxIDAgMCAwIDAgIDAgMSAwIDAgMCAgMCAwIDEgMCAwICAwIDAgMCAxIDBcIj48L2ZlQ29sb3JNYXRyaXg+PC9maWx0ZXI+PC9kZWZzPjxtYXNrIHg9MzE2LjUgeT00MTIgd2lkdGg9NDU0IGhlaWdodD0zOTYuOSBtYXNrVW5pdHM9dXNlclNwYWNlT25Vc2U+PGc+PGNpcmNsZSBjeD0zMTYuNSBjeT0zMTYuNSByPTMxNi41IGZpbGw9I2ZmZj48L2NpcmNsZT48L2c+PC9tYXNrPjxnPjxlbGxpcHNlIGN4PTU0My41IGN5PTYxMC41IHJ4PTIxNC41IHJ5PTE4NiBmaWxsPSMwMTUwNjQgc3Ryb2tlPSMwMENGRTIgc3Ryb2tlLXdpZHRoPTI1PjwvZWxsaXBzZT48L2c+PGRlZnM+PGZpbHRlciB4PS0xMzcuNSB5PTQ1MCB3aWR0aD00NTQgaGVpZ2h0PTM5Ni45IGZpbHRlclVuaXRzPXVzZXJTcGFjZU9uVXNlPjxmZUNvbG9yTWF0cml4IHZhbHVlcz1cIjEgMCAwIDAgMCAgMCAxIDAgMCAwICAwIDAgMSAwIDAgIDAgMCAwIDEgMFwiPjwvZmVDb2xvck1hdHJpeD48L2ZpbHRlcj48L2RlZnM+PG1hc2sgeD0tMTM3LjUgeT00NTAgd2lkdGg9NDU0IGhlaWdodD0zOTYuOSBtYXNrVW5pdHM9dXNlclNwYWNlT25Vc2U+PGc+PGNpcmNsZSBjeD0zMTYuNSBjeT0zMTYuNSByPTMxNi41IGZpbGw9I2ZmZj48L2NpcmNsZT48L2c+PC9tYXNrPjxnPjxlbGxpcHNlIGN4PTg5LjUgY3k9NjQ4LjUgcng9MjE0LjUgcnk9MTg2IGZpbGw9IzAxNTA2NCBzdHJva2U9IzAwQThCOCBzdHJva2Utd2lkdGg9MjU+PC9lbGxpcHNlPjwvZz48ZGVmcz48ZmlsdGVyIHg9MzE2LjUgeT00NTAgd2lkdGg9NDU0IGhlaWdodD0zOTYuOSBmaWx0ZXJVbml0cz11c2VyU3BhY2VPblVzZT48ZmVDb2xvck1hdHJpeCB2YWx1ZXM9XCIxIDAgMCAwIDAgIDAgMSAwIDAgMCAgMCAwIDEgMCAwICAwIDAgMCAxIDBcIj48L2ZlQ29sb3JNYXRyaXg+PC9maWx0ZXI+PC9kZWZzPjxtYXNrIHg9MzE2LjUgeT00NTAgd2lkdGg9NDU0IGhlaWdodD0zOTYuOSBtYXNrVW5pdHM9dXNlclNwYWNlT25Vc2U+PGc+PGNpcmNsZSBjeD0zMTYuNSBjeT0zMTYuNSByPTMxNi41IGZpbGw9I2ZmZj48L2NpcmNsZT48L2c+PC9tYXNrPjxnPjxlbGxpcHNlIGN4PTU0My41IGN5PTY0OC41IHJ4PTIxNC41IHJ5PTE4NiBmaWxsPSMwMTUwNjQgc3Ryb2tlPSMwMEE4Qjggc3Ryb2tlLXdpZHRoPTI1PjwvZWxsaXBzZT48L2c+PGRlZnM+PGZpbHRlciB4PS0xMzcuNSB5PTQ4NiB3aWR0aD00NTQgaGVpZ2h0PTM5Ni45IGZpbHRlclVuaXRzPXVzZXJTcGFjZU9uVXNlPjxmZUNvbG9yTWF0cml4IHZhbHVlcz1cIjEgMCAwIDAgMCAgMCAxIDAgMCAwICAwIDAgMSAwIDAgIDAgMCAwIDEgMFwiPjwvZmVDb2xvck1hdHJpeD48L2ZpbHRlcj48L2RlZnM+PG1hc2sgeD0tMTM3LjUgeT00ODYgd2lkdGg9NDU0IGhlaWdodD0zOTYuOSBtYXNrVW5pdHM9dXNlclNwYWNlT25Vc2U+PGc+PGNpcmNsZSBjeD0zMTYuNSBjeT0zMTYuNSByPTMxNi41IGZpbGw9I2ZmZj48L2NpcmNsZT48L2c+PC9tYXNrPjxnPjxlbGxpcHNlIGN4PTg5LjUgY3k9Njg0LjUgcng9MjE0LjUgcnk9MTg2IGZpbGw9IzAxNTA2NCBzdHJva2U9IzAwNzc4MiBzdHJva2Utd2lkdGg9MjU+PC9lbGxpcHNlPjwvZz48ZGVmcz48ZmlsdGVyIHg9MzE2LjUgeT00ODYgd2lkdGg9NDU0IGhlaWdodD0zOTYuOSBmaWx0ZXJVbml0cz11c2VyU3BhY2VPblVzZT48ZmVDb2xvck1hdHJpeCB2YWx1ZXM9XCIxIDAgMCAwIDAgIDAgMSAwIDAgMCAgMCAwIDEgMCAwICAwIDAgMCAxIDBcIj48L2ZlQ29sb3JNYXRyaXg+PC9maWx0ZXI+PC9kZWZzPjxtYXNrIHg9MzE2LjUgeT00ODYgd2lkdGg9NDU0IGhlaWdodD0zOTYuOSBtYXNrVW5pdHM9dXNlclNwYWNlT25Vc2U+PGc+PGNpcmNsZSBjeD0zMTYuNSBjeT0zMTYuNSByPTMxNi41IGZpbGw9I2ZmZj48L2NpcmNsZT48L2c+PC9tYXNrPjxnPjxlbGxpcHNlIGN4PTU0My41IGN5PTY4NC41IHJ4PTIxNC41IHJ5PTE4NiBmaWxsPSMwMTUwNjQgc3Ryb2tlPSMwMDc3ODIgc3Ryb2tlLXdpZHRoPTI1PjwvZWxsaXBzZT48L2c+PGRlZnM+PGZpbHRlciB4PTI3Mi4yIHk9MzA4IHdpZHRoPTE3Ni45IGhlaWdodD0xMjkuMyBmaWx0ZXJVbml0cz11c2VyU3BhY2VPblVzZT48ZmVDb2xvck1hdHJpeCB2YWx1ZXM9XCIxIDAgMCAwIDAgIDAgMSAwIDAgMCAgMCAwIDEgMCAwICAwIDAgMCAxIDBcIj48L2ZlQ29sb3JNYXRyaXg+PC9maWx0ZXI+PC9kZWZzPjxtYXNrIHg9MjcyLjIgeT0zMDggd2lkdGg9MTc2LjkgaGVpZ2h0PTEyOS4zIG1hc2tVbml0cz11c2VyU3BhY2VPblVzZT48Zz48Y2lyY2xlIGN4PTMxNi41IGN5PTMxNi41IHI9MzE2LjUgZmlsbD0jZmZmPjwvY2lyY2xlPjwvZz48L21hc2s+PGc+PGxpbmUgeDE9NDM2IHgyPTQzMSB5MT00MDMuMiB5Mj00MzEuOCBmaWxsPW5vbmUgc3Ryb2tlPSMwMDAgc3Ryb2tlLWxpbmVjYXA9cm91bmQgc3Ryb2tlLWxpbmVqb2luPWJldmVsIHN0cm9rZS13aWR0aD0xMT48L2xpbmU+PGxpbmUgeDE9MjkxIHgyPTI4MCB5MT0zNDEuNSB5Mj00MDMuNSBmaWxsPW5vbmUgc3Ryb2tlPSMwMDAgc3Ryb2tlLWxpbmVjYXA9cm91bmQgc3Ryb2tlLWxpbmVqb2luPWJldmVsIHN0cm9rZS13aWR0aD0xMT48L2xpbmU+PGxpbmUgeDE9MzMyLjkgeDI9MzI4LjYgeTE9Mzg0LjEgeTI9NDExLjIgZmlsbD1ub25lIHN0cm9rZT0jMDAwIHN0cm9rZS1saW5lY2FwPXJvdW5kIHN0cm9rZS1saW5lam9pbj1iZXZlbCBzdHJva2Utd2lkdGg9MTE+PC9saW5lPjxsaW5lYXJHcmFkaWVudCB4MT0tNjcwLjc1IHgyPS02NzEuNTkgeTE9MTY0LjQgeTI9MTY0LjQ5IGdyYWRpZW50VHJhbnNmb3JtPVwibWF0cml4KC0xODQuMTYgLTMyLjQ3MiAtMTEuNDYxIDY0Ljk5NyAtMTIxMzU5IC0zMjEyNilcImdyYWRpZW50VW5pdHM9dXNlclNwYWNlT25Vc2U+PHN0b3Agc3RvcC1jb2xvcj0jRUUyNzAwIG9mZnNldD0wPjwvc3RvcD48c3RvcCBzdG9wLWNvbG9yPSNGRjAwOEUgb2Zmc2V0PTE+PC9zdG9wPjwvbGluZWFyR3JhZGllbnQ+PHBhdGggZD1cIm0zNDQuMSAzNjMgOTcuNyAxNy4yYzUuOCAyLjEgOC4yIDYuMSA3LjEgMTIuMXMtNC43IDkuMi0xMSA5LjlsLTEwNi0xOC43LTU3LjUtNTkuMmMtMy4yLTQuOC0yLjktOS4xIDAuOC0xMi44czguMy00LjQgMTMuNy0yLjFsNTUuMiA1My42elwiY2xpcC1ydWxlPWV2ZW5vZGQgZmlsbC1ydWxlPWV2ZW5vZGQ+PC9wYXRoPjxsaW5lIHgxPTQyOC4yIHgyPTQyOS4xIHkxPTM4NC41IHkyPTM3OCBmaWxsPW5vbmUgc3Ryb2tlPSNmZmYgc3Ryb2tlLWxpbmVjYXA9cm91bmQgc3Ryb2tlLWxpbmVqb2luPWJldmVsIHN0cm9rZS13aWR0aD03PjwvbGluZT48bGluZSB4MT0zOTUuMiB4Mj0zOTYuMSB5MT0zNzkuNSB5Mj0zNzMgZmlsbD1ub25lIHN0cm9rZT0jZmZmIHN0cm9rZS1saW5lY2FwPXJvdW5kIHN0cm9rZS1saW5lam9pbj1iZXZlbCBzdHJva2Utd2lkdGg9Nz48L2xpbmU+PGxpbmUgeDE9MzYyLjIgeDI9MzYzLjEgeTE9MzczLjUgeTI9MzY3LjQgZmlsbD1ub25lIHN0cm9rZT0jZmZmIHN0cm9rZS1saW5lY2FwPXJvdW5kIHN0cm9rZS1saW5lam9pbj1iZXZlbCBzdHJva2Utd2lkdGg9Nz48L2xpbmU+PGxpbmUgeDE9MzI0LjIgeDI9MzI4LjQgeTE9MzUxLjMgeTI9MzQ3LjQgZmlsbD1ub25lIHN0cm9rZT0jZmZmIHN0cm9rZS1saW5lY2FwPXJvdW5kIHN0cm9rZS1saW5lam9pbj1iZXZlbCBzdHJva2Utd2lkdGg9Nz48L2xpbmU+PGxpbmUgeDE9MzAzLjIgeDI9MzA3LjQgeTE9MzMxLjMgeTI9MzI3LjQgZmlsbD1ub25lIHN0cm9rZT0jZmZmIHN0cm9rZS1saW5lY2FwPXJvdW5kIHN0cm9rZS1saW5lam9pbj1iZXZlbCBzdHJva2Utd2lkdGg9Nz48L2xpbmU+PC9nPjxkZWZzPjxmaWx0ZXIgeD03My4yIHk9MTEzLjggd2lkdGg9MjgwLjYgaGVpZ2h0PTMxNy40IGZpbHRlclVuaXRzPXVzZXJTcGFjZU9uVXNlPjxmZUNvbG9yTWF0cml4IHZhbHVlcz1cIjEgMCAwIDAgMCAgMCAxIDAgMCAwICAwIDAgMSAwIDAgIDAgMCAwIDEgMFwiPjwvZmVDb2xvck1hdHJpeD48L2ZpbHRlcj48L2RlZnM+PG1hc2sgeD03My4yIHk9MTEzLjggd2lkdGg9MjgwLjYgaGVpZ2h0PTMxNy40IG1hc2tVbml0cz11c2VyU3BhY2VPblVzZT48Zz48Y2lyY2xlIGN4PTMxNi41IGN5PTMxNi41IHI9MzE2LjUgZmlsbD0jZmZmPjwvY2lyY2xlPjwvZz48L21hc2s+PGc+PGxpbmVhckdyYWRpZW50IHgxPS02NzIuMTYgeDI9LTY3Mi4xNiB5MT0xNjUuMDMgeTI9MTY2LjAzIGdyYWRpZW50VHJhbnNmb3JtPVwibWF0cml4KC0xMDAuMTggNDguODYxIDk3Ljk3NiAyMDAuODggLTgzMzQyIC05My4wNTkpXCJncmFkaWVudFVuaXRzPXVzZXJTcGFjZU9uVXNlPjxzdG9wIHN0b3AtY29sb3I9I0ExNzUwMCBvZmZzZXQ9MD48L3N0b3A+PHN0b3Agc3RvcC1jb2xvcj0jNUQyMTAwIG9mZnNldD0xPjwvc3RvcD48L2xpbmVhckdyYWRpZW50PjxwYXRoIGQ9XCJtMTkyLjMgMjAzYzguMSAzNy4zIDE0IDczLjYgMTcuOCAxMDkuMSAzLjggMzUuNCAyLjggNzUuMS0zIDExOS4ybDYxLjItMTYuN2MtMTUuNi01OS0yNS4yLTk3LjktMjguNi0xMTYuNnMtMTAuOC01MS45LTIyLjEtOTkuNmwtMjUuMyA0LjZcImNsaXAtcnVsZT1ldmVub2RkIGZpbGwtcnVsZT1ldmVub2RkPjwvcGF0aD48ZyBzdHJva2U9IzJGOEEwMD48bGluZWFyR3JhZGllbnQgeDE9LTY2MC4yMyB4Mj0tNjYwLjIzIHkxPTE2Ni43MiB5Mj0xNjcuNzIgZ3JhZGllbnRUcmFuc2Zvcm09XCJtYXRyaXgoOTIuNjgzIDQuODU3MyAtMi4wMjU5IDM4LjY1NyA2MTY4MCAtMzA4OC42KVwiZ3JhZGllbnRVbml0cz11c2VyU3BhY2VPblVzZT48c3RvcCBzdG9wLWNvbG9yPSMyRjhBMDAgb2Zmc2V0PTA+PC9zdG9wPjxzdG9wIHN0b3AtY29sb3I9IzkwRkY1NyBvZmZzZXQ9MT48L3N0b3A+PC9saW5lYXJHcmFkaWVudD48cGF0aCBkPVwibTE5NSAxODMuOXMtMTIuNi0yMi4xLTM2LjUtMjkuOWMtMTUuOS01LjItMzQuNC0xLjUtNTUuNSAxMS4xIDE1LjkgMTQuMyAyOS41IDIyLjYgNDAuNyAyNC45IDE2LjggMy42IDUxLjMtNi4xIDUxLjMtNi4xelwiY2xpcC1ydWxlPWV2ZW5vZGQgZmlsbC1ydWxlPWV2ZW5vZGQgc3Ryb2tlLXdpZHRoPTEzPjwvcGF0aD48bGluZWFyR3JhZGllbnQgeDE9LTY2MS4zNiB4Mj0tNjYxLjM2IHkxPTE2NC4xOCB5Mj0xNjUuMTggZ3JhZGllbnRUcmFuc2Zvcm09XCJtYXRyaXgoMTEwIDUuNzY0OCAtNi4zNTk5IDEyMS4zNSA3MzkzMyAtMTU5MzMpXCJncmFkaWVudFVuaXRzPXVzZXJTcGFjZU9uVXNlPjxzdG9wIHN0b3AtY29sb3I9IzJGOEEwMCBvZmZzZXQ9MD48L3N0b3A+PHN0b3Agc3RvcC1jb2xvcj0jOTBGRjU3IG9mZnNldD0xPjwvc3RvcD48L2xpbmVhckdyYWRpZW50PjxwYXRoIGQ9XCJtMTk0LjkgMTg0LjVzLTQ3LjUtOC41LTgzLjIgMTUuN2MtMjMuOCAxNi4yLTM0LjMgNDkuMy0zMS42IDk5LjQgMzAuMy0yNy44IDUyLjEtNDguNSA2NS4yLTYxLjkgMTkuOC0yMC4yIDQ5LjYtNTMuMiA0OS42LTUzLjJ6XCJjbGlwLXJ1bGU9ZXZlbm9kZCBmaWxsLXJ1bGU9ZXZlbm9kZCBzdHJva2Utd2lkdGg9MTM+PC9wYXRoPjxsaW5lYXJHcmFkaWVudCB4MT0tNjU2Ljc5IHgyPS02NTYuNzkgeTE9MTY1LjE1IHkyPTE2Ni4xNSBncmFkaWVudFRyYW5zZm9ybT1cIm1hdHJpeCg2Mi45NTQgMy4yOTkzIC0zLjUwMjMgNjYuODI4IDQyMTU2IC04NzU0LjEpXCJncmFkaWVudFVuaXRzPXVzZXJTcGFjZU9uVXNlPjxzdG9wIHN0b3AtY29sb3I9IzJGOEEwMCBvZmZzZXQ9MD48L3N0b3A+PHN0b3Agc3RvcC1jb2xvcj0jOTBGRjU3IG9mZnNldD0xPjwvc3RvcD48L2xpbmVhckdyYWRpZW50PjxwYXRoIGQ9XCJtMTk1IDE4My45Yy0wLjgtMjEuOSA2LTM4IDIwLjYtNDguMnMyOS44LTE1LjQgNDUuNS0xNS4zYy02LjEgMjEuNC0xNC41IDM1LjgtMjUuMiA0My40cy0yNC40IDE0LjItNDAuOSAyMC4xelwiY2xpcC1ydWxlPWV2ZW5vZGQgZmlsbC1ydWxlPWV2ZW5vZGQgc3Ryb2tlLXdpZHRoPTEzPjwvcGF0aD48bGluZWFyR3JhZGllbnQgeDE9LTY2My4wNyB4Mj0tNjYzLjA3IHkxPTE2NS40NCB5Mj0xNjYuNDQgZ3JhZGllbnRUcmFuc2Zvcm09XCJtYXRyaXgoMTUyLjQ3IDcuOTkwNyAtMy4wOTM2IDU5LjAyOSAxMDE4ODQgLTQzMTguNylcImdyYWRpZW50VW5pdHM9dXNlclNwYWNlT25Vc2U+PHN0b3Agc3RvcC1jb2xvcj0jMkY4QTAwIG9mZnNldD0wPjwvc3RvcD48c3RvcCBzdG9wLWNvbG9yPSM5MEZGNTcgb2Zmc2V0PTE+PC9zdG9wPjwvbGluZWFyR3JhZGllbnQ+PHBhdGggZD1cIm0xOTQuOSAxODQuNWMzMS45LTMwIDY0LjEtMzkuNyA5Ni43LTI5czUwLjggMzAuNCA1NC42IDU5LjFjLTM1LjItNS41LTYwLjQtOS42LTc1LjgtMTIuMS0xNS4zLTIuNi00MC41LTguNi03NS41LTE4elwiY2xpcC1ydWxlPWV2ZW5vZGQgZmlsbC1ydWxlPWV2ZW5vZGQgc3Ryb2tlLXdpZHRoPTEzPjwvcGF0aD48bGluZWFyR3JhZGllbnQgeDE9LTY2Mi41NyB4Mj0tNjYyLjU3IHkxPTE2NC40NCB5Mj0xNjUuNDQgZ3JhZGllbnRUcmFuc2Zvcm09XCJtYXRyaXgoMTM2LjQ2IDcuMTUxNyAtNS4yMTYzIDk5LjUzMyA5MTUzNiAtMTE0NDIpXCJncmFkaWVudFVuaXRzPXVzZXJTcGFjZU9uVXNlPjxzdG9wIHN0b3AtY29sb3I9IzJGOEEwMCBvZmZzZXQ9MD48L3N0b3A+PHN0b3Agc3RvcC1jb2xvcj0jOTBGRjU3IG9mZnNldD0xPjwvc3RvcD48L2xpbmVhckdyYWRpZW50PjxwYXRoIGQ9XCJtMTk0LjkgMTg0LjVjMzUuOC03LjYgNjUuNi0wLjIgODkuMiAyMnMzNy43IDQ5IDQyLjMgODAuM2MtMzkuOC05LjctNjguMy0yMy44LTg1LjUtNDIuNHMtMzIuNS0zOC41LTQ2LTU5Ljl6XCJjbGlwLXJ1bGU9ZXZlbm9kZCBmaWxsLXJ1bGU9ZXZlbm9kZCBzdHJva2Utd2lkdGg9MTM+PC9wYXRoPjxsaW5lYXJHcmFkaWVudCB4MT0tNjU2LjQzIHgyPS02NTYuNDMgeTE9MTYzLjg2IHkyPTE2NC44NiBncmFkaWVudFRyYW5zZm9ybT1cIm1hdHJpeCg2MC44NjYgMy4xODk5IC04Ljc3NzMgMTY3LjQ4IDQxNTYwIC0yNTE2OClcImdyYWRpZW50VW5pdHM9dXNlclNwYWNlT25Vc2U+PHN0b3Agc3RvcC1jb2xvcj0jMkY4QTAwIG9mZnNldD0wPjwvc3RvcD48c3RvcCBzdG9wLWNvbG9yPSM5MEZGNTcgb2Zmc2V0PTE+PC9zdG9wPjwvbGluZWFyR3JhZGllbnQ+PHBhdGggZD1cIm0xOTQuOSAxODQuNWMtMzMuNiAxMy44LTUzLjYgMzUuNy02MC4xIDY1LjZzLTMuNiA2My4xIDguNyA5OS42YzI3LjQtNDAuMyA0My4yLTY5LjYgNDcuNC04OHM1LjYtNDQuMSA0LTc3LjJ6XCJjbGlwLXJ1bGU9ZXZlbm9kZCBmaWxsLXJ1bGU9ZXZlbm9kZCBzdHJva2Utd2lkdGg9MTM+PC9wYXRoPjxwYXRoIGQ9XCJtMTk2LjUgMTgyLjNjLTE0LjggMjEuNi0yNS4xIDQxLjQtMzAuOCA1OS40cy05LjUgMzMtMTEuMSA0NS4xXCJmaWxsPW5vbmUgc3Ryb2tlLWxpbmVjYXA9cm91bmQgc3Ryb2tlLXdpZHRoPTg+PC9wYXRoPjxwYXRoIGQ9XCJtMTk0LjkgMTg1LjdjLTI0LjQgMS43LTQzLjggOS01OC4xIDIxLjhzLTI0LjcgMjUuNC0zMS4zIDM3LjhcImZpbGw9bm9uZSBzdHJva2UtbGluZWNhcD1yb3VuZCBzdHJva2Utd2lkdGg9OD48L3BhdGg+PHBhdGggZD1cIm0yMDQuNSAxNzYuNGMyOS43LTYuNyA1Mi04LjQgNjctNS4xczI2LjkgOC42IDM1LjggMTUuOVwiZmlsbD1ub25lIHN0cm9rZS1saW5lY2FwPXJvdW5kIHN0cm9rZS13aWR0aD04PjwvcGF0aD48cGF0aCBkPVwibTE5Ni41IDE4MS40YzIwLjMgOS45IDM4LjIgMjAuNSA1My45IDMxLjlzMjcuNCAyMi4xIDM1LjEgMzJcImZpbGw9bm9uZSBzdHJva2UtbGluZWNhcD1yb3VuZCBzdHJva2Utd2lkdGg9OD48L3BhdGg+PC9nPjwvZz48ZGVmcz48ZmlsdGVyIHg9NTAuNSB5PTM5OSB3aWR0aD01MzIgaGVpZ2h0PTYzMyBmaWx0ZXJVbml0cz11c2VyU3BhY2VPblVzZT48ZmVDb2xvck1hdHJpeCB2YWx1ZXM9XCIxIDAgMCAwIDAgIDAgMSAwIDAgMCAgMCAwIDEgMCAwICAwIDAgMCAxIDBcIj48L2ZlQ29sb3JNYXRyaXg+PC9maWx0ZXI+PC9kZWZzPjxtYXNrIHg9NTAuNSB5PTM5OSB3aWR0aD01MzIgaGVpZ2h0PTYzMyBtYXNrVW5pdHM9dXNlclNwYWNlT25Vc2U+PGc+PGNpcmNsZSBjeD0zMTYuNSBjeT0zMTYuNSByPTMxNi41IGZpbGw9I2ZmZj48L2NpcmNsZT48L2c+PC9tYXNrPjxnPjxsaW5lYXJHcmFkaWVudCB4MT0tNjY2LjA2IHgyPS02NjYuMjMgeTE9MTYzLjM2IHkyPTE2My43NSBncmFkaWVudFRyYW5zZm9ybT1cIm1hdHJpeCg1MzIgMCAwIDYzMyAzNTQ3NjAgLTEwMjk1OSlcImdyYWRpZW50VW5pdHM9dXNlclNwYWNlT25Vc2U+PHN0b3Agc3RvcC1jb2xvcj0jRkZGNDAwIG9mZnNldD0wPjwvc3RvcD48c3RvcCBzdG9wLWNvbG9yPSMzQzg3MDAgb2Zmc2V0PTE+PC9zdG9wPjwvbGluZWFyR3JhZGllbnQ+PGVsbGlwc2UgY3g9MzE2LjUgY3k9NzE1LjUgcng9MjY2IHJ5PTMxNi41PjwvZWxsaXBzZT48L2c+PGRlZnM+PGZpbHRlciB4PTM5MSB5PS0yNCB3aWR0aD0yODggaGVpZ2h0PTI4MyBmaWx0ZXJVbml0cz11c2VyU3BhY2VPblVzZT48ZmVDb2xvck1hdHJpeCB2YWx1ZXM9XCIxIDAgMCAwIDAgIDAgMSAwIDAgMCAgMCAwIDEgMCAwICAwIDAgMCAxIDBcIj48L2ZlQ29sb3JNYXRyaXg+PC9maWx0ZXI+PC9kZWZzPjxtYXNrIHg9MzkxIHk9LTI0IHdpZHRoPTI4OCBoZWlnaHQ9MjgzIG1hc2tVbml0cz11c2VyU3BhY2VPblVzZT48Zz48Y2lyY2xlIGN4PTMxNi41IGN5PTMxNi41IHI9MzE2LjUgZmlsbD0jZmZmPjwvY2lyY2xlPjwvZz48L21hc2s+PGc+PGxpbmVhckdyYWRpZW50IHgxPS02NjQuNTYgeDI9LTY2NC41NiB5MT0xNjMuNzkgeTI9MTY0Ljc5IGdyYWRpZW50VHJhbnNmb3JtPVwibWF0cml4KDIyNyAwIDAgMjI3IDE1MTQyMSAtMzcyMDQpXCJncmFkaWVudFVuaXRzPXVzZXJTcGFjZU9uVXNlPjxzdG9wIHN0b3AtY29sb3I9I0ZGREYwMCBvZmZzZXQ9MD48L3N0b3A+PHN0b3Agc3RvcC1jb2xvcj0jRkY5RDAwIG9mZnNldD0xPjwvc3RvcD48L2xpbmVhckdyYWRpZW50PjxjaXJjbGUgY3g9NTY1LjUgY3k9ODkuNSByPTExMy41PjwvY2lyY2xlPjxsaW5lYXJHcmFkaWVudCB4MT0tNjQ0LjUgeDI9LTY0NS43NyB5MT0zNDIgeTI9MzQyIGdyYWRpZW50VHJhbnNmb3JtPVwibWF0cml4KDMwIDAgMCAxIDE5NzcwIC0yNTMpXCJncmFkaWVudFVuaXRzPXVzZXJTcGFjZU9uVXNlPjxzdG9wIHN0b3AtY29sb3I9I0ZGQTQwMCBvZmZzZXQ9MD48L3N0b3A+PHN0b3Agc3RvcC1jb2xvcj0jRkY1RTAwIG9mZnNldD0xPjwvc3RvcD48L2xpbmVhckdyYWRpZW50PjxsaW5lIHgxPTQyNyB4Mj0zOTcgeTE9ODkgeTI9ODkgZmlsbD1ub25lIHN0cm9rZS1saW5lY2FwPXJvdW5kIHN0cm9rZS1saW5lam9pbj1iZXZlbCBzdHJva2Utd2lkdGg9MTI+PC9saW5lPjxsaW5lYXJHcmFkaWVudCB4MT0tNjQxLjU2IHgyPS02NDIuODMgeTE9MTk2LjAyIHkyPTE5Ni4wNyBncmFkaWVudFRyYW5zZm9ybT1cIm1hdHJpeCgyNi41IDAgMCA1LjUgMTc0MzkgLTEwMjUuNSlcImdyYWRpZW50VW5pdHM9dXNlclNwYWNlT25Vc2U+PHN0b3Agc3RvcC1jb2xvcj0jRkZBNDAwIG9mZnNldD0wPjwvc3RvcD48c3RvcCBzdG9wLWNvbG9yPSNGRjVFMDAgb2Zmc2V0PTE+PC9zdG9wPjwvbGluZWFyR3JhZGllbnQ+PGxpbmUgeDE9NDMwLjUgeDI9NDA0IHkxPTU1LjUgeTI9NTAgZmlsbD1ub25lIHN0cm9rZS1saW5lY2FwPXJvdW5kIHN0cm9rZS1saW5lam9pbj1iZXZlbCBzdHJva2Utd2lkdGg9MTI+PC9saW5lPjxsaW5lYXJHcmFkaWVudCB4MT0tNjQzLjczIHgyPS02NDUgeTE9MTg1LjgzIHkyPTE4NS45IGdyYWRpZW50VHJhbnNmb3JtPVwibWF0cml4KDI5IDAgMCA4IDE5MTA3IC0xMzYxKVwiZ3JhZGllbnRVbml0cz11c2VyU3BhY2VPblVzZT48c3RvcCBzdG9wLWNvbG9yPSNGRkE0MDAgb2Zmc2V0PTA+PC9zdG9wPjxzdG9wIHN0b3AtY29sb3I9I0ZGNUUwMCBvZmZzZXQ9MT48L3N0b3A+PC9saW5lYXJHcmFkaWVudD48bGluZSB4MT00MzEgeDI9NDAyIHkxPTEyMiB5Mj0xMzAgZmlsbD1ub25lIHN0cm9rZS1saW5lY2FwPXJvdW5kIHN0cm9rZS1saW5lam9pbj1iZXZlbCBzdHJva2Utd2lkdGg9MTI+PC9saW5lPjxsaW5lYXJHcmFkaWVudCB4MT0tNjM4Ljk0IHgyPS02NDAuMjIgeTE9MTc3LjA5IHkyPTE3Ny4zOSBncmFkaWVudFRyYW5zZm9ybT1cIm1hdHJpeCgyNCAwIDAgMTMgMTU3ODMgLTIxNDUpXCJncmFkaWVudFVuaXRzPXVzZXJTcGFjZU9uVXNlPjxzdG9wIHN0b3AtY29sb3I9I0ZGQTQwMCBvZmZzZXQ9MD48L3N0b3A+PHN0b3Agc3RvcC1jb2xvcj0jRkY1RTAwIG9mZnNldD0xPjwvc3RvcD48L2xpbmVhckdyYWRpZW50PjxsaW5lIHgxPTQ0MiB4Mj00MTggeTE9MTUzIHkyPTE2NiBmaWxsPW5vbmUgc3Ryb2tlLWxpbmVjYXA9cm91bmQgc3Ryb2tlLWxpbmVqb2luPWJldmVsIHN0cm9rZS13aWR0aD0xMj48L2xpbmU+PGxpbmVhckdyYWRpZW50IHgxPS02MzMuNDIgeDI9LTYzNC43IHkxPTE3Mi40MSB5Mj0xNzMuMzEgZ3JhZGllbnRUcmFuc2Zvcm09XCJtYXRyaXgoMjAgMCAwIDE5IDEzMTM3IC0zMDk2KVwiZ3JhZGllbnRVbml0cz11c2VyU3BhY2VPblVzZT48c3RvcCBzdG9wLWNvbG9yPSNGRkE0MDAgb2Zmc2V0PTA+PC9zdG9wPjxzdG9wIHN0b3AtY29sb3I9I0ZGNUUwMCBvZmZzZXQ9MT48L3N0b3A+PC9saW5lYXJHcmFkaWVudD48bGluZSB4MT00NjQgeDI9NDQ0IHkxPTE4MCB5Mj0xOTkgZmlsbD1ub25lIHN0cm9rZS1saW5lY2FwPXJvdW5kIHN0cm9rZS1saW5lam9pbj1iZXZlbCBzdHJva2Utd2lkdGg9MTI+PC9saW5lPjxsaW5lYXJHcmFkaWVudCB4MT0tNjE5LjA1IHgyPS02MTkuNTIgeTE9MTcwLjgyIHkyPTE3MS44MiBncmFkaWVudFRyYW5zZm9ybT1cIm1hdHJpeCgxMy44MyAwIDAgMjIuODUgOTA1MCAtMzcwMy40KVwiZ3JhZGllbnRVbml0cz11c2VyU3BhY2VPblVzZT48c3RvcCBzdG9wLWNvbG9yPSNGRkE0MDAgb2Zmc2V0PTA+PC9zdG9wPjxzdG9wIHN0b3AtY29sb3I9I0ZGNUUwMCBvZmZzZXQ9MT48L3N0b3A+PC9saW5lYXJHcmFkaWVudD48bGluZSB4MT00OTEuNCB4Mj00NzcuNSB5MT0yMDMgeTI9MjI1LjkgZmlsbD1ub25lIHN0cm9rZS1saW5lY2FwPXJvdW5kIHN0cm9rZS1saW5lam9pbj1iZXZlbCBzdHJva2Utd2lkdGg9MTI+PC9saW5lPjxsaW5lYXJHcmFkaWVudCB4MT0tNTc4LjUgeDI9LTU3OC42MyB5MT0xNzAuMzEgeTI9MTcxLjMxIGdyYWRpZW50VHJhbnNmb3JtPVwibWF0cml4KDcuNSAwIDAgMjQuNSA0ODYwIC0zOTUzKVwiZ3JhZGllbnRVbml0cz11c2VyU3BhY2VPblVzZT48c3RvcCBzdG9wLWNvbG9yPSNGRkE0MDAgb2Zmc2V0PTA+PC9zdG9wPjxzdG9wIHN0b3AtY29sb3I9I0ZGNUUwMCBvZmZzZXQ9MT48L3N0b3A+PC9saW5lYXJHcmFkaWVudD48bGluZSB4MT01MjQuNSB4Mj01MTcgeTE9MjE5LjUgeTI9MjQ0IGZpbGw9bm9uZSBzdHJva2UtbGluZWNhcD1yb3VuZCBzdHJva2UtbGluZWpvaW49YmV2ZWwgc3Ryb2tlLXdpZHRoPTEyPjwvbGluZT48bGluZWFyR3JhZGllbnQgeDE9NjY2LjUgeDI9NjY2LjUgeTE9MTcwLjMxIHkyPTE3MS4zMSBncmFkaWVudFRyYW5zZm9ybT1cIm1hdHJpeCguNSAwIDAgMjQuNSAyMzEuNSAtMzk0NClcImdyYWRpZW50VW5pdHM9dXNlclNwYWNlT25Vc2U+PHN0b3Agc3RvcC1jb2xvcj0jRkZBNDAwIG9mZnNldD0wPjwvc3RvcD48c3RvcCBzdG9wLWNvbG9yPSNGRjVFMDAgb2Zmc2V0PTE+PC9zdG9wPjwvbGluZWFyR3JhZGllbnQ+PGxpbmUgeDE9NTY0LjUgeDI9NTY1IHkxPTIyOC41IHkyPTI1MyBmaWxsPW5vbmUgc3Ryb2tlLWxpbmVjYXA9cm91bmQgc3Ryb2tlLWxpbmVqb2luPWJldmVsIHN0cm9rZS13aWR0aD0xMj5gKTtcbmZ1bmN0aW9uIFNlYXJjaCgpIHtcbiAgcmV0dXJuIF90bXBsJDIoKTtcbn1cbmZ1bmN0aW9uIFRyYXNoKCkge1xuICByZXR1cm4gX3RtcGwkMjIoKTtcbn1cbmZ1bmN0aW9uIENoZXZyb25Eb3duKCkge1xuICByZXR1cm4gX3RtcGwkMygpO1xufVxuZnVuY3Rpb24gQXJyb3dVcCgpIHtcbiAgcmV0dXJuIF90bXBsJDQoKTtcbn1cbmZ1bmN0aW9uIEFycm93RG93bigpIHtcbiAgcmV0dXJuIF90bXBsJDUoKTtcbn1cbmZ1bmN0aW9uIEFycm93TGVmdCgpIHtcbiAgcmV0dXJuICgoKSA9PiB7XG4gICAgY29uc3QgX2VsJDYgPSBfdG1wbCQ1KCk7XG4gICAgX2VsJDYuc3R5bGUuc2V0UHJvcGVydHkoXCJ0cmFuc2Zvcm1cIiwgXCJyb3RhdGUoOTBkZWcpXCIpO1xuICAgIHJldHVybiBfZWwkNjtcbiAgfSkoKTtcbn1cbmZ1bmN0aW9uIEFycm93UmlnaHQoKSB7XG4gIHJldHVybiAoKCkgPT4ge1xuICAgIGNvbnN0IF9lbCQ3ID0gX3RtcGwkNSgpO1xuICAgIF9lbCQ3LnN0eWxlLnNldFByb3BlcnR5KFwidHJhbnNmb3JtXCIsIFwicm90YXRlKC05MGRlZylcIik7XG4gICAgcmV0dXJuIF9lbCQ3O1xuICB9KSgpO1xufVxuZnVuY3Rpb24gU3VuKCkge1xuICByZXR1cm4gX3RtcGwkNigpO1xufVxuZnVuY3Rpb24gTW9vbigpIHtcbiAgcmV0dXJuIF90bXBsJDcoKTtcbn1cbmZ1bmN0aW9uIE1vbml0b3IoKSB7XG4gIHJldHVybiBfdG1wbCQ4KCk7XG59XG5mdW5jdGlvbiBXaWZpKCkge1xuICByZXR1cm4gX3RtcGwkOSgpO1xufVxuZnVuY3Rpb24gT2ZmbGluZSgpIHtcbiAgcmV0dXJuIF90bXBsJDEwKCk7XG59XG5mdW5jdGlvbiBTZXR0aW5ncygpIHtcbiAgcmV0dXJuIF90bXBsJDExKCk7XG59XG5mdW5jdGlvbiBQaVBJY29uKCkge1xuICByZXR1cm4gX3RtcGwkMTIoKTtcbn1cbmZ1bmN0aW9uIENvcGllcigpIHtcbiAgcmV0dXJuIF90bXBsJDEzKCk7XG59XG5mdW5jdGlvbiBDb3BpZWRDb3BpZXIocHJvcHMpIHtcbiAgcmV0dXJuICgoKSA9PiB7XG4gICAgY29uc3QgX2VsJDE2ID0gX3RtcGwkMTQoKSwgX2VsJDE3ID0gX2VsJDE2LmZpcnN0Q2hpbGQ7XG4gICAgY3JlYXRlUmVuZGVyRWZmZWN0KCgpID0+IHNldEF0dHJpYnV0ZShfZWwkMTcsIFwic3Ryb2tlXCIsIHByb3BzLnRoZW1lID09PSBcImRhcmtcIiA/IFwiIzEyQjc2QVwiIDogXCIjMDI3QTQ4XCIpKTtcbiAgICByZXR1cm4gX2VsJDE2O1xuICB9KSgpO1xufVxuZnVuY3Rpb24gRXJyb3JDb3BpZXIoKSB7XG4gIHJldHVybiBfdG1wbCQxNSgpO1xufVxuZnVuY3Rpb24gTGlzdCgpIHtcbiAgcmV0dXJuIF90bXBsJDE2KCk7XG59XG5mdW5jdGlvbiBDaGVjayhwcm9wcykge1xuICByZXR1cm4gW2NyZWF0ZUNvbXBvbmVudChTaG93LCB7XG4gICAgZ2V0IHdoZW4oKSB7XG4gICAgICByZXR1cm4gcHJvcHMuY2hlY2tlZDtcbiAgICB9LFxuICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgIGNvbnN0IF9lbCQyMCA9IF90bXBsJDE0KCksIF9lbCQyMSA9IF9lbCQyMC5maXJzdENoaWxkO1xuICAgICAgY3JlYXRlUmVuZGVyRWZmZWN0KCgpID0+IHNldEF0dHJpYnV0ZShfZWwkMjEsIFwic3Ryb2tlXCIsIHByb3BzLnRoZW1lID09PSBcImRhcmtcIiA/IFwiIzlCOEFGQlwiIDogXCIjNjkzOEVGXCIpKTtcbiAgICAgIHJldHVybiBfZWwkMjA7XG4gICAgfVxuICB9KSwgY3JlYXRlQ29tcG9uZW50KFNob3csIHtcbiAgICBnZXQgd2hlbigpIHtcbiAgICAgIHJldHVybiAhcHJvcHMuY2hlY2tlZDtcbiAgICB9LFxuICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgIGNvbnN0IF9lbCQyMiA9IF90bXBsJDE3KCksIF9lbCQyMyA9IF9lbCQyMi5maXJzdENoaWxkO1xuICAgICAgY3JlYXRlUmVuZGVyRWZmZWN0KCgpID0+IHNldEF0dHJpYnV0ZShfZWwkMjMsIFwic3Ryb2tlXCIsIHByb3BzLnRoZW1lID09PSBcImRhcmtcIiA/IFwiIzlCOEFGQlwiIDogXCIjNjkzOEVGXCIpKTtcbiAgICAgIHJldHVybiBfZWwkMjI7XG4gICAgfVxuICB9KV07XG59XG5mdW5jdGlvbiBDaGVja0NpcmNsZSgpIHtcbiAgcmV0dXJuIF90bXBsJDE4KCk7XG59XG5mdW5jdGlvbiBMb2FkaW5nQ2lyY2xlKCkge1xuICByZXR1cm4gX3RtcGwkMTkoKTtcbn1cbmZ1bmN0aW9uIFhDaXJjbGUoKSB7XG4gIHJldHVybiBfdG1wbCQyMCgpO1xufVxuZnVuY3Rpb24gUGF1c2VDaXJjbGUoKSB7XG4gIHJldHVybiBfdG1wbCQyMSgpO1xufVxuZnVuY3Rpb24gVGFuc3RhY2tMb2dvKCkge1xuICBjb25zdCBpZCA9IGNyZWF0ZVVuaXF1ZUlkKCk7XG4gIHJldHVybiAoKCkgPT4ge1xuICAgIGNvbnN0IF9lbCQyOCA9IF90bXBsJDIyMigpLCBfZWwkMjkgPSBfZWwkMjguZmlyc3RDaGlsZCwgX2VsJDMwID0gX2VsJDI5Lm5leHRTaWJsaW5nLCBfZWwkMzEgPSBfZWwkMzAubmV4dFNpYmxpbmcsIF9lbCQzMiA9IF9lbCQzMS5maXJzdENoaWxkLCBfZWwkMzMgPSBfZWwkMzEubmV4dFNpYmxpbmcsIF9lbCQzNCA9IF9lbCQzMy5maXJzdENoaWxkLCBfZWwkMzUgPSBfZWwkMzMubmV4dFNpYmxpbmcsIF9lbCQzNiA9IF9lbCQzNS5uZXh0U2libGluZywgX2VsJDM3ID0gX2VsJDM2LmZpcnN0Q2hpbGQsIF9lbCQzOCA9IF9lbCQzNi5uZXh0U2libGluZywgX2VsJDM5ID0gX2VsJDM4LmZpcnN0Q2hpbGQsIF9lbCQ0MCA9IF9lbCQzOC5uZXh0U2libGluZywgX2VsJDQxID0gX2VsJDQwLm5leHRTaWJsaW5nLCBfZWwkNDIgPSBfZWwkNDEuZmlyc3RDaGlsZCwgX2VsJDQzID0gX2VsJDQxLm5leHRTaWJsaW5nLCBfZWwkNDQgPSBfZWwkNDMuZmlyc3RDaGlsZCwgX2VsJDQ1ID0gX2VsJDQzLm5leHRTaWJsaW5nLCBfZWwkNDYgPSBfZWwkNDUubmV4dFNpYmxpbmcsIF9lbCQ0NyA9IF9lbCQ0Ni5maXJzdENoaWxkLCBfZWwkNDggPSBfZWwkNDYubmV4dFNpYmxpbmcsIF9lbCQ0OSA9IF9lbCQ0OC5maXJzdENoaWxkLCBfZWwkNTAgPSBfZWwkNDgubmV4dFNpYmxpbmcsIF9lbCQ1MSA9IF9lbCQ1MC5uZXh0U2libGluZywgX2VsJDUyID0gX2VsJDUxLmZpcnN0Q2hpbGQsIF9lbCQ1MyA9IF9lbCQ1MS5uZXh0U2libGluZywgX2VsJDU0ID0gX2VsJDUzLmZpcnN0Q2hpbGQsIF9lbCQ1NSA9IF9lbCQ1My5uZXh0U2libGluZywgX2VsJDU2ID0gX2VsJDU1Lm5leHRTaWJsaW5nLCBfZWwkNTcgPSBfZWwkNTYuZmlyc3RDaGlsZCwgX2VsJDU4ID0gX2VsJDU2Lm5leHRTaWJsaW5nLCBfZWwkNTkgPSBfZWwkNTguZmlyc3RDaGlsZCwgX2VsJDYwID0gX2VsJDU4Lm5leHRTaWJsaW5nLCBfZWwkNjEgPSBfZWwkNjAubmV4dFNpYmxpbmcsIF9lbCQ2MiA9IF9lbCQ2MS5maXJzdENoaWxkLCBfZWwkNjMgPSBfZWwkNjEubmV4dFNpYmxpbmcsIF9lbCQ2NCA9IF9lbCQ2My5maXJzdENoaWxkLCBfZWwkNjUgPSBfZWwkNjMubmV4dFNpYmxpbmcsIF9lbCQ2NiA9IF9lbCQ2NS5maXJzdENoaWxkLCBfZWwkNjcgPSBfZWwkNjYubmV4dFNpYmxpbmcsIF9lbCQ2OCA9IF9lbCQ2Ny5uZXh0U2libGluZywgX2VsJDY5ID0gX2VsJDY4Lm5leHRTaWJsaW5nLCBfZWwkNzAgPSBfZWwkNjkubmV4dFNpYmxpbmcsIF9lbCQ3MSA9IF9lbCQ2NS5uZXh0U2libGluZywgX2VsJDcyID0gX2VsJDcxLmZpcnN0Q2hpbGQsIF9lbCQ3MyA9IF9lbCQ3MS5uZXh0U2libGluZywgX2VsJDc0ID0gX2VsJDczLmZpcnN0Q2hpbGQsIF9lbCQ3NSA9IF9lbCQ3My5uZXh0U2libGluZywgX2VsJDc2ID0gX2VsJDc1LmZpcnN0Q2hpbGQsIF9lbCQ3NyA9IF9lbCQ3Ni5uZXh0U2libGluZywgX2VsJDc4ID0gX2VsJDc3Lm5leHRTaWJsaW5nLCBfZWwkNzkgPSBfZWwkNzguZmlyc3RDaGlsZCwgX2VsJDgwID0gX2VsJDc5Lm5leHRTaWJsaW5nLCBfZWwkODEgPSBfZWwkODAubmV4dFNpYmxpbmcsIF9lbCQ4MiA9IF9lbCQ4MS5uZXh0U2libGluZywgX2VsJDgzID0gX2VsJDgyLm5leHRTaWJsaW5nLCBfZWwkODQgPSBfZWwkODMubmV4dFNpYmxpbmcsIF9lbCQ4NSA9IF9lbCQ4NC5uZXh0U2libGluZywgX2VsJDg2ID0gX2VsJDg1Lm5leHRTaWJsaW5nLCBfZWwkODcgPSBfZWwkODYubmV4dFNpYmxpbmcsIF9lbCQ4OCA9IF9lbCQ4Ny5uZXh0U2libGluZywgX2VsJDg5ID0gX2VsJDg4Lm5leHRTaWJsaW5nLCBfZWwkOTAgPSBfZWwkODkubmV4dFNpYmxpbmcsIF9lbCQ5MSA9IF9lbCQ3NS5uZXh0U2libGluZywgX2VsJDkyID0gX2VsJDkxLmZpcnN0Q2hpbGQsIF9lbCQ5MyA9IF9lbCQ5MS5uZXh0U2libGluZywgX2VsJDk0ID0gX2VsJDkzLmZpcnN0Q2hpbGQsIF9lbCQ5NSA9IF9lbCQ5My5uZXh0U2libGluZywgX2VsJDk2ID0gX2VsJDk1LmZpcnN0Q2hpbGQsIF9lbCQ5NyA9IF9lbCQ5Ni5uZXh0U2libGluZywgX2VsJDk4ID0gX2VsJDk1Lm5leHRTaWJsaW5nLCBfZWwkOTkgPSBfZWwkOTguZmlyc3RDaGlsZCwgX2VsJDEwMCA9IF9lbCQ5OC5uZXh0U2libGluZywgX2VsJDEwMSA9IF9lbCQxMDAuZmlyc3RDaGlsZCwgX2VsJDEwMiA9IF9lbCQxMDAubmV4dFNpYmxpbmcsIF9lbCQxMDMgPSBfZWwkMTAyLmZpcnN0Q2hpbGQsIF9lbCQxMDQgPSBfZWwkMTAzLm5leHRTaWJsaW5nLCBfZWwkMTA1ID0gX2VsJDEwNC5uZXh0U2libGluZywgX2VsJDEwNiA9IF9lbCQxMDUubmV4dFNpYmxpbmcsIF9lbCQxMDcgPSBfZWwkMTA2Lm5leHRTaWJsaW5nLCBfZWwkMTA4ID0gX2VsJDEwNy5uZXh0U2libGluZywgX2VsJDEwOSA9IF9lbCQxMDgubmV4dFNpYmxpbmcsIF9lbCQxMTAgPSBfZWwkMTA5Lm5leHRTaWJsaW5nLCBfZWwkMTExID0gX2VsJDExMC5uZXh0U2libGluZywgX2VsJDExMiA9IF9lbCQxMTEubmV4dFNpYmxpbmcsIF9lbCQxMTMgPSBfZWwkMTEyLm5leHRTaWJsaW5nLCBfZWwkMTE0ID0gX2VsJDExMy5uZXh0U2libGluZywgX2VsJDExNSA9IF9lbCQxMTQubmV4dFNpYmxpbmcsIF9lbCQxMTYgPSBfZWwkMTE1Lm5leHRTaWJsaW5nLCBfZWwkMTE3ID0gX2VsJDExNi5uZXh0U2libGluZywgX2VsJDExOCA9IF9lbCQxMTcubmV4dFNpYmxpbmcsIF9lbCQxMTkgPSBfZWwkMTE4Lm5leHRTaWJsaW5nLCBfZWwkMTIwID0gX2VsJDExOS5uZXh0U2libGluZztcbiAgICBzZXRBdHRyaWJ1dGUoX2VsJDI5LCBcImlkXCIsIGBhLSR7aWR9YCk7XG4gICAgc2V0QXR0cmlidXRlKF9lbCQzMCwgXCJmaWxsXCIsIGB1cmwoI2EtJHtpZH0pYCk7XG4gICAgc2V0QXR0cmlidXRlKF9lbCQzMiwgXCJpZFwiLCBgYW0tJHtpZH1gKTtcbiAgICBzZXRBdHRyaWJ1dGUoX2VsJDMzLCBcImlkXCIsIGBiLSR7aWR9YCk7XG4gICAgc2V0QXR0cmlidXRlKF9lbCQzNCwgXCJmaWx0ZXJcIiwgYHVybCgjYW0tJHtpZH0pYCk7XG4gICAgc2V0QXR0cmlidXRlKF9lbCQzNSwgXCJtYXNrXCIsIGB1cmwoI2ItJHtpZH0pYCk7XG4gICAgc2V0QXR0cmlidXRlKF9lbCQzNywgXCJpZFwiLCBgYWgtJHtpZH1gKTtcbiAgICBzZXRBdHRyaWJ1dGUoX2VsJDM4LCBcImlkXCIsIGBrLSR7aWR9YCk7XG4gICAgc2V0QXR0cmlidXRlKF9lbCQzOSwgXCJmaWx0ZXJcIiwgYHVybCgjYWgtJHtpZH0pYCk7XG4gICAgc2V0QXR0cmlidXRlKF9lbCQ0MCwgXCJtYXNrXCIsIGB1cmwoI2stJHtpZH0pYCk7XG4gICAgc2V0QXR0cmlidXRlKF9lbCQ0MiwgXCJpZFwiLCBgYWUtJHtpZH1gKTtcbiAgICBzZXRBdHRyaWJ1dGUoX2VsJDQzLCBcImlkXCIsIGBqLSR7aWR9YCk7XG4gICAgc2V0QXR0cmlidXRlKF9lbCQ0NCwgXCJmaWx0ZXJcIiwgYHVybCgjYWUtJHtpZH0pYCk7XG4gICAgc2V0QXR0cmlidXRlKF9lbCQ0NSwgXCJtYXNrXCIsIGB1cmwoI2otJHtpZH0pYCk7XG4gICAgc2V0QXR0cmlidXRlKF9lbCQ0NywgXCJpZFwiLCBgYWktJHtpZH1gKTtcbiAgICBzZXRBdHRyaWJ1dGUoX2VsJDQ4LCBcImlkXCIsIGBpLSR7aWR9YCk7XG4gICAgc2V0QXR0cmlidXRlKF9lbCQ0OSwgXCJmaWx0ZXJcIiwgYHVybCgjYWktJHtpZH0pYCk7XG4gICAgc2V0QXR0cmlidXRlKF9lbCQ1MCwgXCJtYXNrXCIsIGB1cmwoI2ktJHtpZH0pYCk7XG4gICAgc2V0QXR0cmlidXRlKF9lbCQ1MiwgXCJpZFwiLCBgYWotJHtpZH1gKTtcbiAgICBzZXRBdHRyaWJ1dGUoX2VsJDUzLCBcImlkXCIsIGBoLSR7aWR9YCk7XG4gICAgc2V0QXR0cmlidXRlKF9lbCQ1NCwgXCJmaWx0ZXJcIiwgYHVybCgjYWotJHtpZH0pYCk7XG4gICAgc2V0QXR0cmlidXRlKF9lbCQ1NSwgXCJtYXNrXCIsIGB1cmwoI2gtJHtpZH0pYCk7XG4gICAgc2V0QXR0cmlidXRlKF9lbCQ1NywgXCJpZFwiLCBgYWctJHtpZH1gKTtcbiAgICBzZXRBdHRyaWJ1dGUoX2VsJDU4LCBcImlkXCIsIGBnLSR7aWR9YCk7XG4gICAgc2V0QXR0cmlidXRlKF9lbCQ1OSwgXCJmaWx0ZXJcIiwgYHVybCgjYWctJHtpZH0pYCk7XG4gICAgc2V0QXR0cmlidXRlKF9lbCQ2MCwgXCJtYXNrXCIsIGB1cmwoI2ctJHtpZH0pYCk7XG4gICAgc2V0QXR0cmlidXRlKF9lbCQ2MiwgXCJpZFwiLCBgYWYtJHtpZH1gKTtcbiAgICBzZXRBdHRyaWJ1dGUoX2VsJDYzLCBcImlkXCIsIGBmLSR7aWR9YCk7XG4gICAgc2V0QXR0cmlidXRlKF9lbCQ2NCwgXCJmaWx0ZXJcIiwgYHVybCgjYWYtJHtpZH0pYCk7XG4gICAgc2V0QXR0cmlidXRlKF9lbCQ2NSwgXCJtYXNrXCIsIGB1cmwoI2YtJHtpZH0pYCk7XG4gICAgc2V0QXR0cmlidXRlKF9lbCQ2OSwgXCJpZFwiLCBgbS0ke2lkfWApO1xuICAgIHNldEF0dHJpYnV0ZShfZWwkNzAsIFwiZmlsbFwiLCBgdXJsKCNtLSR7aWR9KWApO1xuICAgIHNldEF0dHJpYnV0ZShfZWwkNzIsIFwiaWRcIiwgYGFrLSR7aWR9YCk7XG4gICAgc2V0QXR0cmlidXRlKF9lbCQ3MywgXCJpZFwiLCBgZS0ke2lkfWApO1xuICAgIHNldEF0dHJpYnV0ZShfZWwkNzQsIFwiZmlsdGVyXCIsIGB1cmwoI2FrLSR7aWR9KWApO1xuICAgIHNldEF0dHJpYnV0ZShfZWwkNzUsIFwibWFza1wiLCBgdXJsKCNlLSR7aWR9KWApO1xuICAgIHNldEF0dHJpYnV0ZShfZWwkNzYsIFwiaWRcIiwgYG4tJHtpZH1gKTtcbiAgICBzZXRBdHRyaWJ1dGUoX2VsJDc3LCBcImZpbGxcIiwgYHVybCgjbi0ke2lkfSlgKTtcbiAgICBzZXRBdHRyaWJ1dGUoX2VsJDc5LCBcImlkXCIsIGByLSR7aWR9YCk7XG4gICAgc2V0QXR0cmlidXRlKF9lbCQ4MCwgXCJmaWxsXCIsIGB1cmwoI3ItJHtpZH0pYCk7XG4gICAgc2V0QXR0cmlidXRlKF9lbCQ4MSwgXCJpZFwiLCBgcy0ke2lkfWApO1xuICAgIHNldEF0dHJpYnV0ZShfZWwkODIsIFwiZmlsbFwiLCBgdXJsKCNzLSR7aWR9KWApO1xuICAgIHNldEF0dHJpYnV0ZShfZWwkODMsIFwiaWRcIiwgYHEtJHtpZH1gKTtcbiAgICBzZXRBdHRyaWJ1dGUoX2VsJDg0LCBcImZpbGxcIiwgYHVybCgjcS0ke2lkfSlgKTtcbiAgICBzZXRBdHRyaWJ1dGUoX2VsJDg1LCBcImlkXCIsIGBwLSR7aWR9YCk7XG4gICAgc2V0QXR0cmlidXRlKF9lbCQ4NiwgXCJmaWxsXCIsIGB1cmwoI3AtJHtpZH0pYCk7XG4gICAgc2V0QXR0cmlidXRlKF9lbCQ4NywgXCJpZFwiLCBgby0ke2lkfWApO1xuICAgIHNldEF0dHJpYnV0ZShfZWwkODgsIFwiZmlsbFwiLCBgdXJsKCNvLSR7aWR9KWApO1xuICAgIHNldEF0dHJpYnV0ZShfZWwkODksIFwiaWRcIiwgYGwtJHtpZH1gKTtcbiAgICBzZXRBdHRyaWJ1dGUoX2VsJDkwLCBcImZpbGxcIiwgYHVybCgjbC0ke2lkfSlgKTtcbiAgICBzZXRBdHRyaWJ1dGUoX2VsJDkyLCBcImlkXCIsIGBhbC0ke2lkfWApO1xuICAgIHNldEF0dHJpYnV0ZShfZWwkOTMsIFwiaWRcIiwgYGQtJHtpZH1gKTtcbiAgICBzZXRBdHRyaWJ1dGUoX2VsJDk0LCBcImZpbHRlclwiLCBgdXJsKCNhbC0ke2lkfSlgKTtcbiAgICBzZXRBdHRyaWJ1dGUoX2VsJDk1LCBcIm1hc2tcIiwgYHVybCgjZC0ke2lkfSlgKTtcbiAgICBzZXRBdHRyaWJ1dGUoX2VsJDk2LCBcImlkXCIsIGB1LSR7aWR9YCk7XG4gICAgc2V0QXR0cmlidXRlKF9lbCQ5NywgXCJmaWxsXCIsIGB1cmwoI3UtJHtpZH0pYCk7XG4gICAgc2V0QXR0cmlidXRlKF9lbCQ5OSwgXCJpZFwiLCBgYWQtJHtpZH1gKTtcbiAgICBzZXRBdHRyaWJ1dGUoX2VsJDEwMCwgXCJpZFwiLCBgYy0ke2lkfWApO1xuICAgIHNldEF0dHJpYnV0ZShfZWwkMTAxLCBcImZpbHRlclwiLCBgdXJsKCNhZC0ke2lkfSlgKTtcbiAgICBzZXRBdHRyaWJ1dGUoX2VsJDEwMiwgXCJtYXNrXCIsIGB1cmwoI2MtJHtpZH0pYCk7XG4gICAgc2V0QXR0cmlidXRlKF9lbCQxMDMsIFwiaWRcIiwgYHQtJHtpZH1gKTtcbiAgICBzZXRBdHRyaWJ1dGUoX2VsJDEwNCwgXCJmaWxsXCIsIGB1cmwoI3QtJHtpZH0pYCk7XG4gICAgc2V0QXR0cmlidXRlKF9lbCQxMDUsIFwiaWRcIiwgYHYtJHtpZH1gKTtcbiAgICBzZXRBdHRyaWJ1dGUoX2VsJDEwNiwgXCJzdHJva2VcIiwgYHVybCgjdi0ke2lkfSlgKTtcbiAgICBzZXRBdHRyaWJ1dGUoX2VsJDEwNywgXCJpZFwiLCBgYWEtJHtpZH1gKTtcbiAgICBzZXRBdHRyaWJ1dGUoX2VsJDEwOCwgXCJzdHJva2VcIiwgYHVybCgjYWEtJHtpZH0pYCk7XG4gICAgc2V0QXR0cmlidXRlKF9lbCQxMDksIFwiaWRcIiwgYHctJHtpZH1gKTtcbiAgICBzZXRBdHRyaWJ1dGUoX2VsJDExMCwgXCJzdHJva2VcIiwgYHVybCgjdy0ke2lkfSlgKTtcbiAgICBzZXRBdHRyaWJ1dGUoX2VsJDExMSwgXCJpZFwiLCBgYWMtJHtpZH1gKTtcbiAgICBzZXRBdHRyaWJ1dGUoX2VsJDExMiwgXCJzdHJva2VcIiwgYHVybCgjYWMtJHtpZH0pYCk7XG4gICAgc2V0QXR0cmlidXRlKF9lbCQxMTMsIFwiaWRcIiwgYGFiLSR7aWR9YCk7XG4gICAgc2V0QXR0cmlidXRlKF9lbCQxMTQsIFwic3Ryb2tlXCIsIGB1cmwoI2FiLSR7aWR9KWApO1xuICAgIHNldEF0dHJpYnV0ZShfZWwkMTE1LCBcImlkXCIsIGB5LSR7aWR9YCk7XG4gICAgc2V0QXR0cmlidXRlKF9lbCQxMTYsIFwic3Ryb2tlXCIsIGB1cmwoI3ktJHtpZH0pYCk7XG4gICAgc2V0QXR0cmlidXRlKF9lbCQxMTcsIFwiaWRcIiwgYHgtJHtpZH1gKTtcbiAgICBzZXRBdHRyaWJ1dGUoX2VsJDExOCwgXCJzdHJva2VcIiwgYHVybCgjeC0ke2lkfSlgKTtcbiAgICBzZXRBdHRyaWJ1dGUoX2VsJDExOSwgXCJpZFwiLCBgei0ke2lkfWApO1xuICAgIHNldEF0dHJpYnV0ZShfZWwkMTIwLCBcInN0cm9rZVwiLCBgdXJsKCN6LSR7aWR9KWApO1xuICAgIHJldHVybiBfZWwkMjg7XG4gIH0pKCk7XG59XG5cbi8vIHNyYy9Db250ZXh0LnRzXG52YXIgUXVlcnlEZXZ0b29sc0NvbnRleHQgPSBjcmVhdGVDb250ZXh0KHtcbiAgY2xpZW50OiB2b2lkIDAsXG4gIG9ubGluZU1hbmFnZXI6IHZvaWQgMCxcbiAgcXVlcnlGbGF2b3I6IFwiXCIsXG4gIHZlcnNpb246IFwiXCIsXG4gIHNoYWRvd0RPTVRhcmdldDogdm9pZCAwXG59KTtcbmZ1bmN0aW9uIHVzZVF1ZXJ5RGV2dG9vbHNDb250ZXh0KCkge1xuICByZXR1cm4gdXNlQ29udGV4dChRdWVyeURldnRvb2xzQ29udGV4dCk7XG59XG52YXIgVGhlbWVDb250ZXh0ID0gY3JlYXRlQ29udGV4dChcbiAgKCkgPT4gXCJkYXJrXCJcbik7XG5mdW5jdGlvbiB1c2VUaGVtZSgpIHtcbiAgcmV0dXJuIHVzZUNvbnRleHQoVGhlbWVDb250ZXh0KTtcbn1cblxuLy8gc3JjL0V4cGxvcmVyLnRzeFxudmFyIF90bXBsJDIzID0gLyogQF9fUFVSRV9fICovIHRlbXBsYXRlKGA8c3Bhbj48c3ZnIHdpZHRoPTE2IGhlaWdodD0xNiB2aWV3Qm94PVwiMCAwIDE2IDE2XCJmaWxsPW5vbmUgeG1sbnM9aHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmc+PHBhdGggZD1cIk02IDEyTDEwIDhMNiA0XCJzdHJva2Utd2lkdGg9MiBzdHJva2UtbGluZWNhcD1yb3VuZCBzdHJva2UtbGluZWpvaW49cm91bmQ+YCk7XG52YXIgX3RtcGwkMjQgPSAvKiBAX19QVVJFX18gKi8gdGVtcGxhdGUoYDxidXR0b24gdGl0bGU9XCJDb3B5IG9iamVjdCB0byBjbGlwYm9hcmRcIj5gKTtcbnZhciBfdG1wbCQzMiA9IC8qIEBfX1BVUkVfXyAqLyB0ZW1wbGF0ZShgPGJ1dHRvbiB0aXRsZT1cIlJlbW92ZSBhbGwgaXRlbXNcImFyaWEtbGFiZWw9XCJSZW1vdmUgYWxsIGl0ZW1zXCI+YCk7XG52YXIgX3RtcGwkNDIgPSAvKiBAX19QVVJFX18gKi8gdGVtcGxhdGUoYDxidXR0b24gdGl0bGU9XCJEZWxldGUgaXRlbVwiYXJpYS1sYWJlbD1cIkRlbGV0ZSBpdGVtXCI+YCk7XG52YXIgX3RtcGwkNTIgPSAvKiBAX19QVVJFX18gKi8gdGVtcGxhdGUoYDxidXR0b24gdGl0bGU9XCJUb2dnbGUgdmFsdWVcImFyaWEtbGFiZWw9XCJUb2dnbGUgdmFsdWVcIj5gKTtcbnZhciBfdG1wbCQ2MiA9IC8qIEBfX1BVUkVfXyAqLyB0ZW1wbGF0ZShgPGRpdj5gKTtcbnZhciBfdG1wbCQ3MiA9IC8qIEBfX1BVUkVfXyAqLyB0ZW1wbGF0ZShgPGRpdj48YnV0dG9uPiA8c3Bhbj48L3NwYW4+IDxzcGFuPiBgKTtcbnZhciBfdG1wbCQ4MiA9IC8qIEBfX1BVUkVfXyAqLyB0ZW1wbGF0ZShgPGlucHV0PmApO1xudmFyIF90bXBsJDkyID0gLyogQF9fUFVSRV9fICovIHRlbXBsYXRlKGA8c3Bhbj5gKTtcbnZhciBfdG1wbCQxMDIgPSAvKiBAX19QVVJFX18gKi8gdGVtcGxhdGUoYDxkaXY+PHNwYW4+OmApO1xudmFyIF90bXBsJDExMiA9IC8qIEBfX1BVUkVfXyAqLyB0ZW1wbGF0ZShgPGRpdj48ZGl2PjxidXR0b24+IFs8IT4uLi48IT5dYCk7XG5mdW5jdGlvbiBjaHVua0FycmF5KGFycmF5LCBzaXplMykge1xuICBpZiAoc2l6ZTMgPCAxKVxuICAgIHJldHVybiBbXTtcbiAgbGV0IGkyID0gMDtcbiAgY29uc3QgcmVzdWx0ID0gW107XG4gIHdoaWxlIChpMiA8IGFycmF5Lmxlbmd0aCkge1xuICAgIHJlc3VsdC5wdXNoKGFycmF5LnNsaWNlKGkyLCBpMiArIHNpemUzKSk7XG4gICAgaTIgPSBpMiArIHNpemUzO1xuICB9XG4gIHJldHVybiByZXN1bHQ7XG59XG52YXIgRXhwYW5kZXIgPSAocHJvcHMpID0+IHtcbiAgY29uc3QgdGhlbWUgPSB1c2VUaGVtZSgpO1xuICBjb25zdCBjc3MgPSB1c2VRdWVyeURldnRvb2xzQ29udGV4dCgpLnNoYWRvd0RPTVRhcmdldCA/IHUuYmluZCh7XG4gICAgdGFyZ2V0OiB1c2VRdWVyeURldnRvb2xzQ29udGV4dCgpLnNoYWRvd0RPTVRhcmdldFxuICB9KSA6IHU7XG4gIGNvbnN0IHN0eWxlcyA9IGNyZWF0ZU1lbW8oKCkgPT4ge1xuICAgIHJldHVybiB0aGVtZSgpID09PSBcImRhcmtcIiA/IGRhcmtTdHlsZXMoY3NzKSA6IGxpZ2h0U3R5bGVzKGNzcyk7XG4gIH0pO1xuICByZXR1cm4gKCgpID0+IHtcbiAgICBjb25zdCBfZWwkID0gX3RtcGwkMjMoKTtcbiAgICBjcmVhdGVSZW5kZXJFZmZlY3QoKCkgPT4gY2xhc3NOYW1lKF9lbCQsIGNsc3goc3R5bGVzKCkuZXhwYW5kZXIsIGNzc2BcbiAgICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZSgke3Byb3BzLmV4cGFuZGVkID8gOTAgOiAwfWRlZyk7XG4gICAgICAgIGAsIHByb3BzLmV4cGFuZGVkICYmIGNzc2BcbiAgICAgICAgICAgICYgc3ZnIHtcbiAgICAgICAgICAgICAgdG9wOiAtMXB4O1xuICAgICAgICAgICAgfVxuICAgICAgICAgIGApKSk7XG4gICAgcmV0dXJuIF9lbCQ7XG4gIH0pKCk7XG59O1xudmFyIENvcHlCdXR0b24gPSAocHJvcHMpID0+IHtcbiAgY29uc3QgdGhlbWUgPSB1c2VUaGVtZSgpO1xuICBjb25zdCBjc3MgPSB1c2VRdWVyeURldnRvb2xzQ29udGV4dCgpLnNoYWRvd0RPTVRhcmdldCA/IHUuYmluZCh7XG4gICAgdGFyZ2V0OiB1c2VRdWVyeURldnRvb2xzQ29udGV4dCgpLnNoYWRvd0RPTVRhcmdldFxuICB9KSA6IHU7XG4gIGNvbnN0IHN0eWxlcyA9IGNyZWF0ZU1lbW8oKCkgPT4ge1xuICAgIHJldHVybiB0aGVtZSgpID09PSBcImRhcmtcIiA/IGRhcmtTdHlsZXMoY3NzKSA6IGxpZ2h0U3R5bGVzKGNzcyk7XG4gIH0pO1xuICBjb25zdCBbY29weVN0YXRlLCBzZXRDb3B5U3RhdGVdID0gY3JlYXRlU2lnbmFsKFwiTm9Db3B5XCIpO1xuICByZXR1cm4gKCgpID0+IHtcbiAgICBjb25zdCBfZWwkMiA9IF90bXBsJDI0KCk7XG4gICAgYWRkRXZlbnRMaXN0ZW5lcihfZWwkMiwgXCJjbGlja1wiLCBjb3B5U3RhdGUoKSA9PT0gXCJOb0NvcHlcIiA/ICgpID0+IHtcbiAgICAgIG5hdmlnYXRvci5jbGlwYm9hcmQud3JpdGVUZXh0KHN0cmluZ2lmeShwcm9wcy52YWx1ZSkpLnRoZW4oKCkgPT4ge1xuICAgICAgICBzZXRDb3B5U3RhdGUoXCJTdWNjZXNzQ29weVwiKTtcbiAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgICAgc2V0Q29weVN0YXRlKFwiTm9Db3B5XCIpO1xuICAgICAgICB9LCAxNTAwKTtcbiAgICAgIH0sIChlcnIpID0+IHtcbiAgICAgICAgY29uc29sZS5lcnJvcihcIkZhaWxlZCB0byBjb3B5OiBcIiwgZXJyKTtcbiAgICAgICAgc2V0Q29weVN0YXRlKFwiRXJyb3JDb3B5XCIpO1xuICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgICBzZXRDb3B5U3RhdGUoXCJOb0NvcHlcIik7XG4gICAgICAgIH0sIDE1MDApO1xuICAgICAgfSk7XG4gICAgfSA6IHZvaWQgMCwgdHJ1ZSk7XG4gICAgaW5zZXJ0KF9lbCQyLCBjcmVhdGVDb21wb25lbnQoU3dpdGNoLCB7XG4gICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgIHJldHVybiBbY3JlYXRlQ29tcG9uZW50KE1hdGNoLCB7XG4gICAgICAgICAgZ2V0IHdoZW4oKSB7XG4gICAgICAgICAgICByZXR1cm4gY29weVN0YXRlKCkgPT09IFwiTm9Db3B5XCI7XG4gICAgICAgICAgfSxcbiAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KENvcGllciwge30pO1xuICAgICAgICAgIH1cbiAgICAgICAgfSksIGNyZWF0ZUNvbXBvbmVudChNYXRjaCwge1xuICAgICAgICAgIGdldCB3aGVuKCkge1xuICAgICAgICAgICAgcmV0dXJuIGNvcHlTdGF0ZSgpID09PSBcIlN1Y2Nlc3NDb3B5XCI7XG4gICAgICAgICAgfSxcbiAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KENvcGllZENvcGllciwge1xuICAgICAgICAgICAgICBnZXQgdGhlbWUoKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoZW1lKCk7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgIH1cbiAgICAgICAgfSksIGNyZWF0ZUNvbXBvbmVudChNYXRjaCwge1xuICAgICAgICAgIGdldCB3aGVuKCkge1xuICAgICAgICAgICAgcmV0dXJuIGNvcHlTdGF0ZSgpID09PSBcIkVycm9yQ29weVwiO1xuICAgICAgICAgIH0sXG4gICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChFcnJvckNvcGllciwge30pO1xuICAgICAgICAgIH1cbiAgICAgICAgfSldO1xuICAgICAgfVxuICAgIH0pKTtcbiAgICBjcmVhdGVSZW5kZXJFZmZlY3QoKF9wJCkgPT4ge1xuICAgICAgY29uc3QgX3YkID0gc3R5bGVzKCkuYWN0aW9uQnV0dG9uLCBfdiQyID0gYCR7Y29weVN0YXRlKCkgPT09IFwiTm9Db3B5XCIgPyBcIkNvcHkgb2JqZWN0IHRvIGNsaXBib2FyZFwiIDogY29weVN0YXRlKCkgPT09IFwiU3VjY2Vzc0NvcHlcIiA/IFwiT2JqZWN0IGNvcGllZCB0byBjbGlwYm9hcmRcIiA6IFwiRXJyb3IgY29weWluZyBvYmplY3QgdG8gY2xpcGJvYXJkXCJ9YDtcbiAgICAgIF92JCAhPT0gX3AkLl92JCAmJiBjbGFzc05hbWUoX2VsJDIsIF9wJC5fdiQgPSBfdiQpO1xuICAgICAgX3YkMiAhPT0gX3AkLl92JDIgJiYgc2V0QXR0cmlidXRlKF9lbCQyLCBcImFyaWEtbGFiZWxcIiwgX3AkLl92JDIgPSBfdiQyKTtcbiAgICAgIHJldHVybiBfcCQ7XG4gICAgfSwge1xuICAgICAgX3YkOiB2b2lkIDAsXG4gICAgICBfdiQyOiB2b2lkIDBcbiAgICB9KTtcbiAgICByZXR1cm4gX2VsJDI7XG4gIH0pKCk7XG59O1xudmFyIENsZWFyQXJyYXlCdXR0b24gPSAocHJvcHMpID0+IHtcbiAgY29uc3QgdGhlbWUgPSB1c2VUaGVtZSgpO1xuICBjb25zdCBjc3MgPSB1c2VRdWVyeURldnRvb2xzQ29udGV4dCgpLnNoYWRvd0RPTVRhcmdldCA/IHUuYmluZCh7XG4gICAgdGFyZ2V0OiB1c2VRdWVyeURldnRvb2xzQ29udGV4dCgpLnNoYWRvd0RPTVRhcmdldFxuICB9KSA6IHU7XG4gIGNvbnN0IHN0eWxlcyA9IGNyZWF0ZU1lbW8oKCkgPT4ge1xuICAgIHJldHVybiB0aGVtZSgpID09PSBcImRhcmtcIiA/IGRhcmtTdHlsZXMoY3NzKSA6IGxpZ2h0U3R5bGVzKGNzcyk7XG4gIH0pO1xuICBjb25zdCBxdWVyeUNsaWVudCA9IHVzZVF1ZXJ5RGV2dG9vbHNDb250ZXh0KCkuY2xpZW50O1xuICByZXR1cm4gKCgpID0+IHtcbiAgICBjb25zdCBfZWwkMyA9IF90bXBsJDMyKCk7XG4gICAgX2VsJDMuJCRjbGljayA9ICgpID0+IHtcbiAgICAgIGNvbnN0IG9sZERhdGEgPSBwcm9wcy5hY3RpdmVRdWVyeS5zdGF0ZS5kYXRhO1xuICAgICAgY29uc3QgbmV3RGF0YSA9IHVwZGF0ZU5lc3RlZERhdGFCeVBhdGgob2xkRGF0YSwgcHJvcHMuZGF0YVBhdGgsIFtdKTtcbiAgICAgIHF1ZXJ5Q2xpZW50LnNldFF1ZXJ5RGF0YShwcm9wcy5hY3RpdmVRdWVyeS5xdWVyeUtleSwgbmV3RGF0YSk7XG4gICAgfTtcbiAgICBpbnNlcnQoX2VsJDMsIGNyZWF0ZUNvbXBvbmVudChMaXN0LCB7fSkpO1xuICAgIGNyZWF0ZVJlbmRlckVmZmVjdCgoKSA9PiBjbGFzc05hbWUoX2VsJDMsIHN0eWxlcygpLmFjdGlvbkJ1dHRvbikpO1xuICAgIHJldHVybiBfZWwkMztcbiAgfSkoKTtcbn07XG52YXIgRGVsZXRlSXRlbUJ1dHRvbiA9IChwcm9wcykgPT4ge1xuICBjb25zdCB0aGVtZSA9IHVzZVRoZW1lKCk7XG4gIGNvbnN0IGNzcyA9IHVzZVF1ZXJ5RGV2dG9vbHNDb250ZXh0KCkuc2hhZG93RE9NVGFyZ2V0ID8gdS5iaW5kKHtcbiAgICB0YXJnZXQ6IHVzZVF1ZXJ5RGV2dG9vbHNDb250ZXh0KCkuc2hhZG93RE9NVGFyZ2V0XG4gIH0pIDogdTtcbiAgY29uc3Qgc3R5bGVzID0gY3JlYXRlTWVtbygoKSA9PiB7XG4gICAgcmV0dXJuIHRoZW1lKCkgPT09IFwiZGFya1wiID8gZGFya1N0eWxlcyhjc3MpIDogbGlnaHRTdHlsZXMoY3NzKTtcbiAgfSk7XG4gIGNvbnN0IHF1ZXJ5Q2xpZW50ID0gdXNlUXVlcnlEZXZ0b29sc0NvbnRleHQoKS5jbGllbnQ7XG4gIHJldHVybiAoKCkgPT4ge1xuICAgIGNvbnN0IF9lbCQ0ID0gX3RtcGwkNDIoKTtcbiAgICBfZWwkNC4kJGNsaWNrID0gKCkgPT4ge1xuICAgICAgY29uc3Qgb2xkRGF0YSA9IHByb3BzLmFjdGl2ZVF1ZXJ5LnN0YXRlLmRhdGE7XG4gICAgICBjb25zdCBuZXdEYXRhID0gZGVsZXRlTmVzdGVkRGF0YUJ5UGF0aChvbGREYXRhLCBwcm9wcy5kYXRhUGF0aCk7XG4gICAgICBxdWVyeUNsaWVudC5zZXRRdWVyeURhdGEocHJvcHMuYWN0aXZlUXVlcnkucXVlcnlLZXksIG5ld0RhdGEpO1xuICAgIH07XG4gICAgaW5zZXJ0KF9lbCQ0LCBjcmVhdGVDb21wb25lbnQoVHJhc2gsIHt9KSk7XG4gICAgY3JlYXRlUmVuZGVyRWZmZWN0KCgpID0+IGNsYXNzTmFtZShfZWwkNCwgY2xzeChzdHlsZXMoKS5hY3Rpb25CdXR0b24pKSk7XG4gICAgcmV0dXJuIF9lbCQ0O1xuICB9KSgpO1xufTtcbnZhciBUb2dnbGVWYWx1ZUJ1dHRvbiA9IChwcm9wcykgPT4ge1xuICBjb25zdCB0aGVtZSA9IHVzZVRoZW1lKCk7XG4gIGNvbnN0IGNzcyA9IHVzZVF1ZXJ5RGV2dG9vbHNDb250ZXh0KCkuc2hhZG93RE9NVGFyZ2V0ID8gdS5iaW5kKHtcbiAgICB0YXJnZXQ6IHVzZVF1ZXJ5RGV2dG9vbHNDb250ZXh0KCkuc2hhZG93RE9NVGFyZ2V0XG4gIH0pIDogdTtcbiAgY29uc3Qgc3R5bGVzID0gY3JlYXRlTWVtbygoKSA9PiB7XG4gICAgcmV0dXJuIHRoZW1lKCkgPT09IFwiZGFya1wiID8gZGFya1N0eWxlcyhjc3MpIDogbGlnaHRTdHlsZXMoY3NzKTtcbiAgfSk7XG4gIGNvbnN0IHF1ZXJ5Q2xpZW50ID0gdXNlUXVlcnlEZXZ0b29sc0NvbnRleHQoKS5jbGllbnQ7XG4gIHJldHVybiAoKCkgPT4ge1xuICAgIGNvbnN0IF9lbCQ1ID0gX3RtcGwkNTIoKTtcbiAgICBfZWwkNS4kJGNsaWNrID0gKCkgPT4ge1xuICAgICAgY29uc3Qgb2xkRGF0YSA9IHByb3BzLmFjdGl2ZVF1ZXJ5LnN0YXRlLmRhdGE7XG4gICAgICBjb25zdCBuZXdEYXRhID0gdXBkYXRlTmVzdGVkRGF0YUJ5UGF0aChvbGREYXRhLCBwcm9wcy5kYXRhUGF0aCwgIXByb3BzLnZhbHVlKTtcbiAgICAgIHF1ZXJ5Q2xpZW50LnNldFF1ZXJ5RGF0YShwcm9wcy5hY3RpdmVRdWVyeS5xdWVyeUtleSwgbmV3RGF0YSk7XG4gICAgfTtcbiAgICBpbnNlcnQoX2VsJDUsIGNyZWF0ZUNvbXBvbmVudChDaGVjaywge1xuICAgICAgZ2V0IHRoZW1lKCkge1xuICAgICAgICByZXR1cm4gdGhlbWUoKTtcbiAgICAgIH0sXG4gICAgICBnZXQgY2hlY2tlZCgpIHtcbiAgICAgICAgcmV0dXJuIHByb3BzLnZhbHVlO1xuICAgICAgfVxuICAgIH0pKTtcbiAgICBjcmVhdGVSZW5kZXJFZmZlY3QoKCkgPT4gY2xhc3NOYW1lKF9lbCQ1LCBjbHN4KHN0eWxlcygpLmFjdGlvbkJ1dHRvbiwgY3NzYFxuICAgICAgICAgIHdpZHRoOiAke3Rva2Vucy5zaXplWzMuNV19O1xuICAgICAgICAgIGhlaWdodDogJHt0b2tlbnMuc2l6ZVszLjVdfTtcbiAgICAgICAgYCkpKTtcbiAgICByZXR1cm4gX2VsJDU7XG4gIH0pKCk7XG59O1xuZnVuY3Rpb24gaXNJdGVyYWJsZSh4KSB7XG4gIHJldHVybiBTeW1ib2wuaXRlcmF0b3IgaW4geDtcbn1cbmZ1bmN0aW9uIEV4cGxvcmVyKHByb3BzKSB7XG4gIGNvbnN0IHRoZW1lID0gdXNlVGhlbWUoKTtcbiAgY29uc3QgY3NzID0gdXNlUXVlcnlEZXZ0b29sc0NvbnRleHQoKS5zaGFkb3dET01UYXJnZXQgPyB1LmJpbmQoe1xuICAgIHRhcmdldDogdXNlUXVlcnlEZXZ0b29sc0NvbnRleHQoKS5zaGFkb3dET01UYXJnZXRcbiAgfSkgOiB1O1xuICBjb25zdCBzdHlsZXMgPSBjcmVhdGVNZW1vKCgpID0+IHtcbiAgICByZXR1cm4gdGhlbWUoKSA9PT0gXCJkYXJrXCIgPyBkYXJrU3R5bGVzKGNzcykgOiBsaWdodFN0eWxlcyhjc3MpO1xuICB9KTtcbiAgY29uc3QgcXVlcnlDbGllbnQgPSB1c2VRdWVyeURldnRvb2xzQ29udGV4dCgpLmNsaWVudDtcbiAgY29uc3QgW2V4cGFuZGVkLCBzZXRFeHBhbmRlZF0gPSBjcmVhdGVTaWduYWwoKHByb3BzLmRlZmF1bHRFeHBhbmRlZCB8fCBbXSkuaW5jbHVkZXMocHJvcHMubGFiZWwpKTtcbiAgY29uc3QgdG9nZ2xlRXhwYW5kZWQgPSAoKSA9PiBzZXRFeHBhbmRlZCgob2xkKSA9PiAhb2xkKTtcbiAgY29uc3QgW2V4cGFuZGVkUGFnZXMsIHNldEV4cGFuZGVkUGFnZXNdID0gY3JlYXRlU2lnbmFsKFtdKTtcbiAgY29uc3Qgc3ViRW50cmllcyA9IGNyZWF0ZU1lbW8oKCkgPT4ge1xuICAgIGlmIChBcnJheS5pc0FycmF5KHByb3BzLnZhbHVlKSkge1xuICAgICAgcmV0dXJuIHByb3BzLnZhbHVlLm1hcCgoZCwgaTIpID0+ICh7XG4gICAgICAgIGxhYmVsOiBpMi50b1N0cmluZygpLFxuICAgICAgICB2YWx1ZTogZFxuICAgICAgfSkpO1xuICAgIH0gZWxzZSBpZiAocHJvcHMudmFsdWUgIT09IG51bGwgJiYgdHlwZW9mIHByb3BzLnZhbHVlID09PSBcIm9iamVjdFwiICYmIGlzSXRlcmFibGUocHJvcHMudmFsdWUpICYmIHR5cGVvZiBwcm9wcy52YWx1ZVtTeW1ib2wuaXRlcmF0b3JdID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgIGlmIChwcm9wcy52YWx1ZSBpbnN0YW5jZW9mIE1hcCkge1xuICAgICAgICByZXR1cm4gQXJyYXkuZnJvbShwcm9wcy52YWx1ZSwgKFtrZXksIHZhbF0pID0+ICh7XG4gICAgICAgICAgbGFiZWw6IGtleSxcbiAgICAgICAgICB2YWx1ZTogdmFsXG4gICAgICAgIH0pKTtcbiAgICAgIH1cbiAgICAgIHJldHVybiBBcnJheS5mcm9tKHByb3BzLnZhbHVlLCAodmFsLCBpMikgPT4gKHtcbiAgICAgICAgbGFiZWw6IGkyLnRvU3RyaW5nKCksXG4gICAgICAgIHZhbHVlOiB2YWxcbiAgICAgIH0pKTtcbiAgICB9IGVsc2UgaWYgKHR5cGVvZiBwcm9wcy52YWx1ZSA9PT0gXCJvYmplY3RcIiAmJiBwcm9wcy52YWx1ZSAhPT0gbnVsbCkge1xuICAgICAgcmV0dXJuIE9iamVjdC5lbnRyaWVzKHByb3BzLnZhbHVlKS5tYXAoKFtrZXksIHZhbF0pID0+ICh7XG4gICAgICAgIGxhYmVsOiBrZXksXG4gICAgICAgIHZhbHVlOiB2YWxcbiAgICAgIH0pKTtcbiAgICB9XG4gICAgcmV0dXJuIFtdO1xuICB9KTtcbiAgY29uc3QgdHlwZSA9IGNyZWF0ZU1lbW8oKCkgPT4ge1xuICAgIGlmIChBcnJheS5pc0FycmF5KHByb3BzLnZhbHVlKSkge1xuICAgICAgcmV0dXJuIFwiYXJyYXlcIjtcbiAgICB9IGVsc2UgaWYgKHByb3BzLnZhbHVlICE9PSBudWxsICYmIHR5cGVvZiBwcm9wcy52YWx1ZSA9PT0gXCJvYmplY3RcIiAmJiBpc0l0ZXJhYmxlKHByb3BzLnZhbHVlKSAmJiB0eXBlb2YgcHJvcHMudmFsdWVbU3ltYm9sLml0ZXJhdG9yXSA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgICByZXR1cm4gXCJJdGVyYWJsZVwiO1xuICAgIH0gZWxzZSBpZiAodHlwZW9mIHByb3BzLnZhbHVlID09PSBcIm9iamVjdFwiICYmIHByb3BzLnZhbHVlICE9PSBudWxsKSB7XG4gICAgICByZXR1cm4gXCJvYmplY3RcIjtcbiAgICB9XG4gICAgcmV0dXJuIHR5cGVvZiBwcm9wcy52YWx1ZTtcbiAgfSk7XG4gIGNvbnN0IHN1YkVudHJ5UGFnZXMgPSBjcmVhdGVNZW1vKCgpID0+IGNodW5rQXJyYXkoc3ViRW50cmllcygpLCAxMDApKTtcbiAgY29uc3QgY3VycmVudERhdGFQYXRoID0gcHJvcHMuZGF0YVBhdGggPz8gW107XG4gIHJldHVybiAoKCkgPT4ge1xuICAgIGNvbnN0IF9lbCQ2ID0gX3RtcGwkNjIoKTtcbiAgICBpbnNlcnQoX2VsJDYsIGNyZWF0ZUNvbXBvbmVudChTaG93LCB7XG4gICAgICBnZXQgd2hlbigpIHtcbiAgICAgICAgcmV0dXJuIHN1YkVudHJ5UGFnZXMoKS5sZW5ndGg7XG4gICAgICB9LFxuICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICByZXR1cm4gWygoKSA9PiB7XG4gICAgICAgICAgY29uc3QgX2VsJDcgPSBfdG1wbCQ3MigpLCBfZWwkOCA9IF9lbCQ3LmZpcnN0Q2hpbGQsIF9lbCQ5ID0gX2VsJDguZmlyc3RDaGlsZCwgX2VsJDEwID0gX2VsJDkubmV4dFNpYmxpbmcsIF9lbCQxMSA9IF9lbCQxMC5uZXh0U2libGluZywgX2VsJDEyID0gX2VsJDExLm5leHRTaWJsaW5nLCBfZWwkMTMgPSBfZWwkMTIuZmlyc3RDaGlsZDtcbiAgICAgICAgICBfZWwkOC4kJGNsaWNrID0gKCkgPT4gdG9nZ2xlRXhwYW5kZWQoKTtcbiAgICAgICAgICBpbnNlcnQoX2VsJDgsIGNyZWF0ZUNvbXBvbmVudChFeHBhbmRlciwge1xuICAgICAgICAgICAgZ2V0IGV4cGFuZGVkKCkge1xuICAgICAgICAgICAgICByZXR1cm4gZXhwYW5kZWQoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9KSwgX2VsJDkpO1xuICAgICAgICAgIGluc2VydChfZWwkMTAsICgpID0+IHByb3BzLmxhYmVsKTtcbiAgICAgICAgICBpbnNlcnQoX2VsJDEyLCAoKSA9PiBTdHJpbmcodHlwZSgpKS50b0xvd2VyQ2FzZSgpID09PSBcIml0ZXJhYmxlXCIgPyBcIihJdGVyYWJsZSkgXCIgOiBcIlwiLCBfZWwkMTMpO1xuICAgICAgICAgIGluc2VydChfZWwkMTIsICgpID0+IHN1YkVudHJpZXMoKS5sZW5ndGgsIF9lbCQxMyk7XG4gICAgICAgICAgaW5zZXJ0KF9lbCQxMiwgKCkgPT4gc3ViRW50cmllcygpLmxlbmd0aCA+IDEgPyBgaXRlbXNgIDogYGl0ZW1gLCBudWxsKTtcbiAgICAgICAgICBpbnNlcnQoX2VsJDcsIGNyZWF0ZUNvbXBvbmVudChTaG93LCB7XG4gICAgICAgICAgICBnZXQgd2hlbigpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIHByb3BzLmVkaXRhYmxlO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgY29uc3QgX2VsJDE0ID0gX3RtcGwkNjIoKTtcbiAgICAgICAgICAgICAgaW5zZXJ0KF9lbCQxNCwgY3JlYXRlQ29tcG9uZW50KENvcHlCdXR0b24sIHtcbiAgICAgICAgICAgICAgICBnZXQgdmFsdWUoKSB7XG4gICAgICAgICAgICAgICAgICByZXR1cm4gcHJvcHMudmFsdWU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB9KSwgbnVsbCk7XG4gICAgICAgICAgICAgIGluc2VydChfZWwkMTQsIGNyZWF0ZUNvbXBvbmVudChTaG93LCB7XG4gICAgICAgICAgICAgICAgZ2V0IHdoZW4oKSB7XG4gICAgICAgICAgICAgICAgICByZXR1cm4gcHJvcHMuaXRlbXNEZWxldGFibGUgJiYgcHJvcHMuYWN0aXZlUXVlcnkgIT09IHZvaWQgMDtcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoRGVsZXRlSXRlbUJ1dHRvbiwge1xuICAgICAgICAgICAgICAgICAgICBnZXQgYWN0aXZlUXVlcnkoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHByb3BzLmFjdGl2ZVF1ZXJ5O1xuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICBkYXRhUGF0aDogY3VycmVudERhdGFQYXRoXG4gICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH0pLCBudWxsKTtcbiAgICAgICAgICAgICAgaW5zZXJ0KF9lbCQxNCwgY3JlYXRlQ29tcG9uZW50KFNob3csIHtcbiAgICAgICAgICAgICAgICBnZXQgd2hlbigpIHtcbiAgICAgICAgICAgICAgICAgIHJldHVybiB0eXBlKCkgPT09IFwiYXJyYXlcIiAmJiBwcm9wcy5hY3RpdmVRdWVyeSAhPT0gdm9pZCAwO1xuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChDbGVhckFycmF5QnV0dG9uLCB7XG4gICAgICAgICAgICAgICAgICAgIGdldCBhY3RpdmVRdWVyeSgpIHtcbiAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gcHJvcHMuYWN0aXZlUXVlcnk7XG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIGRhdGFQYXRoOiBjdXJyZW50RGF0YVBhdGhcbiAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfSksIG51bGwpO1xuICAgICAgICAgICAgICBjcmVhdGVSZW5kZXJFZmZlY3QoKCkgPT4gY2xhc3NOYW1lKF9lbCQxNCwgc3R5bGVzKCkuYWN0aW9ucykpO1xuICAgICAgICAgICAgICByZXR1cm4gX2VsJDE0O1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0pLCBudWxsKTtcbiAgICAgICAgICBjcmVhdGVSZW5kZXJFZmZlY3QoKF9wJCkgPT4ge1xuICAgICAgICAgICAgY29uc3QgX3YkMyA9IHN0eWxlcygpLmV4cGFuZGVyQnV0dG9uQ29udGFpbmVyLCBfdiQ0ID0gc3R5bGVzKCkuZXhwYW5kZXJCdXR0b24sIF92JDUgPSBzdHlsZXMoKS5pbmZvO1xuICAgICAgICAgICAgX3YkMyAhPT0gX3AkLl92JDMgJiYgY2xhc3NOYW1lKF9lbCQ3LCBfcCQuX3YkMyA9IF92JDMpO1xuICAgICAgICAgICAgX3YkNCAhPT0gX3AkLl92JDQgJiYgY2xhc3NOYW1lKF9lbCQ4LCBfcCQuX3YkNCA9IF92JDQpO1xuICAgICAgICAgICAgX3YkNSAhPT0gX3AkLl92JDUgJiYgY2xhc3NOYW1lKF9lbCQxMiwgX3AkLl92JDUgPSBfdiQ1KTtcbiAgICAgICAgICAgIHJldHVybiBfcCQ7XG4gICAgICAgICAgfSwge1xuICAgICAgICAgICAgX3YkMzogdm9pZCAwLFxuICAgICAgICAgICAgX3YkNDogdm9pZCAwLFxuICAgICAgICAgICAgX3YkNTogdm9pZCAwXG4gICAgICAgICAgfSk7XG4gICAgICAgICAgcmV0dXJuIF9lbCQ3O1xuICAgICAgICB9KSgpLCBjcmVhdGVDb21wb25lbnQoU2hvdywge1xuICAgICAgICAgIGdldCB3aGVuKCkge1xuICAgICAgICAgICAgcmV0dXJuIGV4cGFuZGVkKCk7XG4gICAgICAgICAgfSxcbiAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICByZXR1cm4gW2NyZWF0ZUNvbXBvbmVudChTaG93LCB7XG4gICAgICAgICAgICAgIGdldCB3aGVuKCkge1xuICAgICAgICAgICAgICAgIHJldHVybiBzdWJFbnRyeVBhZ2VzKCkubGVuZ3RoID09PSAxO1xuICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgX2VsJDE1ID0gX3RtcGwkNjIoKTtcbiAgICAgICAgICAgICAgICBpbnNlcnQoX2VsJDE1LCBjcmVhdGVDb21wb25lbnQoS2V5LCB7XG4gICAgICAgICAgICAgICAgICBnZXQgZWFjaCgpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHN1YkVudHJpZXMoKTtcbiAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICBieTogKGl0ZW0pID0+IGl0ZW0ubGFiZWwsXG4gICAgICAgICAgICAgICAgICBjaGlsZHJlbjogKGVudHJ5KSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoRXhwbG9yZXIsIHtcbiAgICAgICAgICAgICAgICAgICAgICBnZXQgZGVmYXVsdEV4cGFuZGVkKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHByb3BzLmRlZmF1bHRFeHBhbmRlZDtcbiAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgIGdldCBsYWJlbCgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBlbnRyeSgpLmxhYmVsO1xuICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgZ2V0IHZhbHVlKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGVudHJ5KCkudmFsdWU7XG4gICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICBnZXQgZWRpdGFibGUoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gcHJvcHMuZWRpdGFibGU7XG4gICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICBnZXQgZGF0YVBhdGgoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gWy4uLmN1cnJlbnREYXRhUGF0aCwgZW50cnkoKS5sYWJlbF07XG4gICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICBnZXQgYWN0aXZlUXVlcnkoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gcHJvcHMuYWN0aXZlUXVlcnk7XG4gICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICBnZXQgaXRlbXNEZWxldGFibGUoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gdHlwZSgpID09PSBcImFycmF5XCIgfHwgdHlwZSgpID09PSBcIkl0ZXJhYmxlXCIgfHwgdHlwZSgpID09PSBcIm9iamVjdFwiO1xuICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSkpO1xuICAgICAgICAgICAgICAgIGNyZWF0ZVJlbmRlckVmZmVjdCgoKSA9PiBjbGFzc05hbWUoX2VsJDE1LCBzdHlsZXMoKS5zdWJFbnRyeSkpO1xuICAgICAgICAgICAgICAgIHJldHVybiBfZWwkMTU7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pLCBjcmVhdGVDb21wb25lbnQoU2hvdywge1xuICAgICAgICAgICAgICBnZXQgd2hlbigpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gc3ViRW50cnlQYWdlcygpLmxlbmd0aCA+IDE7XG4gICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgICBjb25zdCBfZWwkMTYgPSBfdG1wbCQ2MigpO1xuICAgICAgICAgICAgICAgIGluc2VydChfZWwkMTYsIGNyZWF0ZUNvbXBvbmVudChJbmRleCwge1xuICAgICAgICAgICAgICAgICAgZ2V0IGVhY2goKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBzdWJFbnRyeVBhZ2VzKCk7XG4gICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgY2hpbGRyZW46IChlbnRyaWVzMiwgaW5kZXgpID0+ICgoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IF9lbCQyMiA9IF90bXBsJDExMigpLCBfZWwkMjMgPSBfZWwkMjIuZmlyc3RDaGlsZCwgX2VsJDI0ID0gX2VsJDIzLmZpcnN0Q2hpbGQsIF9lbCQyNSA9IF9lbCQyNC5maXJzdENoaWxkLCBfZWwkMjkgPSBfZWwkMjUubmV4dFNpYmxpbmcsIF9lbCQyNyA9IF9lbCQyOS5uZXh0U2libGluZywgX2VsJDMwID0gX2VsJDI3Lm5leHRTaWJsaW5nOyBfZWwkMzAubmV4dFNpYmxpbmc7XG4gICAgICAgICAgICAgICAgICAgIF9lbCQyNC4kJGNsaWNrID0gKCkgPT4gc2V0RXhwYW5kZWRQYWdlcygob2xkKSA9PiBvbGQuaW5jbHVkZXMoaW5kZXgpID8gb2xkLmZpbHRlcigoZCkgPT4gZCAhPT0gaW5kZXgpIDogWy4uLm9sZCwgaW5kZXhdKTtcbiAgICAgICAgICAgICAgICAgICAgaW5zZXJ0KF9lbCQyNCwgY3JlYXRlQ29tcG9uZW50KEV4cGFuZGVyLCB7XG4gICAgICAgICAgICAgICAgICAgICAgZ2V0IGV4cGFuZGVkKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGV4cGFuZGVkUGFnZXMoKS5pbmNsdWRlcyhpbmRleCk7XG4gICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9KSwgX2VsJDI1KTtcbiAgICAgICAgICAgICAgICAgICAgaW5zZXJ0KF9lbCQyNCwgaW5kZXggKiAxMDAsIF9lbCQyOSk7XG4gICAgICAgICAgICAgICAgICAgIGluc2VydChfZWwkMjQsIGluZGV4ICogMTAwICsgMTAwIC0gMSwgX2VsJDMwKTtcbiAgICAgICAgICAgICAgICAgICAgaW5zZXJ0KF9lbCQyMywgY3JlYXRlQ29tcG9uZW50KFNob3csIHtcbiAgICAgICAgICAgICAgICAgICAgICBnZXQgd2hlbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBleHBhbmRlZFBhZ2VzKCkuaW5jbHVkZXMoaW5kZXgpO1xuICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgX2VsJDMxID0gX3RtcGwkNjIoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGluc2VydChfZWwkMzEsIGNyZWF0ZUNvbXBvbmVudChLZXksIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgZ2V0IGVhY2goKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGVudHJpZXMyKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgIGJ5OiAoZW50cnkpID0+IGVudHJ5LmxhYmVsLFxuICAgICAgICAgICAgICAgICAgICAgICAgICBjaGlsZHJlbjogKGVudHJ5KSA9PiBjcmVhdGVDb21wb25lbnQoRXhwbG9yZXIsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBnZXQgZGVmYXVsdEV4cGFuZGVkKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHByb3BzLmRlZmF1bHRFeHBhbmRlZDtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGdldCBsYWJlbCgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBlbnRyeSgpLmxhYmVsO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZ2V0IHZhbHVlKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGVudHJ5KCkudmFsdWU7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBnZXQgZWRpdGFibGUoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gcHJvcHMuZWRpdGFibGU7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBnZXQgZGF0YVBhdGgoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gWy4uLmN1cnJlbnREYXRhUGF0aCwgZW50cnkoKS5sYWJlbF07XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBnZXQgYWN0aXZlUXVlcnkoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gcHJvcHMuYWN0aXZlUXVlcnk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgICAgICAgICAgfSkpO1xuICAgICAgICAgICAgICAgICAgICAgICAgY3JlYXRlUmVuZGVyRWZmZWN0KCgpID0+IGNsYXNzTmFtZShfZWwkMzEsIHN0eWxlcygpLnN1YkVudHJ5KSk7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gX2VsJDMxO1xuICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfSksIG51bGwpO1xuICAgICAgICAgICAgICAgICAgICBjcmVhdGVSZW5kZXJFZmZlY3QoKF9wJCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IF92JDEwID0gc3R5bGVzKCkuZW50cnksIF92JDExID0gc3R5bGVzKCkuZXhwYW5kZXJCdXR0b247XG4gICAgICAgICAgICAgICAgICAgICAgX3YkMTAgIT09IF9wJC5fdiQxMCAmJiBjbGFzc05hbWUoX2VsJDIzLCBfcCQuX3YkMTAgPSBfdiQxMCk7XG4gICAgICAgICAgICAgICAgICAgICAgX3YkMTEgIT09IF9wJC5fdiQxMSAmJiBjbGFzc05hbWUoX2VsJDI0LCBfcCQuX3YkMTEgPSBfdiQxMSk7XG4gICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF9wJDtcbiAgICAgICAgICAgICAgICAgICAgfSwge1xuICAgICAgICAgICAgICAgICAgICAgIF92JDEwOiB2b2lkIDAsXG4gICAgICAgICAgICAgICAgICAgICAgX3YkMTE6IHZvaWQgMFxuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF9lbCQyMjtcbiAgICAgICAgICAgICAgICAgIH0pKClcbiAgICAgICAgICAgICAgICB9KSk7XG4gICAgICAgICAgICAgICAgY3JlYXRlUmVuZGVyRWZmZWN0KCgpID0+IGNsYXNzTmFtZShfZWwkMTYsIHN0eWxlcygpLnN1YkVudHJ5KSk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIF9lbCQxNjtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSldO1xuICAgICAgICAgIH1cbiAgICAgICAgfSldO1xuICAgICAgfVxuICAgIH0pLCBudWxsKTtcbiAgICBpbnNlcnQoX2VsJDYsIGNyZWF0ZUNvbXBvbmVudChTaG93LCB7XG4gICAgICBnZXQgd2hlbigpIHtcbiAgICAgICAgcmV0dXJuIHN1YkVudHJ5UGFnZXMoKS5sZW5ndGggPT09IDA7XG4gICAgICB9LFxuICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICBjb25zdCBfZWwkMTcgPSBfdG1wbCQxMDIoKSwgX2VsJDE4ID0gX2VsJDE3LmZpcnN0Q2hpbGQsIF9lbCQxOSA9IF9lbCQxOC5maXJzdENoaWxkO1xuICAgICAgICBpbnNlcnQoX2VsJDE4LCAoKSA9PiBwcm9wcy5sYWJlbCwgX2VsJDE5KTtcbiAgICAgICAgaW5zZXJ0KF9lbCQxNywgY3JlYXRlQ29tcG9uZW50KFNob3csIHtcbiAgICAgICAgICBnZXQgd2hlbigpIHtcbiAgICAgICAgICAgIHJldHVybiBjcmVhdGVNZW1vKCgpID0+ICEhKHByb3BzLmVkaXRhYmxlICYmIHByb3BzLmFjdGl2ZVF1ZXJ5ICE9PSB2b2lkIDApKSgpICYmICh0eXBlKCkgPT09IFwic3RyaW5nXCIgfHwgdHlwZSgpID09PSBcIm51bWJlclwiIHx8IHR5cGUoKSA9PT0gXCJib29sZWFuXCIpO1xuICAgICAgICAgIH0sXG4gICAgICAgICAgZ2V0IGZhbGxiYWNrKCkge1xuICAgICAgICAgICAgcmV0dXJuICgoKSA9PiB7XG4gICAgICAgICAgICAgIGNvbnN0IF9lbCQzMiA9IF90bXBsJDkyKCk7XG4gICAgICAgICAgICAgIGluc2VydChfZWwkMzIsICgpID0+IGRpc3BsYXlWYWx1ZShwcm9wcy52YWx1ZSkpO1xuICAgICAgICAgICAgICBjcmVhdGVSZW5kZXJFZmZlY3QoKCkgPT4gY2xhc3NOYW1lKF9lbCQzMiwgc3R5bGVzKCkudmFsdWUpKTtcbiAgICAgICAgICAgICAgcmV0dXJuIF9lbCQzMjtcbiAgICAgICAgICAgIH0pKCk7XG4gICAgICAgICAgfSxcbiAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICByZXR1cm4gW2NyZWF0ZUNvbXBvbmVudChTaG93LCB7XG4gICAgICAgICAgICAgIGdldCB3aGVuKCkge1xuICAgICAgICAgICAgICAgIHJldHVybiBjcmVhdGVNZW1vKCgpID0+ICEhKHByb3BzLmVkaXRhYmxlICYmIHByb3BzLmFjdGl2ZVF1ZXJ5ICE9PSB2b2lkIDApKSgpICYmICh0eXBlKCkgPT09IFwic3RyaW5nXCIgfHwgdHlwZSgpID09PSBcIm51bWJlclwiKTtcbiAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICAgIGNvbnN0IF9lbCQyMCA9IF90bXBsJDgyKCk7XG4gICAgICAgICAgICAgICAgX2VsJDIwLmFkZEV2ZW50TGlzdGVuZXIoXCJjaGFuZ2VcIiwgKGNoYW5nZUV2ZW50KSA9PiB7XG4gICAgICAgICAgICAgICAgICBjb25zdCBvbGREYXRhID0gcHJvcHMuYWN0aXZlUXVlcnkuc3RhdGUuZGF0YTtcbiAgICAgICAgICAgICAgICAgIGNvbnN0IG5ld0RhdGEgPSB1cGRhdGVOZXN0ZWREYXRhQnlQYXRoKG9sZERhdGEsIGN1cnJlbnREYXRhUGF0aCwgdHlwZSgpID09PSBcIm51bWJlclwiID8gY2hhbmdlRXZlbnQudGFyZ2V0LnZhbHVlQXNOdW1iZXIgOiBjaGFuZ2VFdmVudC50YXJnZXQudmFsdWUpO1xuICAgICAgICAgICAgICAgICAgcXVlcnlDbGllbnQuc2V0UXVlcnlEYXRhKHByb3BzLmFjdGl2ZVF1ZXJ5LnF1ZXJ5S2V5LCBuZXdEYXRhKTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICBjcmVhdGVSZW5kZXJFZmZlY3QoKF9wJCkgPT4ge1xuICAgICAgICAgICAgICAgICAgY29uc3QgX3YkNiA9IHR5cGUoKSA9PT0gXCJudW1iZXJcIiA/IFwibnVtYmVyXCIgOiBcInRleHRcIiwgX3YkNyA9IGNsc3goc3R5bGVzKCkudmFsdWUsIHN0eWxlcygpLmVkaXRhYmxlSW5wdXQpO1xuICAgICAgICAgICAgICAgICAgX3YkNiAhPT0gX3AkLl92JDYgJiYgc2V0QXR0cmlidXRlKF9lbCQyMCwgXCJ0eXBlXCIsIF9wJC5fdiQ2ID0gX3YkNik7XG4gICAgICAgICAgICAgICAgICBfdiQ3ICE9PSBfcCQuX3YkNyAmJiBjbGFzc05hbWUoX2VsJDIwLCBfcCQuX3YkNyA9IF92JDcpO1xuICAgICAgICAgICAgICAgICAgcmV0dXJuIF9wJDtcbiAgICAgICAgICAgICAgICB9LCB7XG4gICAgICAgICAgICAgICAgICBfdiQ2OiB2b2lkIDAsXG4gICAgICAgICAgICAgICAgICBfdiQ3OiB2b2lkIDBcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICBjcmVhdGVSZW5kZXJFZmZlY3QoKCkgPT4gX2VsJDIwLnZhbHVlID0gcHJvcHMudmFsdWUpO1xuICAgICAgICAgICAgICAgIHJldHVybiBfZWwkMjA7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pLCBjcmVhdGVDb21wb25lbnQoU2hvdywge1xuICAgICAgICAgICAgICBnZXQgd2hlbigpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gdHlwZSgpID09PSBcImJvb2xlYW5cIjtcbiAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICAgIGNvbnN0IF9lbCQyMSA9IF90bXBsJDkyKCk7XG4gICAgICAgICAgICAgICAgaW5zZXJ0KF9lbCQyMSwgY3JlYXRlQ29tcG9uZW50KFRvZ2dsZVZhbHVlQnV0dG9uLCB7XG4gICAgICAgICAgICAgICAgICBnZXQgYWN0aXZlUXVlcnkoKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBwcm9wcy5hY3RpdmVRdWVyeTtcbiAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICBkYXRhUGF0aDogY3VycmVudERhdGFQYXRoLFxuICAgICAgICAgICAgICAgICAgZ2V0IHZhbHVlKCkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gcHJvcHMudmFsdWU7XG4gICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSksIG51bGwpO1xuICAgICAgICAgICAgICAgIGluc2VydChfZWwkMjEsICgpID0+IGRpc3BsYXlWYWx1ZShwcm9wcy52YWx1ZSksIG51bGwpO1xuICAgICAgICAgICAgICAgIGNyZWF0ZVJlbmRlckVmZmVjdCgoKSA9PiBjbGFzc05hbWUoX2VsJDIxLCBjbHN4KHN0eWxlcygpLnZhbHVlLCBzdHlsZXMoKS5hY3Rpb25zLCBzdHlsZXMoKS5lZGl0YWJsZUlucHV0KSkpO1xuICAgICAgICAgICAgICAgIHJldHVybiBfZWwkMjE7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pXTtcbiAgICAgICAgICB9XG4gICAgICAgIH0pLCBudWxsKTtcbiAgICAgICAgaW5zZXJ0KF9lbCQxNywgY3JlYXRlQ29tcG9uZW50KFNob3csIHtcbiAgICAgICAgICBnZXQgd2hlbigpIHtcbiAgICAgICAgICAgIHJldHVybiBwcm9wcy5lZGl0YWJsZSAmJiBwcm9wcy5pdGVtc0RlbGV0YWJsZSAmJiBwcm9wcy5hY3RpdmVRdWVyeSAhPT0gdm9pZCAwO1xuICAgICAgICAgIH0sXG4gICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChEZWxldGVJdGVtQnV0dG9uLCB7XG4gICAgICAgICAgICAgIGdldCBhY3RpdmVRdWVyeSgpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gcHJvcHMuYWN0aXZlUXVlcnk7XG4gICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgIGRhdGFQYXRoOiBjdXJyZW50RGF0YVBhdGhcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgIH1cbiAgICAgICAgfSksIG51bGwpO1xuICAgICAgICBjcmVhdGVSZW5kZXJFZmZlY3QoKF9wJCkgPT4ge1xuICAgICAgICAgIGNvbnN0IF92JDggPSBzdHlsZXMoKS5yb3csIF92JDkgPSBzdHlsZXMoKS5sYWJlbDtcbiAgICAgICAgICBfdiQ4ICE9PSBfcCQuX3YkOCAmJiBjbGFzc05hbWUoX2VsJDE3LCBfcCQuX3YkOCA9IF92JDgpO1xuICAgICAgICAgIF92JDkgIT09IF9wJC5fdiQ5ICYmIGNsYXNzTmFtZShfZWwkMTgsIF9wJC5fdiQ5ID0gX3YkOSk7XG4gICAgICAgICAgcmV0dXJuIF9wJDtcbiAgICAgICAgfSwge1xuICAgICAgICAgIF92JDg6IHZvaWQgMCxcbiAgICAgICAgICBfdiQ5OiB2b2lkIDBcbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiBfZWwkMTc7XG4gICAgICB9XG4gICAgfSksIG51bGwpO1xuICAgIGNyZWF0ZVJlbmRlckVmZmVjdCgoKSA9PiBjbGFzc05hbWUoX2VsJDYsIHN0eWxlcygpLmVudHJ5KSk7XG4gICAgcmV0dXJuIF9lbCQ2O1xuICB9KSgpO1xufVxudmFyIHN0eWxlc0ZhY3RvcnkgPSAodGhlbWUsIGNzcykgPT4ge1xuICBjb25zdCB7XG4gICAgY29sb3JzLFxuICAgIGZvbnQsXG4gICAgc2l6ZTogc2l6ZTMsXG4gICAgYm9yZGVyXG4gIH0gPSB0b2tlbnM7XG4gIGNvbnN0IHQyID0gKGxpZ2h0LCBkYXJrKSA9PiB0aGVtZSA9PT0gXCJsaWdodFwiID8gbGlnaHQgOiBkYXJrO1xuICByZXR1cm4ge1xuICAgIGVudHJ5OiBjc3NgXG4gICAgICAmICoge1xuICAgICAgICBmb250LXNpemU6ICR7Zm9udC5zaXplLnhzfTtcbiAgICAgICAgZm9udC1mYW1pbHk6IHVpLW1vbm9zcGFjZSwgU0ZNb25vLVJlZ3VsYXIsIE1lbmxvLCBNb25hY28sIENvbnNvbGFzLFxuICAgICAgICAgICdMaWJlcmF0aW9uIE1vbm8nLCAnQ291cmllciBOZXcnLCBtb25vc3BhY2U7XG4gICAgICB9XG4gICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICBvdXRsaW5lOiBub25lO1xuICAgICAgd29yZC1icmVhazogYnJlYWstd29yZDtcbiAgICBgLFxuICAgIHN1YkVudHJ5OiBjc3NgXG4gICAgICBtYXJnaW46IDAgMCAwIDAuNWVtO1xuICAgICAgcGFkZGluZy1sZWZ0OiAwLjc1ZW07XG4gICAgICBib3JkZXItbGVmdDogMnB4IHNvbGlkICR7dDIoY29sb3JzLmdyYXlbMzAwXSwgY29sb3JzLmRhcmtHcmF5WzQwMF0pfTtcbiAgICAgIC8qIG91dGxpbmU6IDFweCBzb2xpZCAke2NvbG9ycy50ZWFsWzQwMF19OyAqL1xuICAgIGAsXG4gICAgZXhwYW5kZXI6IGNzc2BcbiAgICAgICYgcGF0aCB7XG4gICAgICAgIHN0cm9rZTogJHtjb2xvcnMuZ3JheVs0MDBdfTtcbiAgICAgIH1cbiAgICAgICYgc3ZnIHtcbiAgICAgICAgd2lkdGg6ICR7c2l6ZTNbM119O1xuICAgICAgICBoZWlnaHQ6ICR7c2l6ZTNbM119O1xuICAgICAgfVxuICAgICAgZGlzcGxheTogaW5saW5lLWZsZXg7XG4gICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgdHJhbnNpdGlvbjogYWxsIDAuMXMgZWFzZTtcbiAgICAgIC8qIG91dGxpbmU6IDFweCBzb2xpZCAke2NvbG9ycy5ibHVlWzQwMF19OyAqL1xuICAgIGAsXG4gICAgZXhwYW5kZXJCdXR0b25Db250YWluZXI6IGNzc2BcbiAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgbGluZS1oZWlnaHQ6ICR7c2l6ZTNbNF19O1xuICAgICAgbWluLWhlaWdodDogJHtzaXplM1s0XX07XG4gICAgICBnYXA6ICR7c2l6ZTNbMl19O1xuICAgIGAsXG4gICAgZXhwYW5kZXJCdXR0b246IGNzc2BcbiAgICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICAgIGNvbG9yOiBpbmhlcml0O1xuICAgICAgZm9udDogaW5oZXJpdDtcbiAgICAgIG91dGxpbmU6IGluaGVyaXQ7XG4gICAgICBoZWlnaHQ6ICR7c2l6ZTNbNV19O1xuICAgICAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG4gICAgICBib3JkZXI6IG5vbmU7XG4gICAgICBwYWRkaW5nOiAwO1xuICAgICAgZGlzcGxheTogaW5saW5lLWZsZXg7XG4gICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgZ2FwOiAke3NpemUzWzFdfTtcbiAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgIC8qIG91dGxpbmU6IDFweCBzb2xpZCAke2NvbG9ycy5ncmVlbls0MDBdfTsgKi9cblxuICAgICAgJjpmb2N1cy12aXNpYmxlIHtcbiAgICAgICAgYm9yZGVyLXJhZGl1czogJHtib3JkZXIucmFkaXVzLnhzfTtcbiAgICAgICAgb3V0bGluZTogMnB4IHNvbGlkICR7Y29sb3JzLmJsdWVbODAwXX07XG4gICAgICB9XG5cbiAgICAgICYgc3ZnIHtcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgICBsZWZ0OiAxcHg7XG4gICAgICB9XG4gICAgYCxcbiAgICBpbmZvOiBjc3NgXG4gICAgICBjb2xvcjogJHt0Mihjb2xvcnMuZ3JheVs1MDBdLCBjb2xvcnMuZ3JheVs1MDBdKX07XG4gICAgICBmb250LXNpemU6ICR7Zm9udC5zaXplLnhzfTtcbiAgICAgIG1hcmdpbi1sZWZ0OiAke3NpemUzWzFdfTtcbiAgICAgIC8qIG91dGxpbmU6IDFweCBzb2xpZCAke2NvbG9ycy55ZWxsb3dbNDAwXX07ICovXG4gICAgYCxcbiAgICBsYWJlbDogY3NzYFxuICAgICAgY29sb3I6ICR7dDIoY29sb3JzLmdyYXlbNzAwXSwgY29sb3JzLmdyYXlbMzAwXSl9O1xuICAgICAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbiAgICBgLFxuICAgIHZhbHVlOiBjc3NgXG4gICAgICBjb2xvcjogJHt0Mihjb2xvcnMucHVycGxlWzYwMF0sIGNvbG9ycy5wdXJwbGVbNDAwXSl9O1xuICAgICAgZmxleC1ncm93OiAxO1xuICAgIGAsXG4gICAgYWN0aW9uczogY3NzYFxuICAgICAgZGlzcGxheTogaW5saW5lLWZsZXg7XG4gICAgICBnYXA6ICR7c2l6ZTNbMl19O1xuICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBgLFxuICAgIHJvdzogY3NzYFxuICAgICAgZGlzcGxheTogaW5saW5lLWZsZXg7XG4gICAgICBnYXA6ICR7c2l6ZTNbMl19O1xuICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICBtYXJnaW46ICR7c2l6ZTNbMC4yNV19IDBweDtcbiAgICAgIGxpbmUtaGVpZ2h0OiAke3NpemUzWzQuNV19O1xuICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBgLFxuICAgIGVkaXRhYmxlSW5wdXQ6IGNzc2BcbiAgICAgIGJvcmRlcjogbm9uZTtcbiAgICAgIHBhZGRpbmc6ICR7c2l6ZTNbMC41XX0gJHtzaXplM1sxXX0gJHtzaXplM1swLjVdfSAke3NpemUzWzEuNV19O1xuICAgICAgZmxleC1ncm93OiAxO1xuICAgICAgYm9yZGVyLXJhZGl1czogJHtib3JkZXIucmFkaXVzLnhzfTtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICR7dDIoY29sb3JzLmdyYXlbMjAwXSwgY29sb3JzLmRhcmtHcmF5WzUwMF0pfTtcblxuICAgICAgJjpob3ZlciB7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICR7dDIoY29sb3JzLmdyYXlbMzAwXSwgY29sb3JzLmRhcmtHcmF5WzYwMF0pfTtcbiAgICAgIH1cbiAgICBgLFxuICAgIGFjdGlvbkJ1dHRvbjogY3NzYFxuICAgICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gICAgICBjb2xvcjogJHt0Mihjb2xvcnMuZ3JheVs1MDBdLCBjb2xvcnMuZ3JheVs1MDBdKX07XG4gICAgICBib3JkZXI6IG5vbmU7XG4gICAgICBkaXNwbGF5OiBpbmxpbmUtZmxleDtcbiAgICAgIHBhZGRpbmc6IDBweDtcbiAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICAgIHdpZHRoOiAke3NpemUzWzNdfTtcbiAgICAgIGhlaWdodDogJHtzaXplM1szXX07XG4gICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICB6LWluZGV4OiAxO1xuXG4gICAgICAmOmhvdmVyIHN2ZyB7XG4gICAgICAgIGNvbG9yOiAke3QyKGNvbG9ycy5ncmF5WzYwMF0sIGNvbG9ycy5ncmF5WzQwMF0pfTtcbiAgICAgIH1cblxuICAgICAgJjpmb2N1cy12aXNpYmxlIHtcbiAgICAgICAgYm9yZGVyLXJhZGl1czogJHtib3JkZXIucmFkaXVzLnhzfTtcbiAgICAgICAgb3V0bGluZTogMnB4IHNvbGlkICR7Y29sb3JzLmJsdWVbODAwXX07XG4gICAgICAgIG91dGxpbmUtb2Zmc2V0OiAycHg7XG4gICAgICB9XG4gICAgYFxuICB9O1xufTtcbnZhciBsaWdodFN0eWxlcyA9IChjc3MpID0+IHN0eWxlc0ZhY3RvcnkoXCJsaWdodFwiLCBjc3MpO1xudmFyIGRhcmtTdHlsZXMgPSAoY3NzKSA9PiBzdHlsZXNGYWN0b3J5KFwiZGFya1wiLCBjc3MpO1xuZGVsZWdhdGVFdmVudHMoW1wiY2xpY2tcIl0pO1xuXG4vLyBzcmMvRGV2dG9vbHMudHN4XG52YXIgX3RtcGwkMjUgPSAvKiBAX19QVVJFX18gKi8gdGVtcGxhdGUoYDxkaXY+PGRpdiBhcmlhLWhpZGRlbj10cnVlPjwvZGl2PjxidXR0b24gYXJpYS1sYWJlbD1cIk9wZW4gVGFuc3RhY2sgcXVlcnkgZGV2dG9vbHNcImNsYXNzPXRzcWQtb3Blbi1idG4+YCk7XG52YXIgX3RtcGwkMjYgPSAvKiBAX19QVVJFX18gKi8gdGVtcGxhdGUoYDxkaXY+YCk7XG52YXIgX3RtcGwkMzMgPSAvKiBAX19QVVJFX18gKi8gdGVtcGxhdGUoYDxhc2lkZSBhcmlhLWxhYmVsPVwiVGFuc3RhY2sgcXVlcnkgZGV2dG9vbHNcIj48ZGl2PjwvZGl2PjxidXR0b24gYXJpYS1sYWJlbD1cIkNsb3NlIHRhbnN0YWNrIHF1ZXJ5IGRldnRvb2xzXCI+YCk7XG52YXIgX3RtcGwkNDMgPSAvKiBAX19QVVJFX18gKi8gdGVtcGxhdGUoYDxzZWxlY3QgbmFtZT10c3FkLXF1ZXJpZXMtZmlsdGVyLXNvcnQ+YCk7XG52YXIgX3RtcGwkNTMgPSAvKiBAX19QVVJFX18gKi8gdGVtcGxhdGUoYDxzZWxlY3QgbmFtZT10c3FkLW11dGF0aW9ucy1maWx0ZXItc29ydD5gKTtcbnZhciBfdG1wbCQ2MyA9IC8qIEBfX1BVUkVfXyAqLyB0ZW1wbGF0ZShgPHNwYW4+QXNjYCk7XG52YXIgX3RtcGwkNzMgPSAvKiBAX19QVVJFX18gKi8gdGVtcGxhdGUoYDxzcGFuPkRlc2NgKTtcbnZhciBfdG1wbCQ4MyA9IC8qIEBfX1BVUkVfXyAqLyB0ZW1wbGF0ZShgPGJ1dHRvbiBhcmlhLWxhYmVsPVwiT3BlbiBpbiBwaWN0dXJlLWluLXBpY3R1cmUgbW9kZVwidGl0bGU9XCJPcGVuIGluIHBpY3R1cmUtaW4tcGljdHVyZSBtb2RlXCI+YCk7XG52YXIgX3RtcGwkOTMgPSAvKiBAX19QVVJFX18gKi8gdGVtcGxhdGUoYDxkaXY+U2V0dGluZ3NgKTtcbnZhciBfdG1wbCQxMDMgPSAvKiBAX19QVVJFX18gKi8gdGVtcGxhdGUoYDxzcGFuPlBvc2l0aW9uYCk7XG52YXIgX3RtcGwkMTEzID0gLyogQF9fUFVSRV9fICovIHRlbXBsYXRlKGA8c3Bhbj5Ub3BgKTtcbnZhciBfdG1wbCQxMjIgPSAvKiBAX19QVVJFX18gKi8gdGVtcGxhdGUoYDxzcGFuPkJvdHRvbWApO1xudmFyIF90bXBsJDEzMiA9IC8qIEBfX1BVUkVfXyAqLyB0ZW1wbGF0ZShgPHNwYW4+TGVmdGApO1xudmFyIF90bXBsJDE0MiA9IC8qIEBfX1BVUkVfXyAqLyB0ZW1wbGF0ZShgPHNwYW4+UmlnaHRgKTtcbnZhciBfdG1wbCQxNTIgPSAvKiBAX19QVVJFX18gKi8gdGVtcGxhdGUoYDxzcGFuPlRoZW1lYCk7XG52YXIgX3RtcGwkMTYyID0gLyogQF9fUFVSRV9fICovIHRlbXBsYXRlKGA8c3Bhbj5MaWdodGApO1xudmFyIF90bXBsJDE3MiA9IC8qIEBfX1BVUkVfXyAqLyB0ZW1wbGF0ZShgPHNwYW4+RGFya2ApO1xudmFyIF90bXBsJDE4MiA9IC8qIEBfX1BVUkVfXyAqLyB0ZW1wbGF0ZShgPHNwYW4+U3lzdGVtYCk7XG52YXIgX3RtcGwkMTkyID0gLyogQF9fUFVSRV9fICovIHRlbXBsYXRlKGA8ZGl2PjxkaXYgY2xhc3M9dHNxZC1xdWVyaWVzLWNvbnRhaW5lcj5gKTtcbnZhciBfdG1wbCQyMDIgPSAvKiBAX19QVVJFX18gKi8gdGVtcGxhdGUoYDxkaXY+PGRpdiBjbGFzcz10c3FkLW11dGF0aW9ucy1jb250YWluZXI+YCk7XG52YXIgX3RtcGwkMjEyID0gLyogQF9fUFVSRV9fICovIHRlbXBsYXRlKGA8ZGl2PjxkaXY+PGRpdj48YnV0dG9uIGFyaWEtbGFiZWw9XCJDbG9zZSBUYW5zdGFjayBxdWVyeSBkZXZ0b29sc1wiPjxzcGFuPlRBTlNUQUNLPC9zcGFuPjxzcGFuPiB2PC9zcGFuPjwvYnV0dG9uPjwvZGl2PjwvZGl2PjxkaXY+PGRpdj48ZGl2PjxpbnB1dCBhcmlhLWxhYmVsPVwiRmlsdGVyIHF1ZXJpZXMgYnkgcXVlcnkga2V5XCJ0eXBlPXRleHQgcGxhY2Vob2xkZXI9RmlsdGVyIG5hbWU9dHNxZC1xdWVyeS1maWx0ZXItaW5wdXQ+PC9kaXY+PGRpdj48L2Rpdj48YnV0dG9uIGNsYXNzPXRzcWQtcXVlcnktZmlsdGVyLXNvcnQtb3JkZXItYnRuPjwvYnV0dG9uPjwvZGl2PjxkaXY+PGJ1dHRvbiBhcmlhLWxhYmVsPVwiQ2xlYXIgcXVlcnkgY2FjaGVcIj48L2J1dHRvbj48YnV0dG9uPmApO1xudmFyIF90bXBsJDIyMyA9IC8qIEBfX1BVUkVfXyAqLyB0ZW1wbGF0ZShgPG9wdGlvbj5Tb3J0IGJ5IGApO1xudmFyIF90bXBsJDIzMiA9IC8qIEBfX1BVUkVfXyAqLyB0ZW1wbGF0ZShgPGRpdiBjbGFzcz10c3FkLXF1ZXJ5LWRpc2FibGVkLWluZGljYXRvcj5kaXNhYmxlZGApO1xudmFyIF90bXBsJDI0MiA9IC8qIEBfX1BVUkVfXyAqLyB0ZW1wbGF0ZShgPGJ1dHRvbj48ZGl2PjwvZGl2Pjxjb2RlIGNsYXNzPXRzcWQtcXVlcnktaGFzaD5gKTtcbnZhciBfdG1wbCQyNTIgPSAvKiBAX19QVVJFX18gKi8gdGVtcGxhdGUoYDxkaXYgcm9sZT10b29sdGlwIGlkPXRzcWQtc3RhdHVzLXRvb2x0aXA+YCk7XG52YXIgX3RtcGwkMjYyID0gLyogQF9fUFVSRV9fICovIHRlbXBsYXRlKGA8c3Bhbj5gKTtcbnZhciBfdG1wbCQyNyA9IC8qIEBfX1BVUkVfXyAqLyB0ZW1wbGF0ZShgPGJ1dHRvbj48c3Bhbj48L3NwYW4+PHNwYW4+YCk7XG52YXIgX3RtcGwkMjggPSAvKiBAX19QVVJFX18gKi8gdGVtcGxhdGUoYDxidXR0b24+PHNwYW4+PC9zcGFuPiBFcnJvcmApO1xudmFyIF90bXBsJDI5ID0gLyogQF9fUFVSRV9fICovIHRlbXBsYXRlKGA8ZGl2PjxzcGFuPjwvc3Bhbj5UcmlnZ2VyIEVycm9yPHNlbGVjdD48b3B0aW9uIHZhbHVlPVwiXCJkaXNhYmxlZCBzZWxlY3RlZD5gKTtcbnZhciBfdG1wbCQzMCA9IC8qIEBfX1BVUkVfXyAqLyB0ZW1wbGF0ZShgPGRpdj48ZGl2PlF1ZXJ5IERldGFpbHM8L2Rpdj48ZGl2PjxkaXYgY2xhc3M9dHNxZC1xdWVyeS1kZXRhaWxzLXN1bW1hcnk+PHByZT48Y29kZT48L2NvZGU+PC9wcmU+PHNwYW4+PC9zcGFuPjwvZGl2PjxkaXYgY2xhc3M9dHNxZC1xdWVyeS1kZXRhaWxzLW9ic2VydmVycy1jb3VudD48c3Bhbj5PYnNlcnZlcnM6PC9zcGFuPjxzcGFuPjwvc3Bhbj48L2Rpdj48ZGl2IGNsYXNzPXRzcWQtcXVlcnktZGV0YWlscy1sYXN0LXVwZGF0ZWQ+PHNwYW4+TGFzdCBVcGRhdGVkOjwvc3Bhbj48c3Bhbj48L3NwYW4+PC9kaXY+PC9kaXY+PGRpdj5BY3Rpb25zPC9kaXY+PGRpdj48YnV0dG9uPjxzcGFuPjwvc3Bhbj5SZWZldGNoPC9idXR0b24+PGJ1dHRvbj48c3Bhbj48L3NwYW4+SW52YWxpZGF0ZTwvYnV0dG9uPjxidXR0b24+PHNwYW4+PC9zcGFuPlJlc2V0PC9idXR0b24+PGJ1dHRvbj48c3Bhbj48L3NwYW4+UmVtb3ZlPC9idXR0b24+PGJ1dHRvbj48c3Bhbj48L3NwYW4+IExvYWRpbmc8L2J1dHRvbj48L2Rpdj48ZGl2PkRhdGEgRXhwbG9yZXI8L2Rpdj48ZGl2IGNsYXNzPVwidHNxZC1xdWVyeS1kZXRhaWxzLWV4cGxvcmVyLWNvbnRhaW5lciB0c3FkLXF1ZXJ5LWRldGFpbHMtZGF0YS1leHBsb3JlclwiPjwvZGl2PjxkaXY+UXVlcnkgRXhwbG9yZXI8L2Rpdj48ZGl2IGNsYXNzPVwidHNxZC1xdWVyeS1kZXRhaWxzLWV4cGxvcmVyLWNvbnRhaW5lciB0c3FkLXF1ZXJ5LWRldGFpbHMtcXVlcnktZXhwbG9yZXJcIj5gKTtcbnZhciBfdG1wbCQzMSA9IC8qIEBfX1BVUkVfXyAqLyB0ZW1wbGF0ZShgPG9wdGlvbj5gKTtcbnZhciBfdG1wbCQzMjIgPSAvKiBAX19QVVJFX18gKi8gdGVtcGxhdGUoYDxkaXY+PGRpdj5NdXRhdGlvbiBEZXRhaWxzPC9kaXY+PGRpdj48ZGl2IGNsYXNzPXRzcWQtcXVlcnktZGV0YWlscy1zdW1tYXJ5PjxwcmU+PGNvZGU+PC9jb2RlPjwvcHJlPjxzcGFuPjwvc3Bhbj48L2Rpdj48ZGl2IGNsYXNzPXRzcWQtcXVlcnktZGV0YWlscy1sYXN0LXVwZGF0ZWQ+PHNwYW4+U3VibWl0dGVkIEF0Ojwvc3Bhbj48c3Bhbj48L3NwYW4+PC9kaXY+PC9kaXY+PGRpdj5WYXJpYWJsZXMgRGV0YWlsczwvZGl2PjxkaXYgY2xhc3M9XCJ0c3FkLXF1ZXJ5LWRldGFpbHMtZXhwbG9yZXItY29udGFpbmVyIHRzcWQtcXVlcnktZGV0YWlscy1xdWVyeS1leHBsb3JlclwiPjwvZGl2PjxkaXY+Q29udGV4dCBEZXRhaWxzPC9kaXY+PGRpdiBjbGFzcz1cInRzcWQtcXVlcnktZGV0YWlscy1leHBsb3Jlci1jb250YWluZXIgdHNxZC1xdWVyeS1kZXRhaWxzLXF1ZXJ5LWV4cGxvcmVyXCI+PC9kaXY+PGRpdj5EYXRhIEV4cGxvcmVyPC9kaXY+PGRpdiBjbGFzcz1cInRzcWQtcXVlcnktZGV0YWlscy1leHBsb3Jlci1jb250YWluZXIgdHNxZC1xdWVyeS1kZXRhaWxzLXF1ZXJ5LWV4cGxvcmVyXCI+PC9kaXY+PGRpdj5NdXRhdGlvbnMgRXhwbG9yZXI8L2Rpdj48ZGl2IGNsYXNzPVwidHNxZC1xdWVyeS1kZXRhaWxzLWV4cGxvcmVyLWNvbnRhaW5lciB0c3FkLXF1ZXJ5LWRldGFpbHMtcXVlcnktZXhwbG9yZXJcIj5gKTtcbnZhciBmaXJzdEJyZWFrcG9pbnQgPSAxMDI0O1xudmFyIHNlY29uZEJyZWFrcG9pbnQgPSA3OTY7XG52YXIgdGhpcmRCcmVha3BvaW50ID0gNzAwO1xudmFyIEJVVFRPTl9QT1NJVElPTiA9IFwiYm90dG9tLXJpZ2h0XCI7XG52YXIgUE9TSVRJT04gPSBcImJvdHRvbVwiO1xudmFyIFRIRU1FX1BSRUZFUkVOQ0UgPSBcInN5c3RlbVwiO1xudmFyIElOSVRJQUxfSVNfT1BFTiA9IGZhbHNlO1xudmFyIERFRkFVTFRfSEVJR0hUID0gNTAwO1xudmFyIERFRkFVTFRfV0lEVEggPSA1MDA7XG52YXIgREVGQVVMVF9TT1JUX0ZOX05BTUUgPSBPYmplY3Qua2V5cyhzb3J0Rm5zKVswXTtcbnZhciBERUZBVUxUX1NPUlRfT1JERVIgPSAxO1xudmFyIERFRkFVTFRfTVVUQVRJT05fU09SVF9GTl9OQU1FID0gT2JqZWN0LmtleXMobXV0YXRpb25Tb3J0Rm5zKVswXTtcbnZhciBbc2VsZWN0ZWRRdWVyeUhhc2gsIHNldFNlbGVjdGVkUXVlcnlIYXNoXSA9IGNyZWF0ZVNpZ25hbChudWxsKTtcbnZhciBbc2VsZWN0ZWRNdXRhdGlvbklkLCBzZXRTZWxlY3RlZE11dGF0aW9uSWRdID0gY3JlYXRlU2lnbmFsKG51bGwpO1xudmFyIFtwYW5lbFdpZHRoLCBzZXRQYW5lbFdpZHRoXSA9IGNyZWF0ZVNpZ25hbCgwKTtcbnZhciBbb2ZmbGluZSwgc2V0T2ZmbGluZV0gPSBjcmVhdGVTaWduYWwoZmFsc2UpO1xudmFyIFBpUENvbnRleHQgPSBjcmVhdGVDb250ZXh0KHZvaWQgMCk7XG52YXIgUGlQUHJvdmlkZXIgPSAocHJvcHMpID0+IHtcbiAgY29uc3QgW3BpcFdpbmRvdywgc2V0UGlwV2luZG93XSA9IGNyZWF0ZVNpZ25hbChudWxsKTtcbiAgY29uc3QgY2xvc2VQaXBXaW5kb3cgPSAoKSA9PiB7XG4gICAgY29uc3QgdyA9IHBpcFdpbmRvdygpO1xuICAgIGlmICh3ICE9IG51bGwpIHtcbiAgICAgIHcuY2xvc2UoKTtcbiAgICAgIHNldFBpcFdpbmRvdyhudWxsKTtcbiAgICB9XG4gIH07XG4gIGNvbnN0IHJlcXVlc3RQaXBXaW5kb3cgPSBhc3luYyAod2lkdGgsIGhlaWdodCkgPT4ge1xuICAgIGlmIChwaXBXaW5kb3coKSAhPSBudWxsKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIGNvbnN0IHBpcCA9IHdpbmRvdy5vcGVuKFwiXCIsIFwiVFNRRC1EZXZ0b29scy1QYW5lbFwiLCBgd2lkdGg9JHt3aWR0aH0saGVpZ2h0PSR7aGVpZ2h0fSxwb3B1cGApO1xuICAgIGlmICghcGlwKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXCJGYWlsZWQgdG8gb3BlbiBwb3B1cC4gUGxlYXNlIGFsbG93IHBvcHVwcyBmb3IgdGhpcyBzaXRlIHRvIHZpZXcgdGhlIGRldnRvb2xzIGluIHBpY3R1cmUtaW4tcGljdHVyZSBtb2RlLlwiKTtcbiAgICB9XG4gICAgcGlwLmRvY3VtZW50LmhlYWQuaW5uZXJIVE1MID0gXCJcIjtcbiAgICBwaXAuZG9jdW1lbnQuYm9keS5pbm5lckhUTUwgPSBcIlwiO1xuICAgIGNsZWFyRGVsZWdhdGVkRXZlbnRzKHBpcC5kb2N1bWVudCk7XG4gICAgcGlwLmRvY3VtZW50LnRpdGxlID0gXCJUYW5TdGFjayBRdWVyeSBEZXZ0b29sc1wiO1xuICAgIHBpcC5kb2N1bWVudC5ib2R5LnN0eWxlLm1hcmdpbiA9IFwiMFwiO1xuICAgIHBpcC5hZGRFdmVudExpc3RlbmVyKFwicGFnZWhpZGVcIiwgKCkgPT4ge1xuICAgICAgcHJvcHMuc2V0TG9jYWxTdG9yZShcInBpcF9vcGVuXCIsIFwiZmFsc2VcIik7XG4gICAgICBzZXRQaXBXaW5kb3cobnVsbCk7XG4gICAgfSk7XG4gICAgWy4uLih1c2VRdWVyeURldnRvb2xzQ29udGV4dCgpLnNoYWRvd0RPTVRhcmdldCB8fCBkb2N1bWVudCkuc3R5bGVTaGVldHNdLmZvckVhY2goKHN0eWxlU2hlZXQpID0+IHtcbiAgICAgIHRyeSB7XG4gICAgICAgIGNvbnN0IGNzc1J1bGVzID0gWy4uLnN0eWxlU2hlZXQuY3NzUnVsZXNdLm1hcCgocnVsZSkgPT4gcnVsZS5jc3NUZXh0KS5qb2luKFwiXCIpO1xuICAgICAgICBjb25zdCBzdHlsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzdHlsZVwiKTtcbiAgICAgICAgY29uc3Qgc3R5bGVfbm9kZSA9IHN0eWxlU2hlZXQub3duZXJOb2RlO1xuICAgICAgICBsZXQgc3R5bGVfaWQgPSBcIlwiO1xuICAgICAgICBpZiAoc3R5bGVfbm9kZSAmJiBcImlkXCIgaW4gc3R5bGVfbm9kZSkge1xuICAgICAgICAgIHN0eWxlX2lkID0gc3R5bGVfbm9kZS5pZDtcbiAgICAgICAgfVxuICAgICAgICBpZiAoc3R5bGVfaWQpIHtcbiAgICAgICAgICBzdHlsZS5zZXRBdHRyaWJ1dGUoXCJpZFwiLCBzdHlsZV9pZCk7XG4gICAgICAgIH1cbiAgICAgICAgc3R5bGUudGV4dENvbnRlbnQgPSBjc3NSdWxlcztcbiAgICAgICAgcGlwLmRvY3VtZW50LmhlYWQuYXBwZW5kQ2hpbGQoc3R5bGUpO1xuICAgICAgfSBjYXRjaCAoZTIpIHtcbiAgICAgICAgY29uc3QgbGluayA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJsaW5rXCIpO1xuICAgICAgICBpZiAoc3R5bGVTaGVldC5ocmVmID09IG51bGwpIHtcbiAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgbGluay5yZWwgPSBcInN0eWxlc2hlZXRcIjtcbiAgICAgICAgbGluay50eXBlID0gc3R5bGVTaGVldC50eXBlO1xuICAgICAgICBsaW5rLm1lZGlhID0gc3R5bGVTaGVldC5tZWRpYS50b1N0cmluZygpO1xuICAgICAgICBsaW5rLmhyZWYgPSBzdHlsZVNoZWV0LmhyZWY7XG4gICAgICAgIHBpcC5kb2N1bWVudC5oZWFkLmFwcGVuZENoaWxkKGxpbmspO1xuICAgICAgfVxuICAgIH0pO1xuICAgIGRlbGVnYXRlRXZlbnRzKFtcImZvY3VzaW5cIiwgXCJmb2N1c291dFwiLCBcInBvaW50ZXJtb3ZlXCIsIFwia2V5ZG93blwiLCBcInBvaW50ZXJkb3duXCIsIFwicG9pbnRlcnVwXCIsIFwiY2xpY2tcIiwgXCJtb3VzZWRvd25cIiwgXCJpbnB1dFwiXSwgcGlwLmRvY3VtZW50KTtcbiAgICBwcm9wcy5zZXRMb2NhbFN0b3JlKFwicGlwX29wZW5cIiwgXCJ0cnVlXCIpO1xuICAgIHNldFBpcFdpbmRvdyhwaXApO1xuICB9O1xuICBjcmVhdGVFZmZlY3QoKCkgPT4ge1xuICAgIGNvbnN0IHBpcF9vcGVuID0gcHJvcHMubG9jYWxTdG9yZS5waXBfb3BlbiA/PyBcImZhbHNlXCI7XG4gICAgaWYgKHBpcF9vcGVuID09PSBcInRydWVcIikge1xuICAgICAgcmVxdWVzdFBpcFdpbmRvdyhOdW1iZXIod2luZG93LmlubmVyV2lkdGgpLCBOdW1iZXIocHJvcHMubG9jYWxTdG9yZS5oZWlnaHQgfHwgREVGQVVMVF9IRUlHSFQpKTtcbiAgICB9XG4gIH0pO1xuICBjcmVhdGVFZmZlY3QoKCkgPT4ge1xuICAgIGNvbnN0IGdvb2JlclN0eWxlcyA9ICh1c2VRdWVyeURldnRvb2xzQ29udGV4dCgpLnNoYWRvd0RPTVRhcmdldCB8fCBkb2N1bWVudCkucXVlcnlTZWxlY3RvcihcIiNfZ29vYmVyXCIpO1xuICAgIGNvbnN0IHcgPSBwaXBXaW5kb3coKTtcbiAgICBpZiAoZ29vYmVyU3R5bGVzICYmIHcpIHtcbiAgICAgIGNvbnN0IG9ic2VydmVyID0gbmV3IE11dGF0aW9uT2JzZXJ2ZXIoKCkgPT4ge1xuICAgICAgICBjb25zdCBwaXBfc3R5bGUgPSAodXNlUXVlcnlEZXZ0b29sc0NvbnRleHQoKS5zaGFkb3dET01UYXJnZXQgfHwgdy5kb2N1bWVudCkucXVlcnlTZWxlY3RvcihcIiNfZ29vYmVyXCIpO1xuICAgICAgICBpZiAocGlwX3N0eWxlKSB7XG4gICAgICAgICAgcGlwX3N0eWxlLnRleHRDb250ZW50ID0gZ29vYmVyU3R5bGVzLnRleHRDb250ZW50O1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICAgIG9ic2VydmVyLm9ic2VydmUoZ29vYmVyU3R5bGVzLCB7XG4gICAgICAgIGNoaWxkTGlzdDogdHJ1ZSxcbiAgICAgICAgLy8gb2JzZXJ2ZSBkaXJlY3QgY2hpbGRyZW5cbiAgICAgICAgc3VidHJlZTogdHJ1ZSxcbiAgICAgICAgLy8gYW5kIGxvd2VyIGRlc2NlbmRhbnRzIHRvb1xuICAgICAgICBjaGFyYWN0ZXJEYXRhT2xkVmFsdWU6IHRydWVcbiAgICAgICAgLy8gcGFzcyBvbGQgZGF0YSB0byBjYWxsYmFja1xuICAgICAgfSk7XG4gICAgICBvbkNsZWFudXAoKCkgPT4ge1xuICAgICAgICBvYnNlcnZlci5kaXNjb25uZWN0KCk7XG4gICAgICB9KTtcbiAgICB9XG4gIH0pO1xuICBjb25zdCB2YWx1ZSA9IGNyZWF0ZU1lbW8oKCkgPT4gKHtcbiAgICBwaXBXaW5kb3c6IHBpcFdpbmRvdygpLFxuICAgIHJlcXVlc3RQaXBXaW5kb3csXG4gICAgY2xvc2VQaXBXaW5kb3dcbiAgfSkpO1xuICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KFBpUENvbnRleHQuUHJvdmlkZXIsIHtcbiAgICB2YWx1ZSxcbiAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICByZXR1cm4gcHJvcHMuY2hpbGRyZW47XG4gICAgfVxuICB9KTtcbn07XG52YXIgdXNlUGlQV2luZG93ID0gKCkgPT4ge1xuICBjb25zdCBjb250ZXh0ID0gY3JlYXRlTWVtbygoKSA9PiB7XG4gICAgY29uc3QgY3R4ID0gdXNlQ29udGV4dChQaVBDb250ZXh0KTtcbiAgICBpZiAoIWN0eCkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKFwidXNlUGlQV2luZG93IG11c3QgYmUgdXNlZCB3aXRoaW4gYSBQaVBQcm92aWRlclwiKTtcbiAgICB9XG4gICAgcmV0dXJuIGN0eCgpO1xuICB9KTtcbiAgcmV0dXJuIGNvbnRleHQ7XG59O1xudmFyIERldnRvb2xzQ29tcG9uZW50ID0gKHByb3BzKSA9PiB7XG4gIGNvbnN0IFtsb2NhbFN0b3JlLCBzZXRMb2NhbFN0b3JlXSA9IGNyZWF0ZUxvY2FsU3RvcmFnZSh7XG4gICAgcHJlZml4OiBcIlRhbnN0YWNrUXVlcnlEZXZ0b29sc1wiXG4gIH0pO1xuICBjb25zdCBjb2xvclNjaGVtZSA9IGdldFByZWZlcnJlZENvbG9yU2NoZW1lKCk7XG4gIGNvbnN0IHRoZW1lID0gY3JlYXRlTWVtbygoKSA9PiB7XG4gICAgY29uc3QgcHJlZmVyZW5jZSA9IGxvY2FsU3RvcmUudGhlbWVfcHJlZmVyZW5jZSB8fCBUSEVNRV9QUkVGRVJFTkNFO1xuICAgIGlmIChwcmVmZXJlbmNlICE9PSBcInN5c3RlbVwiKVxuICAgICAgcmV0dXJuIHByZWZlcmVuY2U7XG4gICAgcmV0dXJuIGNvbG9yU2NoZW1lKCk7XG4gIH0pO1xuICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KFF1ZXJ5RGV2dG9vbHNDb250ZXh0LlByb3ZpZGVyLCB7XG4gICAgdmFsdWU6IHByb3BzLFxuICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoUGlQUHJvdmlkZXIsIHtcbiAgICAgICAgbG9jYWxTdG9yZSxcbiAgICAgICAgc2V0TG9jYWxTdG9yZSxcbiAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoVGhlbWVDb250ZXh0LlByb3ZpZGVyLCB7XG4gICAgICAgICAgICB2YWx1ZTogdGhlbWUsXG4gICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoRGV2dG9vbHMsIHtcbiAgICAgICAgICAgICAgICBsb2NhbFN0b3JlLFxuICAgICAgICAgICAgICAgIHNldExvY2FsU3RvcmVcbiAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH1cbiAgfSk7XG59O1xudmFyIERldnRvb2xzX2RlZmF1bHQgPSBEZXZ0b29sc0NvbXBvbmVudDtcbnZhciBEZXZ0b29scyA9IChwcm9wcykgPT4ge1xuICBjb25zdCB0aGVtZSA9IHVzZVRoZW1lKCk7XG4gIGNvbnN0IGNzcyA9IHVzZVF1ZXJ5RGV2dG9vbHNDb250ZXh0KCkuc2hhZG93RE9NVGFyZ2V0ID8gdS5iaW5kKHtcbiAgICB0YXJnZXQ6IHVzZVF1ZXJ5RGV2dG9vbHNDb250ZXh0KCkuc2hhZG93RE9NVGFyZ2V0XG4gIH0pIDogdTtcbiAgY29uc3Qgc3R5bGVzID0gY3JlYXRlTWVtbygoKSA9PiB7XG4gICAgcmV0dXJuIHRoZW1lKCkgPT09IFwiZGFya1wiID8gZGFya1N0eWxlczIoY3NzKSA6IGxpZ2h0U3R5bGVzMihjc3MpO1xuICB9KTtcbiAgY29uc3QgcGlwID0gdXNlUGlQV2luZG93KCk7XG4gIGNvbnN0IGJ1dHRvblBvc2l0aW9uID0gY3JlYXRlTWVtbygoKSA9PiB7XG4gICAgcmV0dXJuIHVzZVF1ZXJ5RGV2dG9vbHNDb250ZXh0KCkuYnV0dG9uUG9zaXRpb24gfHwgQlVUVE9OX1BPU0lUSU9OO1xuICB9KTtcbiAgY29uc3QgaXNPcGVuID0gY3JlYXRlTWVtbygoKSA9PiB7XG4gICAgcmV0dXJuIHByb3BzLmxvY2FsU3RvcmUub3BlbiA9PT0gXCJ0cnVlXCIgPyB0cnVlIDogcHJvcHMubG9jYWxTdG9yZS5vcGVuID09PSBcImZhbHNlXCIgPyBmYWxzZSA6IHVzZVF1ZXJ5RGV2dG9vbHNDb250ZXh0KCkuaW5pdGlhbElzT3BlbiB8fCBJTklUSUFMX0lTX09QRU47XG4gIH0pO1xuICBjb25zdCBwb3NpdGlvbiA9IGNyZWF0ZU1lbW8oKCkgPT4ge1xuICAgIHJldHVybiBwcm9wcy5sb2NhbFN0b3JlLnBvc2l0aW9uIHx8IHVzZVF1ZXJ5RGV2dG9vbHNDb250ZXh0KCkucG9zaXRpb24gfHwgUE9TSVRJT047XG4gIH0pO1xuICBsZXQgdHJhbnNpdGlvbnNDb250YWluZXJSZWY7XG4gIGNyZWF0ZUVmZmVjdCgoKSA9PiB7XG4gICAgY29uc3Qgcm9vdCA9IHRyYW5zaXRpb25zQ29udGFpbmVyUmVmLnBhcmVudEVsZW1lbnQ7XG4gICAgY29uc3QgaGVpZ2h0ID0gcHJvcHMubG9jYWxTdG9yZS5oZWlnaHQgfHwgREVGQVVMVF9IRUlHSFQ7XG4gICAgY29uc3Qgd2lkdGggPSBwcm9wcy5sb2NhbFN0b3JlLndpZHRoIHx8IERFRkFVTFRfV0lEVEg7XG4gICAgY29uc3QgcGFuZWxQb3NpdGlvbiA9IHBvc2l0aW9uKCk7XG4gICAgcm9vdC5zdHlsZS5zZXRQcm9wZXJ0eShcIi0tdHNxZC1wYW5lbC1oZWlnaHRcIiwgYCR7cGFuZWxQb3NpdGlvbiA9PT0gXCJ0b3BcIiA/IFwiLVwiIDogXCJcIn0ke2hlaWdodH1weGApO1xuICAgIHJvb3Quc3R5bGUuc2V0UHJvcGVydHkoXCItLXRzcWQtcGFuZWwtd2lkdGhcIiwgYCR7cGFuZWxQb3NpdGlvbiA9PT0gXCJsZWZ0XCIgPyBcIi1cIiA6IFwiXCJ9JHt3aWR0aH1weGApO1xuICB9KTtcbiAgb25Nb3VudCgoKSA9PiB7XG4gICAgY29uc3Qgb25Gb2N1cyA9ICgpID0+IHtcbiAgICAgIGNvbnN0IHJvb3QgPSB0cmFuc2l0aW9uc0NvbnRhaW5lclJlZi5wYXJlbnRFbGVtZW50O1xuICAgICAgY29uc3QgZm9udFNpemUgPSBnZXRDb21wdXRlZFN0eWxlKHJvb3QpLmZvbnRTaXplO1xuICAgICAgcm9vdC5zdHlsZS5zZXRQcm9wZXJ0eShcIi0tdHNxZC1mb250LXNpemVcIiwgZm9udFNpemUpO1xuICAgIH07XG4gICAgb25Gb2N1cygpO1xuICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKFwiZm9jdXNcIiwgb25Gb2N1cyk7XG4gICAgb25DbGVhbnVwKCgpID0+IHtcbiAgICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKFwiZm9jdXNcIiwgb25Gb2N1cyk7XG4gICAgfSk7XG4gIH0pO1xuICBjb25zdCBwaXBfb3BlbiA9IGNyZWF0ZU1lbW8oKCkgPT4gcHJvcHMubG9jYWxTdG9yZS5waXBfb3BlbiA/PyBcImZhbHNlXCIpO1xuICByZXR1cm4gW2NyZWF0ZUNvbXBvbmVudChTaG93LCB7XG4gICAgZ2V0IHdoZW4oKSB7XG4gICAgICByZXR1cm4gY3JlYXRlTWVtbygoKSA9PiAhIXBpcCgpLnBpcFdpbmRvdykoKSAmJiBwaXBfb3BlbigpID09IFwidHJ1ZVwiO1xuICAgIH0sXG4gICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChQb3J0YWwsIHtcbiAgICAgICAgZ2V0IG1vdW50KCkge1xuICAgICAgICAgIHJldHVybiBwaXAoKS5waXBXaW5kb3c/LmRvY3VtZW50LmJvZHk7XG4gICAgICAgIH0sXG4gICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KFBpUFBhbmVsLCB7XG4gICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoQ29udGVudFZpZXcsIHtcbiAgICAgICAgICAgICAgICBnZXQgbG9jYWxTdG9yZSgpIHtcbiAgICAgICAgICAgICAgICAgIHJldHVybiBwcm9wcy5sb2NhbFN0b3JlO1xuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgZ2V0IHNldExvY2FsU3RvcmUoKSB7XG4gICAgICAgICAgICAgICAgICByZXR1cm4gcHJvcHMuc2V0TG9jYWxTdG9yZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9XG4gIH0pLCAoKCkgPT4ge1xuICAgIGNvbnN0IF9lbCQgPSBfdG1wbCQyNigpO1xuICAgIGNvbnN0IF9yZWYkID0gdHJhbnNpdGlvbnNDb250YWluZXJSZWY7XG4gICAgdHlwZW9mIF9yZWYkID09PSBcImZ1bmN0aW9uXCIgPyB1c2UoX3JlZiQsIF9lbCQpIDogdHJhbnNpdGlvbnNDb250YWluZXJSZWYgPSBfZWwkO1xuICAgIGluc2VydChfZWwkLCBjcmVhdGVDb21wb25lbnQoVHJhbnNpdGlvbkdyb3VwLCB7XG4gICAgICBuYW1lOiBcInRzcWQtcGFuZWwtdHJhbnNpdGlvblwiLFxuICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KFNob3csIHtcbiAgICAgICAgICBnZXQgd2hlbigpIHtcbiAgICAgICAgICAgIHJldHVybiBjcmVhdGVNZW1vKCgpID0+ICEhKGlzT3BlbigpICYmICFwaXAoKS5waXBXaW5kb3cpKSgpICYmIHBpcF9vcGVuKCkgPT0gXCJmYWxzZVwiO1xuICAgICAgICAgIH0sXG4gICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChEZXZ0b29sc1BhbmVsLCB7XG4gICAgICAgICAgICAgIGdldCBsb2NhbFN0b3JlKCkge1xuICAgICAgICAgICAgICAgIHJldHVybiBwcm9wcy5sb2NhbFN0b3JlO1xuICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICBnZXQgc2V0TG9jYWxTdG9yZSgpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gcHJvcHMuc2V0TG9jYWxTdG9yZTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9KSwgbnVsbCk7XG4gICAgaW5zZXJ0KF9lbCQsIGNyZWF0ZUNvbXBvbmVudChUcmFuc2l0aW9uR3JvdXAsIHtcbiAgICAgIG5hbWU6IFwidHNxZC1idXR0b24tdHJhbnNpdGlvblwiLFxuICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KFNob3csIHtcbiAgICAgICAgICBnZXQgd2hlbigpIHtcbiAgICAgICAgICAgIHJldHVybiAhaXNPcGVuKCk7XG4gICAgICAgICAgfSxcbiAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICBjb25zdCBfZWwkMiA9IF90bXBsJDI1KCksIF9lbCQzID0gX2VsJDIuZmlyc3RDaGlsZCwgX2VsJDQgPSBfZWwkMy5uZXh0U2libGluZztcbiAgICAgICAgICAgIGluc2VydChfZWwkMywgY3JlYXRlQ29tcG9uZW50KFRhbnN0YWNrTG9nbywge30pKTtcbiAgICAgICAgICAgIF9lbCQ0LiQkY2xpY2sgPSAoKSA9PiBwcm9wcy5zZXRMb2NhbFN0b3JlKFwib3BlblwiLCBcInRydWVcIik7XG4gICAgICAgICAgICBpbnNlcnQoX2VsJDQsIGNyZWF0ZUNvbXBvbmVudChUYW5zdGFja0xvZ28sIHt9KSk7XG4gICAgICAgICAgICBjcmVhdGVSZW5kZXJFZmZlY3QoKCkgPT4gY2xhc3NOYW1lKF9lbCQyLCBjbHN4KHN0eWxlcygpLmRldnRvb2xzQnRuLCBzdHlsZXMoKVtgZGV2dG9vbHNCdG4tcG9zaXRpb24tJHtidXR0b25Qb3NpdGlvbigpfWBdLCBcInRzcWQtb3Blbi1idG4tY29udGFpbmVyXCIpKSk7XG4gICAgICAgICAgICByZXR1cm4gX2VsJDI7XG4gICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9KSwgbnVsbCk7XG4gICAgY3JlYXRlUmVuZGVyRWZmZWN0KCgpID0+IGNsYXNzTmFtZShfZWwkLCBjbHN4KGNzc2BcbiAgICAgICAgICAgICYgLnRzcWQtcGFuZWwtdHJhbnNpdGlvbi1leGl0LWFjdGl2ZSxcbiAgICAgICAgICAgICYgLnRzcWQtcGFuZWwtdHJhbnNpdGlvbi1lbnRlci1hY3RpdmUge1xuICAgICAgICAgICAgICB0cmFuc2l0aW9uOlxuICAgICAgICAgICAgICAgIG9wYWNpdHkgMC4zcyxcbiAgICAgICAgICAgICAgICB0cmFuc2Zvcm0gMC4zcztcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgJiAudHNxZC1wYW5lbC10cmFuc2l0aW9uLWV4aXQtdG8sXG4gICAgICAgICAgICAmIC50c3FkLXBhbmVsLXRyYW5zaXRpb24tZW50ZXIge1xuICAgICAgICAgICAgICAke3Bvc2l0aW9uKCkgPT09IFwidG9wXCIgfHwgcG9zaXRpb24oKSA9PT0gXCJib3R0b21cIiA/IGB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkodmFyKC0tdHNxZC1wYW5lbC1oZWlnaHQpKTtgIDogYHRyYW5zZm9ybTogdHJhbnNsYXRlWCh2YXIoLS10c3FkLXBhbmVsLXdpZHRoKSk7YH1cbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgJiAudHNxZC1idXR0b24tdHJhbnNpdGlvbi1leGl0LWFjdGl2ZSxcbiAgICAgICAgICAgICYgLnRzcWQtYnV0dG9uLXRyYW5zaXRpb24tZW50ZXItYWN0aXZlIHtcbiAgICAgICAgICAgICAgdHJhbnNpdGlvbjpcbiAgICAgICAgICAgICAgICBvcGFjaXR5IDAuM3MsXG4gICAgICAgICAgICAgICAgdHJhbnNmb3JtIDAuM3M7XG4gICAgICAgICAgICAgIG9wYWNpdHk6IDE7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICYgLnRzcWQtYnV0dG9uLXRyYW5zaXRpb24tZXhpdC10byxcbiAgICAgICAgICAgICYgLnRzcWQtYnV0dG9uLXRyYW5zaXRpb24tZW50ZXIge1xuICAgICAgICAgICAgICB0cmFuc2Zvcm06ICR7YnV0dG9uUG9zaXRpb24oKSA9PT0gXCJyZWxhdGl2ZVwiID8gYG5vbmU7YCA6IGJ1dHRvblBvc2l0aW9uKCkgPT09IFwidG9wLWxlZnRcIiA/IGB0cmFuc2xhdGVYKC03MnB4KTtgIDogYnV0dG9uUG9zaXRpb24oKSA9PT0gXCJ0b3AtcmlnaHRcIiA/IGB0cmFuc2xhdGVYKDcycHgpO2AgOiBgdHJhbnNsYXRlWSg3MnB4KTtgfTtcbiAgICAgICAgICAgICAgb3BhY2l0eTogMDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICBgLCBcInRzcWQtdHJhbnNpdGlvbnMtY29udGFpbmVyXCIpKSk7XG4gICAgcmV0dXJuIF9lbCQ7XG4gIH0pKCldO1xufTtcbnZhciBQaVBQYW5lbCA9IChwcm9wcykgPT4ge1xuICBjb25zdCBwaXAgPSB1c2VQaVBXaW5kb3coKTtcbiAgY29uc3QgdGhlbWUgPSB1c2VUaGVtZSgpO1xuICBjb25zdCBjc3MgPSB1c2VRdWVyeURldnRvb2xzQ29udGV4dCgpLnNoYWRvd0RPTVRhcmdldCA/IHUuYmluZCh7XG4gICAgdGFyZ2V0OiB1c2VRdWVyeURldnRvb2xzQ29udGV4dCgpLnNoYWRvd0RPTVRhcmdldFxuICB9KSA6IHU7XG4gIGNvbnN0IHN0eWxlcyA9IGNyZWF0ZU1lbW8oKCkgPT4ge1xuICAgIHJldHVybiB0aGVtZSgpID09PSBcImRhcmtcIiA/IGRhcmtTdHlsZXMyKGNzcykgOiBsaWdodFN0eWxlczIoY3NzKTtcbiAgfSk7XG4gIGNvbnN0IGdldFBhbmVsRHluYW1pY1N0eWxlcyA9ICgpID0+IHtcbiAgICBjb25zdCB7XG4gICAgICBjb2xvcnNcbiAgICB9ID0gdG9rZW5zO1xuICAgIGNvbnN0IHQyID0gKGxpZ2h0LCBkYXJrKSA9PiB0aGVtZSgpID09PSBcImRhcmtcIiA/IGRhcmsgOiBsaWdodDtcbiAgICBpZiAocGFuZWxXaWR0aCgpIDwgc2Vjb25kQnJlYWtwb2ludCkge1xuICAgICAgcmV0dXJuIGNzc2BcbiAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHt0Mihjb2xvcnMuZ3JheVszMDBdLCBjb2xvcnMuZ3JheVs2MDBdKX07XG4gICAgICBgO1xuICAgIH1cbiAgICByZXR1cm4gY3NzYFxuICAgICAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICR7dDIoY29sb3JzLmdyYXlbMjAwXSwgY29sb3JzLmRhcmtHcmF5WzkwMF0pfTtcbiAgICBgO1xuICB9O1xuICBjcmVhdGVFZmZlY3QoKCkgPT4ge1xuICAgIGNvbnN0IHdpbiA9IHBpcCgpLnBpcFdpbmRvdztcbiAgICBjb25zdCByZXNpemVDQiA9ICgpID0+IHtcbiAgICAgIGlmICghd2luKVxuICAgICAgICByZXR1cm47XG4gICAgICBzZXRQYW5lbFdpZHRoKHdpbi5pbm5lcldpZHRoKTtcbiAgICB9O1xuICAgIGlmICh3aW4pIHtcbiAgICAgIHdpbi5hZGRFdmVudExpc3RlbmVyKFwicmVzaXplXCIsIHJlc2l6ZUNCKTtcbiAgICAgIHJlc2l6ZUNCKCk7XG4gICAgfVxuICAgIG9uQ2xlYW51cCgoKSA9PiB7XG4gICAgICBpZiAod2luKSB7XG4gICAgICAgIHdpbi5yZW1vdmVFdmVudExpc3RlbmVyKFwicmVzaXplXCIsIHJlc2l6ZUNCKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfSk7XG4gIHJldHVybiAoKCkgPT4ge1xuICAgIGNvbnN0IF9lbCQ1ID0gX3RtcGwkMjYoKTtcbiAgICBfZWwkNS5zdHlsZS5zZXRQcm9wZXJ0eShcIi0tdHNxZC1mb250LXNpemVcIiwgXCIxNnB4XCIpO1xuICAgIF9lbCQ1LnN0eWxlLnNldFByb3BlcnR5KFwibWF4LWhlaWdodFwiLCBcIjEwMHZoXCIpO1xuICAgIF9lbCQ1LnN0eWxlLnNldFByb3BlcnR5KFwiaGVpZ2h0XCIsIFwiMTAwdmhcIik7XG4gICAgX2VsJDUuc3R5bGUuc2V0UHJvcGVydHkoXCJ3aWR0aFwiLCBcIjEwMHZ3XCIpO1xuICAgIGluc2VydChfZWwkNSwgKCkgPT4gcHJvcHMuY2hpbGRyZW4pO1xuICAgIGNyZWF0ZVJlbmRlckVmZmVjdCgoKSA9PiBjbGFzc05hbWUoX2VsJDUsIGNsc3goc3R5bGVzKCkucGFuZWwsIGdldFBhbmVsRHluYW1pY1N0eWxlcygpLCB7XG4gICAgICBbY3NzYFxuICAgICAgICAgICAgbWluLXdpZHRoOiBtaW4tY29udGVudDtcbiAgICAgICAgICBgXTogcGFuZWxXaWR0aCgpIDwgdGhpcmRCcmVha3BvaW50XG4gICAgfSwgXCJ0c3FkLW1haW4tcGFuZWxcIikpKTtcbiAgICByZXR1cm4gX2VsJDU7XG4gIH0pKCk7XG59O1xudmFyIERldnRvb2xzUGFuZWwgPSAocHJvcHMpID0+IHtcbiAgY29uc3QgdGhlbWUgPSB1c2VUaGVtZSgpO1xuICBjb25zdCBjc3MgPSB1c2VRdWVyeURldnRvb2xzQ29udGV4dCgpLnNoYWRvd0RPTVRhcmdldCA/IHUuYmluZCh7XG4gICAgdGFyZ2V0OiB1c2VRdWVyeURldnRvb2xzQ29udGV4dCgpLnNoYWRvd0RPTVRhcmdldFxuICB9KSA6IHU7XG4gIGNvbnN0IHN0eWxlcyA9IGNyZWF0ZU1lbW8oKCkgPT4ge1xuICAgIHJldHVybiB0aGVtZSgpID09PSBcImRhcmtcIiA/IGRhcmtTdHlsZXMyKGNzcykgOiBsaWdodFN0eWxlczIoY3NzKTtcbiAgfSk7XG4gIGNvbnN0IFtpc1Jlc2l6aW5nLCBzZXRJc1Jlc2l6aW5nXSA9IGNyZWF0ZVNpZ25hbChmYWxzZSk7XG4gIGNvbnN0IHBvc2l0aW9uID0gY3JlYXRlTWVtbygoKSA9PiBwcm9wcy5sb2NhbFN0b3JlLnBvc2l0aW9uIHx8IHVzZVF1ZXJ5RGV2dG9vbHNDb250ZXh0KCkucG9zaXRpb24gfHwgUE9TSVRJT04pO1xuICBjb25zdCBoYW5kbGVEcmFnU3RhcnQgPSAoZXZlbnQpID0+IHtcbiAgICBjb25zdCBwYW5lbEVsZW1lbnQgPSBldmVudC5jdXJyZW50VGFyZ2V0LnBhcmVudEVsZW1lbnQ7XG4gICAgaWYgKCFwYW5lbEVsZW1lbnQpXG4gICAgICByZXR1cm47XG4gICAgc2V0SXNSZXNpemluZyh0cnVlKTtcbiAgICBjb25zdCB7XG4gICAgICBoZWlnaHQsXG4gICAgICB3aWR0aFxuICAgIH0gPSBwYW5lbEVsZW1lbnQuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XG4gICAgY29uc3Qgc3RhcnRYID0gZXZlbnQuY2xpZW50WDtcbiAgICBjb25zdCBzdGFydFkgPSBldmVudC5jbGllbnRZO1xuICAgIGxldCBuZXdTaXplID0gMDtcbiAgICBjb25zdCBtaW5IZWlnaHQgPSBjb252ZXJ0UmVtVG9QaXhlbHMoMy41KTtcbiAgICBjb25zdCBtaW5XaWR0aCA9IGNvbnZlcnRSZW1Ub1BpeGVscygxMik7XG4gICAgY29uc3QgcnVuRHJhZyA9IChtb3ZlRXZlbnQpID0+IHtcbiAgICAgIG1vdmVFdmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgaWYgKHBvc2l0aW9uKCkgPT09IFwibGVmdFwiIHx8IHBvc2l0aW9uKCkgPT09IFwicmlnaHRcIikge1xuICAgICAgICBjb25zdCB2YWxUb0FkZCA9IHBvc2l0aW9uKCkgPT09IFwicmlnaHRcIiA/IHN0YXJ0WCAtIG1vdmVFdmVudC5jbGllbnRYIDogbW92ZUV2ZW50LmNsaWVudFggLSBzdGFydFg7XG4gICAgICAgIG5ld1NpemUgPSBNYXRoLnJvdW5kKHdpZHRoICsgdmFsVG9BZGQpO1xuICAgICAgICBpZiAobmV3U2l6ZSA8IG1pbldpZHRoKSB7XG4gICAgICAgICAgbmV3U2l6ZSA9IG1pbldpZHRoO1xuICAgICAgICB9XG4gICAgICAgIHByb3BzLnNldExvY2FsU3RvcmUoXCJ3aWR0aFwiLCBTdHJpbmcoTWF0aC5yb3VuZChuZXdTaXplKSkpO1xuICAgICAgICBjb25zdCBuZXdXaWR0aCA9IHBhbmVsRWxlbWVudC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKS53aWR0aDtcbiAgICAgICAgaWYgKE51bWJlcihwcm9wcy5sb2NhbFN0b3JlLndpZHRoKSA8IG5ld1dpZHRoKSB7XG4gICAgICAgICAgcHJvcHMuc2V0TG9jYWxTdG9yZShcIndpZHRoXCIsIFN0cmluZyhuZXdXaWR0aCkpO1xuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBjb25zdCB2YWxUb0FkZCA9IHBvc2l0aW9uKCkgPT09IFwiYm90dG9tXCIgPyBzdGFydFkgLSBtb3ZlRXZlbnQuY2xpZW50WSA6IG1vdmVFdmVudC5jbGllbnRZIC0gc3RhcnRZO1xuICAgICAgICBuZXdTaXplID0gTWF0aC5yb3VuZChoZWlnaHQgKyB2YWxUb0FkZCk7XG4gICAgICAgIGlmIChuZXdTaXplIDwgbWluSGVpZ2h0KSB7XG4gICAgICAgICAgbmV3U2l6ZSA9IG1pbkhlaWdodDtcbiAgICAgICAgICBzZXRTZWxlY3RlZFF1ZXJ5SGFzaChudWxsKTtcbiAgICAgICAgfVxuICAgICAgICBwcm9wcy5zZXRMb2NhbFN0b3JlKFwiaGVpZ2h0XCIsIFN0cmluZyhNYXRoLnJvdW5kKG5ld1NpemUpKSk7XG4gICAgICB9XG4gICAgfTtcbiAgICBjb25zdCB1bnN1YnNjcmliZSA9ICgpID0+IHtcbiAgICAgIGlmIChpc1Jlc2l6aW5nKCkpIHtcbiAgICAgICAgc2V0SXNSZXNpemluZyhmYWxzZSk7XG4gICAgICB9XG4gICAgICBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKFwibW91c2Vtb3ZlXCIsIHJ1bkRyYWcsIGZhbHNlKTtcbiAgICAgIGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJtb3VzZVVwXCIsIHVuc3Vic2NyaWJlLCBmYWxzZSk7XG4gICAgfTtcbiAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwibW91c2Vtb3ZlXCIsIHJ1bkRyYWcsIGZhbHNlKTtcbiAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwibW91c2V1cFwiLCB1bnN1YnNjcmliZSwgZmFsc2UpO1xuICB9O1xuICBsZXQgcGFuZWxSZWY7XG4gIG9uTW91bnQoKCkgPT4ge1xuICAgIGNyZWF0ZVJlc2l6ZU9ic2VydmVyKHBhbmVsUmVmLCAoe1xuICAgICAgd2lkdGhcbiAgICB9LCBlbCkgPT4ge1xuICAgICAgaWYgKGVsID09PSBwYW5lbFJlZikge1xuICAgICAgICBzZXRQYW5lbFdpZHRoKHdpZHRoKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfSk7XG4gIGNyZWF0ZUVmZmVjdCgoKSA9PiB7XG4gICAgY29uc3Qgcm9vdENvbnRhaW5lciA9IHBhbmVsUmVmLnBhcmVudEVsZW1lbnQ/LnBhcmVudEVsZW1lbnQ/LnBhcmVudEVsZW1lbnQ7XG4gICAgaWYgKCFyb290Q29udGFpbmVyKVxuICAgICAgcmV0dXJuO1xuICAgIGNvbnN0IGN1cnJlbnRQb3NpdGlvbiA9IHByb3BzLmxvY2FsU3RvcmUucG9zaXRpb24gfHwgUE9TSVRJT047XG4gICAgY29uc3Qgc3R5bGVQcm9wID0gZ2V0U2lkZWRQcm9wKFwicGFkZGluZ1wiLCBjdXJyZW50UG9zaXRpb24pO1xuICAgIGNvbnN0IGlzVmVydGljYWwgPSBwcm9wcy5sb2NhbFN0b3JlLnBvc2l0aW9uID09PSBcImxlZnRcIiB8fCBwcm9wcy5sb2NhbFN0b3JlLnBvc2l0aW9uID09PSBcInJpZ2h0XCI7XG4gICAgY29uc3QgcHJldmlvdXNQYWRkaW5ncyA9ICgoe1xuICAgICAgcGFkZGluZyxcbiAgICAgIHBhZGRpbmdUb3AsXG4gICAgICBwYWRkaW5nQm90dG9tLFxuICAgICAgcGFkZGluZ0xlZnQsXG4gICAgICBwYWRkaW5nUmlnaHRcbiAgICB9KSA9PiAoe1xuICAgICAgcGFkZGluZyxcbiAgICAgIHBhZGRpbmdUb3AsXG4gICAgICBwYWRkaW5nQm90dG9tLFxuICAgICAgcGFkZGluZ0xlZnQsXG4gICAgICBwYWRkaW5nUmlnaHRcbiAgICB9KSkocm9vdENvbnRhaW5lci5zdHlsZSk7XG4gICAgcm9vdENvbnRhaW5lci5zdHlsZVtzdHlsZVByb3BdID0gYCR7aXNWZXJ0aWNhbCA/IHByb3BzLmxvY2FsU3RvcmUud2lkdGggOiBwcm9wcy5sb2NhbFN0b3JlLmhlaWdodH1weGA7XG4gICAgb25DbGVhbnVwKCgpID0+IHtcbiAgICAgIE9iamVjdC5lbnRyaWVzKHByZXZpb3VzUGFkZGluZ3MpLmZvckVhY2goKFtwcm9wZXJ0eSwgcHJldmlvdXNWYWx1ZV0pID0+IHtcbiAgICAgICAgcm9vdENvbnRhaW5lci5zdHlsZVtwcm9wZXJ0eV0gPSBwcmV2aW91c1ZhbHVlO1xuICAgICAgfSk7XG4gICAgfSk7XG4gIH0pO1xuICBjb25zdCBnZXRQYW5lbER5bmFtaWNTdHlsZXMgPSAoKSA9PiB7XG4gICAgY29uc3Qge1xuICAgICAgY29sb3JzXG4gICAgfSA9IHRva2VucztcbiAgICBjb25zdCB0MiA9IChsaWdodCwgZGFyaykgPT4gdGhlbWUoKSA9PT0gXCJkYXJrXCIgPyBkYXJrIDogbGlnaHQ7XG4gICAgaWYgKHBhbmVsV2lkdGgoKSA8IHNlY29uZEJyZWFrcG9pbnQpIHtcbiAgICAgIHJldHVybiBjc3NgXG4gICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICR7dDIoY29sb3JzLmdyYXlbMzAwXSwgY29sb3JzLmdyYXlbNjAwXSl9O1xuICAgICAgYDtcbiAgICB9XG4gICAgcmV0dXJuIGNzc2BcbiAgICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke3QyKGNvbG9ycy5ncmF5WzIwMF0sIGNvbG9ycy5kYXJrR3JheVs5MDBdKX07XG4gICAgYDtcbiAgfTtcbiAgcmV0dXJuICgoKSA9PiB7XG4gICAgY29uc3QgX2VsJDYgPSBfdG1wbCQzMygpLCBfZWwkNyA9IF9lbCQ2LmZpcnN0Q2hpbGQsIF9lbCQ4ID0gX2VsJDcubmV4dFNpYmxpbmc7XG4gICAgY29uc3QgX3JlZiQyID0gcGFuZWxSZWY7XG4gICAgdHlwZW9mIF9yZWYkMiA9PT0gXCJmdW5jdGlvblwiID8gdXNlKF9yZWYkMiwgX2VsJDYpIDogcGFuZWxSZWYgPSBfZWwkNjtcbiAgICBfZWwkNy4kJG1vdXNlZG93biA9IGhhbmRsZURyYWdTdGFydDtcbiAgICBfZWwkOC4kJGNsaWNrID0gKCkgPT4gcHJvcHMuc2V0TG9jYWxTdG9yZShcIm9wZW5cIiwgXCJmYWxzZVwiKTtcbiAgICBpbnNlcnQoX2VsJDgsIGNyZWF0ZUNvbXBvbmVudChDaGV2cm9uRG93biwge30pKTtcbiAgICBpbnNlcnQoX2VsJDYsIGNyZWF0ZUNvbXBvbmVudChDb250ZW50Vmlldywge1xuICAgICAgZ2V0IGxvY2FsU3RvcmUoKSB7XG4gICAgICAgIHJldHVybiBwcm9wcy5sb2NhbFN0b3JlO1xuICAgICAgfSxcbiAgICAgIGdldCBzZXRMb2NhbFN0b3JlKCkge1xuICAgICAgICByZXR1cm4gcHJvcHMuc2V0TG9jYWxTdG9yZTtcbiAgICAgIH1cbiAgICB9KSwgbnVsbCk7XG4gICAgY3JlYXRlUmVuZGVyRWZmZWN0KChfcCQpID0+IHtcbiAgICAgIGNvbnN0IF92JCA9IGNsc3goc3R5bGVzKCkucGFuZWwsIHN0eWxlcygpW2BwYW5lbC1wb3NpdGlvbi0ke3Bvc2l0aW9uKCl9YF0sIGdldFBhbmVsRHluYW1pY1N0eWxlcygpLCB7XG4gICAgICAgIFtjc3NgXG4gICAgICAgICAgICBtaW4td2lkdGg6IG1pbi1jb250ZW50O1xuICAgICAgICAgIGBdOiBwYW5lbFdpZHRoKCkgPCB0aGlyZEJyZWFrcG9pbnQgJiYgKHBvc2l0aW9uKCkgPT09IFwicmlnaHRcIiB8fCBwb3NpdGlvbigpID09PSBcImxlZnRcIilcbiAgICAgIH0sIFwidHNxZC1tYWluLXBhbmVsXCIpLCBfdiQyID0gcG9zaXRpb24oKSA9PT0gXCJib3R0b21cIiB8fCBwb3NpdGlvbigpID09PSBcInRvcFwiID8gYCR7cHJvcHMubG9jYWxTdG9yZS5oZWlnaHQgfHwgREVGQVVMVF9IRUlHSFR9cHhgIDogXCJhdXRvXCIsIF92JDMgPSBwb3NpdGlvbigpID09PSBcInJpZ2h0XCIgfHwgcG9zaXRpb24oKSA9PT0gXCJsZWZ0XCIgPyBgJHtwcm9wcy5sb2NhbFN0b3JlLndpZHRoIHx8IERFRkFVTFRfV0lEVEh9cHhgIDogXCJhdXRvXCIsIF92JDQgPSBjbHN4KHN0eWxlcygpLmRyYWdIYW5kbGUsIHN0eWxlcygpW2BkcmFnSGFuZGxlLXBvc2l0aW9uLSR7cG9zaXRpb24oKX1gXSwgXCJ0c3FkLWRyYWctaGFuZGxlXCIpLCBfdiQ1ID0gY2xzeChzdHlsZXMoKS5jbG9zZUJ0biwgc3R5bGVzKClbYGNsb3NlQnRuLXBvc2l0aW9uLSR7cG9zaXRpb24oKX1gXSwgXCJ0c3FkLW1pbmltaXplLWJ0blwiKTtcbiAgICAgIF92JCAhPT0gX3AkLl92JCAmJiBjbGFzc05hbWUoX2VsJDYsIF9wJC5fdiQgPSBfdiQpO1xuICAgICAgX3YkMiAhPT0gX3AkLl92JDIgJiYgKChfcCQuX3YkMiA9IF92JDIpICE9IG51bGwgPyBfZWwkNi5zdHlsZS5zZXRQcm9wZXJ0eShcImhlaWdodFwiLCBfdiQyKSA6IF9lbCQ2LnN0eWxlLnJlbW92ZVByb3BlcnR5KFwiaGVpZ2h0XCIpKTtcbiAgICAgIF92JDMgIT09IF9wJC5fdiQzICYmICgoX3AkLl92JDMgPSBfdiQzKSAhPSBudWxsID8gX2VsJDYuc3R5bGUuc2V0UHJvcGVydHkoXCJ3aWR0aFwiLCBfdiQzKSA6IF9lbCQ2LnN0eWxlLnJlbW92ZVByb3BlcnR5KFwid2lkdGhcIikpO1xuICAgICAgX3YkNCAhPT0gX3AkLl92JDQgJiYgY2xhc3NOYW1lKF9lbCQ3LCBfcCQuX3YkNCA9IF92JDQpO1xuICAgICAgX3YkNSAhPT0gX3AkLl92JDUgJiYgY2xhc3NOYW1lKF9lbCQ4LCBfcCQuX3YkNSA9IF92JDUpO1xuICAgICAgcmV0dXJuIF9wJDtcbiAgICB9LCB7XG4gICAgICBfdiQ6IHZvaWQgMCxcbiAgICAgIF92JDI6IHZvaWQgMCxcbiAgICAgIF92JDM6IHZvaWQgMCxcbiAgICAgIF92JDQ6IHZvaWQgMCxcbiAgICAgIF92JDU6IHZvaWQgMFxuICAgIH0pO1xuICAgIHJldHVybiBfZWwkNjtcbiAgfSkoKTtcbn07XG52YXIgQ29udGVudFZpZXcgPSAocHJvcHMpID0+IHtcbiAgc2V0dXBRdWVyeUNhY2hlU3Vic2NyaXB0aW9uKCk7XG4gIHNldHVwTXV0YXRpb25DYWNoZVN1YnNjcmlwdGlvbigpO1xuICBsZXQgY29udGFpbmVyUmVmO1xuICBjb25zdCB0aGVtZSA9IHVzZVRoZW1lKCk7XG4gIGNvbnN0IGNzcyA9IHVzZVF1ZXJ5RGV2dG9vbHNDb250ZXh0KCkuc2hhZG93RE9NVGFyZ2V0ID8gdS5iaW5kKHtcbiAgICB0YXJnZXQ6IHVzZVF1ZXJ5RGV2dG9vbHNDb250ZXh0KCkuc2hhZG93RE9NVGFyZ2V0XG4gIH0pIDogdTtcbiAgY29uc3Qgc3R5bGVzID0gY3JlYXRlTWVtbygoKSA9PiB7XG4gICAgcmV0dXJuIHRoZW1lKCkgPT09IFwiZGFya1wiID8gZGFya1N0eWxlczIoY3NzKSA6IGxpZ2h0U3R5bGVzMihjc3MpO1xuICB9KTtcbiAgY29uc3QgcGlwID0gdXNlUGlQV2luZG93KCk7XG4gIGNvbnN0IFtzZWxlY3RlZFZpZXcsIHNldFNlbGVjdGVkVmlld10gPSBjcmVhdGVTaWduYWwoXCJxdWVyaWVzXCIpO1xuICBjb25zdCBzb3J0ID0gY3JlYXRlTWVtbygoKSA9PiBwcm9wcy5sb2NhbFN0b3JlLnNvcnQgfHwgREVGQVVMVF9TT1JUX0ZOX05BTUUpO1xuICBjb25zdCBzb3J0T3JkZXIgPSBjcmVhdGVNZW1vKCgpID0+IE51bWJlcihwcm9wcy5sb2NhbFN0b3JlLnNvcnRPcmRlcikgfHwgREVGQVVMVF9TT1JUX09SREVSKTtcbiAgY29uc3QgbXV0YXRpb25Tb3J0ID0gY3JlYXRlTWVtbygoKSA9PiBwcm9wcy5sb2NhbFN0b3JlLm11dGF0aW9uU29ydCB8fCBERUZBVUxUX01VVEFUSU9OX1NPUlRfRk5fTkFNRSk7XG4gIGNvbnN0IG11dGF0aW9uU29ydE9yZGVyID0gY3JlYXRlTWVtbygoKSA9PiBOdW1iZXIocHJvcHMubG9jYWxTdG9yZS5tdXRhdGlvblNvcnRPcmRlcikgfHwgREVGQVVMVF9TT1JUX09SREVSKTtcbiAgY29uc3Qgc29ydEZuID0gY3JlYXRlTWVtbygoKSA9PiBzb3J0Rm5zW3NvcnQoKV0pO1xuICBjb25zdCBtdXRhdGlvblNvcnRGbiA9IGNyZWF0ZU1lbW8oKCkgPT4gbXV0YXRpb25Tb3J0Rm5zW211dGF0aW9uU29ydCgpXSk7XG4gIGNvbnN0IG9ubGluZU1hbmFnZXIgPSBjcmVhdGVNZW1vKCgpID0+IHVzZVF1ZXJ5RGV2dG9vbHNDb250ZXh0KCkub25saW5lTWFuYWdlcik7XG4gIGNvbnN0IHF1ZXJ5X2NhY2hlID0gY3JlYXRlTWVtbygoKSA9PiB7XG4gICAgcmV0dXJuIHVzZVF1ZXJ5RGV2dG9vbHNDb250ZXh0KCkuY2xpZW50LmdldFF1ZXJ5Q2FjaGUoKTtcbiAgfSk7XG4gIGNvbnN0IG11dGF0aW9uX2NhY2hlID0gY3JlYXRlTWVtbygoKSA9PiB7XG4gICAgcmV0dXJuIHVzZVF1ZXJ5RGV2dG9vbHNDb250ZXh0KCkuY2xpZW50LmdldE11dGF0aW9uQ2FjaGUoKTtcbiAgfSk7XG4gIGNvbnN0IHF1ZXJ5Q291bnQgPSBjcmVhdGVTdWJzY3JpYmVUb1F1ZXJ5Q2FjaGVCYXRjaGVyKChxdWVyeUNhY2hlKSA9PiB7XG4gICAgcmV0dXJuIHF1ZXJ5Q2FjaGUoKS5nZXRBbGwoKS5sZW5ndGg7XG4gIH0sIGZhbHNlKTtcbiAgY29uc3QgcXVlcmllcyA9IGNyZWF0ZU1lbW8ob24oKCkgPT4gW3F1ZXJ5Q291bnQoKSwgcHJvcHMubG9jYWxTdG9yZS5maWx0ZXIsIHNvcnQoKSwgc29ydE9yZGVyKCldLCAoKSA9PiB7XG4gICAgY29uc3QgY3VyciA9IHF1ZXJ5X2NhY2hlKCkuZ2V0QWxsKCk7XG4gICAgY29uc3QgZmlsdGVyZWQgPSBwcm9wcy5sb2NhbFN0b3JlLmZpbHRlciA/IGN1cnIuZmlsdGVyKChpdGVtKSA9PiByYW5rSXRlbShpdGVtLnF1ZXJ5SGFzaCwgcHJvcHMubG9jYWxTdG9yZS5maWx0ZXIgfHwgXCJcIikucGFzc2VkKSA6IFsuLi5jdXJyXTtcbiAgICBjb25zdCBzb3J0ZWQgPSBzb3J0Rm4oKSA/IGZpbHRlcmVkLnNvcnQoKGEyLCBiMikgPT4gc29ydEZuKCkoYTIsIGIyKSAqIHNvcnRPcmRlcigpKSA6IGZpbHRlcmVkO1xuICAgIHJldHVybiBzb3J0ZWQ7XG4gIH0pKTtcbiAgY29uc3QgbXV0YXRpb25Db3VudCA9IGNyZWF0ZVN1YnNjcmliZVRvTXV0YXRpb25DYWNoZUJhdGNoZXIoKG11dGF0aW9uQ2FjaGUpID0+IHtcbiAgICByZXR1cm4gbXV0YXRpb25DYWNoZSgpLmdldEFsbCgpLmxlbmd0aDtcbiAgfSwgZmFsc2UpO1xuICBjb25zdCBtdXRhdGlvbnMgPSBjcmVhdGVNZW1vKG9uKCgpID0+IFttdXRhdGlvbkNvdW50KCksIHByb3BzLmxvY2FsU3RvcmUubXV0YXRpb25GaWx0ZXIsIG11dGF0aW9uU29ydCgpLCBtdXRhdGlvblNvcnRPcmRlcigpXSwgKCkgPT4ge1xuICAgIGNvbnN0IGN1cnIgPSBtdXRhdGlvbl9jYWNoZSgpLmdldEFsbCgpO1xuICAgIGNvbnN0IGZpbHRlcmVkID0gcHJvcHMubG9jYWxTdG9yZS5tdXRhdGlvbkZpbHRlciA/IGN1cnIuZmlsdGVyKChpdGVtKSA9PiB7XG4gICAgICBjb25zdCB2YWx1ZSA9IGAke2l0ZW0ub3B0aW9ucy5tdXRhdGlvbktleSA/IEpTT04uc3RyaW5naWZ5KGl0ZW0ub3B0aW9ucy5tdXRhdGlvbktleSkgKyBcIiAtIFwiIDogXCJcIn0ke25ldyBEYXRlKGl0ZW0uc3RhdGUuc3VibWl0dGVkQXQpLnRvTG9jYWxlU3RyaW5nKCl9YDtcbiAgICAgIHJldHVybiByYW5rSXRlbSh2YWx1ZSwgcHJvcHMubG9jYWxTdG9yZS5tdXRhdGlvbkZpbHRlciB8fCBcIlwiKS5wYXNzZWQ7XG4gICAgfSkgOiBbLi4uY3Vycl07XG4gICAgY29uc3Qgc29ydGVkID0gbXV0YXRpb25Tb3J0Rm4oKSA/IGZpbHRlcmVkLnNvcnQoKGEyLCBiMikgPT4gbXV0YXRpb25Tb3J0Rm4oKShhMiwgYjIpICogbXV0YXRpb25Tb3J0T3JkZXIoKSkgOiBmaWx0ZXJlZDtcbiAgICByZXR1cm4gc29ydGVkO1xuICB9KSk7XG4gIGNvbnN0IHNldERldnRvb2xzUG9zaXRpb24gPSAocG9zKSA9PiB7XG4gICAgcHJvcHMuc2V0TG9jYWxTdG9yZShcInBvc2l0aW9uXCIsIHBvcyk7XG4gIH07XG4gIGNvbnN0IHNldENvbXB1dGVkVmFyaWFibGVzID0gKGVsKSA9PiB7XG4gICAgY29uc3QgY29tcHV0ZWRTdHlsZSA9IGdldENvbXB1dGVkU3R5bGUoY29udGFpbmVyUmVmKTtcbiAgICBjb25zdCB2YXJpYWJsZSA9IGNvbXB1dGVkU3R5bGUuZ2V0UHJvcGVydHlWYWx1ZShcIi0tdHNxZC1mb250LXNpemVcIik7XG4gICAgZWwuc3R5bGUuc2V0UHJvcGVydHkoXCItLXRzcWQtZm9udC1zaXplXCIsIHZhcmlhYmxlKTtcbiAgfTtcbiAgcmV0dXJuIFsoKCkgPT4ge1xuICAgIGNvbnN0IF9lbCQ5ID0gX3RtcGwkMjEyKCksIF9lbCQxMCA9IF9lbCQ5LmZpcnN0Q2hpbGQsIF9lbCQxMSA9IF9lbCQxMC5maXJzdENoaWxkLCBfZWwkMTIgPSBfZWwkMTEuZmlyc3RDaGlsZCwgX2VsJDEzID0gX2VsJDEyLmZpcnN0Q2hpbGQsIF9lbCQxNCA9IF9lbCQxMy5uZXh0U2libGluZywgX2VsJDE1ID0gX2VsJDE0LmZpcnN0Q2hpbGQsIF9lbCQxNiA9IF9lbCQxMC5uZXh0U2libGluZywgX2VsJDE3ID0gX2VsJDE2LmZpcnN0Q2hpbGQsIF9lbCQxOCA9IF9lbCQxNy5maXJzdENoaWxkLCBfZWwkMTkgPSBfZWwkMTguZmlyc3RDaGlsZCwgX2VsJDIwID0gX2VsJDE4Lm5leHRTaWJsaW5nLCBfZWwkMjMgPSBfZWwkMjAubmV4dFNpYmxpbmcsIF9lbCQyNiA9IF9lbCQxNy5uZXh0U2libGluZywgX2VsJDI3ID0gX2VsJDI2LmZpcnN0Q2hpbGQsIF9lbCQyOCA9IF9lbCQyNy5uZXh0U2libGluZztcbiAgICBjb25zdCBfcmVmJDMgPSBjb250YWluZXJSZWY7XG4gICAgdHlwZW9mIF9yZWYkMyA9PT0gXCJmdW5jdGlvblwiID8gdXNlKF9yZWYkMywgX2VsJDkpIDogY29udGFpbmVyUmVmID0gX2VsJDk7XG4gICAgX2VsJDEyLiQkY2xpY2sgPSAoKSA9PiB7XG4gICAgICBpZiAoIXBpcCgpLnBpcFdpbmRvdykge1xuICAgICAgICBwcm9wcy5zZXRMb2NhbFN0b3JlKFwib3BlblwiLCBcImZhbHNlXCIpO1xuICAgICAgfVxuICAgIH07XG4gICAgaW5zZXJ0KF9lbCQxNCwgKCkgPT4gdXNlUXVlcnlEZXZ0b29sc0NvbnRleHQoKS5xdWVyeUZsYXZvciwgX2VsJDE1KTtcbiAgICBpbnNlcnQoX2VsJDE0LCAoKSA9PiB1c2VRdWVyeURldnRvb2xzQ29udGV4dCgpLnZlcnNpb24sIG51bGwpO1xuICAgIGluc2VydChfZWwkMTEsIGNyZWF0ZUNvbXBvbmVudChyYWRpb19ncm91cF9leHBvcnRzLlJvb3QsIHtcbiAgICAgIGdldCBbXCJjbGFzc1wiXSgpIHtcbiAgICAgICAgcmV0dXJuIGNsc3goc3R5bGVzKCkudmlld1RvZ2dsZSk7XG4gICAgICB9LFxuICAgICAgZ2V0IHZhbHVlKCkge1xuICAgICAgICByZXR1cm4gc2VsZWN0ZWRWaWV3KCk7XG4gICAgICB9LFxuICAgICAgb25DaGFuZ2U6ICh2YWx1ZSkgPT4ge1xuICAgICAgICBzZXRTZWxlY3RlZFZpZXcodmFsdWUpO1xuICAgICAgICBzZXRTZWxlY3RlZFF1ZXJ5SGFzaChudWxsKTtcbiAgICAgICAgc2V0U2VsZWN0ZWRNdXRhdGlvbklkKG51bGwpO1xuICAgICAgfSxcbiAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgcmV0dXJuIFtjcmVhdGVDb21wb25lbnQocmFkaW9fZ3JvdXBfZXhwb3J0cy5JdGVtLCB7XG4gICAgICAgICAgdmFsdWU6IFwicXVlcmllc1wiLFxuICAgICAgICAgIFwiY2xhc3NcIjogXCJ0c3FkLXJhZGlvLXRvZ2dsZVwiLFxuICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgIHJldHVybiBbY3JlYXRlQ29tcG9uZW50KHJhZGlvX2dyb3VwX2V4cG9ydHMuSXRlbUlucHV0LCB7fSksIGNyZWF0ZUNvbXBvbmVudChyYWRpb19ncm91cF9leHBvcnRzLkl0ZW1Db250cm9sLCB7XG4gICAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KHJhZGlvX2dyb3VwX2V4cG9ydHMuSXRlbUluZGljYXRvciwge30pO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KSwgY3JlYXRlQ29tcG9uZW50KHJhZGlvX2dyb3VwX2V4cG9ydHMuSXRlbUxhYmVsLCB7XG4gICAgICAgICAgICAgIHRpdGxlOiBcIlRvZ2dsZSBRdWVyaWVzIFZpZXdcIixcbiAgICAgICAgICAgICAgY2hpbGRyZW46IFwiUXVlcmllc1wiXG4gICAgICAgICAgICB9KV07XG4gICAgICAgICAgfVxuICAgICAgICB9KSwgY3JlYXRlQ29tcG9uZW50KHJhZGlvX2dyb3VwX2V4cG9ydHMuSXRlbSwge1xuICAgICAgICAgIHZhbHVlOiBcIm11dGF0aW9uc1wiLFxuICAgICAgICAgIFwiY2xhc3NcIjogXCJ0c3FkLXJhZGlvLXRvZ2dsZVwiLFxuICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgIHJldHVybiBbY3JlYXRlQ29tcG9uZW50KHJhZGlvX2dyb3VwX2V4cG9ydHMuSXRlbUlucHV0LCB7fSksIGNyZWF0ZUNvbXBvbmVudChyYWRpb19ncm91cF9leHBvcnRzLkl0ZW1Db250cm9sLCB7XG4gICAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KHJhZGlvX2dyb3VwX2V4cG9ydHMuSXRlbUluZGljYXRvciwge30pO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KSwgY3JlYXRlQ29tcG9uZW50KHJhZGlvX2dyb3VwX2V4cG9ydHMuSXRlbUxhYmVsLCB7XG4gICAgICAgICAgICAgIHRpdGxlOiBcIlRvZ2dsZSBNdXRhdGlvbnMgVmlld1wiLFxuICAgICAgICAgICAgICBjaGlsZHJlbjogXCJNdXRhdGlvbnNcIlxuICAgICAgICAgICAgfSldO1xuICAgICAgICAgIH1cbiAgICAgICAgfSldO1xuICAgICAgfVxuICAgIH0pLCBudWxsKTtcbiAgICBpbnNlcnQoX2VsJDEwLCBjcmVhdGVDb21wb25lbnQoU2hvdywge1xuICAgICAgZ2V0IHdoZW4oKSB7XG4gICAgICAgIHJldHVybiBzZWxlY3RlZFZpZXcoKSA9PT0gXCJxdWVyaWVzXCI7XG4gICAgICB9LFxuICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KFF1ZXJ5U3RhdHVzQ291bnQsIHt9KTtcbiAgICAgIH1cbiAgICB9KSwgbnVsbCk7XG4gICAgaW5zZXJ0KF9lbCQxMCwgY3JlYXRlQ29tcG9uZW50KFNob3csIHtcbiAgICAgIGdldCB3aGVuKCkge1xuICAgICAgICByZXR1cm4gc2VsZWN0ZWRWaWV3KCkgPT09IFwibXV0YXRpb25zXCI7XG4gICAgICB9LFxuICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KE11dGF0aW9uU3RhdHVzQ291bnQsIHt9KTtcbiAgICAgIH1cbiAgICB9KSwgbnVsbCk7XG4gICAgaW5zZXJ0KF9lbCQxOCwgY3JlYXRlQ29tcG9uZW50KFNlYXJjaCwge30pLCBfZWwkMTkpO1xuICAgIF9lbCQxOS4kJGlucHV0ID0gKGUyKSA9PiB7XG4gICAgICBpZiAoc2VsZWN0ZWRWaWV3KCkgPT09IFwicXVlcmllc1wiKSB7XG4gICAgICAgIHByb3BzLnNldExvY2FsU3RvcmUoXCJmaWx0ZXJcIiwgZTIuY3VycmVudFRhcmdldC52YWx1ZSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBwcm9wcy5zZXRMb2NhbFN0b3JlKFwibXV0YXRpb25GaWx0ZXJcIiwgZTIuY3VycmVudFRhcmdldC52YWx1ZSk7XG4gICAgICB9XG4gICAgfTtcbiAgICBpbnNlcnQoX2VsJDIwLCBjcmVhdGVDb21wb25lbnQoU2hvdywge1xuICAgICAgZ2V0IHdoZW4oKSB7XG4gICAgICAgIHJldHVybiBzZWxlY3RlZFZpZXcoKSA9PT0gXCJxdWVyaWVzXCI7XG4gICAgICB9LFxuICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICBjb25zdCBfZWwkMjEgPSBfdG1wbCQ0MygpO1xuICAgICAgICBfZWwkMjEuYWRkRXZlbnRMaXN0ZW5lcihcImNoYW5nZVwiLCAoZTIpID0+IHtcbiAgICAgICAgICBwcm9wcy5zZXRMb2NhbFN0b3JlKFwic29ydFwiLCBlMi5jdXJyZW50VGFyZ2V0LnZhbHVlKTtcbiAgICAgICAgfSk7XG4gICAgICAgIGluc2VydChfZWwkMjEsICgpID0+IE9iamVjdC5rZXlzKHNvcnRGbnMpLm1hcCgoa2V5KSA9PiAoKCkgPT4ge1xuICAgICAgICAgIGNvbnN0IF9lbCQ0NCA9IF90bXBsJDIyMygpOyBfZWwkNDQuZmlyc3RDaGlsZDtcbiAgICAgICAgICBfZWwkNDQudmFsdWUgPSBrZXk7XG4gICAgICAgICAgaW5zZXJ0KF9lbCQ0NCwga2V5LCBudWxsKTtcbiAgICAgICAgICByZXR1cm4gX2VsJDQ0O1xuICAgICAgICB9KSgpKSk7XG4gICAgICAgIGNyZWF0ZVJlbmRlckVmZmVjdCgoKSA9PiBfZWwkMjEudmFsdWUgPSBzb3J0KCkpO1xuICAgICAgICByZXR1cm4gX2VsJDIxO1xuICAgICAgfVxuICAgIH0pLCBudWxsKTtcbiAgICBpbnNlcnQoX2VsJDIwLCBjcmVhdGVDb21wb25lbnQoU2hvdywge1xuICAgICAgZ2V0IHdoZW4oKSB7XG4gICAgICAgIHJldHVybiBzZWxlY3RlZFZpZXcoKSA9PT0gXCJtdXRhdGlvbnNcIjtcbiAgICAgIH0sXG4gICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgIGNvbnN0IF9lbCQyMiA9IF90bXBsJDUzKCk7XG4gICAgICAgIF9lbCQyMi5hZGRFdmVudExpc3RlbmVyKFwiY2hhbmdlXCIsIChlMikgPT4ge1xuICAgICAgICAgIHByb3BzLnNldExvY2FsU3RvcmUoXCJtdXRhdGlvblNvcnRcIiwgZTIuY3VycmVudFRhcmdldC52YWx1ZSk7XG4gICAgICAgIH0pO1xuICAgICAgICBpbnNlcnQoX2VsJDIyLCAoKSA9PiBPYmplY3Qua2V5cyhtdXRhdGlvblNvcnRGbnMpLm1hcCgoa2V5KSA9PiAoKCkgPT4ge1xuICAgICAgICAgIGNvbnN0IF9lbCQ0NiA9IF90bXBsJDIyMygpOyBfZWwkNDYuZmlyc3RDaGlsZDtcbiAgICAgICAgICBfZWwkNDYudmFsdWUgPSBrZXk7XG4gICAgICAgICAgaW5zZXJ0KF9lbCQ0Niwga2V5LCBudWxsKTtcbiAgICAgICAgICByZXR1cm4gX2VsJDQ2O1xuICAgICAgICB9KSgpKSk7XG4gICAgICAgIGNyZWF0ZVJlbmRlckVmZmVjdCgoKSA9PiBfZWwkMjIudmFsdWUgPSBtdXRhdGlvblNvcnQoKSk7XG4gICAgICAgIHJldHVybiBfZWwkMjI7XG4gICAgICB9XG4gICAgfSksIG51bGwpO1xuICAgIGluc2VydChfZWwkMjAsIGNyZWF0ZUNvbXBvbmVudChDaGV2cm9uRG93biwge30pLCBudWxsKTtcbiAgICBfZWwkMjMuJCRjbGljayA9ICgpID0+IHtcbiAgICAgIGlmIChzZWxlY3RlZFZpZXcoKSA9PT0gXCJxdWVyaWVzXCIpIHtcbiAgICAgICAgcHJvcHMuc2V0TG9jYWxTdG9yZShcInNvcnRPcmRlclwiLCBTdHJpbmcoc29ydE9yZGVyKCkgKiAtMSkpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcHJvcHMuc2V0TG9jYWxTdG9yZShcIm11dGF0aW9uU29ydE9yZGVyXCIsIFN0cmluZyhtdXRhdGlvblNvcnRPcmRlcigpICogLTEpKTtcbiAgICAgIH1cbiAgICB9O1xuICAgIGluc2VydChfZWwkMjMsIGNyZWF0ZUNvbXBvbmVudChTaG93LCB7XG4gICAgICBnZXQgd2hlbigpIHtcbiAgICAgICAgcmV0dXJuIChzZWxlY3RlZFZpZXcoKSA9PT0gXCJxdWVyaWVzXCIgPyBzb3J0T3JkZXIoKSA6IG11dGF0aW9uU29ydE9yZGVyKCkpID09PSAxO1xuICAgICAgfSxcbiAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgcmV0dXJuIFtfdG1wbCQ2MygpLCBjcmVhdGVDb21wb25lbnQoQXJyb3dVcCwge30pXTtcbiAgICAgIH1cbiAgICB9KSwgbnVsbCk7XG4gICAgaW5zZXJ0KF9lbCQyMywgY3JlYXRlQ29tcG9uZW50KFNob3csIHtcbiAgICAgIGdldCB3aGVuKCkge1xuICAgICAgICByZXR1cm4gKHNlbGVjdGVkVmlldygpID09PSBcInF1ZXJpZXNcIiA/IHNvcnRPcmRlcigpIDogbXV0YXRpb25Tb3J0T3JkZXIoKSkgPT09IC0xO1xuICAgICAgfSxcbiAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgcmV0dXJuIFtfdG1wbCQ3MygpLCBjcmVhdGVDb21wb25lbnQoQXJyb3dEb3duLCB7fSldO1xuICAgICAgfVxuICAgIH0pLCBudWxsKTtcbiAgICBfZWwkMjcuJCRjbGljayA9ICgpID0+IHtcbiAgICAgIGlmIChzZWxlY3RlZFZpZXcoKSA9PT0gXCJxdWVyaWVzXCIpIHtcbiAgICAgICAgcXVlcnlfY2FjaGUoKS5jbGVhcigpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgbXV0YXRpb25fY2FjaGUoKS5jbGVhcigpO1xuICAgICAgfVxuICAgIH07XG4gICAgaW5zZXJ0KF9lbCQyNywgY3JlYXRlQ29tcG9uZW50KFRyYXNoLCB7fSkpO1xuICAgIF9lbCQyOC4kJGNsaWNrID0gKCkgPT4ge1xuICAgICAgaWYgKG9mZmxpbmUoKSkge1xuICAgICAgICBvbmxpbmVNYW5hZ2VyKCkuc2V0T25saW5lKHRydWUpO1xuICAgICAgICBzZXRPZmZsaW5lKGZhbHNlKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIG9ubGluZU1hbmFnZXIoKS5zZXRPbmxpbmUoZmFsc2UpO1xuICAgICAgICBzZXRPZmZsaW5lKHRydWUpO1xuICAgICAgfVxuICAgIH07XG4gICAgaW5zZXJ0KF9lbCQyOCwgKCgpID0+IHtcbiAgICAgIGNvbnN0IF9jJCA9IGNyZWF0ZU1lbW8oKCkgPT4gISFvZmZsaW5lKCkpO1xuICAgICAgcmV0dXJuICgpID0+IF9jJCgpID8gY3JlYXRlQ29tcG9uZW50KE9mZmxpbmUsIHt9KSA6IGNyZWF0ZUNvbXBvbmVudChXaWZpLCB7fSk7XG4gICAgfSkoKSk7XG4gICAgaW5zZXJ0KF9lbCQyNiwgY3JlYXRlQ29tcG9uZW50KFNob3csIHtcbiAgICAgIGdldCB3aGVuKCkge1xuICAgICAgICByZXR1cm4gIXBpcCgpLnBpcFdpbmRvdztcbiAgICAgIH0sXG4gICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgIGNvbnN0IF9lbCQyOSA9IF90bXBsJDgzKCk7XG4gICAgICAgIF9lbCQyOS4kJGNsaWNrID0gKCkgPT4ge1xuICAgICAgICAgIHBpcCgpLnJlcXVlc3RQaXBXaW5kb3coTnVtYmVyKHdpbmRvdy5pbm5lcldpZHRoKSwgTnVtYmVyKHByb3BzLmxvY2FsU3RvcmUuaGVpZ2h0ID8/IDUwMCkpO1xuICAgICAgICB9O1xuICAgICAgICBpbnNlcnQoX2VsJDI5LCBjcmVhdGVDb21wb25lbnQoUGlQSWNvbiwge30pKTtcbiAgICAgICAgY3JlYXRlUmVuZGVyRWZmZWN0KCgpID0+IGNsYXNzTmFtZShfZWwkMjksIGNsc3goc3R5bGVzKCkuYWN0aW9uc0J0biwgXCJ0c3FkLWFjdGlvbnMtYnRuXCIsIFwidHNxZC1hY3Rpb24tb3Blbi1waXBcIikpKTtcbiAgICAgICAgcmV0dXJuIF9lbCQyOTtcbiAgICAgIH1cbiAgICB9KSwgbnVsbCk7XG4gICAgaW5zZXJ0KF9lbCQyNiwgY3JlYXRlQ29tcG9uZW50KGRyb3Bkb3duX21lbnVfZXhwb3J0cy5Sb290LCB7XG4gICAgICBndXR0ZXI6IDQsXG4gICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgIHJldHVybiBbY3JlYXRlQ29tcG9uZW50KGRyb3Bkb3duX21lbnVfZXhwb3J0cy5UcmlnZ2VyLCB7XG4gICAgICAgICAgZ2V0IFtcImNsYXNzXCJdKCkge1xuICAgICAgICAgICAgcmV0dXJuIGNsc3goc3R5bGVzKCkuYWN0aW9uc0J0biwgXCJ0c3FkLWFjdGlvbnMtYnRuXCIsIFwidHNxZC1hY3Rpb24tc2V0dGluZ3NcIik7XG4gICAgICAgICAgfSxcbiAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KFNldHRpbmdzLCB7fSk7XG4gICAgICAgICAgfVxuICAgICAgICB9KSwgY3JlYXRlQ29tcG9uZW50KGRyb3Bkb3duX21lbnVfZXhwb3J0cy5Qb3J0YWwsIHtcbiAgICAgICAgICByZWY6IChlbCkgPT4gc2V0Q29tcHV0ZWRWYXJpYWJsZXMoZWwpLFxuICAgICAgICAgIGdldCBtb3VudCgpIHtcbiAgICAgICAgICAgIHJldHVybiBjcmVhdGVNZW1vKCgpID0+ICEhcGlwKCkucGlwV2luZG93KSgpID8gcGlwKCkucGlwV2luZG93LmRvY3VtZW50LmJvZHkgOiBkb2N1bWVudC5ib2R5O1xuICAgICAgICAgIH0sXG4gICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChkcm9wZG93bl9tZW51X2V4cG9ydHMuQ29udGVudCwge1xuICAgICAgICAgICAgICBnZXQgW1wiY2xhc3NcIl0oKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGNsc3goc3R5bGVzKCkuc2V0dGluZ3NNZW51LCBcInRzcWQtc2V0dGluZ3MtbWVudVwiKTtcbiAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICAgIHJldHVybiBbKCgpID0+IHtcbiAgICAgICAgICAgICAgICAgIGNvbnN0IF9lbCQzMCA9IF90bXBsJDkzKCk7XG4gICAgICAgICAgICAgICAgICBjcmVhdGVSZW5kZXJFZmZlY3QoKCkgPT4gY2xhc3NOYW1lKF9lbCQzMCwgY2xzeChzdHlsZXMoKS5zZXR0aW5nc01lbnVIZWFkZXIsIFwidHNxZC1zZXR0aW5ncy1tZW51LWhlYWRlclwiKSkpO1xuICAgICAgICAgICAgICAgICAgcmV0dXJuIF9lbCQzMDtcbiAgICAgICAgICAgICAgICB9KSgpLCBjcmVhdGVDb21wb25lbnQoZHJvcGRvd25fbWVudV9leHBvcnRzLlN1Yiwge1xuICAgICAgICAgICAgICAgICAgb3ZlcmxhcDogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgIGd1dHRlcjogOCxcbiAgICAgICAgICAgICAgICAgIHNoaWZ0OiAtNCxcbiAgICAgICAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFtjcmVhdGVDb21wb25lbnQoZHJvcGRvd25fbWVudV9leHBvcnRzLlN1YlRyaWdnZXIsIHtcbiAgICAgICAgICAgICAgICAgICAgICBnZXQgW1wiY2xhc3NcIl0oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gY2xzeChzdHlsZXMoKS5zZXR0aW5nc1N1YlRyaWdnZXIsIFwidHNxZC1zZXR0aW5ncy1tZW51LXN1Yi10cmlnZ2VyXCIsIFwidHNxZC1zZXR0aW5ncy1tZW51LXN1Yi10cmlnZ2VyLXBvc2l0aW9uXCIpO1xuICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFtfdG1wbCQxMDMoKSwgY3JlYXRlQ29tcG9uZW50KENoZXZyb25Eb3duLCB7fSldO1xuICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfSksIGNyZWF0ZUNvbXBvbmVudChkcm9wZG93bl9tZW51X2V4cG9ydHMuUG9ydGFsLCB7XG4gICAgICAgICAgICAgICAgICAgICAgcmVmOiAoZWwpID0+IHNldENvbXB1dGVkVmFyaWFibGVzKGVsKSxcbiAgICAgICAgICAgICAgICAgICAgICBnZXQgbW91bnQoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gY3JlYXRlTWVtbygoKSA9PiAhIXBpcCgpLnBpcFdpbmRvdykoKSA/IHBpcCgpLnBpcFdpbmRvdy5kb2N1bWVudC5ib2R5IDogZG9jdW1lbnQuYm9keTtcbiAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoZHJvcGRvd25fbWVudV9leHBvcnRzLlN1YkNvbnRlbnQsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgZ2V0IFtcImNsYXNzXCJdKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBjbHN4KHN0eWxlcygpLnNldHRpbmdzTWVudSwgXCJ0c3FkLXNldHRpbmdzLXN1Ym1lbnVcIik7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gW2NyZWF0ZUNvbXBvbmVudChkcm9wZG93bl9tZW51X2V4cG9ydHMuSXRlbSwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb25TZWxlY3Q6ICgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2V0RGV2dG9vbHNQb3NpdGlvbihcInRvcFwiKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhczogXCJidXR0b25cIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGdldCBbXCJjbGFzc1wiXSgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGNsc3goc3R5bGVzKCkuc2V0dGluZ3NTdWJCdXR0b24sIFwidHNxZC1zZXR0aW5ncy1tZW51LXBvc2l0aW9uLWJ0blwiLCBcInRzcWQtc2V0dGluZ3MtbWVudS1wb3NpdGlvbi1idG4tdG9wXCIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFtfdG1wbCQxMTMoKSwgY3JlYXRlQ29tcG9uZW50KEFycm93VXAsIHt9KV07XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSksIGNyZWF0ZUNvbXBvbmVudChkcm9wZG93bl9tZW51X2V4cG9ydHMuSXRlbSwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb25TZWxlY3Q6ICgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2V0RGV2dG9vbHNQb3NpdGlvbihcImJvdHRvbVwiKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhczogXCJidXR0b25cIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGdldCBbXCJjbGFzc1wiXSgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGNsc3goc3R5bGVzKCkuc2V0dGluZ3NTdWJCdXR0b24sIFwidHNxZC1zZXR0aW5ncy1tZW51LXBvc2l0aW9uLWJ0blwiLCBcInRzcWQtc2V0dGluZ3MtbWVudS1wb3NpdGlvbi1idG4tYm90dG9tXCIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFtfdG1wbCQxMjIoKSwgY3JlYXRlQ29tcG9uZW50KEFycm93RG93biwge30pXTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KSwgY3JlYXRlQ29tcG9uZW50KGRyb3Bkb3duX21lbnVfZXhwb3J0cy5JdGVtLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvblNlbGVjdDogKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZXREZXZ0b29sc1Bvc2l0aW9uKFwibGVmdFwiKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhczogXCJidXR0b25cIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGdldCBbXCJjbGFzc1wiXSgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGNsc3goc3R5bGVzKCkuc2V0dGluZ3NTdWJCdXR0b24sIFwidHNxZC1zZXR0aW5ncy1tZW51LXBvc2l0aW9uLWJ0blwiLCBcInRzcWQtc2V0dGluZ3MtbWVudS1wb3NpdGlvbi1idG4tbGVmdFwiKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBbX3RtcGwkMTMyKCksIGNyZWF0ZUNvbXBvbmVudChBcnJvd0xlZnQsIHt9KV07XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSksIGNyZWF0ZUNvbXBvbmVudChkcm9wZG93bl9tZW51X2V4cG9ydHMuSXRlbSwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb25TZWxlY3Q6ICgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2V0RGV2dG9vbHNQb3NpdGlvbihcInJpZ2h0XCIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFzOiBcImJ1dHRvblwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZ2V0IFtcImNsYXNzXCJdKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gY2xzeChzdHlsZXMoKS5zZXR0aW5nc1N1YkJ1dHRvbiwgXCJ0c3FkLXNldHRpbmdzLW1lbnUtcG9zaXRpb24tYnRuXCIsIFwidHNxZC1zZXR0aW5ncy1tZW51LXBvc2l0aW9uLWJ0bi1yaWdodFwiKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBbX3RtcGwkMTQyKCksIGNyZWF0ZUNvbXBvbmVudChBcnJvd1JpZ2h0LCB7fSldO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pXTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9KV07XG4gICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSksIGNyZWF0ZUNvbXBvbmVudChkcm9wZG93bl9tZW51X2V4cG9ydHMuU3ViLCB7XG4gICAgICAgICAgICAgICAgICBvdmVybGFwOiB0cnVlLFxuICAgICAgICAgICAgICAgICAgZ3V0dGVyOiA4LFxuICAgICAgICAgICAgICAgICAgc2hpZnQ6IC00LFxuICAgICAgICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gW2NyZWF0ZUNvbXBvbmVudChkcm9wZG93bl9tZW51X2V4cG9ydHMuU3ViVHJpZ2dlciwge1xuICAgICAgICAgICAgICAgICAgICAgIGdldCBbXCJjbGFzc1wiXSgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBjbHN4KHN0eWxlcygpLnNldHRpbmdzU3ViVHJpZ2dlciwgXCJ0c3FkLXNldHRpbmdzLW1lbnUtc3ViLXRyaWdnZXJcIiwgXCJ0c3FkLXNldHRpbmdzLW1lbnUtc3ViLXRyaWdnZXItcG9zaXRpb25cIik7XG4gICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gW190bXBsJDE1MigpLCBjcmVhdGVDb21wb25lbnQoQ2hldnJvbkRvd24sIHt9KV07XG4gICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9KSwgY3JlYXRlQ29tcG9uZW50KGRyb3Bkb3duX21lbnVfZXhwb3J0cy5Qb3J0YWwsIHtcbiAgICAgICAgICAgICAgICAgICAgICByZWY6IChlbCkgPT4gc2V0Q29tcHV0ZWRWYXJpYWJsZXMoZWwpLFxuICAgICAgICAgICAgICAgICAgICAgIGdldCBtb3VudCgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBjcmVhdGVNZW1vKCgpID0+ICEhcGlwKCkucGlwV2luZG93KSgpID8gcGlwKCkucGlwV2luZG93LmRvY3VtZW50LmJvZHkgOiBkb2N1bWVudC5ib2R5O1xuICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChkcm9wZG93bl9tZW51X2V4cG9ydHMuU3ViQ29udGVudCwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICBnZXQgW1wiY2xhc3NcIl0oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGNsc3goc3R5bGVzKCkuc2V0dGluZ3NNZW51LCBcInRzcWQtc2V0dGluZ3Mtc3VibWVudVwiKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBbY3JlYXRlQ29tcG9uZW50KGRyb3Bkb3duX21lbnVfZXhwb3J0cy5JdGVtLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvblNlbGVjdDogKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwcm9wcy5zZXRMb2NhbFN0b3JlKFwidGhlbWVfcHJlZmVyZW5jZVwiLCBcImxpZ2h0XCIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFzOiBcImJ1dHRvblwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZ2V0IFtcImNsYXNzXCJdKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gY2xzeChzdHlsZXMoKS5zZXR0aW5nc1N1YkJ1dHRvbiwgcHJvcHMubG9jYWxTdG9yZS50aGVtZV9wcmVmZXJlbmNlID09PSBcImxpZ2h0XCIgJiYgc3R5bGVzKCkudGhlbWVTZWxlY3RlZEJ1dHRvbiwgXCJ0c3FkLXNldHRpbmdzLW1lbnUtcG9zaXRpb24tYnRuXCIsIFwidHNxZC1zZXR0aW5ncy1tZW51LXBvc2l0aW9uLWJ0bi10b3BcIik7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gW190bXBsJDE2MigpLCBjcmVhdGVDb21wb25lbnQoU3VuLCB7fSldO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pLCBjcmVhdGVDb21wb25lbnQoZHJvcGRvd25fbWVudV9leHBvcnRzLkl0ZW0sIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uU2VsZWN0OiAoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHByb3BzLnNldExvY2FsU3RvcmUoXCJ0aGVtZV9wcmVmZXJlbmNlXCIsIFwiZGFya1wiKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhczogXCJidXR0b25cIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGdldCBbXCJjbGFzc1wiXSgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGNsc3goc3R5bGVzKCkuc2V0dGluZ3NTdWJCdXR0b24sIHByb3BzLmxvY2FsU3RvcmUudGhlbWVfcHJlZmVyZW5jZSA9PT0gXCJkYXJrXCIgJiYgc3R5bGVzKCkudGhlbWVTZWxlY3RlZEJ1dHRvbiwgXCJ0c3FkLXNldHRpbmdzLW1lbnUtcG9zaXRpb24tYnRuXCIsIFwidHNxZC1zZXR0aW5ncy1tZW51LXBvc2l0aW9uLWJ0bi1ib3R0b21cIik7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gW190bXBsJDE3MigpLCBjcmVhdGVDb21wb25lbnQoTW9vbiwge30pXTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KSwgY3JlYXRlQ29tcG9uZW50KGRyb3Bkb3duX21lbnVfZXhwb3J0cy5JdGVtLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvblNlbGVjdDogKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwcm9wcy5zZXRMb2NhbFN0b3JlKFwidGhlbWVfcHJlZmVyZW5jZVwiLCBcInN5c3RlbVwiKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhczogXCJidXR0b25cIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGdldCBbXCJjbGFzc1wiXSgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGNsc3goc3R5bGVzKCkuc2V0dGluZ3NTdWJCdXR0b24sIHByb3BzLmxvY2FsU3RvcmUudGhlbWVfcHJlZmVyZW5jZSA9PT0gXCJzeXN0ZW1cIiAmJiBzdHlsZXMoKS50aGVtZVNlbGVjdGVkQnV0dG9uLCBcInRzcWQtc2V0dGluZ3MtbWVudS1wb3NpdGlvbi1idG5cIiwgXCJ0c3FkLXNldHRpbmdzLW1lbnUtcG9zaXRpb24tYnRuLWxlZnRcIik7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gW190bXBsJDE4MigpLCBjcmVhdGVDb21wb25lbnQoTW9uaXRvciwge30pXTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KV07XG4gICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfSldO1xuICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0pXTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgfVxuICAgICAgICB9KV07XG4gICAgICB9XG4gICAgfSksIG51bGwpO1xuICAgIGluc2VydChfZWwkOSwgY3JlYXRlQ29tcG9uZW50KFNob3csIHtcbiAgICAgIGdldCB3aGVuKCkge1xuICAgICAgICByZXR1cm4gc2VsZWN0ZWRWaWV3KCkgPT09IFwicXVlcmllc1wiO1xuICAgICAgfSxcbiAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgY29uc3QgX2VsJDQwID0gX3RtcGwkMTkyKCksIF9lbCQ0MSA9IF9lbCQ0MC5maXJzdENoaWxkO1xuICAgICAgICBpbnNlcnQoX2VsJDQxLCBjcmVhdGVDb21wb25lbnQoS2V5LCB7XG4gICAgICAgICAgYnk6IChxKSA9PiBxLnF1ZXJ5SGFzaCxcbiAgICAgICAgICBnZXQgZWFjaCgpIHtcbiAgICAgICAgICAgIHJldHVybiBxdWVyaWVzKCk7XG4gICAgICAgICAgfSxcbiAgICAgICAgICBjaGlsZHJlbjogKHF1ZXJ5KSA9PiBjcmVhdGVDb21wb25lbnQoUXVlcnlSb3csIHtcbiAgICAgICAgICAgIGdldCBxdWVyeSgpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIHF1ZXJ5KCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSlcbiAgICAgICAgfSkpO1xuICAgICAgICBjcmVhdGVSZW5kZXJFZmZlY3QoKCkgPT4gY2xhc3NOYW1lKF9lbCQ0MCwgY2xzeChzdHlsZXMoKS5vdmVyZmxvd1F1ZXJ5Q29udGFpbmVyLCBcInRzcWQtcXVlcmllcy1vdmVyZmxvdy1jb250YWluZXJcIikpKTtcbiAgICAgICAgcmV0dXJuIF9lbCQ0MDtcbiAgICAgIH1cbiAgICB9KSwgbnVsbCk7XG4gICAgaW5zZXJ0KF9lbCQ5LCBjcmVhdGVDb21wb25lbnQoU2hvdywge1xuICAgICAgZ2V0IHdoZW4oKSB7XG4gICAgICAgIHJldHVybiBzZWxlY3RlZFZpZXcoKSA9PT0gXCJtdXRhdGlvbnNcIjtcbiAgICAgIH0sXG4gICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgIGNvbnN0IF9lbCQ0MiA9IF90bXBsJDIwMigpLCBfZWwkNDMgPSBfZWwkNDIuZmlyc3RDaGlsZDtcbiAgICAgICAgaW5zZXJ0KF9lbCQ0MywgY3JlYXRlQ29tcG9uZW50KEtleSwge1xuICAgICAgICAgIGJ5OiAobSkgPT4gbS5tdXRhdGlvbklkLFxuICAgICAgICAgIGdldCBlYWNoKCkge1xuICAgICAgICAgICAgcmV0dXJuIG11dGF0aW9ucygpO1xuICAgICAgICAgIH0sXG4gICAgICAgICAgY2hpbGRyZW46IChtdXRhdGlvbikgPT4gY3JlYXRlQ29tcG9uZW50KE11dGF0aW9uUm93LCB7XG4gICAgICAgICAgICBnZXQgbXV0YXRpb24oKSB7XG4gICAgICAgICAgICAgIHJldHVybiBtdXRhdGlvbigpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0pXG4gICAgICAgIH0pKTtcbiAgICAgICAgY3JlYXRlUmVuZGVyRWZmZWN0KCgpID0+IGNsYXNzTmFtZShfZWwkNDIsIGNsc3goc3R5bGVzKCkub3ZlcmZsb3dRdWVyeUNvbnRhaW5lciwgXCJ0c3FkLW11dGF0aW9ucy1vdmVyZmxvdy1jb250YWluZXJcIikpKTtcbiAgICAgICAgcmV0dXJuIF9lbCQ0MjtcbiAgICAgIH1cbiAgICB9KSwgbnVsbCk7XG4gICAgY3JlYXRlUmVuZGVyRWZmZWN0KChfcCQpID0+IHtcbiAgICAgIGNvbnN0IF92JDYgPSBjbHN4KHN0eWxlcygpLnF1ZXJpZXNDb250YWluZXIsIHBhbmVsV2lkdGgoKSA8IHNlY29uZEJyZWFrcG9pbnQgJiYgKHNlbGVjdGVkUXVlcnlIYXNoKCkgfHwgc2VsZWN0ZWRNdXRhdGlvbklkKCkpICYmIGNzc2BcbiAgICAgICAgICAgICAgaGVpZ2h0OiA1MCU7XG4gICAgICAgICAgICAgIG1heC1oZWlnaHQ6IDUwJTtcbiAgICAgICAgICAgIGAsIHBhbmVsV2lkdGgoKSA8IHNlY29uZEJyZWFrcG9pbnQgJiYgIShzZWxlY3RlZFF1ZXJ5SGFzaCgpIHx8IHNlbGVjdGVkTXV0YXRpb25JZCgpKSAmJiBjc3NgXG4gICAgICAgICAgICAgIGhlaWdodDogMTAwJTtcbiAgICAgICAgICAgICAgbWF4LWhlaWdodDogMTAwJTtcbiAgICAgICAgICAgIGAsIFwidHNxZC1xdWVyaWVzLWNvbnRhaW5lclwiKSwgX3YkNyA9IGNsc3goc3R5bGVzKCkucm93LCBcInRzcWQtaGVhZGVyXCIpLCBfdiQ4ID0gc3R5bGVzKCkubG9nb0FuZFRvZ2dsZUNvbnRhaW5lciwgX3YkOSA9IGNsc3goc3R5bGVzKCkubG9nbywgXCJ0c3FkLXRleHQtbG9nby1jb250YWluZXJcIiksIF92JDEwID0gY2xzeChzdHlsZXMoKS50YW5zdGFja0xvZ28sIFwidHNxZC10ZXh0LWxvZ28tdGFuc3RhY2tcIiksIF92JDExID0gY2xzeChzdHlsZXMoKS5xdWVyeUZsYXZvckxvZ28sIFwidHNxZC10ZXh0LWxvZ28tcXVlcnktZmxhdm9yXCIpLCBfdiQxMiA9IGNsc3goc3R5bGVzKCkucm93LCBcInRzcWQtZmlsdGVycy1hY3Rpb25zLWNvbnRhaW5lclwiKSwgX3YkMTMgPSBjbHN4KHN0eWxlcygpLmZpbHRlcnNDb250YWluZXIsIFwidHNxZC1maWx0ZXJzLWNvbnRhaW5lclwiKSwgX3YkMTQgPSBjbHN4KHN0eWxlcygpLmZpbHRlcklucHV0LCBcInRzcWQtcXVlcnktZmlsdGVyLXRleHRmaWVsZC1jb250YWluZXJcIiksIF92JDE1ID0gY2xzeChcInRzcWQtcXVlcnktZmlsdGVyLXRleHRmaWVsZFwiKSwgX3YkMTYgPSBjbHN4KHN0eWxlcygpLmZpbHRlclNlbGVjdCwgXCJ0c3FkLXF1ZXJ5LWZpbHRlci1zb3J0LWNvbnRhaW5lclwiKSwgX3YkMTcgPSBgU29ydCBvcmRlciAkeyhzZWxlY3RlZFZpZXcoKSA9PT0gXCJxdWVyaWVzXCIgPyBzb3J0T3JkZXIoKSA6IG11dGF0aW9uU29ydE9yZGVyKCkpID09PSAtMSA/IFwiZGVzY2VuZGluZ1wiIDogXCJhc2NlbmRpbmdcIn1gLCBfdiQxOCA9IChzZWxlY3RlZFZpZXcoKSA9PT0gXCJxdWVyaWVzXCIgPyBzb3J0T3JkZXIoKSA6IG11dGF0aW9uU29ydE9yZGVyKCkpID09PSAtMSwgX3YkMTkgPSBjbHN4KHN0eWxlcygpLmFjdGlvbnNDb250YWluZXIsIFwidHNxZC1hY3Rpb25zLWNvbnRhaW5lclwiKSwgX3YkMjAgPSBjbHN4KHN0eWxlcygpLmFjdGlvbnNCdG4sIFwidHNxZC1hY3Rpb25zLWJ0blwiLCBcInRzcWQtYWN0aW9uLWNsZWFyLWNhY2hlXCIpLCBfdiQyMSA9IGBDbGVhciAke3NlbGVjdGVkVmlldygpfSBjYWNoZWAsIF92JDIyID0gY2xzeChzdHlsZXMoKS5hY3Rpb25zQnRuLCBvZmZsaW5lKCkgJiYgc3R5bGVzKCkuYWN0aW9uc0J0bk9mZmxpbmUsIFwidHNxZC1hY3Rpb25zLWJ0blwiLCBcInRzcWQtYWN0aW9uLW1vY2stb2ZmbGluZS1iZWhhdmlvclwiKSwgX3YkMjMgPSBgJHtvZmZsaW5lKCkgPyBcIlVuc2V0IG9mZmxpbmUgbW9ja2luZyBiZWhhdmlvclwiIDogXCJNb2NrIG9mZmxpbmUgYmVoYXZpb3JcIn1gLCBfdiQyNCA9IG9mZmxpbmUoKSwgX3YkMjUgPSBgJHtvZmZsaW5lKCkgPyBcIlVuc2V0IG9mZmxpbmUgbW9ja2luZyBiZWhhdmlvclwiIDogXCJNb2NrIG9mZmxpbmUgYmVoYXZpb3JcIn1gO1xuICAgICAgX3YkNiAhPT0gX3AkLl92JDYgJiYgY2xhc3NOYW1lKF9lbCQ5LCBfcCQuX3YkNiA9IF92JDYpO1xuICAgICAgX3YkNyAhPT0gX3AkLl92JDcgJiYgY2xhc3NOYW1lKF9lbCQxMCwgX3AkLl92JDcgPSBfdiQ3KTtcbiAgICAgIF92JDggIT09IF9wJC5fdiQ4ICYmIGNsYXNzTmFtZShfZWwkMTEsIF9wJC5fdiQ4ID0gX3YkOCk7XG4gICAgICBfdiQ5ICE9PSBfcCQuX3YkOSAmJiBjbGFzc05hbWUoX2VsJDEyLCBfcCQuX3YkOSA9IF92JDkpO1xuICAgICAgX3YkMTAgIT09IF9wJC5fdiQxMCAmJiBjbGFzc05hbWUoX2VsJDEzLCBfcCQuX3YkMTAgPSBfdiQxMCk7XG4gICAgICBfdiQxMSAhPT0gX3AkLl92JDExICYmIGNsYXNzTmFtZShfZWwkMTQsIF9wJC5fdiQxMSA9IF92JDExKTtcbiAgICAgIF92JDEyICE9PSBfcCQuX3YkMTIgJiYgY2xhc3NOYW1lKF9lbCQxNiwgX3AkLl92JDEyID0gX3YkMTIpO1xuICAgICAgX3YkMTMgIT09IF9wJC5fdiQxMyAmJiBjbGFzc05hbWUoX2VsJDE3LCBfcCQuX3YkMTMgPSBfdiQxMyk7XG4gICAgICBfdiQxNCAhPT0gX3AkLl92JDE0ICYmIGNsYXNzTmFtZShfZWwkMTgsIF9wJC5fdiQxNCA9IF92JDE0KTtcbiAgICAgIF92JDE1ICE9PSBfcCQuX3YkMTUgJiYgY2xhc3NOYW1lKF9lbCQxOSwgX3AkLl92JDE1ID0gX3YkMTUpO1xuICAgICAgX3YkMTYgIT09IF9wJC5fdiQxNiAmJiBjbGFzc05hbWUoX2VsJDIwLCBfcCQuX3YkMTYgPSBfdiQxNik7XG4gICAgICBfdiQxNyAhPT0gX3AkLl92JDE3ICYmIHNldEF0dHJpYnV0ZShfZWwkMjMsIFwiYXJpYS1sYWJlbFwiLCBfcCQuX3YkMTcgPSBfdiQxNyk7XG4gICAgICBfdiQxOCAhPT0gX3AkLl92JDE4ICYmIHNldEF0dHJpYnV0ZShfZWwkMjMsIFwiYXJpYS1wcmVzc2VkXCIsIF9wJC5fdiQxOCA9IF92JDE4KTtcbiAgICAgIF92JDE5ICE9PSBfcCQuX3YkMTkgJiYgY2xhc3NOYW1lKF9lbCQyNiwgX3AkLl92JDE5ID0gX3YkMTkpO1xuICAgICAgX3YkMjAgIT09IF9wJC5fdiQyMCAmJiBjbGFzc05hbWUoX2VsJDI3LCBfcCQuX3YkMjAgPSBfdiQyMCk7XG4gICAgICBfdiQyMSAhPT0gX3AkLl92JDIxICYmIHNldEF0dHJpYnV0ZShfZWwkMjcsIFwidGl0bGVcIiwgX3AkLl92JDIxID0gX3YkMjEpO1xuICAgICAgX3YkMjIgIT09IF9wJC5fdiQyMiAmJiBjbGFzc05hbWUoX2VsJDI4LCBfcCQuX3YkMjIgPSBfdiQyMik7XG4gICAgICBfdiQyMyAhPT0gX3AkLl92JDIzICYmIHNldEF0dHJpYnV0ZShfZWwkMjgsIFwiYXJpYS1sYWJlbFwiLCBfcCQuX3YkMjMgPSBfdiQyMyk7XG4gICAgICBfdiQyNCAhPT0gX3AkLl92JDI0ICYmIHNldEF0dHJpYnV0ZShfZWwkMjgsIFwiYXJpYS1wcmVzc2VkXCIsIF9wJC5fdiQyNCA9IF92JDI0KTtcbiAgICAgIF92JDI1ICE9PSBfcCQuX3YkMjUgJiYgc2V0QXR0cmlidXRlKF9lbCQyOCwgXCJ0aXRsZVwiLCBfcCQuX3YkMjUgPSBfdiQyNSk7XG4gICAgICByZXR1cm4gX3AkO1xuICAgIH0sIHtcbiAgICAgIF92JDY6IHZvaWQgMCxcbiAgICAgIF92JDc6IHZvaWQgMCxcbiAgICAgIF92JDg6IHZvaWQgMCxcbiAgICAgIF92JDk6IHZvaWQgMCxcbiAgICAgIF92JDEwOiB2b2lkIDAsXG4gICAgICBfdiQxMTogdm9pZCAwLFxuICAgICAgX3YkMTI6IHZvaWQgMCxcbiAgICAgIF92JDEzOiB2b2lkIDAsXG4gICAgICBfdiQxNDogdm9pZCAwLFxuICAgICAgX3YkMTU6IHZvaWQgMCxcbiAgICAgIF92JDE2OiB2b2lkIDAsXG4gICAgICBfdiQxNzogdm9pZCAwLFxuICAgICAgX3YkMTg6IHZvaWQgMCxcbiAgICAgIF92JDE5OiB2b2lkIDAsXG4gICAgICBfdiQyMDogdm9pZCAwLFxuICAgICAgX3YkMjE6IHZvaWQgMCxcbiAgICAgIF92JDIyOiB2b2lkIDAsXG4gICAgICBfdiQyMzogdm9pZCAwLFxuICAgICAgX3YkMjQ6IHZvaWQgMCxcbiAgICAgIF92JDI1OiB2b2lkIDBcbiAgICB9KTtcbiAgICBjcmVhdGVSZW5kZXJFZmZlY3QoKCkgPT4gX2VsJDE5LnZhbHVlID0gc2VsZWN0ZWRWaWV3KCkgPT09IFwicXVlcmllc1wiID8gcHJvcHMubG9jYWxTdG9yZS5maWx0ZXIgfHwgXCJcIiA6IHByb3BzLmxvY2FsU3RvcmUubXV0YXRpb25GaWx0ZXIgfHwgXCJcIik7XG4gICAgcmV0dXJuIF9lbCQ5O1xuICB9KSgpLCBjcmVhdGVDb21wb25lbnQoU2hvdywge1xuICAgIGdldCB3aGVuKCkge1xuICAgICAgcmV0dXJuIGNyZWF0ZU1lbW8oKCkgPT4gc2VsZWN0ZWRWaWV3KCkgPT09IFwicXVlcmllc1wiKSgpICYmIHNlbGVjdGVkUXVlcnlIYXNoKCk7XG4gICAgfSxcbiAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KFF1ZXJ5RGV0YWlscywge30pO1xuICAgIH1cbiAgfSksIGNyZWF0ZUNvbXBvbmVudChTaG93LCB7XG4gICAgZ2V0IHdoZW4oKSB7XG4gICAgICByZXR1cm4gY3JlYXRlTWVtbygoKSA9PiBzZWxlY3RlZFZpZXcoKSA9PT0gXCJtdXRhdGlvbnNcIikoKSAmJiBzZWxlY3RlZE11dGF0aW9uSWQoKTtcbiAgICB9LFxuICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoTXV0YXRpb25EZXRhaWxzLCB7fSk7XG4gICAgfVxuICB9KV07XG59O1xudmFyIFF1ZXJ5Um93ID0gKHByb3BzKSA9PiB7XG4gIGNvbnN0IHRoZW1lID0gdXNlVGhlbWUoKTtcbiAgY29uc3QgY3NzID0gdXNlUXVlcnlEZXZ0b29sc0NvbnRleHQoKS5zaGFkb3dET01UYXJnZXQgPyB1LmJpbmQoe1xuICAgIHRhcmdldDogdXNlUXVlcnlEZXZ0b29sc0NvbnRleHQoKS5zaGFkb3dET01UYXJnZXRcbiAgfSkgOiB1O1xuICBjb25zdCBzdHlsZXMgPSBjcmVhdGVNZW1vKCgpID0+IHtcbiAgICByZXR1cm4gdGhlbWUoKSA9PT0gXCJkYXJrXCIgPyBkYXJrU3R5bGVzMihjc3MpIDogbGlnaHRTdHlsZXMyKGNzcyk7XG4gIH0pO1xuICBjb25zdCB7XG4gICAgY29sb3JzLFxuICAgIGFscGhhXG4gIH0gPSB0b2tlbnM7XG4gIGNvbnN0IHQyID0gKGxpZ2h0LCBkYXJrKSA9PiB0aGVtZSgpID09PSBcImRhcmtcIiA/IGRhcmsgOiBsaWdodDtcbiAgY29uc3QgcXVlcnlTdGF0ZSA9IGNyZWF0ZVN1YnNjcmliZVRvUXVlcnlDYWNoZUJhdGNoZXIoKHF1ZXJ5Q2FjaGUpID0+IHF1ZXJ5Q2FjaGUoKS5maW5kKHtcbiAgICBxdWVyeUtleTogcHJvcHMucXVlcnkucXVlcnlLZXlcbiAgfSk/LnN0YXRlLCB0cnVlLCAoZTIpID0+IGUyLnF1ZXJ5LnF1ZXJ5SGFzaCA9PT0gcHJvcHMucXVlcnkucXVlcnlIYXNoKTtcbiAgY29uc3QgaXNEaXNhYmxlZCA9IGNyZWF0ZVN1YnNjcmliZVRvUXVlcnlDYWNoZUJhdGNoZXIoKHF1ZXJ5Q2FjaGUpID0+IHF1ZXJ5Q2FjaGUoKS5maW5kKHtcbiAgICBxdWVyeUtleTogcHJvcHMucXVlcnkucXVlcnlLZXlcbiAgfSk/LmlzRGlzYWJsZWQoKSA/PyBmYWxzZSwgdHJ1ZSwgKGUyKSA9PiBlMi5xdWVyeS5xdWVyeUhhc2ggPT09IHByb3BzLnF1ZXJ5LnF1ZXJ5SGFzaCk7XG4gIGNvbnN0IGlzU3RhbGUgPSBjcmVhdGVTdWJzY3JpYmVUb1F1ZXJ5Q2FjaGVCYXRjaGVyKChxdWVyeUNhY2hlKSA9PiBxdWVyeUNhY2hlKCkuZmluZCh7XG4gICAgcXVlcnlLZXk6IHByb3BzLnF1ZXJ5LnF1ZXJ5S2V5XG4gIH0pPy5pc1N0YWxlKCkgPz8gZmFsc2UsIHRydWUsIChlMikgPT4gZTIucXVlcnkucXVlcnlIYXNoID09PSBwcm9wcy5xdWVyeS5xdWVyeUhhc2gpO1xuICBjb25zdCBvYnNlcnZlcnMgPSBjcmVhdGVTdWJzY3JpYmVUb1F1ZXJ5Q2FjaGVCYXRjaGVyKChxdWVyeUNhY2hlKSA9PiBxdWVyeUNhY2hlKCkuZmluZCh7XG4gICAgcXVlcnlLZXk6IHByb3BzLnF1ZXJ5LnF1ZXJ5S2V5XG4gIH0pPy5nZXRPYnNlcnZlcnNDb3VudCgpID8/IDAsIHRydWUsIChlMikgPT4gZTIucXVlcnkucXVlcnlIYXNoID09PSBwcm9wcy5xdWVyeS5xdWVyeUhhc2gpO1xuICBjb25zdCBjb2xvciA9IGNyZWF0ZU1lbW8oKCkgPT4gZ2V0UXVlcnlTdGF0dXNDb2xvcih7XG4gICAgcXVlcnlTdGF0ZTogcXVlcnlTdGF0ZSgpLFxuICAgIG9ic2VydmVyQ291bnQ6IG9ic2VydmVycygpLFxuICAgIGlzU3RhbGU6IGlzU3RhbGUoKVxuICB9KSk7XG4gIGNvbnN0IGdldE9ic2VydmVyQ291bnRDb2xvclN0eWxlcyA9ICgpID0+IHtcbiAgICBpZiAoY29sb3IoKSA9PT0gXCJncmF5XCIpIHtcbiAgICAgIHJldHVybiBjc3NgXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICR7dDIoY29sb3JzW2NvbG9yKCldWzIwMF0sIGNvbG9yc1tjb2xvcigpXVs3MDBdKX07XG4gICAgICAgIGNvbG9yOiAke3QyKGNvbG9yc1tjb2xvcigpXVs3MDBdLCBjb2xvcnNbY29sb3IoKV1bMzAwXSl9O1xuICAgICAgYDtcbiAgICB9XG4gICAgcmV0dXJuIGNzc2BcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICR7dDIoY29sb3JzW2NvbG9yKCldWzIwMF0gKyBhbHBoYVs4MF0sIGNvbG9yc1tjb2xvcigpXVs5MDBdKX07XG4gICAgICBjb2xvcjogJHt0Mihjb2xvcnNbY29sb3IoKV1bODAwXSwgY29sb3JzW2NvbG9yKCldWzMwMF0pfTtcbiAgICBgO1xuICB9O1xuICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KFNob3csIHtcbiAgICBnZXQgd2hlbigpIHtcbiAgICAgIHJldHVybiBxdWVyeVN0YXRlKCk7XG4gICAgfSxcbiAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICBjb25zdCBfZWwkNDggPSBfdG1wbCQyNDIoKSwgX2VsJDQ5ID0gX2VsJDQ4LmZpcnN0Q2hpbGQsIF9lbCQ1MCA9IF9lbCQ0OS5uZXh0U2libGluZztcbiAgICAgIF9lbCQ0OC4kJGNsaWNrID0gKCkgPT4gc2V0U2VsZWN0ZWRRdWVyeUhhc2gocHJvcHMucXVlcnkucXVlcnlIYXNoID09PSBzZWxlY3RlZFF1ZXJ5SGFzaCgpID8gbnVsbCA6IHByb3BzLnF1ZXJ5LnF1ZXJ5SGFzaCk7XG4gICAgICBpbnNlcnQoX2VsJDQ5LCBvYnNlcnZlcnMpO1xuICAgICAgaW5zZXJ0KF9lbCQ1MCwgKCkgPT4gcHJvcHMucXVlcnkucXVlcnlIYXNoKTtcbiAgICAgIGluc2VydChfZWwkNDgsIGNyZWF0ZUNvbXBvbmVudChTaG93LCB7XG4gICAgICAgIGdldCB3aGVuKCkge1xuICAgICAgICAgIHJldHVybiBpc0Rpc2FibGVkKCk7XG4gICAgICAgIH0sXG4gICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICByZXR1cm4gX3RtcGwkMjMyKCk7XG4gICAgICAgIH1cbiAgICAgIH0pLCBudWxsKTtcbiAgICAgIGNyZWF0ZVJlbmRlckVmZmVjdCgoX3AkKSA9PiB7XG4gICAgICAgIGNvbnN0IF92JDI2ID0gY2xzeChzdHlsZXMoKS5xdWVyeVJvdywgc2VsZWN0ZWRRdWVyeUhhc2goKSA9PT0gcHJvcHMucXVlcnkucXVlcnlIYXNoICYmIHN0eWxlcygpLnNlbGVjdGVkUXVlcnlSb3csIFwidHNxZC1xdWVyeS1yb3dcIiksIF92JDI3ID0gYFF1ZXJ5IGtleSAke3Byb3BzLnF1ZXJ5LnF1ZXJ5SGFzaH1gLCBfdiQyOCA9IGNsc3goZ2V0T2JzZXJ2ZXJDb3VudENvbG9yU3R5bGVzKCksIFwidHNxZC1xdWVyeS1vYnNlcnZlci1jb3VudFwiKTtcbiAgICAgICAgX3YkMjYgIT09IF9wJC5fdiQyNiAmJiBjbGFzc05hbWUoX2VsJDQ4LCBfcCQuX3YkMjYgPSBfdiQyNik7XG4gICAgICAgIF92JDI3ICE9PSBfcCQuX3YkMjcgJiYgc2V0QXR0cmlidXRlKF9lbCQ0OCwgXCJhcmlhLWxhYmVsXCIsIF9wJC5fdiQyNyA9IF92JDI3KTtcbiAgICAgICAgX3YkMjggIT09IF9wJC5fdiQyOCAmJiBjbGFzc05hbWUoX2VsJDQ5LCBfcCQuX3YkMjggPSBfdiQyOCk7XG4gICAgICAgIHJldHVybiBfcCQ7XG4gICAgICB9LCB7XG4gICAgICAgIF92JDI2OiB2b2lkIDAsXG4gICAgICAgIF92JDI3OiB2b2lkIDAsXG4gICAgICAgIF92JDI4OiB2b2lkIDBcbiAgICAgIH0pO1xuICAgICAgcmV0dXJuIF9lbCQ0ODtcbiAgICB9XG4gIH0pO1xufTtcbnZhciBNdXRhdGlvblJvdyA9IChwcm9wcykgPT4ge1xuICBjb25zdCB0aGVtZSA9IHVzZVRoZW1lKCk7XG4gIGNvbnN0IGNzcyA9IHVzZVF1ZXJ5RGV2dG9vbHNDb250ZXh0KCkuc2hhZG93RE9NVGFyZ2V0ID8gdS5iaW5kKHtcbiAgICB0YXJnZXQ6IHVzZVF1ZXJ5RGV2dG9vbHNDb250ZXh0KCkuc2hhZG93RE9NVGFyZ2V0XG4gIH0pIDogdTtcbiAgY29uc3Qgc3R5bGVzID0gY3JlYXRlTWVtbygoKSA9PiB7XG4gICAgcmV0dXJuIHRoZW1lKCkgPT09IFwiZGFya1wiID8gZGFya1N0eWxlczIoY3NzKSA6IGxpZ2h0U3R5bGVzMihjc3MpO1xuICB9KTtcbiAgY29uc3Qge1xuICAgIGNvbG9ycyxcbiAgICBhbHBoYVxuICB9ID0gdG9rZW5zO1xuICBjb25zdCB0MiA9IChsaWdodCwgZGFyaykgPT4gdGhlbWUoKSA9PT0gXCJkYXJrXCIgPyBkYXJrIDogbGlnaHQ7XG4gIGNvbnN0IG11dGF0aW9uU3RhdGUgPSBjcmVhdGVTdWJzY3JpYmVUb011dGF0aW9uQ2FjaGVCYXRjaGVyKChtdXRhdGlvbkNhY2hlKSA9PiB7XG4gICAgY29uc3QgbXV0YXRpb25zID0gbXV0YXRpb25DYWNoZSgpLmdldEFsbCgpO1xuICAgIGNvbnN0IG11dGF0aW9uID0gbXV0YXRpb25zLmZpbmQoKG0pID0+IG0ubXV0YXRpb25JZCA9PT0gcHJvcHMubXV0YXRpb24ubXV0YXRpb25JZCk7XG4gICAgcmV0dXJuIG11dGF0aW9uPy5zdGF0ZTtcbiAgfSk7XG4gIGNvbnN0IGlzUGF1c2VkID0gY3JlYXRlU3Vic2NyaWJlVG9NdXRhdGlvbkNhY2hlQmF0Y2hlcigobXV0YXRpb25DYWNoZSkgPT4ge1xuICAgIGNvbnN0IG11dGF0aW9ucyA9IG11dGF0aW9uQ2FjaGUoKS5nZXRBbGwoKTtcbiAgICBjb25zdCBtdXRhdGlvbiA9IG11dGF0aW9ucy5maW5kKChtKSA9PiBtLm11dGF0aW9uSWQgPT09IHByb3BzLm11dGF0aW9uLm11dGF0aW9uSWQpO1xuICAgIGlmICghbXV0YXRpb24pXG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgcmV0dXJuIG11dGF0aW9uLnN0YXRlLmlzUGF1c2VkO1xuICB9KTtcbiAgY29uc3Qgc3RhdHVzID0gY3JlYXRlU3Vic2NyaWJlVG9NdXRhdGlvbkNhY2hlQmF0Y2hlcigobXV0YXRpb25DYWNoZSkgPT4ge1xuICAgIGNvbnN0IG11dGF0aW9ucyA9IG11dGF0aW9uQ2FjaGUoKS5nZXRBbGwoKTtcbiAgICBjb25zdCBtdXRhdGlvbiA9IG11dGF0aW9ucy5maW5kKChtKSA9PiBtLm11dGF0aW9uSWQgPT09IHByb3BzLm11dGF0aW9uLm11dGF0aW9uSWQpO1xuICAgIGlmICghbXV0YXRpb24pXG4gICAgICByZXR1cm4gXCJpZGxlXCI7XG4gICAgcmV0dXJuIG11dGF0aW9uLnN0YXRlLnN0YXR1cztcbiAgfSk7XG4gIGNvbnN0IGNvbG9yID0gY3JlYXRlTWVtbygoKSA9PiBnZXRNdXRhdGlvblN0YXR1c0NvbG9yKHtcbiAgICBpc1BhdXNlZDogaXNQYXVzZWQoKSxcbiAgICBzdGF0dXM6IHN0YXR1cygpXG4gIH0pKTtcbiAgY29uc3QgZ2V0T2JzZXJ2ZXJDb3VudENvbG9yU3R5bGVzID0gKCkgPT4ge1xuICAgIGlmIChjb2xvcigpID09PSBcImdyYXlcIikge1xuICAgICAgcmV0dXJuIGNzc2BcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHt0Mihjb2xvcnNbY29sb3IoKV1bMjAwXSwgY29sb3JzW2NvbG9yKCldWzcwMF0pfTtcbiAgICAgICAgY29sb3I6ICR7dDIoY29sb3JzW2NvbG9yKCldWzcwMF0sIGNvbG9yc1tjb2xvcigpXVszMDBdKX07XG4gICAgICBgO1xuICAgIH1cbiAgICByZXR1cm4gY3NzYFxuICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHt0Mihjb2xvcnNbY29sb3IoKV1bMjAwXSArIGFscGhhWzgwXSwgY29sb3JzW2NvbG9yKCldWzkwMF0pfTtcbiAgICAgIGNvbG9yOiAke3QyKGNvbG9yc1tjb2xvcigpXVs4MDBdLCBjb2xvcnNbY29sb3IoKV1bMzAwXSl9O1xuICAgIGA7XG4gIH07XG4gIHJldHVybiBjcmVhdGVDb21wb25lbnQoU2hvdywge1xuICAgIGdldCB3aGVuKCkge1xuICAgICAgcmV0dXJuIG11dGF0aW9uU3RhdGUoKTtcbiAgICB9LFxuICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgIGNvbnN0IF9lbCQ1MiA9IF90bXBsJDI0MigpLCBfZWwkNTMgPSBfZWwkNTIuZmlyc3RDaGlsZCwgX2VsJDU0ID0gX2VsJDUzLm5leHRTaWJsaW5nO1xuICAgICAgX2VsJDUyLiQkY2xpY2sgPSAoKSA9PiB7XG4gICAgICAgIHNldFNlbGVjdGVkTXV0YXRpb25JZChwcm9wcy5tdXRhdGlvbi5tdXRhdGlvbklkID09PSBzZWxlY3RlZE11dGF0aW9uSWQoKSA/IG51bGwgOiBwcm9wcy5tdXRhdGlvbi5tdXRhdGlvbklkKTtcbiAgICAgIH07XG4gICAgICBpbnNlcnQoX2VsJDUzLCBjcmVhdGVDb21wb25lbnQoU2hvdywge1xuICAgICAgICBnZXQgd2hlbigpIHtcbiAgICAgICAgICByZXR1cm4gY29sb3IoKSA9PT0gXCJwdXJwbGVcIjtcbiAgICAgICAgfSxcbiAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoUGF1c2VDaXJjbGUsIHt9KTtcbiAgICAgICAgfVxuICAgICAgfSksIG51bGwpO1xuICAgICAgaW5zZXJ0KF9lbCQ1MywgY3JlYXRlQ29tcG9uZW50KFNob3csIHtcbiAgICAgICAgZ2V0IHdoZW4oKSB7XG4gICAgICAgICAgcmV0dXJuIGNvbG9yKCkgPT09IFwiZ3JlZW5cIjtcbiAgICAgICAgfSxcbiAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoQ2hlY2tDaXJjbGUsIHt9KTtcbiAgICAgICAgfVxuICAgICAgfSksIG51bGwpO1xuICAgICAgaW5zZXJ0KF9lbCQ1MywgY3JlYXRlQ29tcG9uZW50KFNob3csIHtcbiAgICAgICAgZ2V0IHdoZW4oKSB7XG4gICAgICAgICAgcmV0dXJuIGNvbG9yKCkgPT09IFwicmVkXCI7XG4gICAgICAgIH0sXG4gICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KFhDaXJjbGUsIHt9KTtcbiAgICAgICAgfVxuICAgICAgfSksIG51bGwpO1xuICAgICAgaW5zZXJ0KF9lbCQ1MywgY3JlYXRlQ29tcG9uZW50KFNob3csIHtcbiAgICAgICAgZ2V0IHdoZW4oKSB7XG4gICAgICAgICAgcmV0dXJuIGNvbG9yKCkgPT09IFwieWVsbG93XCI7XG4gICAgICAgIH0sXG4gICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KExvYWRpbmdDaXJjbGUsIHt9KTtcbiAgICAgICAgfVxuICAgICAgfSksIG51bGwpO1xuICAgICAgaW5zZXJ0KF9lbCQ1NCwgY3JlYXRlQ29tcG9uZW50KFNob3csIHtcbiAgICAgICAgZ2V0IHdoZW4oKSB7XG4gICAgICAgICAgcmV0dXJuIHByb3BzLm11dGF0aW9uLm9wdGlvbnMubXV0YXRpb25LZXk7XG4gICAgICAgIH0sXG4gICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICByZXR1cm4gW2NyZWF0ZU1lbW8oKCkgPT4gSlNPTi5zdHJpbmdpZnkocHJvcHMubXV0YXRpb24ub3B0aW9ucy5tdXRhdGlvbktleSkpLCBcIiAtXCIsIFwiIFwiXTtcbiAgICAgICAgfVxuICAgICAgfSksIG51bGwpO1xuICAgICAgaW5zZXJ0KF9lbCQ1NCwgKCkgPT4gbmV3IERhdGUocHJvcHMubXV0YXRpb24uc3RhdGUuc3VibWl0dGVkQXQpLnRvTG9jYWxlU3RyaW5nKCksIG51bGwpO1xuICAgICAgY3JlYXRlUmVuZGVyRWZmZWN0KChfcCQpID0+IHtcbiAgICAgICAgY29uc3QgX3YkMjkgPSBjbHN4KHN0eWxlcygpLnF1ZXJ5Um93LCBzZWxlY3RlZE11dGF0aW9uSWQoKSA9PT0gcHJvcHMubXV0YXRpb24ubXV0YXRpb25JZCAmJiBzdHlsZXMoKS5zZWxlY3RlZFF1ZXJ5Um93LCBcInRzcWQtcXVlcnktcm93XCIpLCBfdiQzMCA9IGBNdXRhdGlvbiBzdWJtaXR0ZWQgYXQgJHtuZXcgRGF0ZShwcm9wcy5tdXRhdGlvbi5zdGF0ZS5zdWJtaXR0ZWRBdCkudG9Mb2NhbGVTdHJpbmcoKX1gLCBfdiQzMSA9IGNsc3goZ2V0T2JzZXJ2ZXJDb3VudENvbG9yU3R5bGVzKCksIFwidHNxZC1xdWVyeS1vYnNlcnZlci1jb3VudFwiKTtcbiAgICAgICAgX3YkMjkgIT09IF9wJC5fdiQyOSAmJiBjbGFzc05hbWUoX2VsJDUyLCBfcCQuX3YkMjkgPSBfdiQyOSk7XG4gICAgICAgIF92JDMwICE9PSBfcCQuX3YkMzAgJiYgc2V0QXR0cmlidXRlKF9lbCQ1MiwgXCJhcmlhLWxhYmVsXCIsIF9wJC5fdiQzMCA9IF92JDMwKTtcbiAgICAgICAgX3YkMzEgIT09IF9wJC5fdiQzMSAmJiBjbGFzc05hbWUoX2VsJDUzLCBfcCQuX3YkMzEgPSBfdiQzMSk7XG4gICAgICAgIHJldHVybiBfcCQ7XG4gICAgICB9LCB7XG4gICAgICAgIF92JDI5OiB2b2lkIDAsXG4gICAgICAgIF92JDMwOiB2b2lkIDAsXG4gICAgICAgIF92JDMxOiB2b2lkIDBcbiAgICAgIH0pO1xuICAgICAgcmV0dXJuIF9lbCQ1MjtcbiAgICB9XG4gIH0pO1xufTtcbnZhciBRdWVyeVN0YXR1c0NvdW50ID0gKCkgPT4ge1xuICBjb25zdCBzdGFsZSA9IGNyZWF0ZVN1YnNjcmliZVRvUXVlcnlDYWNoZUJhdGNoZXIoKHF1ZXJ5Q2FjaGUpID0+IHF1ZXJ5Q2FjaGUoKS5nZXRBbGwoKS5maWx0ZXIoKHEpID0+IGdldFF1ZXJ5U3RhdHVzTGFiZWwocSkgPT09IFwic3RhbGVcIikubGVuZ3RoKTtcbiAgY29uc3QgZnJlc2ggPSBjcmVhdGVTdWJzY3JpYmVUb1F1ZXJ5Q2FjaGVCYXRjaGVyKChxdWVyeUNhY2hlKSA9PiBxdWVyeUNhY2hlKCkuZ2V0QWxsKCkuZmlsdGVyKChxKSA9PiBnZXRRdWVyeVN0YXR1c0xhYmVsKHEpID09PSBcImZyZXNoXCIpLmxlbmd0aCk7XG4gIGNvbnN0IGZldGNoaW5nID0gY3JlYXRlU3Vic2NyaWJlVG9RdWVyeUNhY2hlQmF0Y2hlcigocXVlcnlDYWNoZSkgPT4gcXVlcnlDYWNoZSgpLmdldEFsbCgpLmZpbHRlcigocSkgPT4gZ2V0UXVlcnlTdGF0dXNMYWJlbChxKSA9PT0gXCJmZXRjaGluZ1wiKS5sZW5ndGgpO1xuICBjb25zdCBwYXVzZWQgPSBjcmVhdGVTdWJzY3JpYmVUb1F1ZXJ5Q2FjaGVCYXRjaGVyKChxdWVyeUNhY2hlKSA9PiBxdWVyeUNhY2hlKCkuZ2V0QWxsKCkuZmlsdGVyKChxKSA9PiBnZXRRdWVyeVN0YXR1c0xhYmVsKHEpID09PSBcInBhdXNlZFwiKS5sZW5ndGgpO1xuICBjb25zdCBpbmFjdGl2ZSA9IGNyZWF0ZVN1YnNjcmliZVRvUXVlcnlDYWNoZUJhdGNoZXIoKHF1ZXJ5Q2FjaGUpID0+IHF1ZXJ5Q2FjaGUoKS5nZXRBbGwoKS5maWx0ZXIoKHEpID0+IGdldFF1ZXJ5U3RhdHVzTGFiZWwocSkgPT09IFwiaW5hY3RpdmVcIikubGVuZ3RoKTtcbiAgY29uc3QgdGhlbWUgPSB1c2VUaGVtZSgpO1xuICBjb25zdCBjc3MgPSB1c2VRdWVyeURldnRvb2xzQ29udGV4dCgpLnNoYWRvd0RPTVRhcmdldCA/IHUuYmluZCh7XG4gICAgdGFyZ2V0OiB1c2VRdWVyeURldnRvb2xzQ29udGV4dCgpLnNoYWRvd0RPTVRhcmdldFxuICB9KSA6IHU7XG4gIGNvbnN0IHN0eWxlcyA9IGNyZWF0ZU1lbW8oKCkgPT4ge1xuICAgIHJldHVybiB0aGVtZSgpID09PSBcImRhcmtcIiA/IGRhcmtTdHlsZXMyKGNzcykgOiBsaWdodFN0eWxlczIoY3NzKTtcbiAgfSk7XG4gIHJldHVybiAoKCkgPT4ge1xuICAgIGNvbnN0IF9lbCQ1NSA9IF90bXBsJDI2KCk7XG4gICAgaW5zZXJ0KF9lbCQ1NSwgY3JlYXRlQ29tcG9uZW50KFF1ZXJ5U3RhdHVzLCB7XG4gICAgICBsYWJlbDogXCJGcmVzaFwiLFxuICAgICAgY29sb3I6IFwiZ3JlZW5cIixcbiAgICAgIGdldCBjb3VudCgpIHtcbiAgICAgICAgcmV0dXJuIGZyZXNoKCk7XG4gICAgICB9XG4gICAgfSksIG51bGwpO1xuICAgIGluc2VydChfZWwkNTUsIGNyZWF0ZUNvbXBvbmVudChRdWVyeVN0YXR1cywge1xuICAgICAgbGFiZWw6IFwiRmV0Y2hpbmdcIixcbiAgICAgIGNvbG9yOiBcImJsdWVcIixcbiAgICAgIGdldCBjb3VudCgpIHtcbiAgICAgICAgcmV0dXJuIGZldGNoaW5nKCk7XG4gICAgICB9XG4gICAgfSksIG51bGwpO1xuICAgIGluc2VydChfZWwkNTUsIGNyZWF0ZUNvbXBvbmVudChRdWVyeVN0YXR1cywge1xuICAgICAgbGFiZWw6IFwiUGF1c2VkXCIsXG4gICAgICBjb2xvcjogXCJwdXJwbGVcIixcbiAgICAgIGdldCBjb3VudCgpIHtcbiAgICAgICAgcmV0dXJuIHBhdXNlZCgpO1xuICAgICAgfVxuICAgIH0pLCBudWxsKTtcbiAgICBpbnNlcnQoX2VsJDU1LCBjcmVhdGVDb21wb25lbnQoUXVlcnlTdGF0dXMsIHtcbiAgICAgIGxhYmVsOiBcIlN0YWxlXCIsXG4gICAgICBjb2xvcjogXCJ5ZWxsb3dcIixcbiAgICAgIGdldCBjb3VudCgpIHtcbiAgICAgICAgcmV0dXJuIHN0YWxlKCk7XG4gICAgICB9XG4gICAgfSksIG51bGwpO1xuICAgIGluc2VydChfZWwkNTUsIGNyZWF0ZUNvbXBvbmVudChRdWVyeVN0YXR1cywge1xuICAgICAgbGFiZWw6IFwiSW5hY3RpdmVcIixcbiAgICAgIGNvbG9yOiBcImdyYXlcIixcbiAgICAgIGdldCBjb3VudCgpIHtcbiAgICAgICAgcmV0dXJuIGluYWN0aXZlKCk7XG4gICAgICB9XG4gICAgfSksIG51bGwpO1xuICAgIGNyZWF0ZVJlbmRlckVmZmVjdCgoKSA9PiBjbGFzc05hbWUoX2VsJDU1LCBjbHN4KHN0eWxlcygpLnF1ZXJ5U3RhdHVzQ29udGFpbmVyLCBcInRzcWQtcXVlcnktc3RhdHVzLWNvbnRhaW5lclwiKSkpO1xuICAgIHJldHVybiBfZWwkNTU7XG4gIH0pKCk7XG59O1xudmFyIE11dGF0aW9uU3RhdHVzQ291bnQgPSAoKSA9PiB7XG4gIGNvbnN0IHN1Y2Nlc3MgPSBjcmVhdGVTdWJzY3JpYmVUb011dGF0aW9uQ2FjaGVCYXRjaGVyKChtdXRhdGlvbkNhY2hlKSA9PiBtdXRhdGlvbkNhY2hlKCkuZ2V0QWxsKCkuZmlsdGVyKChtKSA9PiBnZXRNdXRhdGlvblN0YXR1c0NvbG9yKHtcbiAgICBpc1BhdXNlZDogbS5zdGF0ZS5pc1BhdXNlZCxcbiAgICBzdGF0dXM6IG0uc3RhdGUuc3RhdHVzXG4gIH0pID09PSBcImdyZWVuXCIpLmxlbmd0aCk7XG4gIGNvbnN0IHBlbmRpbmcgPSBjcmVhdGVTdWJzY3JpYmVUb011dGF0aW9uQ2FjaGVCYXRjaGVyKChtdXRhdGlvbkNhY2hlKSA9PiBtdXRhdGlvbkNhY2hlKCkuZ2V0QWxsKCkuZmlsdGVyKChtKSA9PiBnZXRNdXRhdGlvblN0YXR1c0NvbG9yKHtcbiAgICBpc1BhdXNlZDogbS5zdGF0ZS5pc1BhdXNlZCxcbiAgICBzdGF0dXM6IG0uc3RhdGUuc3RhdHVzXG4gIH0pID09PSBcInllbGxvd1wiKS5sZW5ndGgpO1xuICBjb25zdCBwYXVzZWQgPSBjcmVhdGVTdWJzY3JpYmVUb011dGF0aW9uQ2FjaGVCYXRjaGVyKChtdXRhdGlvbkNhY2hlKSA9PiBtdXRhdGlvbkNhY2hlKCkuZ2V0QWxsKCkuZmlsdGVyKChtKSA9PiBnZXRNdXRhdGlvblN0YXR1c0NvbG9yKHtcbiAgICBpc1BhdXNlZDogbS5zdGF0ZS5pc1BhdXNlZCxcbiAgICBzdGF0dXM6IG0uc3RhdGUuc3RhdHVzXG4gIH0pID09PSBcInB1cnBsZVwiKS5sZW5ndGgpO1xuICBjb25zdCBlcnJvciA9IGNyZWF0ZVN1YnNjcmliZVRvTXV0YXRpb25DYWNoZUJhdGNoZXIoKG11dGF0aW9uQ2FjaGUpID0+IG11dGF0aW9uQ2FjaGUoKS5nZXRBbGwoKS5maWx0ZXIoKG0pID0+IGdldE11dGF0aW9uU3RhdHVzQ29sb3Ioe1xuICAgIGlzUGF1c2VkOiBtLnN0YXRlLmlzUGF1c2VkLFxuICAgIHN0YXR1czogbS5zdGF0ZS5zdGF0dXNcbiAgfSkgPT09IFwicmVkXCIpLmxlbmd0aCk7XG4gIGNvbnN0IHRoZW1lID0gdXNlVGhlbWUoKTtcbiAgY29uc3QgY3NzID0gdXNlUXVlcnlEZXZ0b29sc0NvbnRleHQoKS5zaGFkb3dET01UYXJnZXQgPyB1LmJpbmQoe1xuICAgIHRhcmdldDogdXNlUXVlcnlEZXZ0b29sc0NvbnRleHQoKS5zaGFkb3dET01UYXJnZXRcbiAgfSkgOiB1O1xuICBjb25zdCBzdHlsZXMgPSBjcmVhdGVNZW1vKCgpID0+IHtcbiAgICByZXR1cm4gdGhlbWUoKSA9PT0gXCJkYXJrXCIgPyBkYXJrU3R5bGVzMihjc3MpIDogbGlnaHRTdHlsZXMyKGNzcyk7XG4gIH0pO1xuICByZXR1cm4gKCgpID0+IHtcbiAgICBjb25zdCBfZWwkNTYgPSBfdG1wbCQyNigpO1xuICAgIGluc2VydChfZWwkNTYsIGNyZWF0ZUNvbXBvbmVudChRdWVyeVN0YXR1cywge1xuICAgICAgbGFiZWw6IFwiUGF1c2VkXCIsXG4gICAgICBjb2xvcjogXCJwdXJwbGVcIixcbiAgICAgIGdldCBjb3VudCgpIHtcbiAgICAgICAgcmV0dXJuIHBhdXNlZCgpO1xuICAgICAgfVxuICAgIH0pLCBudWxsKTtcbiAgICBpbnNlcnQoX2VsJDU2LCBjcmVhdGVDb21wb25lbnQoUXVlcnlTdGF0dXMsIHtcbiAgICAgIGxhYmVsOiBcIlBlbmRpbmdcIixcbiAgICAgIGNvbG9yOiBcInllbGxvd1wiLFxuICAgICAgZ2V0IGNvdW50KCkge1xuICAgICAgICByZXR1cm4gcGVuZGluZygpO1xuICAgICAgfVxuICAgIH0pLCBudWxsKTtcbiAgICBpbnNlcnQoX2VsJDU2LCBjcmVhdGVDb21wb25lbnQoUXVlcnlTdGF0dXMsIHtcbiAgICAgIGxhYmVsOiBcIlN1Y2Nlc3NcIixcbiAgICAgIGNvbG9yOiBcImdyZWVuXCIsXG4gICAgICBnZXQgY291bnQoKSB7XG4gICAgICAgIHJldHVybiBzdWNjZXNzKCk7XG4gICAgICB9XG4gICAgfSksIG51bGwpO1xuICAgIGluc2VydChfZWwkNTYsIGNyZWF0ZUNvbXBvbmVudChRdWVyeVN0YXR1cywge1xuICAgICAgbGFiZWw6IFwiRXJyb3JcIixcbiAgICAgIGNvbG9yOiBcInJlZFwiLFxuICAgICAgZ2V0IGNvdW50KCkge1xuICAgICAgICByZXR1cm4gZXJyb3IoKTtcbiAgICAgIH1cbiAgICB9KSwgbnVsbCk7XG4gICAgY3JlYXRlUmVuZGVyRWZmZWN0KCgpID0+IGNsYXNzTmFtZShfZWwkNTYsIGNsc3goc3R5bGVzKCkucXVlcnlTdGF0dXNDb250YWluZXIsIFwidHNxZC1xdWVyeS1zdGF0dXMtY29udGFpbmVyXCIpKSk7XG4gICAgcmV0dXJuIF9lbCQ1NjtcbiAgfSkoKTtcbn07XG52YXIgUXVlcnlTdGF0dXMgPSAocHJvcHMpID0+IHtcbiAgY29uc3QgdGhlbWUgPSB1c2VUaGVtZSgpO1xuICBjb25zdCBjc3MgPSB1c2VRdWVyeURldnRvb2xzQ29udGV4dCgpLnNoYWRvd0RPTVRhcmdldCA/IHUuYmluZCh7XG4gICAgdGFyZ2V0OiB1c2VRdWVyeURldnRvb2xzQ29udGV4dCgpLnNoYWRvd0RPTVRhcmdldFxuICB9KSA6IHU7XG4gIGNvbnN0IHN0eWxlcyA9IGNyZWF0ZU1lbW8oKCkgPT4ge1xuICAgIHJldHVybiB0aGVtZSgpID09PSBcImRhcmtcIiA/IGRhcmtTdHlsZXMyKGNzcykgOiBsaWdodFN0eWxlczIoY3NzKTtcbiAgfSk7XG4gIGNvbnN0IHtcbiAgICBjb2xvcnMsXG4gICAgYWxwaGFcbiAgfSA9IHRva2VucztcbiAgY29uc3QgdDIgPSAobGlnaHQsIGRhcmspID0+IHRoZW1lKCkgPT09IFwiZGFya1wiID8gZGFyayA6IGxpZ2h0O1xuICBsZXQgdGFnUmVmO1xuICBjb25zdCBbbW91c2VPdmVyLCBzZXRNb3VzZU92ZXJdID0gY3JlYXRlU2lnbmFsKGZhbHNlKTtcbiAgY29uc3QgW2ZvY3VzZWQsIHNldEZvY3VzZWRdID0gY3JlYXRlU2lnbmFsKGZhbHNlKTtcbiAgY29uc3Qgc2hvd0xhYmVsID0gY3JlYXRlTWVtbygoKSA9PiB7XG4gICAgaWYgKHNlbGVjdGVkUXVlcnlIYXNoKCkpIHtcbiAgICAgIGlmIChwYW5lbFdpZHRoKCkgPCBmaXJzdEJyZWFrcG9pbnQgJiYgcGFuZWxXaWR0aCgpID4gc2Vjb25kQnJlYWtwb2ludCkge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICB9XG4gICAgfVxuICAgIGlmIChwYW5lbFdpZHRoKCkgPCB0aGlyZEJyZWFrcG9pbnQpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgcmV0dXJuIHRydWU7XG4gIH0pO1xuICByZXR1cm4gKCgpID0+IHtcbiAgICBjb25zdCBfZWwkNTcgPSBfdG1wbCQyNygpLCBfZWwkNTkgPSBfZWwkNTcuZmlyc3RDaGlsZCwgX2VsJDYxID0gX2VsJDU5Lm5leHRTaWJsaW5nO1xuICAgIGNvbnN0IF9yZWYkNCA9IHRhZ1JlZjtcbiAgICB0eXBlb2YgX3JlZiQ0ID09PSBcImZ1bmN0aW9uXCIgPyB1c2UoX3JlZiQ0LCBfZWwkNTcpIDogdGFnUmVmID0gX2VsJDU3O1xuICAgIF9lbCQ1Ny5hZGRFdmVudExpc3RlbmVyKFwibW91c2VsZWF2ZVwiLCAoKSA9PiB7XG4gICAgICBzZXRNb3VzZU92ZXIoZmFsc2UpO1xuICAgICAgc2V0Rm9jdXNlZChmYWxzZSk7XG4gICAgfSk7XG4gICAgX2VsJDU3LmFkZEV2ZW50TGlzdGVuZXIoXCJtb3VzZWVudGVyXCIsICgpID0+IHNldE1vdXNlT3Zlcih0cnVlKSk7XG4gICAgX2VsJDU3LmFkZEV2ZW50TGlzdGVuZXIoXCJibHVyXCIsICgpID0+IHNldEZvY3VzZWQoZmFsc2UpKTtcbiAgICBfZWwkNTcuYWRkRXZlbnRMaXN0ZW5lcihcImZvY3VzXCIsICgpID0+IHNldEZvY3VzZWQodHJ1ZSkpO1xuICAgIHNwcmVhZChfZWwkNTcsIG1lcmdlUHJvcHMoe1xuICAgICAgZ2V0IGRpc2FibGVkKCkge1xuICAgICAgICByZXR1cm4gc2hvd0xhYmVsKCk7XG4gICAgICB9LFxuICAgICAgZ2V0IFtcImNsYXNzXCJdKCkge1xuICAgICAgICByZXR1cm4gY2xzeChzdHlsZXMoKS5xdWVyeVN0YXR1c1RhZywgIXNob3dMYWJlbCgpICYmIGNzc2BcbiAgICAgICAgICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICAgICAgICAgICY6aG92ZXIge1xuICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiAke3QyKGNvbG9ycy5ncmF5WzIwMF0sIGNvbG9ycy5kYXJrR3JheVs0MDBdKX0ke2FscGhhWzgwXX07XG4gICAgICAgICAgICB9XG4gICAgICAgICAgYCwgXCJ0c3FkLXF1ZXJ5LXN0YXR1cy10YWdcIiwgYHRzcWQtcXVlcnktc3RhdHVzLXRhZy0ke3Byb3BzLmxhYmVsLnRvTG93ZXJDYXNlKCl9YCk7XG4gICAgICB9XG4gICAgfSwgKCkgPT4gbW91c2VPdmVyKCkgfHwgZm9jdXNlZCgpID8ge1xuICAgICAgXCJhcmlhLWRlc2NyaWJlZGJ5XCI6IFwidHNxZC1zdGF0dXMtdG9vbHRpcFwiXG4gICAgfSA6IHt9KSwgZmFsc2UsIHRydWUpO1xuICAgIGluc2VydChfZWwkNTcsIGNyZWF0ZUNvbXBvbmVudChTaG93LCB7XG4gICAgICBnZXQgd2hlbigpIHtcbiAgICAgICAgcmV0dXJuIGNyZWF0ZU1lbW8oKCkgPT4gISEhc2hvd0xhYmVsKCkpKCkgJiYgKG1vdXNlT3ZlcigpIHx8IGZvY3VzZWQoKSk7XG4gICAgICB9LFxuICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICBjb25zdCBfZWwkNTggPSBfdG1wbCQyNTIoKTtcbiAgICAgICAgaW5zZXJ0KF9lbCQ1OCwgKCkgPT4gcHJvcHMubGFiZWwpO1xuICAgICAgICBjcmVhdGVSZW5kZXJFZmZlY3QoKCkgPT4gY2xhc3NOYW1lKF9lbCQ1OCwgY2xzeChzdHlsZXMoKS5zdGF0dXNUb29sdGlwLCBcInRzcWQtcXVlcnktc3RhdHVzLXRvb2x0aXBcIikpKTtcbiAgICAgICAgcmV0dXJuIF9lbCQ1ODtcbiAgICAgIH1cbiAgICB9KSwgX2VsJDU5KTtcbiAgICBpbnNlcnQoX2VsJDU3LCBjcmVhdGVDb21wb25lbnQoU2hvdywge1xuICAgICAgZ2V0IHdoZW4oKSB7XG4gICAgICAgIHJldHVybiBzaG93TGFiZWwoKTtcbiAgICAgIH0sXG4gICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgIGNvbnN0IF9lbCQ2MCA9IF90bXBsJDI2MigpO1xuICAgICAgICBpbnNlcnQoX2VsJDYwLCAoKSA9PiBwcm9wcy5sYWJlbCk7XG4gICAgICAgIGNyZWF0ZVJlbmRlckVmZmVjdCgoKSA9PiBjbGFzc05hbWUoX2VsJDYwLCBjbHN4KHN0eWxlcygpLnF1ZXJ5U3RhdHVzVGFnTGFiZWwsIFwidHNxZC1xdWVyeS1zdGF0dXMtdGFnLWxhYmVsXCIpKSk7XG4gICAgICAgIHJldHVybiBfZWwkNjA7XG4gICAgICB9XG4gICAgfSksIF9lbCQ2MSk7XG4gICAgaW5zZXJ0KF9lbCQ2MSwgKCkgPT4gcHJvcHMuY291bnQpO1xuICAgIGNyZWF0ZVJlbmRlckVmZmVjdCgoX3AkKSA9PiB7XG4gICAgICBjb25zdCBfdiQzMiA9IGNsc3goY3NzYFxuICAgICAgICAgICAgd2lkdGg6ICR7dG9rZW5zLnNpemVbMS41XX07XG4gICAgICAgICAgICBoZWlnaHQ6ICR7dG9rZW5zLnNpemVbMS41XX07XG4gICAgICAgICAgICBib3JkZXItcmFkaXVzOiAke3Rva2Vucy5ib3JkZXIucmFkaXVzLmZ1bGx9O1xuICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHt0b2tlbnMuY29sb3JzW3Byb3BzLmNvbG9yXVs1MDBdfTtcbiAgICAgICAgICBgLCBcInRzcWQtcXVlcnktc3RhdHVzLXRhZy1kb3RcIiksIF92JDMzID0gY2xzeChzdHlsZXMoKS5xdWVyeVN0YXR1c0NvdW50LCBwcm9wcy5jb3VudCA+IDAgJiYgcHJvcHMuY29sb3IgIT09IFwiZ3JheVwiICYmIGNzc2BcbiAgICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHt0Mihjb2xvcnNbcHJvcHMuY29sb3JdWzEwMF0sIGNvbG9yc1twcm9wcy5jb2xvcl1bOTAwXSl9O1xuICAgICAgICAgICAgICBjb2xvcjogJHt0Mihjb2xvcnNbcHJvcHMuY29sb3JdWzcwMF0sIGNvbG9yc1twcm9wcy5jb2xvcl1bMzAwXSl9O1xuICAgICAgICAgICAgYCwgXCJ0c3FkLXF1ZXJ5LXN0YXR1cy10YWctY291bnRcIik7XG4gICAgICBfdiQzMiAhPT0gX3AkLl92JDMyICYmIGNsYXNzTmFtZShfZWwkNTksIF9wJC5fdiQzMiA9IF92JDMyKTtcbiAgICAgIF92JDMzICE9PSBfcCQuX3YkMzMgJiYgY2xhc3NOYW1lKF9lbCQ2MSwgX3AkLl92JDMzID0gX3YkMzMpO1xuICAgICAgcmV0dXJuIF9wJDtcbiAgICB9LCB7XG4gICAgICBfdiQzMjogdm9pZCAwLFxuICAgICAgX3YkMzM6IHZvaWQgMFxuICAgIH0pO1xuICAgIHJldHVybiBfZWwkNTc7XG4gIH0pKCk7XG59O1xudmFyIFF1ZXJ5RGV0YWlscyA9ICgpID0+IHtcbiAgY29uc3QgdGhlbWUgPSB1c2VUaGVtZSgpO1xuICBjb25zdCBjc3MgPSB1c2VRdWVyeURldnRvb2xzQ29udGV4dCgpLnNoYWRvd0RPTVRhcmdldCA/IHUuYmluZCh7XG4gICAgdGFyZ2V0OiB1c2VRdWVyeURldnRvb2xzQ29udGV4dCgpLnNoYWRvd0RPTVRhcmdldFxuICB9KSA6IHU7XG4gIGNvbnN0IHN0eWxlcyA9IGNyZWF0ZU1lbW8oKCkgPT4ge1xuICAgIHJldHVybiB0aGVtZSgpID09PSBcImRhcmtcIiA/IGRhcmtTdHlsZXMyKGNzcykgOiBsaWdodFN0eWxlczIoY3NzKTtcbiAgfSk7XG4gIGNvbnN0IHtcbiAgICBjb2xvcnNcbiAgfSA9IHRva2VucztcbiAgY29uc3QgdDIgPSAobGlnaHQsIGRhcmspID0+IHRoZW1lKCkgPT09IFwiZGFya1wiID8gZGFyayA6IGxpZ2h0O1xuICBjb25zdCBxdWVyeUNsaWVudCA9IHVzZVF1ZXJ5RGV2dG9vbHNDb250ZXh0KCkuY2xpZW50O1xuICBjb25zdCBbcmVzdG9yaW5nTG9hZGluZywgc2V0UmVzdG9yaW5nTG9hZGluZ10gPSBjcmVhdGVTaWduYWwoZmFsc2UpO1xuICBjb25zdCBlcnJvclR5cGVzID0gY3JlYXRlTWVtbygoKSA9PiB7XG4gICAgcmV0dXJuIHVzZVF1ZXJ5RGV2dG9vbHNDb250ZXh0KCkuZXJyb3JUeXBlcyB8fCBbXTtcbiAgfSk7XG4gIGNvbnN0IGFjdGl2ZVF1ZXJ5ID0gY3JlYXRlU3Vic2NyaWJlVG9RdWVyeUNhY2hlQmF0Y2hlcigocXVlcnlDYWNoZSkgPT4gcXVlcnlDYWNoZSgpLmdldEFsbCgpLmZpbmQoKHF1ZXJ5KSA9PiBxdWVyeS5xdWVyeUhhc2ggPT09IHNlbGVjdGVkUXVlcnlIYXNoKCkpLCBmYWxzZSk7XG4gIGNvbnN0IGFjdGl2ZVF1ZXJ5RnJlc2ggPSBjcmVhdGVTdWJzY3JpYmVUb1F1ZXJ5Q2FjaGVCYXRjaGVyKChxdWVyeUNhY2hlKSA9PiB7XG4gICAgcmV0dXJuIHF1ZXJ5Q2FjaGUoKS5nZXRBbGwoKS5maW5kKChxdWVyeSkgPT4gcXVlcnkucXVlcnlIYXNoID09PSBzZWxlY3RlZFF1ZXJ5SGFzaCgpKTtcbiAgfSwgZmFsc2UpO1xuICBjb25zdCBhY3RpdmVRdWVyeVN0YXRlID0gY3JlYXRlU3Vic2NyaWJlVG9RdWVyeUNhY2hlQmF0Y2hlcigocXVlcnlDYWNoZSkgPT4gcXVlcnlDYWNoZSgpLmdldEFsbCgpLmZpbmQoKHF1ZXJ5KSA9PiBxdWVyeS5xdWVyeUhhc2ggPT09IHNlbGVjdGVkUXVlcnlIYXNoKCkpPy5zdGF0ZSwgZmFsc2UpO1xuICBjb25zdCBhY3RpdmVRdWVyeVN0YXRlRGF0YSA9IGNyZWF0ZVN1YnNjcmliZVRvUXVlcnlDYWNoZUJhdGNoZXIoKHF1ZXJ5Q2FjaGUpID0+IHtcbiAgICByZXR1cm4gcXVlcnlDYWNoZSgpLmdldEFsbCgpLmZpbmQoKHF1ZXJ5KSA9PiBxdWVyeS5xdWVyeUhhc2ggPT09IHNlbGVjdGVkUXVlcnlIYXNoKCkpPy5zdGF0ZS5kYXRhO1xuICB9LCBmYWxzZSk7XG4gIGNvbnN0IHN0YXR1c0xhYmVsID0gY3JlYXRlU3Vic2NyaWJlVG9RdWVyeUNhY2hlQmF0Y2hlcigocXVlcnlDYWNoZSkgPT4ge1xuICAgIGNvbnN0IHF1ZXJ5ID0gcXVlcnlDYWNoZSgpLmdldEFsbCgpLmZpbmQoKHEpID0+IHEucXVlcnlIYXNoID09PSBzZWxlY3RlZFF1ZXJ5SGFzaCgpKTtcbiAgICBpZiAoIXF1ZXJ5KVxuICAgICAgcmV0dXJuIFwiaW5hY3RpdmVcIjtcbiAgICByZXR1cm4gZ2V0UXVlcnlTdGF0dXNMYWJlbChxdWVyeSk7XG4gIH0pO1xuICBjb25zdCBxdWVyeVN0YXR1cyA9IGNyZWF0ZVN1YnNjcmliZVRvUXVlcnlDYWNoZUJhdGNoZXIoKHF1ZXJ5Q2FjaGUpID0+IHtcbiAgICBjb25zdCBxdWVyeSA9IHF1ZXJ5Q2FjaGUoKS5nZXRBbGwoKS5maW5kKChxKSA9PiBxLnF1ZXJ5SGFzaCA9PT0gc2VsZWN0ZWRRdWVyeUhhc2goKSk7XG4gICAgaWYgKCFxdWVyeSlcbiAgICAgIHJldHVybiBcInBlbmRpbmdcIjtcbiAgICByZXR1cm4gcXVlcnkuc3RhdGUuc3RhdHVzO1xuICB9KTtcbiAgY29uc3Qgb2JzZXJ2ZXJDb3VudCA9IGNyZWF0ZVN1YnNjcmliZVRvUXVlcnlDYWNoZUJhdGNoZXIoKHF1ZXJ5Q2FjaGUpID0+IHF1ZXJ5Q2FjaGUoKS5nZXRBbGwoKS5maW5kKChxdWVyeSkgPT4gcXVlcnkucXVlcnlIYXNoID09PSBzZWxlY3RlZFF1ZXJ5SGFzaCgpKT8uZ2V0T2JzZXJ2ZXJzQ291bnQoKSA/PyAwKTtcbiAgY29uc3QgY29sb3IgPSBjcmVhdGVNZW1vKCgpID0+IGdldFF1ZXJ5U3RhdHVzQ29sb3JCeUxhYmVsKHN0YXR1c0xhYmVsKCkpKTtcbiAgY29uc3QgaGFuZGxlUmVmZXRjaCA9ICgpID0+IHtcbiAgICBjb25zdCBwcm9taXNlID0gYWN0aXZlUXVlcnkoKT8uZmV0Y2goKTtcbiAgICBwcm9taXNlPy5jYXRjaCgoKSA9PiB7XG4gICAgfSk7XG4gIH07XG4gIGNvbnN0IHRyaWdnZXJFcnJvciA9IChlcnJvclR5cGUpID0+IHtcbiAgICBjb25zdCBlcnJvciA9IGVycm9yVHlwZT8uaW5pdGlhbGl6ZXIoYWN0aXZlUXVlcnkoKSkgPz8gbmV3IEVycm9yKFwiVW5rbm93biBlcnJvciBmcm9tIGRldnRvb2xzXCIpO1xuICAgIGNvbnN0IF9fcHJldmlvdXNRdWVyeU9wdGlvbnMgPSBhY3RpdmVRdWVyeSgpLm9wdGlvbnM7XG4gICAgYWN0aXZlUXVlcnkoKS5zZXRTdGF0ZSh7XG4gICAgICBzdGF0dXM6IFwiZXJyb3JcIixcbiAgICAgIGVycm9yLFxuICAgICAgZmV0Y2hNZXRhOiB7XG4gICAgICAgIC4uLmFjdGl2ZVF1ZXJ5KCkuc3RhdGUuZmV0Y2hNZXRhLFxuICAgICAgICBfX3ByZXZpb3VzUXVlcnlPcHRpb25zXG4gICAgICB9XG4gICAgfSk7XG4gIH07XG4gIGNvbnN0IHJlc3RvcmVRdWVyeUFmdGVyTG9hZGluZ09yRXJyb3IgPSAoKSA9PiB7XG4gICAgY29uc3QgYWN0aXZlUXVlcnlWYWwgPSBhY3RpdmVRdWVyeSgpO1xuICAgIGNvbnN0IHByZXZpb3VzU3RhdGUgPSBhY3RpdmVRdWVyeVZhbC5zdGF0ZTtcbiAgICBjb25zdCBwcmV2aW91c09wdGlvbnMgPSBhY3RpdmVRdWVyeVZhbC5zdGF0ZS5mZXRjaE1ldGEuX19wcmV2aW91c1F1ZXJ5T3B0aW9ucztcbiAgICBhY3RpdmVRdWVyeVZhbC5jYW5jZWwoe1xuICAgICAgc2lsZW50OiB0cnVlXG4gICAgfSk7XG4gICAgYWN0aXZlUXVlcnlWYWwuc2V0U3RhdGUoe1xuICAgICAgLi4ucHJldmlvdXNTdGF0ZSxcbiAgICAgIGZldGNoU3RhdHVzOiBcImlkbGVcIixcbiAgICAgIGZldGNoTWV0YTogbnVsbFxuICAgIH0pO1xuICAgIGFjdGl2ZVF1ZXJ5VmFsLmZldGNoKHByZXZpb3VzT3B0aW9ucyk7XG4gIH07XG4gIGNyZWF0ZUVmZmVjdCgoKSA9PiB7XG4gICAgaWYgKHN0YXR1c0xhYmVsKCkgIT09IFwiZmV0Y2hpbmdcIikge1xuICAgICAgc2V0UmVzdG9yaW5nTG9hZGluZyhmYWxzZSk7XG4gICAgfVxuICB9KTtcbiAgY29uc3QgZ2V0UXVlcnlTdGF0dXNDb2xvcnMgPSAoKSA9PiB7XG4gICAgaWYgKGNvbG9yKCkgPT09IFwiZ3JheVwiKSB7XG4gICAgICByZXR1cm4gY3NzYFxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke3QyKGNvbG9yc1tjb2xvcigpXVsyMDBdLCBjb2xvcnNbY29sb3IoKV1bNzAwXSl9O1xuICAgICAgICBjb2xvcjogJHt0Mihjb2xvcnNbY29sb3IoKV1bNzAwXSwgY29sb3JzW2NvbG9yKCldWzMwMF0pfTtcbiAgICAgICAgYm9yZGVyLWNvbG9yOiAke3QyKGNvbG9yc1tjb2xvcigpXVs0MDBdLCBjb2xvcnNbY29sb3IoKV1bNjAwXSl9O1xuICAgICAgYDtcbiAgICB9XG4gICAgcmV0dXJuIGNzc2BcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICR7dDIoY29sb3JzW2NvbG9yKCldWzEwMF0sIGNvbG9yc1tjb2xvcigpXVs5MDBdKX07XG4gICAgICBjb2xvcjogJHt0Mihjb2xvcnNbY29sb3IoKV1bNzAwXSwgY29sb3JzW2NvbG9yKCldWzMwMF0pfTtcbiAgICAgIGJvcmRlci1jb2xvcjogJHt0Mihjb2xvcnNbY29sb3IoKV1bNDAwXSwgY29sb3JzW2NvbG9yKCldWzYwMF0pfTtcbiAgICBgO1xuICB9O1xuICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KFNob3csIHtcbiAgICBnZXQgd2hlbigpIHtcbiAgICAgIHJldHVybiBjcmVhdGVNZW1vKCgpID0+ICEhYWN0aXZlUXVlcnkoKSkoKSAmJiBhY3RpdmVRdWVyeVN0YXRlKCk7XG4gICAgfSxcbiAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICBjb25zdCBfZWwkNjIgPSBfdG1wbCQzMCgpLCBfZWwkNjMgPSBfZWwkNjIuZmlyc3RDaGlsZCwgX2VsJDY0ID0gX2VsJDYzLm5leHRTaWJsaW5nLCBfZWwkNjUgPSBfZWwkNjQuZmlyc3RDaGlsZCwgX2VsJDY2ID0gX2VsJDY1LmZpcnN0Q2hpbGQsIF9lbCQ2NyA9IF9lbCQ2Ni5maXJzdENoaWxkLCBfZWwkNjggPSBfZWwkNjYubmV4dFNpYmxpbmcsIF9lbCQ2OSA9IF9lbCQ2NS5uZXh0U2libGluZywgX2VsJDcwID0gX2VsJDY5LmZpcnN0Q2hpbGQsIF9lbCQ3MSA9IF9lbCQ3MC5uZXh0U2libGluZywgX2VsJDcyID0gX2VsJDY5Lm5leHRTaWJsaW5nLCBfZWwkNzMgPSBfZWwkNzIuZmlyc3RDaGlsZCwgX2VsJDc0ID0gX2VsJDczLm5leHRTaWJsaW5nLCBfZWwkNzUgPSBfZWwkNjQubmV4dFNpYmxpbmcsIF9lbCQ3NiA9IF9lbCQ3NS5uZXh0U2libGluZywgX2VsJDc3ID0gX2VsJDc2LmZpcnN0Q2hpbGQsIF9lbCQ3OCA9IF9lbCQ3Ny5maXJzdENoaWxkLCBfZWwkNzkgPSBfZWwkNzcubmV4dFNpYmxpbmcsIF9lbCQ4MCA9IF9lbCQ3OS5maXJzdENoaWxkLCBfZWwkODEgPSBfZWwkNzkubmV4dFNpYmxpbmcsIF9lbCQ4MiA9IF9lbCQ4MS5maXJzdENoaWxkLCBfZWwkODMgPSBfZWwkODEubmV4dFNpYmxpbmcsIF9lbCQ4NCA9IF9lbCQ4My5maXJzdENoaWxkLCBfZWwkODUgPSBfZWwkODMubmV4dFNpYmxpbmcsIF9lbCQ4NiA9IF9lbCQ4NS5maXJzdENoaWxkLCBfZWwkODcgPSBfZWwkODYubmV4dFNpYmxpbmcsIF9lbCQ5NiA9IF9lbCQ3Ni5uZXh0U2libGluZywgX2VsJDk3ID0gX2VsJDk2Lm5leHRTaWJsaW5nLCBfZWwkOTggPSBfZWwkOTcubmV4dFNpYmxpbmcsIF9lbCQ5OSA9IF9lbCQ5OC5uZXh0U2libGluZztcbiAgICAgIGluc2VydChfZWwkNjcsICgpID0+IGRpc3BsYXlWYWx1ZShhY3RpdmVRdWVyeSgpLnF1ZXJ5S2V5LCB0cnVlKSk7XG4gICAgICBpbnNlcnQoX2VsJDY4LCBzdGF0dXNMYWJlbCk7XG4gICAgICBpbnNlcnQoX2VsJDcxLCBvYnNlcnZlckNvdW50KTtcbiAgICAgIGluc2VydChfZWwkNzQsICgpID0+IG5ldyBEYXRlKGFjdGl2ZVF1ZXJ5U3RhdGUoKS5kYXRhVXBkYXRlZEF0KS50b0xvY2FsZVRpbWVTdHJpbmcoKSk7XG4gICAgICBfZWwkNzcuJCRjbGljayA9IGhhbmRsZVJlZmV0Y2g7XG4gICAgICBfZWwkNzkuJCRjbGljayA9ICgpID0+IHF1ZXJ5Q2xpZW50LmludmFsaWRhdGVRdWVyaWVzKGFjdGl2ZVF1ZXJ5KCkpO1xuICAgICAgX2VsJDgxLiQkY2xpY2sgPSAoKSA9PiBxdWVyeUNsaWVudC5yZXNldFF1ZXJpZXMoYWN0aXZlUXVlcnkoKSk7XG4gICAgICBfZWwkODMuJCRjbGljayA9ICgpID0+IHtcbiAgICAgICAgcXVlcnlDbGllbnQucmVtb3ZlUXVlcmllcyhhY3RpdmVRdWVyeSgpKTtcbiAgICAgICAgc2V0U2VsZWN0ZWRRdWVyeUhhc2gobnVsbCk7XG4gICAgICB9O1xuICAgICAgX2VsJDg1LiQkY2xpY2sgPSAoKSA9PiB7XG4gICAgICAgIGlmIChhY3RpdmVRdWVyeSgpPy5zdGF0ZS5kYXRhID09PSB2b2lkIDApIHtcbiAgICAgICAgICBzZXRSZXN0b3JpbmdMb2FkaW5nKHRydWUpO1xuICAgICAgICAgIHJlc3RvcmVRdWVyeUFmdGVyTG9hZGluZ09yRXJyb3IoKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBjb25zdCBhY3RpdmVRdWVyeVZhbCA9IGFjdGl2ZVF1ZXJ5KCk7XG4gICAgICAgICAgaWYgKCFhY3RpdmVRdWVyeVZhbClcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICBjb25zdCBfX3ByZXZpb3VzUXVlcnlPcHRpb25zID0gYWN0aXZlUXVlcnlWYWwub3B0aW9ucztcbiAgICAgICAgICBhY3RpdmVRdWVyeVZhbC5mZXRjaCh7XG4gICAgICAgICAgICAuLi5fX3ByZXZpb3VzUXVlcnlPcHRpb25zLFxuICAgICAgICAgICAgcXVlcnlGbjogKCkgPT4ge1xuICAgICAgICAgICAgICByZXR1cm4gbmV3IFByb21pc2UoKCkgPT4ge1xuICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBnY1RpbWU6IC0xXG4gICAgICAgICAgfSk7XG4gICAgICAgICAgYWN0aXZlUXVlcnlWYWwuc2V0U3RhdGUoe1xuICAgICAgICAgICAgZGF0YTogdm9pZCAwLFxuICAgICAgICAgICAgc3RhdHVzOiBcInBlbmRpbmdcIixcbiAgICAgICAgICAgIGZldGNoTWV0YToge1xuICAgICAgICAgICAgICAuLi5hY3RpdmVRdWVyeVZhbC5zdGF0ZS5mZXRjaE1ldGEsXG4gICAgICAgICAgICAgIF9fcHJldmlvdXNRdWVyeU9wdGlvbnNcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgfTtcbiAgICAgIGluc2VydChfZWwkODUsICgpID0+IHF1ZXJ5U3RhdHVzKCkgPT09IFwicGVuZGluZ1wiID8gXCJSZXN0b3JlXCIgOiBcIlRyaWdnZXJcIiwgX2VsJDg3KTtcbiAgICAgIGluc2VydChfZWwkNzYsIGNyZWF0ZUNvbXBvbmVudChTaG93LCB7XG4gICAgICAgIGdldCB3aGVuKCkge1xuICAgICAgICAgIHJldHVybiBlcnJvclR5cGVzKCkubGVuZ3RoID09PSAwIHx8IHF1ZXJ5U3RhdHVzKCkgPT09IFwiZXJyb3JcIjtcbiAgICAgICAgfSxcbiAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgIGNvbnN0IF9lbCQ4OCA9IF90bXBsJDI4KCksIF9lbCQ4OSA9IF9lbCQ4OC5maXJzdENoaWxkLCBfZWwkOTAgPSBfZWwkODkubmV4dFNpYmxpbmc7XG4gICAgICAgICAgX2VsJDg4LiQkY2xpY2sgPSAoKSA9PiB7XG4gICAgICAgICAgICBpZiAoIWFjdGl2ZVF1ZXJ5KCkuc3RhdGUuZXJyb3IpIHtcbiAgICAgICAgICAgICAgdHJpZ2dlckVycm9yKCk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICBxdWVyeUNsaWVudC5yZXNldFF1ZXJpZXMoYWN0aXZlUXVlcnkoKSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfTtcbiAgICAgICAgICBpbnNlcnQoX2VsJDg4LCAoKSA9PiBxdWVyeVN0YXR1cygpID09PSBcImVycm9yXCIgPyBcIlJlc3RvcmVcIiA6IFwiVHJpZ2dlclwiLCBfZWwkOTApO1xuICAgICAgICAgIGNyZWF0ZVJlbmRlckVmZmVjdCgoX3AkKSA9PiB7XG4gICAgICAgICAgICBjb25zdCBfdiQzNCA9IGNsc3goY3NzYFxuICAgICAgICAgICAgICAgICAgY29sb3I6ICR7dDIoY29sb3JzLnJlZFs1MDBdLCBjb2xvcnMucmVkWzQwMF0pfTtcbiAgICAgICAgICAgICAgICBgLCBcInRzcWQtcXVlcnktZGV0YWlscy1hY3Rpb25zLWJ0blwiLCBcInRzcWQtcXVlcnktZGV0YWlscy1hY3Rpb24tZXJyb3JcIiksIF92JDM1ID0gcXVlcnlTdGF0dXMoKSA9PT0gXCJwZW5kaW5nXCIsIF92JDM2ID0gY3NzYFxuICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHt0Mihjb2xvcnMucmVkWzUwMF0sIGNvbG9ycy5yZWRbNDAwXSl9O1xuICAgICAgICAgICAgICAgIGA7XG4gICAgICAgICAgICBfdiQzNCAhPT0gX3AkLl92JDM0ICYmIGNsYXNzTmFtZShfZWwkODgsIF9wJC5fdiQzNCA9IF92JDM0KTtcbiAgICAgICAgICAgIF92JDM1ICE9PSBfcCQuX3YkMzUgJiYgKF9lbCQ4OC5kaXNhYmxlZCA9IF9wJC5fdiQzNSA9IF92JDM1KTtcbiAgICAgICAgICAgIF92JDM2ICE9PSBfcCQuX3YkMzYgJiYgY2xhc3NOYW1lKF9lbCQ4OSwgX3AkLl92JDM2ID0gX3YkMzYpO1xuICAgICAgICAgICAgcmV0dXJuIF9wJDtcbiAgICAgICAgICB9LCB7XG4gICAgICAgICAgICBfdiQzNDogdm9pZCAwLFxuICAgICAgICAgICAgX3YkMzU6IHZvaWQgMCxcbiAgICAgICAgICAgIF92JDM2OiB2b2lkIDBcbiAgICAgICAgICB9KTtcbiAgICAgICAgICByZXR1cm4gX2VsJDg4O1xuICAgICAgICB9XG4gICAgICB9KSwgbnVsbCk7XG4gICAgICBpbnNlcnQoX2VsJDc2LCBjcmVhdGVDb21wb25lbnQoU2hvdywge1xuICAgICAgICBnZXQgd2hlbigpIHtcbiAgICAgICAgICByZXR1cm4gIShlcnJvclR5cGVzKCkubGVuZ3RoID09PSAwIHx8IHF1ZXJ5U3RhdHVzKCkgPT09IFwiZXJyb3JcIik7XG4gICAgICAgIH0sXG4gICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICBjb25zdCBfZWwkOTEgPSBfdG1wbCQyOSgpLCBfZWwkOTIgPSBfZWwkOTEuZmlyc3RDaGlsZCwgX2VsJDkzID0gX2VsJDkyLm5leHRTaWJsaW5nLCBfZWwkOTQgPSBfZWwkOTMubmV4dFNpYmxpbmc7IF9lbCQ5NC5maXJzdENoaWxkO1xuICAgICAgICAgIF9lbCQ5NC5hZGRFdmVudExpc3RlbmVyKFwiY2hhbmdlXCIsIChlMikgPT4ge1xuICAgICAgICAgICAgY29uc3QgZXJyb3JUeXBlID0gZXJyb3JUeXBlcygpLmZpbmQoKGV0KSA9PiBldC5uYW1lID09PSBlMi5jdXJyZW50VGFyZ2V0LnZhbHVlKTtcbiAgICAgICAgICAgIHRyaWdnZXJFcnJvcihlcnJvclR5cGUpO1xuICAgICAgICAgIH0pO1xuICAgICAgICAgIGluc2VydChfZWwkOTQsIGNyZWF0ZUNvbXBvbmVudChGb3IsIHtcbiAgICAgICAgICAgIGdldCBlYWNoKCkge1xuICAgICAgICAgICAgICByZXR1cm4gZXJyb3JUeXBlcygpO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGNoaWxkcmVuOiAoZXJyb3JUeXBlKSA9PiAoKCkgPT4ge1xuICAgICAgICAgICAgICBjb25zdCBfZWwkMTAwID0gX3RtcGwkMzEoKTtcbiAgICAgICAgICAgICAgaW5zZXJ0KF9lbCQxMDAsICgpID0+IGVycm9yVHlwZS5uYW1lKTtcbiAgICAgICAgICAgICAgY3JlYXRlUmVuZGVyRWZmZWN0KCgpID0+IF9lbCQxMDAudmFsdWUgPSBlcnJvclR5cGUubmFtZSk7XG4gICAgICAgICAgICAgIHJldHVybiBfZWwkMTAwO1xuICAgICAgICAgICAgfSkoKVxuICAgICAgICAgIH0pLCBudWxsKTtcbiAgICAgICAgICBpbnNlcnQoX2VsJDkxLCBjcmVhdGVDb21wb25lbnQoQ2hldnJvbkRvd24sIHt9KSwgbnVsbCk7XG4gICAgICAgICAgY3JlYXRlUmVuZGVyRWZmZWN0KChfcCQpID0+IHtcbiAgICAgICAgICAgIGNvbnN0IF92JDM3ID0gY2xzeChzdHlsZXMoKS5hY3Rpb25zU2VsZWN0LCBcInRzcWQtcXVlcnktZGV0YWlscy1hY3Rpb25zLWJ0blwiLCBcInRzcWQtcXVlcnktZGV0YWlscy1hY3Rpb24tZXJyb3ItbXVsdGlwbGVcIiksIF92JDM4ID0gY3NzYFxuICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHt0b2tlbnMuY29sb3JzLnJlZFs0MDBdfTtcbiAgICAgICAgICAgICAgICBgLCBfdiQzOSA9IHF1ZXJ5U3RhdHVzKCkgPT09IFwicGVuZGluZ1wiO1xuICAgICAgICAgICAgX3YkMzcgIT09IF9wJC5fdiQzNyAmJiBjbGFzc05hbWUoX2VsJDkxLCBfcCQuX3YkMzcgPSBfdiQzNyk7XG4gICAgICAgICAgICBfdiQzOCAhPT0gX3AkLl92JDM4ICYmIGNsYXNzTmFtZShfZWwkOTIsIF9wJC5fdiQzOCA9IF92JDM4KTtcbiAgICAgICAgICAgIF92JDM5ICE9PSBfcCQuX3YkMzkgJiYgKF9lbCQ5NC5kaXNhYmxlZCA9IF9wJC5fdiQzOSA9IF92JDM5KTtcbiAgICAgICAgICAgIHJldHVybiBfcCQ7XG4gICAgICAgICAgfSwge1xuICAgICAgICAgICAgX3YkMzc6IHZvaWQgMCxcbiAgICAgICAgICAgIF92JDM4OiB2b2lkIDAsXG4gICAgICAgICAgICBfdiQzOTogdm9pZCAwXG4gICAgICAgICAgfSk7XG4gICAgICAgICAgcmV0dXJuIF9lbCQ5MTtcbiAgICAgICAgfVxuICAgICAgfSksIG51bGwpO1xuICAgICAgaW5zZXJ0KF9lbCQ5NywgY3JlYXRlQ29tcG9uZW50KEV4cGxvcmVyLCB7XG4gICAgICAgIGxhYmVsOiBcIkRhdGFcIixcbiAgICAgICAgZGVmYXVsdEV4cGFuZGVkOiBbXCJEYXRhXCJdLFxuICAgICAgICBnZXQgdmFsdWUoKSB7XG4gICAgICAgICAgcmV0dXJuIGFjdGl2ZVF1ZXJ5U3RhdGVEYXRhKCk7XG4gICAgICAgIH0sXG4gICAgICAgIGVkaXRhYmxlOiB0cnVlLFxuICAgICAgICBnZXQgYWN0aXZlUXVlcnkoKSB7XG4gICAgICAgICAgcmV0dXJuIGFjdGl2ZVF1ZXJ5KCk7XG4gICAgICAgIH1cbiAgICAgIH0pKTtcbiAgICAgIGluc2VydChfZWwkOTksIGNyZWF0ZUNvbXBvbmVudChFeHBsb3Jlciwge1xuICAgICAgICBsYWJlbDogXCJRdWVyeVwiLFxuICAgICAgICBkZWZhdWx0RXhwYW5kZWQ6IFtcIlF1ZXJ5XCIsIFwicXVlcnlLZXlcIl0sXG4gICAgICAgIGdldCB2YWx1ZSgpIHtcbiAgICAgICAgICByZXR1cm4gYWN0aXZlUXVlcnlGcmVzaCgpO1xuICAgICAgICB9XG4gICAgICB9KSk7XG4gICAgICBjcmVhdGVSZW5kZXJFZmZlY3QoKF9wJCkgPT4ge1xuICAgICAgICBjb25zdCBfdiQ0MCA9IGNsc3goc3R5bGVzKCkuZGV0YWlsc0NvbnRhaW5lciwgXCJ0c3FkLXF1ZXJ5LWRldGFpbHMtY29udGFpbmVyXCIpLCBfdiQ0MSA9IGNsc3goc3R5bGVzKCkuZGV0YWlsc0hlYWRlciwgXCJ0c3FkLXF1ZXJ5LWRldGFpbHMtaGVhZGVyXCIpLCBfdiQ0MiA9IGNsc3goc3R5bGVzKCkuZGV0YWlsc0JvZHksIFwidHNxZC1xdWVyeS1kZXRhaWxzLXN1bW1hcnktY29udGFpbmVyXCIpLCBfdiQ0MyA9IGNsc3goc3R5bGVzKCkucXVlcnlEZXRhaWxzU3RhdHVzLCBnZXRRdWVyeVN0YXR1c0NvbG9ycygpKSwgX3YkNDQgPSBjbHN4KHN0eWxlcygpLmRldGFpbHNIZWFkZXIsIFwidHNxZC1xdWVyeS1kZXRhaWxzLWhlYWRlclwiKSwgX3YkNDUgPSBjbHN4KHN0eWxlcygpLmFjdGlvbnNCb2R5LCBcInRzcWQtcXVlcnktZGV0YWlscy1hY3Rpb25zLWNvbnRhaW5lclwiKSwgX3YkNDYgPSBjbHN4KGNzc2BcbiAgICAgICAgICAgICAgICBjb2xvcjogJHt0Mihjb2xvcnMuYmx1ZVs2MDBdLCBjb2xvcnMuYmx1ZVs0MDBdKX07XG4gICAgICAgICAgICAgIGAsIFwidHNxZC1xdWVyeS1kZXRhaWxzLWFjdGlvbnMtYnRuXCIsIFwidHNxZC1xdWVyeS1kZXRhaWxzLWFjdGlvbi1yZWZldGNoXCIpLCBfdiQ0NyA9IHN0YXR1c0xhYmVsKCkgPT09IFwiZmV0Y2hpbmdcIiwgX3YkNDggPSBjc3NgXG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHt0Mihjb2xvcnMuYmx1ZVs2MDBdLCBjb2xvcnMuYmx1ZVs0MDBdKX07XG4gICAgICAgICAgICAgIGAsIF92JDQ5ID0gY2xzeChjc3NgXG4gICAgICAgICAgICAgICAgY29sb3I6ICR7dDIoY29sb3JzLnllbGxvd1s2MDBdLCBjb2xvcnMueWVsbG93WzQwMF0pfTtcbiAgICAgICAgICAgICAgYCwgXCJ0c3FkLXF1ZXJ5LWRldGFpbHMtYWN0aW9ucy1idG5cIiwgXCJ0c3FkLXF1ZXJ5LWRldGFpbHMtYWN0aW9uLWludmFsaWRhdGVcIiksIF92JDUwID0gcXVlcnlTdGF0dXMoKSA9PT0gXCJwZW5kaW5nXCIsIF92JDUxID0gY3NzYFxuICAgICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICR7dDIoY29sb3JzLnllbGxvd1s2MDBdLCBjb2xvcnMueWVsbG93WzQwMF0pfTtcbiAgICAgICAgICAgICAgYCwgX3YkNTIgPSBjbHN4KGNzc2BcbiAgICAgICAgICAgICAgICBjb2xvcjogJHt0Mihjb2xvcnMuZ3JheVs2MDBdLCBjb2xvcnMuZ3JheVszMDBdKX07XG4gICAgICAgICAgICAgIGAsIFwidHNxZC1xdWVyeS1kZXRhaWxzLWFjdGlvbnMtYnRuXCIsIFwidHNxZC1xdWVyeS1kZXRhaWxzLWFjdGlvbi1yZXNldFwiKSwgX3YkNTMgPSBxdWVyeVN0YXR1cygpID09PSBcInBlbmRpbmdcIiwgX3YkNTQgPSBjc3NgXG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHt0Mihjb2xvcnMuZ3JheVs2MDBdLCBjb2xvcnMuZ3JheVs0MDBdKX07XG4gICAgICAgICAgICAgIGAsIF92JDU1ID0gY2xzeChjc3NgXG4gICAgICAgICAgICAgICAgY29sb3I6ICR7dDIoY29sb3JzLnBpbmtbNTAwXSwgY29sb3JzLnBpbmtbNDAwXSl9O1xuICAgICAgICAgICAgICBgLCBcInRzcWQtcXVlcnktZGV0YWlscy1hY3Rpb25zLWJ0blwiLCBcInRzcWQtcXVlcnktZGV0YWlscy1hY3Rpb24tcmVtb3ZlXCIpLCBfdiQ1NiA9IHN0YXR1c0xhYmVsKCkgPT09IFwiZmV0Y2hpbmdcIiwgX3YkNTcgPSBjc3NgXG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHt0Mihjb2xvcnMucGlua1s1MDBdLCBjb2xvcnMucGlua1s0MDBdKX07XG4gICAgICAgICAgICAgIGAsIF92JDU4ID0gY2xzeChjc3NgXG4gICAgICAgICAgICAgICAgY29sb3I6ICR7dDIoY29sb3JzLmN5YW5bNTAwXSwgY29sb3JzLmN5YW5bNDAwXSl9O1xuICAgICAgICAgICAgICBgLCBcInRzcWQtcXVlcnktZGV0YWlscy1hY3Rpb25zLWJ0blwiLCBcInRzcWQtcXVlcnktZGV0YWlscy1hY3Rpb24tbG9hZGluZ1wiKSwgX3YkNTkgPSByZXN0b3JpbmdMb2FkaW5nKCksIF92JDYwID0gY3NzYFxuICAgICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICR7dDIoY29sb3JzLmN5YW5bNTAwXSwgY29sb3JzLmN5YW5bNDAwXSl9O1xuICAgICAgICAgICAgICBgLCBfdiQ2MSA9IGNsc3goc3R5bGVzKCkuZGV0YWlsc0hlYWRlciwgXCJ0c3FkLXF1ZXJ5LWRldGFpbHMtaGVhZGVyXCIpLCBfdiQ2MiA9IHRva2Vucy5zaXplWzJdLCBfdiQ2MyA9IGNsc3goc3R5bGVzKCkuZGV0YWlsc0hlYWRlciwgXCJ0c3FkLXF1ZXJ5LWRldGFpbHMtaGVhZGVyXCIpLCBfdiQ2NCA9IHRva2Vucy5zaXplWzJdO1xuICAgICAgICBfdiQ0MCAhPT0gX3AkLl92JDQwICYmIGNsYXNzTmFtZShfZWwkNjIsIF9wJC5fdiQ0MCA9IF92JDQwKTtcbiAgICAgICAgX3YkNDEgIT09IF9wJC5fdiQ0MSAmJiBjbGFzc05hbWUoX2VsJDYzLCBfcCQuX3YkNDEgPSBfdiQ0MSk7XG4gICAgICAgIF92JDQyICE9PSBfcCQuX3YkNDIgJiYgY2xhc3NOYW1lKF9lbCQ2NCwgX3AkLl92JDQyID0gX3YkNDIpO1xuICAgICAgICBfdiQ0MyAhPT0gX3AkLl92JDQzICYmIGNsYXNzTmFtZShfZWwkNjgsIF9wJC5fdiQ0MyA9IF92JDQzKTtcbiAgICAgICAgX3YkNDQgIT09IF9wJC5fdiQ0NCAmJiBjbGFzc05hbWUoX2VsJDc1LCBfcCQuX3YkNDQgPSBfdiQ0NCk7XG4gICAgICAgIF92JDQ1ICE9PSBfcCQuX3YkNDUgJiYgY2xhc3NOYW1lKF9lbCQ3NiwgX3AkLl92JDQ1ID0gX3YkNDUpO1xuICAgICAgICBfdiQ0NiAhPT0gX3AkLl92JDQ2ICYmIGNsYXNzTmFtZShfZWwkNzcsIF9wJC5fdiQ0NiA9IF92JDQ2KTtcbiAgICAgICAgX3YkNDcgIT09IF9wJC5fdiQ0NyAmJiAoX2VsJDc3LmRpc2FibGVkID0gX3AkLl92JDQ3ID0gX3YkNDcpO1xuICAgICAgICBfdiQ0OCAhPT0gX3AkLl92JDQ4ICYmIGNsYXNzTmFtZShfZWwkNzgsIF9wJC5fdiQ0OCA9IF92JDQ4KTtcbiAgICAgICAgX3YkNDkgIT09IF9wJC5fdiQ0OSAmJiBjbGFzc05hbWUoX2VsJDc5LCBfcCQuX3YkNDkgPSBfdiQ0OSk7XG4gICAgICAgIF92JDUwICE9PSBfcCQuX3YkNTAgJiYgKF9lbCQ3OS5kaXNhYmxlZCA9IF9wJC5fdiQ1MCA9IF92JDUwKTtcbiAgICAgICAgX3YkNTEgIT09IF9wJC5fdiQ1MSAmJiBjbGFzc05hbWUoX2VsJDgwLCBfcCQuX3YkNTEgPSBfdiQ1MSk7XG4gICAgICAgIF92JDUyICE9PSBfcCQuX3YkNTIgJiYgY2xhc3NOYW1lKF9lbCQ4MSwgX3AkLl92JDUyID0gX3YkNTIpO1xuICAgICAgICBfdiQ1MyAhPT0gX3AkLl92JDUzICYmIChfZWwkODEuZGlzYWJsZWQgPSBfcCQuX3YkNTMgPSBfdiQ1Myk7XG4gICAgICAgIF92JDU0ICE9PSBfcCQuX3YkNTQgJiYgY2xhc3NOYW1lKF9lbCQ4MiwgX3AkLl92JDU0ID0gX3YkNTQpO1xuICAgICAgICBfdiQ1NSAhPT0gX3AkLl92JDU1ICYmIGNsYXNzTmFtZShfZWwkODMsIF9wJC5fdiQ1NSA9IF92JDU1KTtcbiAgICAgICAgX3YkNTYgIT09IF9wJC5fdiQ1NiAmJiAoX2VsJDgzLmRpc2FibGVkID0gX3AkLl92JDU2ID0gX3YkNTYpO1xuICAgICAgICBfdiQ1NyAhPT0gX3AkLl92JDU3ICYmIGNsYXNzTmFtZShfZWwkODQsIF9wJC5fdiQ1NyA9IF92JDU3KTtcbiAgICAgICAgX3YkNTggIT09IF9wJC5fdiQ1OCAmJiBjbGFzc05hbWUoX2VsJDg1LCBfcCQuX3YkNTggPSBfdiQ1OCk7XG4gICAgICAgIF92JDU5ICE9PSBfcCQuX3YkNTkgJiYgKF9lbCQ4NS5kaXNhYmxlZCA9IF9wJC5fdiQ1OSA9IF92JDU5KTtcbiAgICAgICAgX3YkNjAgIT09IF9wJC5fdiQ2MCAmJiBjbGFzc05hbWUoX2VsJDg2LCBfcCQuX3YkNjAgPSBfdiQ2MCk7XG4gICAgICAgIF92JDYxICE9PSBfcCQuX3YkNjEgJiYgY2xhc3NOYW1lKF9lbCQ5NiwgX3AkLl92JDYxID0gX3YkNjEpO1xuICAgICAgICBfdiQ2MiAhPT0gX3AkLl92JDYyICYmICgoX3AkLl92JDYyID0gX3YkNjIpICE9IG51bGwgPyBfZWwkOTcuc3R5bGUuc2V0UHJvcGVydHkoXCJwYWRkaW5nXCIsIF92JDYyKSA6IF9lbCQ5Ny5zdHlsZS5yZW1vdmVQcm9wZXJ0eShcInBhZGRpbmdcIikpO1xuICAgICAgICBfdiQ2MyAhPT0gX3AkLl92JDYzICYmIGNsYXNzTmFtZShfZWwkOTgsIF9wJC5fdiQ2MyA9IF92JDYzKTtcbiAgICAgICAgX3YkNjQgIT09IF9wJC5fdiQ2NCAmJiAoKF9wJC5fdiQ2NCA9IF92JDY0KSAhPSBudWxsID8gX2VsJDk5LnN0eWxlLnNldFByb3BlcnR5KFwicGFkZGluZ1wiLCBfdiQ2NCkgOiBfZWwkOTkuc3R5bGUucmVtb3ZlUHJvcGVydHkoXCJwYWRkaW5nXCIpKTtcbiAgICAgICAgcmV0dXJuIF9wJDtcbiAgICAgIH0sIHtcbiAgICAgICAgX3YkNDA6IHZvaWQgMCxcbiAgICAgICAgX3YkNDE6IHZvaWQgMCxcbiAgICAgICAgX3YkNDI6IHZvaWQgMCxcbiAgICAgICAgX3YkNDM6IHZvaWQgMCxcbiAgICAgICAgX3YkNDQ6IHZvaWQgMCxcbiAgICAgICAgX3YkNDU6IHZvaWQgMCxcbiAgICAgICAgX3YkNDY6IHZvaWQgMCxcbiAgICAgICAgX3YkNDc6IHZvaWQgMCxcbiAgICAgICAgX3YkNDg6IHZvaWQgMCxcbiAgICAgICAgX3YkNDk6IHZvaWQgMCxcbiAgICAgICAgX3YkNTA6IHZvaWQgMCxcbiAgICAgICAgX3YkNTE6IHZvaWQgMCxcbiAgICAgICAgX3YkNTI6IHZvaWQgMCxcbiAgICAgICAgX3YkNTM6IHZvaWQgMCxcbiAgICAgICAgX3YkNTQ6IHZvaWQgMCxcbiAgICAgICAgX3YkNTU6IHZvaWQgMCxcbiAgICAgICAgX3YkNTY6IHZvaWQgMCxcbiAgICAgICAgX3YkNTc6IHZvaWQgMCxcbiAgICAgICAgX3YkNTg6IHZvaWQgMCxcbiAgICAgICAgX3YkNTk6IHZvaWQgMCxcbiAgICAgICAgX3YkNjA6IHZvaWQgMCxcbiAgICAgICAgX3YkNjE6IHZvaWQgMCxcbiAgICAgICAgX3YkNjI6IHZvaWQgMCxcbiAgICAgICAgX3YkNjM6IHZvaWQgMCxcbiAgICAgICAgX3YkNjQ6IHZvaWQgMFxuICAgICAgfSk7XG4gICAgICByZXR1cm4gX2VsJDYyO1xuICAgIH1cbiAgfSk7XG59O1xudmFyIE11dGF0aW9uRGV0YWlscyA9ICgpID0+IHtcbiAgY29uc3QgdGhlbWUgPSB1c2VUaGVtZSgpO1xuICBjb25zdCBjc3MgPSB1c2VRdWVyeURldnRvb2xzQ29udGV4dCgpLnNoYWRvd0RPTVRhcmdldCA/IHUuYmluZCh7XG4gICAgdGFyZ2V0OiB1c2VRdWVyeURldnRvb2xzQ29udGV4dCgpLnNoYWRvd0RPTVRhcmdldFxuICB9KSA6IHU7XG4gIGNvbnN0IHN0eWxlcyA9IGNyZWF0ZU1lbW8oKCkgPT4ge1xuICAgIHJldHVybiB0aGVtZSgpID09PSBcImRhcmtcIiA/IGRhcmtTdHlsZXMyKGNzcykgOiBsaWdodFN0eWxlczIoY3NzKTtcbiAgfSk7XG4gIGNvbnN0IHtcbiAgICBjb2xvcnNcbiAgfSA9IHRva2VucztcbiAgY29uc3QgdDIgPSAobGlnaHQsIGRhcmspID0+IHRoZW1lKCkgPT09IFwiZGFya1wiID8gZGFyayA6IGxpZ2h0O1xuICBjb25zdCBpc1BhdXNlZCA9IGNyZWF0ZVN1YnNjcmliZVRvTXV0YXRpb25DYWNoZUJhdGNoZXIoKG11dGF0aW9uQ2FjaGUpID0+IHtcbiAgICBjb25zdCBtdXRhdGlvbnMgPSBtdXRhdGlvbkNhY2hlKCkuZ2V0QWxsKCk7XG4gICAgY29uc3QgbXV0YXRpb24gPSBtdXRhdGlvbnMuZmluZCgobSkgPT4gbS5tdXRhdGlvbklkID09PSBzZWxlY3RlZE11dGF0aW9uSWQoKSk7XG4gICAgaWYgKCFtdXRhdGlvbilcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICByZXR1cm4gbXV0YXRpb24uc3RhdGUuaXNQYXVzZWQ7XG4gIH0pO1xuICBjb25zdCBzdGF0dXMgPSBjcmVhdGVTdWJzY3JpYmVUb011dGF0aW9uQ2FjaGVCYXRjaGVyKChtdXRhdGlvbkNhY2hlKSA9PiB7XG4gICAgY29uc3QgbXV0YXRpb25zID0gbXV0YXRpb25DYWNoZSgpLmdldEFsbCgpO1xuICAgIGNvbnN0IG11dGF0aW9uID0gbXV0YXRpb25zLmZpbmQoKG0pID0+IG0ubXV0YXRpb25JZCA9PT0gc2VsZWN0ZWRNdXRhdGlvbklkKCkpO1xuICAgIGlmICghbXV0YXRpb24pXG4gICAgICByZXR1cm4gXCJpZGxlXCI7XG4gICAgcmV0dXJuIG11dGF0aW9uLnN0YXRlLnN0YXR1cztcbiAgfSk7XG4gIGNvbnN0IGNvbG9yID0gY3JlYXRlTWVtbygoKSA9PiBnZXRNdXRhdGlvblN0YXR1c0NvbG9yKHtcbiAgICBpc1BhdXNlZDogaXNQYXVzZWQoKSxcbiAgICBzdGF0dXM6IHN0YXR1cygpXG4gIH0pKTtcbiAgY29uc3QgYWN0aXZlTXV0YXRpb24gPSBjcmVhdGVTdWJzY3JpYmVUb011dGF0aW9uQ2FjaGVCYXRjaGVyKChtdXRhdGlvbkNhY2hlKSA9PiBtdXRhdGlvbkNhY2hlKCkuZ2V0QWxsKCkuZmluZCgobXV0YXRpb24pID0+IG11dGF0aW9uLm11dGF0aW9uSWQgPT09IHNlbGVjdGVkTXV0YXRpb25JZCgpKSwgZmFsc2UpO1xuICBjb25zdCBnZXRRdWVyeVN0YXR1c0NvbG9ycyA9ICgpID0+IHtcbiAgICBpZiAoY29sb3IoKSA9PT0gXCJncmF5XCIpIHtcbiAgICAgIHJldHVybiBjc3NgXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICR7dDIoY29sb3JzW2NvbG9yKCldWzIwMF0sIGNvbG9yc1tjb2xvcigpXVs3MDBdKX07XG4gICAgICAgIGNvbG9yOiAke3QyKGNvbG9yc1tjb2xvcigpXVs3MDBdLCBjb2xvcnNbY29sb3IoKV1bMzAwXSl9O1xuICAgICAgICBib3JkZXItY29sb3I6ICR7dDIoY29sb3JzW2NvbG9yKCldWzQwMF0sIGNvbG9yc1tjb2xvcigpXVs2MDBdKX07XG4gICAgICBgO1xuICAgIH1cbiAgICByZXR1cm4gY3NzYFxuICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHt0Mihjb2xvcnNbY29sb3IoKV1bMTAwXSwgY29sb3JzW2NvbG9yKCldWzkwMF0pfTtcbiAgICAgIGNvbG9yOiAke3QyKGNvbG9yc1tjb2xvcigpXVs3MDBdLCBjb2xvcnNbY29sb3IoKV1bMzAwXSl9O1xuICAgICAgYm9yZGVyLWNvbG9yOiAke3QyKGNvbG9yc1tjb2xvcigpXVs0MDBdLCBjb2xvcnNbY29sb3IoKV1bNjAwXSl9O1xuICAgIGA7XG4gIH07XG4gIHJldHVybiBjcmVhdGVDb21wb25lbnQoU2hvdywge1xuICAgIGdldCB3aGVuKCkge1xuICAgICAgcmV0dXJuIGFjdGl2ZU11dGF0aW9uKCk7XG4gICAgfSxcbiAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICBjb25zdCBfZWwkMTAxID0gX3RtcGwkMzIyKCksIF9lbCQxMDIgPSBfZWwkMTAxLmZpcnN0Q2hpbGQsIF9lbCQxMDMgPSBfZWwkMTAyLm5leHRTaWJsaW5nLCBfZWwkMTA0ID0gX2VsJDEwMy5maXJzdENoaWxkLCBfZWwkMTA1ID0gX2VsJDEwNC5maXJzdENoaWxkLCBfZWwkMTA2ID0gX2VsJDEwNS5maXJzdENoaWxkLCBfZWwkMTA3ID0gX2VsJDEwNS5uZXh0U2libGluZywgX2VsJDEwOCA9IF9lbCQxMDQubmV4dFNpYmxpbmcsIF9lbCQxMDkgPSBfZWwkMTA4LmZpcnN0Q2hpbGQsIF9lbCQxMTAgPSBfZWwkMTA5Lm5leHRTaWJsaW5nLCBfZWwkMTExID0gX2VsJDEwMy5uZXh0U2libGluZywgX2VsJDExMiA9IF9lbCQxMTEubmV4dFNpYmxpbmcsIF9lbCQxMTMgPSBfZWwkMTEyLm5leHRTaWJsaW5nLCBfZWwkMTE0ID0gX2VsJDExMy5uZXh0U2libGluZywgX2VsJDExNSA9IF9lbCQxMTQubmV4dFNpYmxpbmcsIF9lbCQxMTYgPSBfZWwkMTE1Lm5leHRTaWJsaW5nLCBfZWwkMTE3ID0gX2VsJDExNi5uZXh0U2libGluZywgX2VsJDExOCA9IF9lbCQxMTcubmV4dFNpYmxpbmc7XG4gICAgICBpbnNlcnQoX2VsJDEwNiwgY3JlYXRlQ29tcG9uZW50KFNob3csIHtcbiAgICAgICAgZ2V0IHdoZW4oKSB7XG4gICAgICAgICAgcmV0dXJuIGFjdGl2ZU11dGF0aW9uKCkub3B0aW9ucy5tdXRhdGlvbktleTtcbiAgICAgICAgfSxcbiAgICAgICAgZmFsbGJhY2s6IFwiTm8gbXV0YXRpb25LZXkgZm91bmRcIixcbiAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgIHJldHVybiBkaXNwbGF5VmFsdWUoYWN0aXZlTXV0YXRpb24oKS5vcHRpb25zLm11dGF0aW9uS2V5LCB0cnVlKTtcbiAgICAgICAgfVxuICAgICAgfSkpO1xuICAgICAgaW5zZXJ0KF9lbCQxMDcsIGNyZWF0ZUNvbXBvbmVudChTaG93LCB7XG4gICAgICAgIGdldCB3aGVuKCkge1xuICAgICAgICAgIHJldHVybiBjb2xvcigpID09PSBcInB1cnBsZVwiO1xuICAgICAgICB9LFxuICAgICAgICBjaGlsZHJlbjogXCJwZW5kaW5nXCJcbiAgICAgIH0pLCBudWxsKTtcbiAgICAgIGluc2VydChfZWwkMTA3LCBjcmVhdGVDb21wb25lbnQoU2hvdywge1xuICAgICAgICBnZXQgd2hlbigpIHtcbiAgICAgICAgICByZXR1cm4gY29sb3IoKSAhPT0gXCJwdXJwbGVcIjtcbiAgICAgICAgfSxcbiAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgIHJldHVybiBzdGF0dXMoKTtcbiAgICAgICAgfVxuICAgICAgfSksIG51bGwpO1xuICAgICAgaW5zZXJ0KF9lbCQxMTAsICgpID0+IG5ldyBEYXRlKGFjdGl2ZU11dGF0aW9uKCkuc3RhdGUuc3VibWl0dGVkQXQpLnRvTG9jYWxlVGltZVN0cmluZygpKTtcbiAgICAgIGluc2VydChfZWwkMTEyLCBjcmVhdGVDb21wb25lbnQoRXhwbG9yZXIsIHtcbiAgICAgICAgbGFiZWw6IFwiVmFyaWFibGVzXCIsXG4gICAgICAgIGRlZmF1bHRFeHBhbmRlZDogW1wiVmFyaWFibGVzXCJdLFxuICAgICAgICBnZXQgdmFsdWUoKSB7XG4gICAgICAgICAgcmV0dXJuIGFjdGl2ZU11dGF0aW9uKCkuc3RhdGUudmFyaWFibGVzO1xuICAgICAgICB9XG4gICAgICB9KSk7XG4gICAgICBpbnNlcnQoX2VsJDExNCwgY3JlYXRlQ29tcG9uZW50KEV4cGxvcmVyLCB7XG4gICAgICAgIGxhYmVsOiBcIkNvbnRleHRcIixcbiAgICAgICAgZGVmYXVsdEV4cGFuZGVkOiBbXCJDb250ZXh0XCJdLFxuICAgICAgICBnZXQgdmFsdWUoKSB7XG4gICAgICAgICAgcmV0dXJuIGFjdGl2ZU11dGF0aW9uKCkuc3RhdGUuY29udGV4dDtcbiAgICAgICAgfVxuICAgICAgfSkpO1xuICAgICAgaW5zZXJ0KF9lbCQxMTYsIGNyZWF0ZUNvbXBvbmVudChFeHBsb3Jlciwge1xuICAgICAgICBsYWJlbDogXCJEYXRhXCIsXG4gICAgICAgIGRlZmF1bHRFeHBhbmRlZDogW1wiRGF0YVwiXSxcbiAgICAgICAgZ2V0IHZhbHVlKCkge1xuICAgICAgICAgIHJldHVybiBhY3RpdmVNdXRhdGlvbigpLnN0YXRlLmRhdGE7XG4gICAgICAgIH1cbiAgICAgIH0pKTtcbiAgICAgIGluc2VydChfZWwkMTE4LCBjcmVhdGVDb21wb25lbnQoRXhwbG9yZXIsIHtcbiAgICAgICAgbGFiZWw6IFwiTXV0YXRpb25cIixcbiAgICAgICAgZGVmYXVsdEV4cGFuZGVkOiBbXCJNdXRhdGlvblwiXSxcbiAgICAgICAgZ2V0IHZhbHVlKCkge1xuICAgICAgICAgIHJldHVybiBhY3RpdmVNdXRhdGlvbigpO1xuICAgICAgICB9XG4gICAgICB9KSk7XG4gICAgICBjcmVhdGVSZW5kZXJFZmZlY3QoKF9wJCkgPT4ge1xuICAgICAgICBjb25zdCBfdiQ2NSA9IGNsc3goc3R5bGVzKCkuZGV0YWlsc0NvbnRhaW5lciwgXCJ0c3FkLXF1ZXJ5LWRldGFpbHMtY29udGFpbmVyXCIpLCBfdiQ2NiA9IGNsc3goc3R5bGVzKCkuZGV0YWlsc0hlYWRlciwgXCJ0c3FkLXF1ZXJ5LWRldGFpbHMtaGVhZGVyXCIpLCBfdiQ2NyA9IGNsc3goc3R5bGVzKCkuZGV0YWlsc0JvZHksIFwidHNxZC1xdWVyeS1kZXRhaWxzLXN1bW1hcnktY29udGFpbmVyXCIpLCBfdiQ2OCA9IGNsc3goc3R5bGVzKCkucXVlcnlEZXRhaWxzU3RhdHVzLCBnZXRRdWVyeVN0YXR1c0NvbG9ycygpKSwgX3YkNjkgPSBjbHN4KHN0eWxlcygpLmRldGFpbHNIZWFkZXIsIFwidHNxZC1xdWVyeS1kZXRhaWxzLWhlYWRlclwiKSwgX3YkNzAgPSB0b2tlbnMuc2l6ZVsyXSwgX3YkNzEgPSBjbHN4KHN0eWxlcygpLmRldGFpbHNIZWFkZXIsIFwidHNxZC1xdWVyeS1kZXRhaWxzLWhlYWRlclwiKSwgX3YkNzIgPSB0b2tlbnMuc2l6ZVsyXSwgX3YkNzMgPSBjbHN4KHN0eWxlcygpLmRldGFpbHNIZWFkZXIsIFwidHNxZC1xdWVyeS1kZXRhaWxzLWhlYWRlclwiKSwgX3YkNzQgPSB0b2tlbnMuc2l6ZVsyXSwgX3YkNzUgPSBjbHN4KHN0eWxlcygpLmRldGFpbHNIZWFkZXIsIFwidHNxZC1xdWVyeS1kZXRhaWxzLWhlYWRlclwiKSwgX3YkNzYgPSB0b2tlbnMuc2l6ZVsyXTtcbiAgICAgICAgX3YkNjUgIT09IF9wJC5fdiQ2NSAmJiBjbGFzc05hbWUoX2VsJDEwMSwgX3AkLl92JDY1ID0gX3YkNjUpO1xuICAgICAgICBfdiQ2NiAhPT0gX3AkLl92JDY2ICYmIGNsYXNzTmFtZShfZWwkMTAyLCBfcCQuX3YkNjYgPSBfdiQ2Nik7XG4gICAgICAgIF92JDY3ICE9PSBfcCQuX3YkNjcgJiYgY2xhc3NOYW1lKF9lbCQxMDMsIF9wJC5fdiQ2NyA9IF92JDY3KTtcbiAgICAgICAgX3YkNjggIT09IF9wJC5fdiQ2OCAmJiBjbGFzc05hbWUoX2VsJDEwNywgX3AkLl92JDY4ID0gX3YkNjgpO1xuICAgICAgICBfdiQ2OSAhPT0gX3AkLl92JDY5ICYmIGNsYXNzTmFtZShfZWwkMTExLCBfcCQuX3YkNjkgPSBfdiQ2OSk7XG4gICAgICAgIF92JDcwICE9PSBfcCQuX3YkNzAgJiYgKChfcCQuX3YkNzAgPSBfdiQ3MCkgIT0gbnVsbCA/IF9lbCQxMTIuc3R5bGUuc2V0UHJvcGVydHkoXCJwYWRkaW5nXCIsIF92JDcwKSA6IF9lbCQxMTIuc3R5bGUucmVtb3ZlUHJvcGVydHkoXCJwYWRkaW5nXCIpKTtcbiAgICAgICAgX3YkNzEgIT09IF9wJC5fdiQ3MSAmJiBjbGFzc05hbWUoX2VsJDExMywgX3AkLl92JDcxID0gX3YkNzEpO1xuICAgICAgICBfdiQ3MiAhPT0gX3AkLl92JDcyICYmICgoX3AkLl92JDcyID0gX3YkNzIpICE9IG51bGwgPyBfZWwkMTE0LnN0eWxlLnNldFByb3BlcnR5KFwicGFkZGluZ1wiLCBfdiQ3MikgOiBfZWwkMTE0LnN0eWxlLnJlbW92ZVByb3BlcnR5KFwicGFkZGluZ1wiKSk7XG4gICAgICAgIF92JDczICE9PSBfcCQuX3YkNzMgJiYgY2xhc3NOYW1lKF9lbCQxMTUsIF9wJC5fdiQ3MyA9IF92JDczKTtcbiAgICAgICAgX3YkNzQgIT09IF9wJC5fdiQ3NCAmJiAoKF9wJC5fdiQ3NCA9IF92JDc0KSAhPSBudWxsID8gX2VsJDExNi5zdHlsZS5zZXRQcm9wZXJ0eShcInBhZGRpbmdcIiwgX3YkNzQpIDogX2VsJDExNi5zdHlsZS5yZW1vdmVQcm9wZXJ0eShcInBhZGRpbmdcIikpO1xuICAgICAgICBfdiQ3NSAhPT0gX3AkLl92JDc1ICYmIGNsYXNzTmFtZShfZWwkMTE3LCBfcCQuX3YkNzUgPSBfdiQ3NSk7XG4gICAgICAgIF92JDc2ICE9PSBfcCQuX3YkNzYgJiYgKChfcCQuX3YkNzYgPSBfdiQ3NikgIT0gbnVsbCA/IF9lbCQxMTguc3R5bGUuc2V0UHJvcGVydHkoXCJwYWRkaW5nXCIsIF92JDc2KSA6IF9lbCQxMTguc3R5bGUucmVtb3ZlUHJvcGVydHkoXCJwYWRkaW5nXCIpKTtcbiAgICAgICAgcmV0dXJuIF9wJDtcbiAgICAgIH0sIHtcbiAgICAgICAgX3YkNjU6IHZvaWQgMCxcbiAgICAgICAgX3YkNjY6IHZvaWQgMCxcbiAgICAgICAgX3YkNjc6IHZvaWQgMCxcbiAgICAgICAgX3YkNjg6IHZvaWQgMCxcbiAgICAgICAgX3YkNjk6IHZvaWQgMCxcbiAgICAgICAgX3YkNzA6IHZvaWQgMCxcbiAgICAgICAgX3YkNzE6IHZvaWQgMCxcbiAgICAgICAgX3YkNzI6IHZvaWQgMCxcbiAgICAgICAgX3YkNzM6IHZvaWQgMCxcbiAgICAgICAgX3YkNzQ6IHZvaWQgMCxcbiAgICAgICAgX3YkNzU6IHZvaWQgMCxcbiAgICAgICAgX3YkNzY6IHZvaWQgMFxuICAgICAgfSk7XG4gICAgICByZXR1cm4gX2VsJDEwMTtcbiAgICB9XG4gIH0pO1xufTtcbnZhciBxdWVyeUNhY2hlTWFwID0gLyogQF9fUFVSRV9fICovIG5ldyBNYXAoKTtcbnZhciBzZXR1cFF1ZXJ5Q2FjaGVTdWJzY3JpcHRpb24gPSAoKSA9PiB7XG4gIGNvbnN0IHF1ZXJ5Q2FjaGUgPSBjcmVhdGVNZW1vKCgpID0+IHtcbiAgICBjb25zdCBjbGllbnQgPSB1c2VRdWVyeURldnRvb2xzQ29udGV4dCgpLmNsaWVudDtcbiAgICByZXR1cm4gY2xpZW50LmdldFF1ZXJ5Q2FjaGUoKTtcbiAgfSk7XG4gIGNvbnN0IHVuc3Vic2NyaWJlID0gcXVlcnlDYWNoZSgpLnN1YnNjcmliZSgocSkgPT4ge1xuICAgIGJhdGNoKCgpID0+IHtcbiAgICAgIGZvciAoY29uc3QgW2NhbGxiYWNrLCB2YWx1ZV0gb2YgcXVlcnlDYWNoZU1hcC5lbnRyaWVzKCkpIHtcbiAgICAgICAgaWYgKCF2YWx1ZS5zaG91bGRVcGRhdGUocSkpXG4gICAgICAgICAgY29udGludWU7XG4gICAgICAgIHZhbHVlLnNldHRlcihjYWxsYmFjayhxdWVyeUNhY2hlKSk7XG4gICAgICB9XG4gICAgfSk7XG4gIH0pO1xuICBvbkNsZWFudXAoKCkgPT4ge1xuICAgIHF1ZXJ5Q2FjaGVNYXAuY2xlYXIoKTtcbiAgICB1bnN1YnNjcmliZSgpO1xuICB9KTtcbiAgcmV0dXJuIHVuc3Vic2NyaWJlO1xufTtcbnZhciBjcmVhdGVTdWJzY3JpYmVUb1F1ZXJ5Q2FjaGVCYXRjaGVyID0gKGNhbGxiYWNrLCBlcXVhbGl0eUNoZWNrID0gdHJ1ZSwgc2hvdWxkVXBkYXRlID0gKCkgPT4gdHJ1ZSkgPT4ge1xuICBjb25zdCBxdWVyeUNhY2hlID0gY3JlYXRlTWVtbygoKSA9PiB7XG4gICAgY29uc3QgY2xpZW50ID0gdXNlUXVlcnlEZXZ0b29sc0NvbnRleHQoKS5jbGllbnQ7XG4gICAgcmV0dXJuIGNsaWVudC5nZXRRdWVyeUNhY2hlKCk7XG4gIH0pO1xuICBjb25zdCBbdmFsdWUsIHNldFZhbHVlXSA9IGNyZWF0ZVNpZ25hbChjYWxsYmFjayhxdWVyeUNhY2hlKSwgIWVxdWFsaXR5Q2hlY2sgPyB7XG4gICAgZXF1YWxzOiBmYWxzZVxuICB9IDogdm9pZCAwKTtcbiAgY3JlYXRlRWZmZWN0KCgpID0+IHtcbiAgICBzZXRWYWx1ZShjYWxsYmFjayhxdWVyeUNhY2hlKSk7XG4gIH0pO1xuICBxdWVyeUNhY2hlTWFwLnNldChjYWxsYmFjaywge1xuICAgIHNldHRlcjogc2V0VmFsdWUsXG4gICAgc2hvdWxkVXBkYXRlXG4gIH0pO1xuICBvbkNsZWFudXAoKCkgPT4ge1xuICAgIHF1ZXJ5Q2FjaGVNYXAuZGVsZXRlKGNhbGxiYWNrKTtcbiAgfSk7XG4gIHJldHVybiB2YWx1ZTtcbn07XG52YXIgbXV0YXRpb25DYWNoZU1hcCA9IC8qIEBfX1BVUkVfXyAqLyBuZXcgTWFwKCk7XG52YXIgc2V0dXBNdXRhdGlvbkNhY2hlU3Vic2NyaXB0aW9uID0gKCkgPT4ge1xuICBjb25zdCBtdXRhdGlvbkNhY2hlID0gY3JlYXRlTWVtbygoKSA9PiB7XG4gICAgY29uc3QgY2xpZW50ID0gdXNlUXVlcnlEZXZ0b29sc0NvbnRleHQoKS5jbGllbnQ7XG4gICAgcmV0dXJuIGNsaWVudC5nZXRNdXRhdGlvbkNhY2hlKCk7XG4gIH0pO1xuICBjb25zdCB1bnN1YnNjcmliZSA9IG11dGF0aW9uQ2FjaGUoKS5zdWJzY3JpYmUoKCkgPT4ge1xuICAgIGZvciAoY29uc3QgW2NhbGxiYWNrLCBzZXR0ZXJdIG9mIG11dGF0aW9uQ2FjaGVNYXAuZW50cmllcygpKSB7XG4gICAgICBxdWV1ZU1pY3JvdGFzaygoKSA9PiB7XG4gICAgICAgIHNldHRlcihjYWxsYmFjayhtdXRhdGlvbkNhY2hlKSk7XG4gICAgICB9KTtcbiAgICB9XG4gIH0pO1xuICBvbkNsZWFudXAoKCkgPT4ge1xuICAgIG11dGF0aW9uQ2FjaGVNYXAuY2xlYXIoKTtcbiAgICB1bnN1YnNjcmliZSgpO1xuICB9KTtcbiAgcmV0dXJuIHVuc3Vic2NyaWJlO1xufTtcbnZhciBjcmVhdGVTdWJzY3JpYmVUb011dGF0aW9uQ2FjaGVCYXRjaGVyID0gKGNhbGxiYWNrLCBlcXVhbGl0eUNoZWNrID0gdHJ1ZSkgPT4ge1xuICBjb25zdCBtdXRhdGlvbkNhY2hlID0gY3JlYXRlTWVtbygoKSA9PiB7XG4gICAgY29uc3QgY2xpZW50ID0gdXNlUXVlcnlEZXZ0b29sc0NvbnRleHQoKS5jbGllbnQ7XG4gICAgcmV0dXJuIGNsaWVudC5nZXRNdXRhdGlvbkNhY2hlKCk7XG4gIH0pO1xuICBjb25zdCBbdmFsdWUsIHNldFZhbHVlXSA9IGNyZWF0ZVNpZ25hbChjYWxsYmFjayhtdXRhdGlvbkNhY2hlKSwgIWVxdWFsaXR5Q2hlY2sgPyB7XG4gICAgZXF1YWxzOiBmYWxzZVxuICB9IDogdm9pZCAwKTtcbiAgY3JlYXRlRWZmZWN0KCgpID0+IHtcbiAgICBzZXRWYWx1ZShjYWxsYmFjayhtdXRhdGlvbkNhY2hlKSk7XG4gIH0pO1xuICBtdXRhdGlvbkNhY2hlTWFwLnNldChjYWxsYmFjaywgc2V0VmFsdWUpO1xuICBvbkNsZWFudXAoKCkgPT4ge1xuICAgIG11dGF0aW9uQ2FjaGVNYXAuZGVsZXRlKGNhbGxiYWNrKTtcbiAgfSk7XG4gIHJldHVybiB2YWx1ZTtcbn07XG52YXIgc3R5bGVzRmFjdG9yeTIgPSAodGhlbWUsIGNzcykgPT4ge1xuICBjb25zdCB7XG4gICAgY29sb3JzLFxuICAgIGZvbnQsXG4gICAgc2l6ZTogc2l6ZTMsXG4gICAgYWxwaGEsXG4gICAgc2hhZG93LFxuICAgIGJvcmRlclxuICB9ID0gdG9rZW5zO1xuICBjb25zdCB0MiA9IChsaWdodCwgZGFyaykgPT4gdGhlbWUgPT09IFwibGlnaHRcIiA/IGxpZ2h0IDogZGFyaztcbiAgcmV0dXJuIHtcbiAgICBkZXZ0b29sc0J0bjogY3NzYFxuICAgICAgei1pbmRleDogMTAwMDAwO1xuICAgICAgcG9zaXRpb246IGZpeGVkO1xuICAgICAgcGFkZGluZzogNHB4O1xuICAgICAgdGV4dC1hbGlnbjogbGVmdDtcblxuICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICAgIGJvcmRlci1yYWRpdXM6IDk5OTlweDtcbiAgICAgIGJveC1zaGFkb3c6ICR7c2hhZG93Lm1kKCl9O1xuICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcblxuICAgICAgJiBkaXYge1xuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgIHRvcDogLThweDtcbiAgICAgICAgbGVmdDogLThweDtcbiAgICAgICAgcmlnaHQ6IC04cHg7XG4gICAgICAgIGJvdHRvbTogLThweDtcbiAgICAgICAgYm9yZGVyLXJhZGl1czogOTk5OXB4O1xuXG4gICAgICAgICYgc3ZnIHtcbiAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgICAgaGVpZ2h0OiAxMDAlO1xuICAgICAgICB9XG4gICAgICAgIGZpbHRlcjogYmx1cig2cHgpIHNhdHVyYXRlKDEuMikgY29udHJhc3QoMS4xKTtcbiAgICAgIH1cblxuICAgICAgJjpmb2N1cy13aXRoaW4ge1xuICAgICAgICBvdXRsaW5lLW9mZnNldDogMnB4O1xuICAgICAgICBvdXRsaW5lOiAzcHggc29saWQgJHtjb2xvcnMuZ3JlZW5bNjAwXX07XG4gICAgICB9XG5cbiAgICAgICYgYnV0dG9uIHtcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgICB6LWluZGV4OiAxO1xuICAgICAgICBwYWRkaW5nOiAwO1xuICAgICAgICBib3JkZXItcmFkaXVzOiA5OTk5cHg7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICAgICAgICBib3JkZXI6IG5vbmU7XG4gICAgICAgIGhlaWdodDogNDBweDtcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgd2lkdGg6IDQwcHg7XG4gICAgICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICAgICAgb3V0bGluZTogbm9uZTtcbiAgICAgICAgJiBzdmcge1xuICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgICBoZWlnaHQ6IDEwMCU7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICBgLFxuICAgIHBhbmVsOiBjc3NgXG4gICAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgICB6LWluZGV4OiA5OTk5O1xuICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgIGdhcDogJHt0b2tlbnMuc2l6ZVswLjVdfTtcbiAgICAgICYgKiB7XG4gICAgICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gICAgICAgIHRleHQtdHJhbnNmb3JtOiBub25lO1xuICAgICAgfVxuXG4gICAgICAmICo6Oi13ZWJraXQtc2Nyb2xsYmFyIHtcbiAgICAgICAgd2lkdGg6IDdweDtcbiAgICAgIH1cblxuICAgICAgJiAqOjotd2Via2l0LXNjcm9sbGJhci10cmFjayB7XG4gICAgICAgIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xuICAgICAgfVxuXG4gICAgICAmICo6Oi13ZWJraXQtc2Nyb2xsYmFyLXRodW1iIHtcbiAgICAgICAgYmFja2dyb3VuZDogJHt0Mihjb2xvcnMuZ3JheVszMDBdLCBjb2xvcnMuZGFya0dyYXlbMjAwXSl9O1xuICAgICAgfVxuXG4gICAgICAmICo6Oi13ZWJraXQtc2Nyb2xsYmFyLXRodW1iOmhvdmVyIHtcbiAgICAgICAgYmFja2dyb3VuZDogJHt0Mihjb2xvcnMuZ3JheVs0MDBdLCBjb2xvcnMuZGFya0dyYXlbMzAwXSl9O1xuICAgICAgfVxuICAgIGAsXG4gICAgXCJkZXZ0b29sc0J0bi1wb3NpdGlvbi1ib3R0b20tcmlnaHRcIjogY3NzYFxuICAgICAgYm90dG9tOiAxMnB4O1xuICAgICAgcmlnaHQ6IDEycHg7XG4gICAgYCxcbiAgICBcImRldnRvb2xzQnRuLXBvc2l0aW9uLWJvdHRvbS1sZWZ0XCI6IGNzc2BcbiAgICAgIGJvdHRvbTogMTJweDtcbiAgICAgIGxlZnQ6IDEycHg7XG4gICAgYCxcbiAgICBcImRldnRvb2xzQnRuLXBvc2l0aW9uLXRvcC1sZWZ0XCI6IGNzc2BcbiAgICAgIHRvcDogMTJweDtcbiAgICAgIGxlZnQ6IDEycHg7XG4gICAgYCxcbiAgICBcImRldnRvb2xzQnRuLXBvc2l0aW9uLXRvcC1yaWdodFwiOiBjc3NgXG4gICAgICB0b3A6IDEycHg7XG4gICAgICByaWdodDogMTJweDtcbiAgICBgLFxuICAgIFwiZGV2dG9vbHNCdG4tcG9zaXRpb24tcmVsYXRpdmVcIjogY3NzYFxuICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIGAsXG4gICAgXCJwYW5lbC1wb3NpdGlvbi10b3BcIjogY3NzYFxuICAgICAgdG9wOiAwO1xuICAgICAgcmlnaHQ6IDA7XG4gICAgICBsZWZ0OiAwO1xuICAgICAgbWF4LWhlaWdodDogOTAlO1xuICAgICAgbWluLWhlaWdodDogJHtzaXplM1sxNF19O1xuICAgICAgYm9yZGVyLWJvdHRvbTogJHt0Mihjb2xvcnMuZ3JheVs0MDBdLCBjb2xvcnMuZGFya0dyYXlbMzAwXSl9IDFweCBzb2xpZDtcbiAgICBgLFxuICAgIFwicGFuZWwtcG9zaXRpb24tYm90dG9tXCI6IGNzc2BcbiAgICAgIGJvdHRvbTogMDtcbiAgICAgIHJpZ2h0OiAwO1xuICAgICAgbGVmdDogMDtcbiAgICAgIG1heC1oZWlnaHQ6IDkwJTtcbiAgICAgIG1pbi1oZWlnaHQ6ICR7c2l6ZTNbMTRdfTtcbiAgICAgIGJvcmRlci10b3A6ICR7dDIoY29sb3JzLmdyYXlbNDAwXSwgY29sb3JzLmRhcmtHcmF5WzMwMF0pfSAxcHggc29saWQ7XG4gICAgYCxcbiAgICBcInBhbmVsLXBvc2l0aW9uLXJpZ2h0XCI6IGNzc2BcbiAgICAgIGJvdHRvbTogMDtcbiAgICAgIHJpZ2h0OiAwO1xuICAgICAgdG9wOiAwO1xuICAgICAgYm9yZGVyLWxlZnQ6ICR7dDIoY29sb3JzLmdyYXlbNDAwXSwgY29sb3JzLmRhcmtHcmF5WzMwMF0pfSAxcHggc29saWQ7XG4gICAgICBtYXgtd2lkdGg6IDkwJTtcbiAgICBgLFxuICAgIFwicGFuZWwtcG9zaXRpb24tbGVmdFwiOiBjc3NgXG4gICAgICBib3R0b206IDA7XG4gICAgICBsZWZ0OiAwO1xuICAgICAgdG9wOiAwO1xuICAgICAgYm9yZGVyLXJpZ2h0OiAke3QyKGNvbG9ycy5ncmF5WzQwMF0sIGNvbG9ycy5kYXJrR3JheVszMDBdKX0gMXB4IHNvbGlkO1xuICAgICAgbWF4LXdpZHRoOiA5MCU7XG4gICAgYCxcbiAgICBjbG9zZUJ0bjogY3NzYFxuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgY3Vyc29yOiBwb2ludGVyO1xuICAgICAgei1pbmRleDogNTtcbiAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgICBvdXRsaW5lOiBub25lO1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHt0Mihjb2xvcnMuZ3JheVs1MF0sIGNvbG9ycy5kYXJrR3JheVs3MDBdKX07XG4gICAgICAmOmhvdmVyIHtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHt0Mihjb2xvcnMuZ3JheVsyMDBdLCBjb2xvcnMuZGFya0dyYXlbNTAwXSl9O1xuICAgICAgfVxuICAgICAgJjpmb2N1cy12aXNpYmxlIHtcbiAgICAgICAgb3V0bGluZTogMnB4IHNvbGlkICR7Y29sb3JzLmJsdWVbNjAwXX07XG4gICAgICB9XG4gICAgICAmIHN2ZyB7XG4gICAgICAgIGNvbG9yOiAke3QyKGNvbG9ycy5ncmF5WzYwMF0sIGNvbG9ycy5ncmF5WzQwMF0pfTtcbiAgICAgICAgd2lkdGg6ICR7c2l6ZTNbMl19O1xuICAgICAgICBoZWlnaHQ6ICR7c2l6ZTNbMl19O1xuICAgICAgfVxuICAgIGAsXG4gICAgXCJjbG9zZUJ0bi1wb3NpdGlvbi10b3BcIjogY3NzYFxuICAgICAgYm90dG9tOiAwO1xuICAgICAgcmlnaHQ6ICR7c2l6ZTNbMl19O1xuICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoMCwgMTAwJSk7XG4gICAgICBib3JkZXItcmlnaHQ6ICR7dDIoY29sb3JzLmdyYXlbNDAwXSwgY29sb3JzLmRhcmtHcmF5WzMwMF0pfSAxcHggc29saWQ7XG4gICAgICBib3JkZXItbGVmdDogJHt0Mihjb2xvcnMuZ3JheVs0MDBdLCBjb2xvcnMuZGFya0dyYXlbMzAwXSl9IDFweCBzb2xpZDtcbiAgICAgIGJvcmRlci10b3A6IG5vbmU7XG4gICAgICBib3JkZXItYm90dG9tOiAke3QyKGNvbG9ycy5ncmF5WzQwMF0sIGNvbG9ycy5kYXJrR3JheVszMDBdKX0gMXB4IHNvbGlkO1xuICAgICAgYm9yZGVyLXJhZGl1czogMHB4IDBweCAke2JvcmRlci5yYWRpdXMuc219ICR7Ym9yZGVyLnJhZGl1cy5zbX07XG4gICAgICBwYWRkaW5nOiAke3NpemUzWzAuNV19ICR7c2l6ZTNbMS41XX0gJHtzaXplM1sxXX0gJHtzaXplM1sxLjVdfTtcblxuICAgICAgJjo6YWZ0ZXIge1xuICAgICAgICBjb250ZW50OiAnICc7XG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgYm90dG9tOiAxMDAlO1xuICAgICAgICBsZWZ0OiAtJHtzaXplM1syLjVdfTtcbiAgICAgICAgaGVpZ2h0OiAke3NpemUzWzEuNV19O1xuICAgICAgICB3aWR0aDogY2FsYygxMDAlICsgJHtzaXplM1s1XX0pO1xuICAgICAgfVxuXG4gICAgICAmIHN2ZyB7XG4gICAgICAgIHRyYW5zZm9ybTogcm90YXRlKDE4MGRlZyk7XG4gICAgICB9XG4gICAgYCxcbiAgICBcImNsb3NlQnRuLXBvc2l0aW9uLWJvdHRvbVwiOiBjc3NgXG4gICAgICB0b3A6IDA7XG4gICAgICByaWdodDogJHtzaXplM1syXX07XG4gICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgwLCAtMTAwJSk7XG4gICAgICBib3JkZXItcmlnaHQ6ICR7dDIoY29sb3JzLmdyYXlbNDAwXSwgY29sb3JzLmRhcmtHcmF5WzMwMF0pfSAxcHggc29saWQ7XG4gICAgICBib3JkZXItbGVmdDogJHt0Mihjb2xvcnMuZ3JheVs0MDBdLCBjb2xvcnMuZGFya0dyYXlbMzAwXSl9IDFweCBzb2xpZDtcbiAgICAgIGJvcmRlci10b3A6ICR7dDIoY29sb3JzLmdyYXlbNDAwXSwgY29sb3JzLmRhcmtHcmF5WzMwMF0pfSAxcHggc29saWQ7XG4gICAgICBib3JkZXItYm90dG9tOiBub25lO1xuICAgICAgYm9yZGVyLXJhZGl1czogJHtib3JkZXIucmFkaXVzLnNtfSAke2JvcmRlci5yYWRpdXMuc219IDBweCAwcHg7XG4gICAgICBwYWRkaW5nOiAke3NpemUzWzFdfSAke3NpemUzWzEuNV19ICR7c2l6ZTNbMC41XX0gJHtzaXplM1sxLjVdfTtcblxuICAgICAgJjo6YWZ0ZXIge1xuICAgICAgICBjb250ZW50OiAnICc7XG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgdG9wOiAxMDAlO1xuICAgICAgICBsZWZ0OiAtJHtzaXplM1syLjVdfTtcbiAgICAgICAgaGVpZ2h0OiAke3NpemUzWzEuNV19O1xuICAgICAgICB3aWR0aDogY2FsYygxMDAlICsgJHtzaXplM1s1XX0pO1xuICAgICAgfVxuICAgIGAsXG4gICAgXCJjbG9zZUJ0bi1wb3NpdGlvbi1yaWdodFwiOiBjc3NgXG4gICAgICBib3R0b206ICR7c2l6ZTNbMl19O1xuICAgICAgbGVmdDogMDtcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC0xMDAlLCAwKTtcbiAgICAgIGJvcmRlci1yaWdodDogbm9uZTtcbiAgICAgIGJvcmRlci1sZWZ0OiAke3QyKGNvbG9ycy5ncmF5WzQwMF0sIGNvbG9ycy5kYXJrR3JheVszMDBdKX0gMXB4IHNvbGlkO1xuICAgICAgYm9yZGVyLXRvcDogJHt0Mihjb2xvcnMuZ3JheVs0MDBdLCBjb2xvcnMuZGFya0dyYXlbMzAwXSl9IDFweCBzb2xpZDtcbiAgICAgIGJvcmRlci1ib3R0b206ICR7dDIoY29sb3JzLmdyYXlbNDAwXSwgY29sb3JzLmRhcmtHcmF5WzMwMF0pfSAxcHggc29saWQ7XG4gICAgICBib3JkZXItcmFkaXVzOiAke2JvcmRlci5yYWRpdXMuc219IDBweCAwcHggJHtib3JkZXIucmFkaXVzLnNtfTtcbiAgICAgIHBhZGRpbmc6ICR7c2l6ZTNbMS41XX0gJHtzaXplM1swLjVdfSAke3NpemUzWzEuNV19ICR7c2l6ZTNbMV19O1xuXG4gICAgICAmOjphZnRlciB7XG4gICAgICAgIGNvbnRlbnQ6ICcgJztcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICBsZWZ0OiAxMDAlO1xuICAgICAgICBoZWlnaHQ6IGNhbGMoMTAwJSArICR7c2l6ZTNbNV19KTtcbiAgICAgICAgd2lkdGg6ICR7c2l6ZTNbMS41XX07XG4gICAgICB9XG5cbiAgICAgICYgc3ZnIHtcbiAgICAgICAgdHJhbnNmb3JtOiByb3RhdGUoLTkwZGVnKTtcbiAgICAgIH1cbiAgICBgLFxuICAgIFwiY2xvc2VCdG4tcG9zaXRpb24tbGVmdFwiOiBjc3NgXG4gICAgICBib3R0b206ICR7c2l6ZTNbMl19O1xuICAgICAgcmlnaHQ6IDA7XG4gICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgxMDAlLCAwKTtcbiAgICAgIGJvcmRlci1sZWZ0OiBub25lO1xuICAgICAgYm9yZGVyLXJpZ2h0OiAke3QyKGNvbG9ycy5ncmF5WzQwMF0sIGNvbG9ycy5kYXJrR3JheVszMDBdKX0gMXB4IHNvbGlkO1xuICAgICAgYm9yZGVyLXRvcDogJHt0Mihjb2xvcnMuZ3JheVs0MDBdLCBjb2xvcnMuZGFya0dyYXlbMzAwXSl9IDFweCBzb2xpZDtcbiAgICAgIGJvcmRlci1ib3R0b206ICR7dDIoY29sb3JzLmdyYXlbNDAwXSwgY29sb3JzLmRhcmtHcmF5WzMwMF0pfSAxcHggc29saWQ7XG4gICAgICBib3JkZXItcmFkaXVzOiAwcHggJHtib3JkZXIucmFkaXVzLnNtfSAke2JvcmRlci5yYWRpdXMuc219IDBweDtcbiAgICAgIHBhZGRpbmc6ICR7c2l6ZTNbMS41XX0gJHtzaXplM1sxXX0gJHtzaXplM1sxLjVdfSAke3NpemUzWzAuNV19O1xuXG4gICAgICAmOjphZnRlciB7XG4gICAgICAgIGNvbnRlbnQ6ICcgJztcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICByaWdodDogMTAwJTtcbiAgICAgICAgaGVpZ2h0OiBjYWxjKDEwMCUgKyAke3NpemUzWzVdfSk7XG4gICAgICAgIHdpZHRoOiAke3NpemUzWzEuNV19O1xuICAgICAgfVxuXG4gICAgICAmIHN2ZyB7XG4gICAgICAgIHRyYW5zZm9ybTogcm90YXRlKDkwZGVnKTtcbiAgICAgIH1cbiAgICBgLFxuICAgIHF1ZXJpZXNDb250YWluZXI6IGNzc2BcbiAgICAgIGZsZXg6IDEgMSA3MDBweDtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICR7dDIoY29sb3JzLmdyYXlbNTBdLCBjb2xvcnMuZGFya0dyYXlbNzAwXSl9O1xuICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgICAmICoge1xuICAgICAgICBmb250LWZhbWlseTogdWktc2Fucy1zZXJpZiwgSW50ZXIsIHN5c3RlbS11aSwgc2Fucy1zZXJpZiwgc2Fucy1zZXJpZjtcbiAgICAgIH1cbiAgICBgLFxuICAgIGRyYWdIYW5kbGU6IGNzc2BcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIHRyYW5zaXRpb246IGJhY2tncm91bmQtY29sb3IgMC4xMjVzIGVhc2U7XG4gICAgICAmOmhvdmVyIHtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHtjb2xvcnMucHVycGxlWzQwMF19JHt0MihcIlwiLCBhbHBoYVs5MF0pfTtcbiAgICAgIH1cbiAgICAgIHotaW5kZXg6IDQ7XG4gICAgYCxcbiAgICBcImRyYWdIYW5kbGUtcG9zaXRpb24tdG9wXCI6IGNzc2BcbiAgICAgIGJvdHRvbTogMDtcbiAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgaGVpZ2h0OiAzcHg7XG4gICAgICBjdXJzb3I6IG5zLXJlc2l6ZTtcbiAgICBgLFxuICAgIFwiZHJhZ0hhbmRsZS1wb3NpdGlvbi1ib3R0b21cIjogY3NzYFxuICAgICAgdG9wOiAwO1xuICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICBoZWlnaHQ6IDNweDtcbiAgICAgIGN1cnNvcjogbnMtcmVzaXplO1xuICAgIGAsXG4gICAgXCJkcmFnSGFuZGxlLXBvc2l0aW9uLXJpZ2h0XCI6IGNzc2BcbiAgICAgIGxlZnQ6IDA7XG4gICAgICB3aWR0aDogM3B4O1xuICAgICAgaGVpZ2h0OiAxMDAlO1xuICAgICAgY3Vyc29yOiBldy1yZXNpemU7XG4gICAgYCxcbiAgICBcImRyYWdIYW5kbGUtcG9zaXRpb24tbGVmdFwiOiBjc3NgXG4gICAgICByaWdodDogMDtcbiAgICAgIHdpZHRoOiAzcHg7XG4gICAgICBoZWlnaHQ6IDEwMCU7XG4gICAgICBjdXJzb3I6IGV3LXJlc2l6ZTtcbiAgICBgLFxuICAgIHJvdzogY3NzYFxuICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICBwYWRkaW5nOiAke3Rva2Vucy5zaXplWzJdfSAke3Rva2Vucy5zaXplWzIuNV19O1xuICAgICAgZ2FwOiAke3Rva2Vucy5zaXplWzIuNV19O1xuICAgICAgYm9yZGVyLWJvdHRvbTogJHt0Mihjb2xvcnMuZ3JheVszMDBdLCBjb2xvcnMuZGFya0dyYXlbNTAwXSl9IDFweCBzb2xpZDtcbiAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICAmID4gYnV0dG9uIHtcbiAgICAgICAgcGFkZGluZzogMDtcbiAgICAgICAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG4gICAgICAgIGJvcmRlcjogbm9uZTtcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgZ2FwOiAke3NpemUzWzAuNV19O1xuICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgICAgfVxuICAgIGAsXG4gICAgbG9nb0FuZFRvZ2dsZUNvbnRhaW5lcjogY3NzYFxuICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgIGdhcDogJHt0b2tlbnMuc2l6ZVszXX07XG4gICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIGAsXG4gICAgbG9nbzogY3NzYFxuICAgICAgY3Vyc29yOiBwb2ludGVyO1xuICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgICAgIGJvcmRlcjogbm9uZTtcbiAgICAgIGdhcDogJHt0b2tlbnMuc2l6ZVswLjVdfTtcbiAgICAgIHBhZGRpbmc6IDBweDtcbiAgICAgICY6aG92ZXIge1xuICAgICAgICBvcGFjaXR5OiAwLjc7XG4gICAgICB9XG4gICAgICAmOmZvY3VzLXZpc2libGUge1xuICAgICAgICBvdXRsaW5lLW9mZnNldDogNHB4O1xuICAgICAgICBib3JkZXItcmFkaXVzOiAke2JvcmRlci5yYWRpdXMueHN9O1xuICAgICAgICBvdXRsaW5lOiAycHggc29saWQgJHtjb2xvcnMuYmx1ZVs4MDBdfTtcbiAgICAgIH1cbiAgICBgLFxuICAgIHRhbnN0YWNrTG9nbzogY3NzYFxuICAgICAgZm9udC1zaXplOiAke2ZvbnQuc2l6ZS5tZH07XG4gICAgICBmb250LXdlaWdodDogJHtmb250LndlaWdodC5ib2xkfTtcbiAgICAgIGxpbmUtaGVpZ2h0OiAke2ZvbnQubGluZUhlaWdodC54c307XG4gICAgICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuICAgICAgY29sb3I6ICR7dDIoY29sb3JzLmdyYXlbNjAwXSwgY29sb3JzLmdyYXlbMzAwXSl9O1xuICAgIGAsXG4gICAgcXVlcnlGbGF2b3JMb2dvOiBjc3NgXG4gICAgICBmb250LXdlaWdodDogJHtmb250LndlaWdodC5zZW1pYm9sZH07XG4gICAgICBmb250LXNpemU6ICR7Zm9udC5zaXplLnhzfTtcbiAgICAgIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudChcbiAgICAgICAgdG8gcmlnaHQsXG4gICAgICAgICR7dDIoXCIjZWE0MDM3LCAjZmY5YjExXCIsIFwiI2RkNTI0YiwgI2U5YTAzYlwiKX1cbiAgICAgICk7XG4gICAgICBiYWNrZ3JvdW5kLWNsaXA6IHRleHQ7XG4gICAgICAtd2Via2l0LWJhY2tncm91bmQtY2xpcDogdGV4dDtcbiAgICAgIGxpbmUtaGVpZ2h0OiAxO1xuICAgICAgLXdlYmtpdC10ZXh0LWZpbGwtY29sb3I6IHRyYW5zcGFyZW50O1xuICAgICAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbiAgICBgLFxuICAgIHF1ZXJ5U3RhdHVzQ29udGFpbmVyOiBjc3NgXG4gICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgZ2FwOiAke3Rva2Vucy5zaXplWzJdfTtcbiAgICAgIGhlaWdodDogbWluLWNvbnRlbnQ7XG4gICAgYCxcbiAgICBxdWVyeVN0YXR1c1RhZzogY3NzYFxuICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgIGdhcDogJHt0b2tlbnMuc2l6ZVsxLjVdfTtcbiAgICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gICAgICBoZWlnaHQ6ICR7dG9rZW5zLnNpemVbNi41XX07XG4gICAgICBiYWNrZ3JvdW5kOiAke3QyKGNvbG9ycy5ncmF5WzUwXSwgY29sb3JzLmRhcmtHcmF5WzUwMF0pfTtcbiAgICAgIGNvbG9yOiAke3QyKGNvbG9ycy5ncmF5WzcwMF0sIGNvbG9ycy5ncmF5WzMwMF0pfTtcbiAgICAgIGJvcmRlci1yYWRpdXM6ICR7dG9rZW5zLmJvcmRlci5yYWRpdXMuc219O1xuICAgICAgZm9udC1zaXplOiAke2ZvbnQuc2l6ZS5zbX07XG4gICAgICBwYWRkaW5nOiAke3Rva2Vucy5zaXplWzFdfTtcbiAgICAgIHBhZGRpbmctbGVmdDogJHt0b2tlbnMuc2l6ZVsxLjVdfTtcbiAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICBmb250LXdlaWdodDogJHtmb250LndlaWdodC5tZWRpdW19O1xuICAgICAgYm9yZGVyOiAke3QyKFwiMXB4IHNvbGlkIFwiICsgY29sb3JzLmdyYXlbMzAwXSwgXCIxcHggc29saWQgdHJhbnNwYXJlbnRcIil9O1xuICAgICAgdXNlci1zZWxlY3Q6IG5vbmU7XG4gICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAmOmZvY3VzLXZpc2libGUge1xuICAgICAgICBvdXRsaW5lLW9mZnNldDogMnB4O1xuICAgICAgICBvdXRsaW5lOiAycHggc29saWQgJHtjb2xvcnMuYmx1ZVs4MDBdfTtcbiAgICAgIH1cbiAgICBgLFxuICAgIHF1ZXJ5U3RhdHVzVGFnTGFiZWw6IGNzc2BcbiAgICAgIGZvbnQtc2l6ZTogJHtmb250LnNpemUueHN9O1xuICAgIGAsXG4gICAgcXVlcnlTdGF0dXNDb3VudDogY3NzYFxuICAgICAgZm9udC1zaXplOiAke2ZvbnQuc2l6ZS54c307XG4gICAgICBwYWRkaW5nOiAwIDVweDtcbiAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgICBjb2xvcjogJHt0Mihjb2xvcnMuZ3JheVs1MDBdLCBjb2xvcnMuZ3JheVs0MDBdKX07XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke3QyKGNvbG9ycy5ncmF5WzIwMF0sIGNvbG9ycy5kYXJrR3JheVszMDBdKX07XG4gICAgICBib3JkZXItcmFkaXVzOiAycHg7XG4gICAgICBmb250LXZhcmlhbnQtbnVtZXJpYzogdGFidWxhci1udW1zO1xuICAgICAgaGVpZ2h0OiAke3Rva2Vucy5zaXplWzQuNV19O1xuICAgIGAsXG4gICAgc3RhdHVzVG9vbHRpcDogY3NzYFxuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgei1pbmRleDogMTtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICR7dDIoY29sb3JzLmdyYXlbNTBdLCBjb2xvcnMuZGFya0dyYXlbNTAwXSl9O1xuICAgICAgdG9wOiAxMDAlO1xuICAgICAgbGVmdDogNTAlO1xuICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgY2FsYygke3Rva2Vucy5zaXplWzJdfSkpO1xuICAgICAgcGFkZGluZzogJHt0b2tlbnMuc2l6ZVswLjVdfSAke3Rva2Vucy5zaXplWzJdfTtcbiAgICAgIGJvcmRlci1yYWRpdXM6ICR7dG9rZW5zLmJvcmRlci5yYWRpdXMuc219O1xuICAgICAgZm9udC1zaXplOiAke2ZvbnQuc2l6ZS54c307XG4gICAgICBib3JkZXI6IDFweCBzb2xpZCAke3QyKGNvbG9ycy5ncmF5WzQwMF0sIGNvbG9ycy5ncmF5WzYwMF0pfTtcbiAgICAgIGNvbG9yOiAke3QyKGNvbG9yc1tcImdyYXlcIl1bNjAwXSwgY29sb3JzW1wiZ3JheVwiXVszMDBdKX07XG5cbiAgICAgICY6OmJlZm9yZSB7XG4gICAgICAgIHRvcDogMHB4O1xuICAgICAgICBjb250ZW50OiAnICc7XG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICBsZWZ0OiA1MCU7XG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC0xMDAlKTtcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICBib3JkZXItY29sb3I6IHRyYW5zcGFyZW50IHRyYW5zcGFyZW50XG4gICAgICAgICAgJHt0Mihjb2xvcnMuZ3JheVs0MDBdLCBjb2xvcnMuZ3JheVs2MDBdKX0gdHJhbnNwYXJlbnQ7XG4gICAgICAgIGJvcmRlci1zdHlsZTogc29saWQ7XG4gICAgICAgIGJvcmRlci13aWR0aDogN3B4O1xuICAgICAgICAvKiB0cmFuc2Zvcm06IHJvdGF0ZSgxODBkZWcpOyAqL1xuICAgICAgfVxuXG4gICAgICAmOjphZnRlciB7XG4gICAgICAgIHRvcDogMHB4O1xuICAgICAgICBjb250ZW50OiAnICc7XG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICBsZWZ0OiA1MCU7XG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIGNhbGMoLTEwMCUgKyAycHgpKTtcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICBib3JkZXItY29sb3I6IHRyYW5zcGFyZW50IHRyYW5zcGFyZW50XG4gICAgICAgICAgJHt0Mihjb2xvcnMuZ3JheVsxMDBdLCBjb2xvcnMuZGFya0dyYXlbNTAwXSl9IHRyYW5zcGFyZW50O1xuICAgICAgICBib3JkZXItc3R5bGU6IHNvbGlkO1xuICAgICAgICBib3JkZXItd2lkdGg6IDdweDtcbiAgICAgIH1cbiAgICBgLFxuICAgIGZpbHRlcnNDb250YWluZXI6IGNzc2BcbiAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICBnYXA6ICR7dG9rZW5zLnNpemVbMl19O1xuICAgICAgJiA+IGJ1dHRvbiB7XG4gICAgICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICAgICAgcGFkZGluZzogJHt0b2tlbnMuc2l6ZVswLjVdfSAke3Rva2Vucy5zaXplWzEuNV19ICR7dG9rZW5zLnNpemVbMC41XX1cbiAgICAgICAgICAke3Rva2Vucy5zaXplWzJdfTtcbiAgICAgICAgYm9yZGVyLXJhZGl1czogJHt0b2tlbnMuYm9yZGVyLnJhZGl1cy5zbX07XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICR7dDIoY29sb3JzLmdyYXlbMTAwXSwgY29sb3JzLmRhcmtHcmF5WzQwMF0pfTtcbiAgICAgICAgYm9yZGVyOiAxcHggc29saWQgJHt0Mihjb2xvcnMuZ3JheVszMDBdLCBjb2xvcnMuZGFya0dyYXlbMjAwXSl9O1xuICAgICAgICBjb2xvcjogJHt0Mihjb2xvcnMuZ3JheVs3MDBdLCBjb2xvcnMuZ3JheVszMDBdKX07XG4gICAgICAgIGZvbnQtc2l6ZTogJHtmb250LnNpemUueHN9O1xuICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgICBsaW5lLWhlaWdodDogJHtmb250LmxpbmVIZWlnaHQuc219O1xuICAgICAgICBnYXA6ICR7dG9rZW5zLnNpemVbMS41XX07XG4gICAgICAgIG1heC13aWR0aDogMTYwcHg7XG4gICAgICAgICY6Zm9jdXMtdmlzaWJsZSB7XG4gICAgICAgICAgb3V0bGluZS1vZmZzZXQ6IDJweDtcbiAgICAgICAgICBib3JkZXItcmFkaXVzOiAke2JvcmRlci5yYWRpdXMueHN9O1xuICAgICAgICAgIG91dGxpbmU6IDJweCBzb2xpZCAke2NvbG9ycy5ibHVlWzgwMF19O1xuICAgICAgICB9XG4gICAgICAgICYgc3ZnIHtcbiAgICAgICAgICB3aWR0aDogJHt0b2tlbnMuc2l6ZVszXX07XG4gICAgICAgICAgaGVpZ2h0OiAke3Rva2Vucy5zaXplWzNdfTtcbiAgICAgICAgICBjb2xvcjogJHt0Mihjb2xvcnMuZ3JheVs1MDBdLCBjb2xvcnMuZ3JheVs0MDBdKX07XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICBgLFxuICAgIGZpbHRlcklucHV0OiBjc3NgXG4gICAgICBwYWRkaW5nOiAke3NpemUzWzAuNV19ICR7c2l6ZTNbMl19O1xuICAgICAgYm9yZGVyLXJhZGl1czogJHt0b2tlbnMuYm9yZGVyLnJhZGl1cy5zbX07XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke3QyKGNvbG9ycy5ncmF5WzEwMF0sIGNvbG9ycy5kYXJrR3JheVs0MDBdKX07XG4gICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgYm94LXNpemluZzogY29udGVudC1ib3g7XG4gICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgZ2FwOiAke3Rva2Vucy5zaXplWzEuNV19O1xuICAgICAgbWF4LXdpZHRoOiAxNjBweDtcbiAgICAgIG1pbi13aWR0aDogMTAwcHg7XG4gICAgICBib3JkZXI6IDFweCBzb2xpZCAke3QyKGNvbG9ycy5ncmF5WzMwMF0sIGNvbG9ycy5kYXJrR3JheVsyMDBdKX07XG4gICAgICBoZWlnaHQ6IG1pbi1jb250ZW50O1xuICAgICAgY29sb3I6ICR7dDIoY29sb3JzLmdyYXlbNjAwXSwgY29sb3JzLmdyYXlbNDAwXSl9O1xuICAgICAgJiA+IHN2ZyB7XG4gICAgICAgIHdpZHRoOiAke3NpemUzWzNdfTtcbiAgICAgICAgaGVpZ2h0OiAke3NpemUzWzNdfTtcbiAgICAgIH1cbiAgICAgICYgaW5wdXQge1xuICAgICAgICBmb250LXNpemU6ICR7Zm9udC5zaXplLnhzfTtcbiAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICR7dDIoY29sb3JzLmdyYXlbMTAwXSwgY29sb3JzLmRhcmtHcmF5WzQwMF0pfTtcbiAgICAgICAgYm9yZGVyOiBub25lO1xuICAgICAgICBwYWRkaW5nOiAwO1xuICAgICAgICBsaW5lLWhlaWdodDogJHtmb250LmxpbmVIZWlnaHQuc219O1xuICAgICAgICBjb2xvcjogJHt0Mihjb2xvcnMuZ3JheVs3MDBdLCBjb2xvcnMuZ3JheVszMDBdKX07XG4gICAgICAgICY6OnBsYWNlaG9sZGVyIHtcbiAgICAgICAgICBjb2xvcjogJHt0Mihjb2xvcnMuZ3JheVs3MDBdLCBjb2xvcnMuZ3JheVszMDBdKX07XG4gICAgICAgIH1cbiAgICAgICAgJjpmb2N1cyB7XG4gICAgICAgICAgb3V0bGluZTogbm9uZTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICAmOmZvY3VzLXdpdGhpbiB7XG4gICAgICAgIG91dGxpbmUtb2Zmc2V0OiAycHg7XG4gICAgICAgIGJvcmRlci1yYWRpdXM6ICR7Ym9yZGVyLnJhZGl1cy54c307XG4gICAgICAgIG91dGxpbmU6IDJweCBzb2xpZCAke2NvbG9ycy5ibHVlWzgwMF19O1xuICAgICAgfVxuICAgIGAsXG4gICAgZmlsdGVyU2VsZWN0OiBjc3NgXG4gICAgICBwYWRkaW5nOiAke3Rva2Vucy5zaXplWzAuNV19ICR7dG9rZW5zLnNpemVbMl19O1xuICAgICAgYm9yZGVyLXJhZGl1czogJHt0b2tlbnMuYm9yZGVyLnJhZGl1cy5zbX07XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke3QyKGNvbG9ycy5ncmF5WzEwMF0sIGNvbG9ycy5kYXJrR3JheVs0MDBdKX07XG4gICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgIGdhcDogJHt0b2tlbnMuc2l6ZVsxLjVdfTtcbiAgICAgIGJveC1zaXppbmc6IGNvbnRlbnQtYm94O1xuICAgICAgbWF4LXdpZHRoOiAxNjBweDtcbiAgICAgIGJvcmRlcjogMXB4IHNvbGlkICR7dDIoY29sb3JzLmdyYXlbMzAwXSwgY29sb3JzLmRhcmtHcmF5WzIwMF0pfTtcbiAgICAgIGhlaWdodDogbWluLWNvbnRlbnQ7XG4gICAgICAmID4gc3ZnIHtcbiAgICAgICAgY29sb3I6ICR7dDIoY29sb3JzLmdyYXlbNjAwXSwgY29sb3JzLmdyYXlbNDAwXSl9O1xuICAgICAgICB3aWR0aDogJHt0b2tlbnMuc2l6ZVsyXX07XG4gICAgICAgIGhlaWdodDogJHt0b2tlbnMuc2l6ZVsyXX07XG4gICAgICB9XG4gICAgICAmID4gc2VsZWN0IHtcbiAgICAgICAgYXBwZWFyYW5jZTogbm9uZTtcbiAgICAgICAgY29sb3I6ICR7dDIoY29sb3JzLmdyYXlbNzAwXSwgY29sb3JzLmdyYXlbMzAwXSl9O1xuICAgICAgICBtaW4td2lkdGg6IDEwMHB4O1xuICAgICAgICBsaW5lLWhlaWdodDogJHtmb250LmxpbmVIZWlnaHQuc219O1xuICAgICAgICBmb250LXNpemU6ICR7Zm9udC5zaXplLnhzfTtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHt0Mihjb2xvcnMuZ3JheVsxMDBdLCBjb2xvcnMuZGFya0dyYXlbNDAwXSl9O1xuICAgICAgICBib3JkZXI6IG5vbmU7XG4gICAgICAgICY6Zm9jdXMge1xuICAgICAgICAgIG91dGxpbmU6IG5vbmU7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgICY6Zm9jdXMtd2l0aGluIHtcbiAgICAgICAgb3V0bGluZS1vZmZzZXQ6IDJweDtcbiAgICAgICAgYm9yZGVyLXJhZGl1czogJHtib3JkZXIucmFkaXVzLnhzfTtcbiAgICAgICAgb3V0bGluZTogMnB4IHNvbGlkICR7Y29sb3JzLmJsdWVbODAwXX07XG4gICAgICB9XG4gICAgYCxcbiAgICBhY3Rpb25zQ29udGFpbmVyOiBjc3NgXG4gICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgZ2FwOiAke3Rva2Vucy5zaXplWzJdfTtcbiAgICBgLFxuICAgIGFjdGlvbnNCdG46IGNzc2BcbiAgICAgIGJvcmRlci1yYWRpdXM6ICR7dG9rZW5zLmJvcmRlci5yYWRpdXMuc219O1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHt0Mihjb2xvcnMuZ3JheVsxMDBdLCBjb2xvcnMuZGFya0dyYXlbNDAwXSl9O1xuICAgICAgYm9yZGVyOiAxcHggc29saWQgJHt0Mihjb2xvcnMuZ3JheVszMDBdLCBjb2xvcnMuZGFya0dyYXlbMjAwXSl9O1xuICAgICAgd2lkdGg6ICR7dG9rZW5zLnNpemVbNi41XX07XG4gICAgICBoZWlnaHQ6ICR7dG9rZW5zLnNpemVbNi41XX07XG4gICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgZ2FwOiAke3Rva2Vucy5zaXplWzEuNV19O1xuICAgICAgbWF4LXdpZHRoOiAxNjBweDtcbiAgICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICAgIHBhZGRpbmc6IDA7XG4gICAgICAmOmhvdmVyIHtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHt0Mihjb2xvcnMuZ3JheVsyMDBdLCBjb2xvcnMuZGFya0dyYXlbNTAwXSl9O1xuICAgICAgfVxuICAgICAgJiBzdmcge1xuICAgICAgICBjb2xvcjogJHt0Mihjb2xvcnMuZ3JheVs3MDBdLCBjb2xvcnMuZ3JheVszMDBdKX07XG4gICAgICAgIHdpZHRoOiAke3Rva2Vucy5zaXplWzNdfTtcbiAgICAgICAgaGVpZ2h0OiAke3Rva2Vucy5zaXplWzNdfTtcbiAgICAgIH1cbiAgICAgICY6Zm9jdXMtdmlzaWJsZSB7XG4gICAgICAgIG91dGxpbmUtb2Zmc2V0OiAycHg7XG4gICAgICAgIGJvcmRlci1yYWRpdXM6ICR7Ym9yZGVyLnJhZGl1cy54c307XG4gICAgICAgIG91dGxpbmU6IDJweCBzb2xpZCAke2NvbG9ycy5ibHVlWzgwMF19O1xuICAgICAgfVxuICAgIGAsXG4gICAgYWN0aW9uc0J0bk9mZmxpbmU6IGNzc2BcbiAgICAgICYgc3ZnIHtcbiAgICAgICAgc3Ryb2tlOiAke3QyKGNvbG9ycy55ZWxsb3dbNzAwXSwgY29sb3JzLnllbGxvd1s1MDBdKX07XG4gICAgICAgIGZpbGw6ICR7dDIoY29sb3JzLnllbGxvd1s3MDBdLCBjb2xvcnMueWVsbG93WzUwMF0pfTtcbiAgICAgIH1cbiAgICBgLFxuICAgIG92ZXJmbG93UXVlcnlDb250YWluZXI6IGNzc2BcbiAgICAgIGZsZXg6IDE7XG4gICAgICBvdmVyZmxvdy15OiBhdXRvO1xuICAgICAgJiA+IGRpdiB7XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgICB9XG4gICAgYCxcbiAgICBxdWVyeVJvdzogY3NzYFxuICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICBwYWRkaW5nOiAwO1xuICAgICAgYm9yZGVyOiBub25lO1xuICAgICAgY3Vyc29yOiBwb2ludGVyO1xuICAgICAgY29sb3I6ICR7dDIoY29sb3JzLmdyYXlbNzAwXSwgY29sb3JzLmdyYXlbMzAwXSl9O1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHt0Mihjb2xvcnMuZ3JheVs1MF0sIGNvbG9ycy5kYXJrR3JheVs3MDBdKX07XG4gICAgICBsaW5lLWhlaWdodDogMTtcbiAgICAgICY6Zm9jdXMge1xuICAgICAgICBvdXRsaW5lOiBub25lO1xuICAgICAgfVxuICAgICAgJjpmb2N1cy12aXNpYmxlIHtcbiAgICAgICAgb3V0bGluZS1vZmZzZXQ6IC0ycHg7XG4gICAgICAgIGJvcmRlci1yYWRpdXM6ICR7Ym9yZGVyLnJhZGl1cy54c307XG4gICAgICAgIG91dGxpbmU6IDJweCBzb2xpZCAke2NvbG9ycy5ibHVlWzgwMF19O1xuICAgICAgfVxuICAgICAgJjpob3ZlciAudHNxZC1xdWVyeS1oYXNoIHtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHt0Mihjb2xvcnMuZ3JheVsyMDBdLCBjb2xvcnMuZGFya0dyYXlbNjAwXSl9O1xuICAgICAgfVxuXG4gICAgICAmIC50c3FkLXF1ZXJ5LW9ic2VydmVyLWNvdW50IHtcbiAgICAgICAgcGFkZGluZzogMCAke3Rva2Vucy5zaXplWzFdfTtcbiAgICAgICAgdXNlci1zZWxlY3Q6IG5vbmU7XG4gICAgICAgIG1pbi13aWR0aDogJHt0b2tlbnMuc2l6ZVs2LjVdfTtcbiAgICAgICAgYWxpZ24tc2VsZjogc3RyZXRjaDtcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgICAgIGZvbnQtc2l6ZTogJHtmb250LnNpemUueHN9O1xuICAgICAgICBmb250LXdlaWdodDogJHtmb250LndlaWdodC5tZWRpdW19O1xuICAgICAgICBib3JkZXItYm90dG9tLXdpZHRoOiAxcHg7XG4gICAgICAgIGJvcmRlci1ib3R0b20tc3R5bGU6IHNvbGlkO1xuICAgICAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgJHt0Mihjb2xvcnMuZ3JheVszMDBdLCBjb2xvcnMuZGFya0dyYXlbNzAwXSl9O1xuICAgICAgfVxuICAgICAgJiAudHNxZC1xdWVyeS1oYXNoIHtcbiAgICAgICAgdXNlci1zZWxlY3Q6IHRleHQ7XG4gICAgICAgIGZvbnQtc2l6ZTogJHtmb250LnNpemUueHN9O1xuICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgICBtaW4taGVpZ2h0OiAke3Rva2Vucy5zaXplWzZdfTtcbiAgICAgICAgZmxleDogMTtcbiAgICAgICAgcGFkZGluZzogJHt0b2tlbnMuc2l6ZVsxXX0gJHt0b2tlbnMuc2l6ZVsyXX07XG4gICAgICAgIGZvbnQtZmFtaWx5OiB1aS1tb25vc3BhY2UsIFNGTW9uby1SZWd1bGFyLCBNZW5sbywgTW9uYWNvLCBDb25zb2xhcyxcbiAgICAgICAgICAnTGliZXJhdGlvbiBNb25vJywgJ0NvdXJpZXIgTmV3JywgbW9ub3NwYWNlO1xuICAgICAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgJHt0Mihjb2xvcnMuZ3JheVszMDBdLCBjb2xvcnMuZGFya0dyYXlbNDAwXSl9O1xuICAgICAgICB0ZXh0LWFsaWduOiBsZWZ0O1xuICAgICAgICB0ZXh0LW92ZXJmbG93OiBjbGlwO1xuICAgICAgICB3b3JkLWJyZWFrOiBicmVhay13b3JkO1xuICAgICAgfVxuXG4gICAgICAmIC50c3FkLXF1ZXJ5LWRpc2FibGVkLWluZGljYXRvciB7XG4gICAgICAgIGFsaWduLXNlbGY6IHN0cmV0Y2g7XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICAgIHBhZGRpbmc6IDAgJHt0b2tlbnMuc2l6ZVsyXX07XG4gICAgICAgIGNvbG9yOiAke3QyKGNvbG9ycy5ncmF5WzgwMF0sIGNvbG9ycy5ncmF5WzMwMF0pfTtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHt0Mihjb2xvcnMuZ3JheVszMDBdLCBjb2xvcnMuZGFya0dyYXlbNjAwXSl9O1xuICAgICAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgJHt0Mihjb2xvcnMuZ3JheVszMDBdLCBjb2xvcnMuZGFya0dyYXlbNDAwXSl9O1xuICAgICAgICBmb250LXNpemU6ICR7Zm9udC5zaXplLnhzfTtcbiAgICAgIH1cbiAgICBgLFxuICAgIHNlbGVjdGVkUXVlcnlSb3c6IGNzc2BcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICR7dDIoY29sb3JzLmdyYXlbMjAwXSwgY29sb3JzLmRhcmtHcmF5WzUwMF0pfTtcbiAgICBgLFxuICAgIGRldGFpbHNDb250YWluZXI6IGNzc2BcbiAgICAgIGZsZXg6IDEgMSA3MDBweDtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICR7dDIoY29sb3JzLmdyYXlbNTBdLCBjb2xvcnMuZGFya0dyYXlbNzAwXSl9O1xuICAgICAgY29sb3I6ICR7dDIoY29sb3JzLmdyYXlbNzAwXSwgY29sb3JzLmdyYXlbMzAwXSl9O1xuICAgICAgZm9udC1mYW1pbHk6IHVpLXNhbnMtc2VyaWYsIEludGVyLCBzeXN0ZW0tdWksIHNhbnMtc2VyaWYsIHNhbnMtc2VyaWY7XG4gICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAgIG92ZXJmbG93LXk6IGF1dG87XG4gICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgdGV4dC1hbGlnbjogbGVmdDtcbiAgICBgLFxuICAgIGRldGFpbHNIZWFkZXI6IGNzc2BcbiAgICAgIGZvbnQtZmFtaWx5OiB1aS1zYW5zLXNlcmlmLCBJbnRlciwgc3lzdGVtLXVpLCBzYW5zLXNlcmlmLCBzYW5zLXNlcmlmO1xuICAgICAgcG9zaXRpb246IHN0aWNreTtcbiAgICAgIHRvcDogMDtcbiAgICAgIHotaW5kZXg6IDI7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke3QyKGNvbG9ycy5ncmF5WzIwMF0sIGNvbG9ycy5kYXJrR3JheVs2MDBdKX07XG4gICAgICBwYWRkaW5nOiAke3Rva2Vucy5zaXplWzEuNV19ICR7dG9rZW5zLnNpemVbMl19O1xuICAgICAgZm9udC13ZWlnaHQ6ICR7Zm9udC53ZWlnaHQubWVkaXVtfTtcbiAgICAgIGZvbnQtc2l6ZTogJHtmb250LnNpemUueHN9O1xuICAgICAgbGluZS1oZWlnaHQ6ICR7Zm9udC5saW5lSGVpZ2h0LnhzfTtcbiAgICAgIHRleHQtYWxpZ246IGxlZnQ7XG4gICAgYCxcbiAgICBkZXRhaWxzQm9keTogY3NzYFxuICAgICAgbWFyZ2luOiAke3Rva2Vucy5zaXplWzEuNV19IDBweCAke3Rva2Vucy5zaXplWzJdfSAwcHg7XG4gICAgICAmID4gZGl2IHtcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgYWxpZ24taXRlbXM6IHN0cmV0Y2g7XG4gICAgICAgIHBhZGRpbmc6IDAgJHt0b2tlbnMuc2l6ZVsyXX07XG4gICAgICAgIGxpbmUtaGVpZ2h0OiAke2ZvbnQubGluZUhlaWdodC5zbX07XG4gICAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgICAgICAgJiA+IHNwYW4ge1xuICAgICAgICAgIGZvbnQtc2l6ZTogJHtmb250LnNpemUueHN9O1xuICAgICAgICB9XG4gICAgICAgICYgPiBzcGFuOm50aC1jaGlsZCgyKSB7XG4gICAgICAgICAgZm9udC12YXJpYW50LW51bWVyaWM6IHRhYnVsYXItbnVtcztcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICAmID4gZGl2OmZpcnN0LWNoaWxkIHtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogJHt0b2tlbnMuc2l6ZVsxLjVdfTtcbiAgICAgIH1cblxuICAgICAgJiBjb2RlIHtcbiAgICAgICAgZm9udC1mYW1pbHk6IHVpLW1vbm9zcGFjZSwgU0ZNb25vLVJlZ3VsYXIsIE1lbmxvLCBNb25hY28sIENvbnNvbGFzLFxuICAgICAgICAgICdMaWJlcmF0aW9uIE1vbm8nLCAnQ291cmllciBOZXcnLCBtb25vc3BhY2U7XG4gICAgICAgIG1hcmdpbjogMDtcbiAgICAgICAgZm9udC1zaXplOiAke2ZvbnQuc2l6ZS54c307XG4gICAgICAgIGxpbmUtaGVpZ2h0OiAke2ZvbnQubGluZUhlaWdodC54c307XG4gICAgICB9XG5cbiAgICAgICYgcHJlIHtcbiAgICAgICAgbWFyZ2luOiAwO1xuICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgfVxuICAgIGAsXG4gICAgcXVlcnlEZXRhaWxzU3RhdHVzOiBjc3NgXG4gICAgICBib3JkZXI6IDFweCBzb2xpZCAke2NvbG9ycy5kYXJrR3JheVsyMDBdfTtcbiAgICAgIGJvcmRlci1yYWRpdXM6ICR7dG9rZW5zLmJvcmRlci5yYWRpdXMuc219O1xuICAgICAgZm9udC13ZWlnaHQ6ICR7Zm9udC53ZWlnaHQubWVkaXVtfTtcbiAgICAgIHBhZGRpbmc6ICR7dG9rZW5zLnNpemVbMV19ICR7dG9rZW5zLnNpemVbMi41XX07XG4gICAgYCxcbiAgICBhY3Rpb25zQm9keTogY3NzYFxuICAgICAgZmxleC13cmFwOiB3cmFwO1xuICAgICAgbWFyZ2luOiAke3Rva2Vucy5zaXplWzJdfSAwcHggJHt0b2tlbnMuc2l6ZVsyXX0gMHB4O1xuICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgIGdhcDogJHt0b2tlbnMuc2l6ZVsyXX07XG4gICAgICBwYWRkaW5nOiAwcHggJHt0b2tlbnMuc2l6ZVsyXX07XG4gICAgICAmID4gYnV0dG9uIHtcbiAgICAgICAgZm9udC1mYW1pbHk6IHVpLXNhbnMtc2VyaWYsIEludGVyLCBzeXN0ZW0tdWksIHNhbnMtc2VyaWYsIHNhbnMtc2VyaWY7XG4gICAgICAgIGZvbnQtc2l6ZTogJHtmb250LnNpemUueHN9O1xuICAgICAgICBwYWRkaW5nOiAke3Rva2Vucy5zaXplWzFdfSAke3Rva2Vucy5zaXplWzJdfTtcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgYm9yZGVyLXJhZGl1czogJHt0b2tlbnMuYm9yZGVyLnJhZGl1cy5zbX07XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICR7dDIoY29sb3JzLmdyYXlbMTAwXSwgY29sb3JzLmRhcmtHcmF5WzYwMF0pfTtcbiAgICAgICAgYm9yZGVyOiAxcHggc29saWQgJHt0Mihjb2xvcnMuZ3JheVszMDBdLCBjb2xvcnMuZGFya0dyYXlbNDAwXSl9O1xuICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgICBnYXA6ICR7dG9rZW5zLnNpemVbMl19O1xuICAgICAgICBmb250LXdlaWdodDogJHtmb250LndlaWdodC5tZWRpdW19O1xuICAgICAgICBsaW5lLWhlaWdodDogJHtmb250LmxpbmVIZWlnaHQueHN9O1xuICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgICAgICY6Zm9jdXMtdmlzaWJsZSB7XG4gICAgICAgICAgb3V0bGluZS1vZmZzZXQ6IDJweDtcbiAgICAgICAgICBib3JkZXItcmFkaXVzOiAke2JvcmRlci5yYWRpdXMueHN9O1xuICAgICAgICAgIG91dGxpbmU6IDJweCBzb2xpZCAke2NvbG9ycy5ibHVlWzgwMF19O1xuICAgICAgICB9XG4gICAgICAgICY6aG92ZXIge1xuICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICR7dDIoY29sb3JzLmdyYXlbMjAwXSwgY29sb3JzLmRhcmtHcmF5WzUwMF0pfTtcbiAgICAgICAgfVxuXG4gICAgICAgICY6ZGlzYWJsZWQge1xuICAgICAgICAgIG9wYWNpdHk6IDAuNjtcbiAgICAgICAgICBjdXJzb3I6IG5vdC1hbGxvd2VkO1xuICAgICAgICB9XG5cbiAgICAgICAgJiA+IHNwYW4ge1xuICAgICAgICAgIHdpZHRoOiAke3NpemUzWzEuNV19O1xuICAgICAgICAgIGhlaWdodDogJHtzaXplM1sxLjVdfTtcbiAgICAgICAgICBib3JkZXItcmFkaXVzOiAke3Rva2Vucy5ib3JkZXIucmFkaXVzLmZ1bGx9O1xuICAgICAgICB9XG4gICAgICB9XG4gICAgYCxcbiAgICBhY3Rpb25zU2VsZWN0OiBjc3NgXG4gICAgICBmb250LXNpemU6ICR7Zm9udC5zaXplLnhzfTtcbiAgICAgIHBhZGRpbmc6ICR7dG9rZW5zLnNpemVbMC41XX0gJHt0b2tlbnMuc2l6ZVsyXX07XG4gICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgYm9yZGVyLXJhZGl1czogJHt0b2tlbnMuYm9yZGVyLnJhZGl1cy5zbX07XG4gICAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHt0Mihjb2xvcnMuZ3JheVsxMDBdLCBjb2xvcnMuZGFya0dyYXlbNjAwXSl9O1xuICAgICAgYm9yZGVyOiAxcHggc29saWQgJHt0Mihjb2xvcnMuZ3JheVszMDBdLCBjb2xvcnMuZGFya0dyYXlbNDAwXSl9O1xuICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgIGdhcDogJHt0b2tlbnMuc2l6ZVsyXX07XG4gICAgICBmb250LXdlaWdodDogJHtmb250LndlaWdodC5tZWRpdW19O1xuICAgICAgbGluZS1oZWlnaHQ6ICR7Zm9udC5saW5lSGVpZ2h0LnNtfTtcbiAgICAgIGNvbG9yOiAke3QyKGNvbG9ycy5yZWRbNTAwXSwgY29sb3JzLnJlZFs0MDBdKX07XG4gICAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAmOmhvdmVyIHtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHt0Mihjb2xvcnMuZ3JheVsyMDBdLCBjb2xvcnMuZGFya0dyYXlbNTAwXSl9O1xuICAgICAgfVxuICAgICAgJiA+IHNwYW4ge1xuICAgICAgICB3aWR0aDogJHtzaXplM1sxLjVdfTtcbiAgICAgICAgaGVpZ2h0OiAke3NpemUzWzEuNV19O1xuICAgICAgICBib3JkZXItcmFkaXVzOiAke3Rva2Vucy5ib3JkZXIucmFkaXVzLmZ1bGx9O1xuICAgICAgfVxuICAgICAgJjpmb2N1cy13aXRoaW4ge1xuICAgICAgICBvdXRsaW5lLW9mZnNldDogMnB4O1xuICAgICAgICBib3JkZXItcmFkaXVzOiAke2JvcmRlci5yYWRpdXMueHN9O1xuICAgICAgICBvdXRsaW5lOiAycHggc29saWQgJHtjb2xvcnMuYmx1ZVs4MDBdfTtcbiAgICAgIH1cbiAgICAgICYgc2VsZWN0IHtcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICB0b3A6IDA7XG4gICAgICAgIGxlZnQ6IDA7XG4gICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICBoZWlnaHQ6IDEwMCU7XG4gICAgICAgIGFwcGVhcmFuY2U6IG5vbmU7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICAgICAgICBib3JkZXI6IG5vbmU7XG4gICAgICAgIGNvbG9yOiB0cmFuc3BhcmVudDtcbiAgICAgICAgb3V0bGluZTogbm9uZTtcbiAgICAgIH1cblxuICAgICAgJiBzdmcgcGF0aCB7XG4gICAgICAgIHN0cm9rZTogJHt0b2tlbnMuY29sb3JzLnJlZFs0MDBdfTtcbiAgICAgIH1cbiAgICAgICYgc3ZnIHtcbiAgICAgICAgd2lkdGg6ICR7dG9rZW5zLnNpemVbMl19O1xuICAgICAgICBoZWlnaHQ6ICR7dG9rZW5zLnNpemVbMl19O1xuICAgICAgfVxuICAgIGAsXG4gICAgc2V0dGluZ3NNZW51OiBjc3NgXG4gICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgJiAqIHtcbiAgICAgICAgZm9udC1mYW1pbHk6IHVpLXNhbnMtc2VyaWYsIEludGVyLCBzeXN0ZW0tdWksIHNhbnMtc2VyaWYsIHNhbnMtc2VyaWY7XG4gICAgICB9XG4gICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgICAgZ2FwOiAke3NpemUzWzAuNV19O1xuICAgICAgYm9yZGVyLXJhZGl1czogJHt0b2tlbnMuYm9yZGVyLnJhZGl1cy5zbX07XG4gICAgICBib3JkZXI6IDFweCBzb2xpZCAke3QyKGNvbG9ycy5ncmF5WzMwMF0sIGNvbG9ycy5ncmF5WzcwMF0pfTtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICR7dDIoY29sb3JzLmdyYXlbNTBdLCBjb2xvcnMuZGFya0dyYXlbNjAwXSl9O1xuICAgICAgZm9udC1zaXplOiAke2ZvbnQuc2l6ZS54c307XG4gICAgICBjb2xvcjogJHt0Mihjb2xvcnMuZ3JheVs3MDBdLCBjb2xvcnMuZ3JheVszMDBdKX07XG4gICAgICB6LWluZGV4OiA5OTk5OTtcbiAgICAgIG1pbi13aWR0aDogMTIwcHg7XG4gICAgICBwYWRkaW5nOiAke3NpemUzWzAuNV19O1xuICAgIGAsXG4gICAgc2V0dGluZ3NTdWJUcmlnZ2VyOiBjc3NgXG4gICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgICAgIGJvcmRlci1yYWRpdXM6ICR7dG9rZW5zLmJvcmRlci5yYWRpdXMueHN9O1xuICAgICAgcGFkZGluZzogJHt0b2tlbnMuc2l6ZVsxXX0gJHt0b2tlbnMuc2l6ZVsxXX07XG4gICAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgICAgIGJvcmRlcjogbm9uZTtcbiAgICAgIGNvbG9yOiAke3QyKGNvbG9ycy5ncmF5WzcwMF0sIGNvbG9ycy5ncmF5WzMwMF0pfTtcbiAgICAgICYgc3ZnIHtcbiAgICAgICAgY29sb3I6ICR7dDIoY29sb3JzLmdyYXlbNjAwXSwgY29sb3JzLmdyYXlbNDAwXSl9O1xuICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZSgtOTBkZWcpO1xuICAgICAgICB3aWR0aDogJHt0b2tlbnMuc2l6ZVsyXX07XG4gICAgICAgIGhlaWdodDogJHt0b2tlbnMuc2l6ZVsyXX07XG4gICAgICB9XG4gICAgICAmOmhvdmVyIHtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHt0Mihjb2xvcnMuZ3JheVsyMDBdLCBjb2xvcnMuZGFya0dyYXlbNTAwXSl9O1xuICAgICAgfVxuICAgICAgJjpmb2N1cy12aXNpYmxlIHtcbiAgICAgICAgb3V0bGluZS1vZmZzZXQ6IDJweDtcbiAgICAgICAgb3V0bGluZTogMnB4IHNvbGlkICR7Y29sb3JzLmJsdWVbODAwXX07XG4gICAgICB9XG4gICAgICAmLmRhdGEtZGlzYWJsZWQge1xuICAgICAgICBvcGFjaXR5OiAwLjY7XG4gICAgICAgIGN1cnNvcjogbm90LWFsbG93ZWQ7XG4gICAgICB9XG4gICAgYCxcbiAgICBzZXR0aW5nc01lbnVIZWFkZXI6IGNzc2BcbiAgICAgIHBhZGRpbmc6ICR7dG9rZW5zLnNpemVbMV19ICR7dG9rZW5zLnNpemVbMV19O1xuICAgICAgZm9udC13ZWlnaHQ6ICR7Zm9udC53ZWlnaHQubWVkaXVtfTtcbiAgICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAke3QyKGNvbG9ycy5ncmF5WzMwMF0sIGNvbG9ycy5kYXJrR3JheVs0MDBdKX07XG4gICAgICBjb2xvcjogJHt0Mihjb2xvcnMuZ3JheVs1MDBdLCBjb2xvcnMuZ3JheVs0MDBdKX07XG4gICAgICBmb250LXNpemU6ICR7Zm9udC5zaXplW1wieHNcIl19O1xuICAgIGAsXG4gICAgc2V0dGluZ3NTdWJCdXR0b246IGNzc2BcbiAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICAgICAgY29sb3I6ICR7dDIoY29sb3JzLmdyYXlbNzAwXSwgY29sb3JzLmdyYXlbMzAwXSl9O1xuICAgICAgZm9udC1zaXplOiAke2ZvbnQuc2l6ZVtcInhzXCJdfTtcbiAgICAgIGJvcmRlci1yYWRpdXM6ICR7dG9rZW5zLmJvcmRlci5yYWRpdXMueHN9O1xuICAgICAgcGFkZGluZzogJHt0b2tlbnMuc2l6ZVsxXX0gJHt0b2tlbnMuc2l6ZVsxXX07XG4gICAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgICAgIGJvcmRlcjogbm9uZTtcbiAgICAgICYgc3ZnIHtcbiAgICAgICAgY29sb3I6ICR7dDIoY29sb3JzLmdyYXlbNjAwXSwgY29sb3JzLmdyYXlbNDAwXSl9O1xuICAgICAgfVxuICAgICAgJjpob3ZlciB7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICR7dDIoY29sb3JzLmdyYXlbMjAwXSwgY29sb3JzLmRhcmtHcmF5WzUwMF0pfTtcbiAgICAgIH1cbiAgICAgICY6Zm9jdXMtdmlzaWJsZSB7XG4gICAgICAgIG91dGxpbmUtb2Zmc2V0OiAycHg7XG4gICAgICAgIG91dGxpbmU6IDJweCBzb2xpZCAke2NvbG9ycy5ibHVlWzgwMF19O1xuICAgICAgfVxuICAgIGAsXG4gICAgdGhlbWVTZWxlY3RlZEJ1dHRvbjogY3NzYFxuICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHt0Mihjb2xvcnMucHVycGxlWzEwMF0sIGNvbG9ycy5wdXJwbGVbOTAwXSl9O1xuICAgICAgY29sb3I6ICR7dDIoY29sb3JzLnB1cnBsZVs3MDBdLCBjb2xvcnMucHVycGxlWzMwMF0pfTtcbiAgICAgICYgc3ZnIHtcbiAgICAgICAgY29sb3I6ICR7dDIoY29sb3JzLnB1cnBsZVs3MDBdLCBjb2xvcnMucHVycGxlWzMwMF0pfTtcbiAgICAgIH1cbiAgICAgICY6aG92ZXIge1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke3QyKGNvbG9ycy5wdXJwbGVbMTAwXSwgY29sb3JzLnB1cnBsZVs5MDBdKX07XG4gICAgICB9XG4gICAgYCxcbiAgICB2aWV3VG9nZ2xlOiBjc3NgXG4gICAgICBib3JkZXItcmFkaXVzOiAke3Rva2Vucy5ib3JkZXIucmFkaXVzLnNtfTtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICR7dDIoY29sb3JzLmdyYXlbMjAwXSwgY29sb3JzLmRhcmtHcmF5WzYwMF0pfTtcbiAgICAgIGJvcmRlcjogMXB4IHNvbGlkICR7dDIoY29sb3JzLmdyYXlbMzAwXSwgY29sb3JzLmRhcmtHcmF5WzIwMF0pfTtcbiAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICBwYWRkaW5nOiAwO1xuICAgICAgZm9udC1zaXplOiAke2ZvbnQuc2l6ZS54c307XG4gICAgICBjb2xvcjogJHt0Mihjb2xvcnMuZ3JheVs3MDBdLCBjb2xvcnMuZ3JheVszMDBdKX07XG4gICAgICBvdmVyZmxvdzogaGlkZGVuO1xuXG4gICAgICAmOmhhcyg6Zm9jdXMtdmlzaWJsZSkge1xuICAgICAgICBvdXRsaW5lOiAycHggc29saWQgJHtjb2xvcnMuYmx1ZVs4MDBdfTtcbiAgICAgIH1cblxuICAgICAgJiAudHNxZC1yYWRpby10b2dnbGUge1xuICAgICAgICBvcGFjaXR5OiAwLjU7XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgICYgbGFiZWwge1xuICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgICAgICAgbGluZS1oZWlnaHQ6ICR7Zm9udC5saW5lSGVpZ2h0Lm1kfTtcbiAgICAgICAgfVxuXG4gICAgICAgICYgbGFiZWw6aG92ZXIge1xuICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICR7dDIoY29sb3JzLmdyYXlbMTAwXSwgY29sb3JzLmRhcmtHcmF5WzUwMF0pfTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICAmID4gW2RhdGEtY2hlY2tlZF0ge1xuICAgICAgICBvcGFjaXR5OiAxO1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke3QyKGNvbG9ycy5ncmF5WzEwMF0sIGNvbG9ycy5kYXJrR3JheVs0MDBdKX07XG4gICAgICAgICYgbGFiZWw6aG92ZXIge1xuICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICR7dDIoY29sb3JzLmdyYXlbMTAwXSwgY29sb3JzLmRhcmtHcmF5WzQwMF0pfTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICAmIC50c3FkLXJhZGlvLXRvZ2dsZTpmaXJzdC1jaGlsZCB7XG4gICAgICAgICYgbGFiZWwge1xuICAgICAgICAgIHBhZGRpbmc6IDAgJHt0b2tlbnMuc2l6ZVsxLjVdfSAwICR7dG9rZW5zLnNpemVbMl19O1xuICAgICAgICB9XG4gICAgICAgIGJvcmRlci1yaWdodDogMXB4IHNvbGlkICR7dDIoY29sb3JzLmdyYXlbMzAwXSwgY29sb3JzLmRhcmtHcmF5WzIwMF0pfTtcbiAgICAgIH1cblxuICAgICAgJiAudHNxZC1yYWRpby10b2dnbGU6bnRoLWNoaWxkKDIpIHtcbiAgICAgICAgJiBsYWJlbCB7XG4gICAgICAgICAgcGFkZGluZzogMCAke3Rva2Vucy5zaXplWzJdfSAwICR7dG9rZW5zLnNpemVbMS41XX07XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICBgXG4gIH07XG59O1xudmFyIGxpZ2h0U3R5bGVzMiA9IChjc3MpID0+IHN0eWxlc0ZhY3RvcnkyKFwibGlnaHRcIiwgY3NzKTtcbnZhciBkYXJrU3R5bGVzMiA9IChjc3MpID0+IHN0eWxlc0ZhY3RvcnkyKFwiZGFya1wiLCBjc3MpO1xuZGVsZWdhdGVFdmVudHMoW1wiY2xpY2tcIiwgXCJtb3VzZWRvd25cIiwgXCJpbnB1dFwiXSk7XG4vKiEgQnVuZGxlZCBsaWNlbnNlIGluZm9ybWF0aW9uOlxuXG5AdGFuc3RhY2svbWF0Y2gtc29ydGVyLXV0aWxzL2J1aWxkL2xpYi9pbmRleC5tanM6XG4gICgqKlxuICAgICAqIG1hdGNoLXNvcnRlci11dGlsc1xuICAgICAqXG4gICAgICogQ29weXJpZ2h0IChjKSBUYW5TdGFja1xuICAgICAqXG4gICAgICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gICAgICogTElDRU5TRS5tZCBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICAgICAqXG4gICAgICogQGxpY2Vuc2UgTUlUXG4gICAgICopXG4gICgqKlxuICAgKiBAbmFtZSBtYXRjaC1zb3J0ZXJcbiAgICogQGxpY2Vuc2UgTUlUIGxpY2Vuc2UuXG4gICAqIEBjb3B5cmlnaHQgKGMpIDIwOTkgS2VudCBDLiBEb2Rkc1xuICAgKiBAYXV0aG9yIEtlbnQgQy4gRG9kZHMgPG1lQGtlbnRjZG9kZHMuY29tPiAoaHR0cHM6Ly9rZW50Y2RvZGRzLmNvbSlcbiAgICopXG5cbkBrb2JhbHRlL3V0aWxzL2Rpc3QvaW5kZXguanM6XG4gICgqIVxuICAgKiBQb3J0aW9ucyBvZiB0aGlzIGZpbGUgYXJlIGJhc2VkIG9uIGNvZGUgZnJvbSBhcmlha2l0LlxuICAgKiBNSVQgTGljZW5zZWQsIENvcHlyaWdodCAoYykgRGllZ28gSGF6LlxuICAgKlxuICAgKiBDcmVkaXRzIHRvIHRoZSBBcmlha2l0IHRlYW06XG4gICAqIGh0dHBzOi8vZ2l0aHViLmNvbS9hcmlha2l0L2FyaWFraXQvYmxvYi9kYTE0MjY3MmVkZGVmYTk5MzY1NzczY2VkNzIxNzFmYWNjMDZmZGNiL3BhY2thZ2VzL2FyaWFraXQtdXRpbHMvc3JjL2FycmF5LnRzXG4gICAqKVxuICAoKiFcbiAgICogT3JpZ2luYWwgY29kZSBieSBDaGFrcmEgVUlcbiAgICogTUlUIExpY2Vuc2VkLCBDb3B5cmlnaHQgKGMpIDIwMTkgU2VndW4gQWRlYmF5by5cbiAgICpcbiAgICogQ3JlZGl0cyB0byB0aGUgQ2hha3JhIFVJIHRlYW06XG4gICAqIGh0dHBzOi8vZ2l0aHViLmNvbS9jaGFrcmEtdWkvY2hha3JhLXVpL2Jsb2IvbWFpbi9wYWNrYWdlcy91dGlscy9zcmMvYXNzZXJ0aW9uLnRzXG4gICAqKVxuICAoKiFcbiAgICogUG9ydGlvbnMgb2YgdGhpcyBmaWxlIGFyZSBiYXNlZCBvbiBjb2RlIGZyb20gcmVhY3Qtc3BlY3RydW0uXG4gICAqIEFwYWNoZSBMaWNlbnNlIFZlcnNpb24gMi4wLCBDb3B5cmlnaHQgMjAyMCBBZG9iZS5cbiAgICpcbiAgICogQ3JlZGl0cyB0byB0aGUgUmVhY3QgU3BlY3RydW0gdGVhbTpcbiAgICogaHR0cHM6Ly9naXRodWIuY29tL3NvbGlkanMtY29tbXVuaXR5L3NvbGlkLWFyaWEvYmxvYi8yYzVmNTRmZWI1Y2ZlYTUxNGIxZWUwYTUyZDA0MTY4NzhmODgyMzUxL3BhY2thZ2VzL3V0aWxzL3NyYy9jcmVhdGVHbG9iYWxMaXN0ZW5lcnMudHNcbiAgICopXG4gICgqIVxuICAgKiBQb3J0aW9ucyBvZiB0aGlzIGZpbGUgYXJlIGJhc2VkIG9uIGNvZGUgZnJvbSBhcmlha2l0LlxuICAgKiBNSVQgTGljZW5zZWQsIENvcHlyaWdodCAoYykgRGllZ28gSGF6LlxuICAgKlxuICAgKiBDcmVkaXRzIHRvIHRoZSBBcmlha2l0IHRlYW06XG4gICAqIGh0dHBzOi8vZ2l0aHViLmNvbS9hcmlha2l0L2FyaWFraXQvYmxvYi8yMzJiYzc5MDE4ZWMyMDk2N2ZlYzFlMDk3YTk0NzRhYmEzYmI1YmU3L3BhY2thZ2VzL2FyaWFraXQtdXRpbHMvc3JjL2RvbS50c1xuICAgKilcbiAgKCohXG4gICAqIFBvcnRpb25zIG9mIHRoaXMgZmlsZSBhcmUgYmFzZWQgb24gY29kZSBmcm9tIHJlYWN0LXNwZWN0cnVtLlxuICAgKiBBcGFjaGUgTGljZW5zZSBWZXJzaW9uIDIuMCwgQ29weXJpZ2h0IDIwMjAgQWRvYmUuXG4gICAqXG4gICAqIENyZWRpdHMgdG8gdGhlIFJlYWN0IFNwZWN0cnVtIHRlYW06XG4gICAqIGh0dHBzOi8vZ2l0aHViLmNvbS9hZG9iZS9yZWFjdC1zcGVjdHJ1bS9ibG9iL2NmOWFiMjRmMzI1NWJlMTUzMGQwZjU4NDA2MWEwMWFhMWU4MTgwZTYvcGFja2FnZXMvQHJlYWN0LWFyaWEvdXRpbHMvc3JjL3BsYXRmb3JtLnRzXG4gICAqKVxuICAoKiFcbiAgICogUG9ydGlvbnMgb2YgdGhpcyBmaWxlIGFyZSBiYXNlZCBvbiBjb2RlIGZyb20gcmVhY3Qtc3BlY3RydW0uXG4gICAqIEFwYWNoZSBMaWNlbnNlIFZlcnNpb24gMi4wLCBDb3B5cmlnaHQgMjAyMCBBZG9iZS5cbiAgICpcbiAgICogQ3JlZGl0cyB0byB0aGUgUmVhY3QgU3BlY3RydW0gdGVhbTpcbiAgICogaHR0cHM6Ly9naXRodWIuY29tL2Fkb2JlL3JlYWN0LXNwZWN0cnVtL2Jsb2IvYTlkZWE4YTM2NzIxNzllNmMzOGFhZmQxNDI5ZGFmNDRjN2VhMmZmNi9wYWNrYWdlcy9AcmVhY3QtYXJpYS91dGlscy9zcmMvZm9jdXNXaXRob3V0U2Nyb2xsaW5nLnRzXG4gICAqKVxuICAoKiFcbiAgICogUG9ydGlvbnMgb2YgdGhpcyBmaWxlIGFyZSBiYXNlZCBvbiBjb2RlIGZyb20gYXJpYWtpdC5cbiAgICogTUlUIExpY2Vuc2VkLCBDb3B5cmlnaHQgKGMpIERpZWdvIEhhei5cbiAgICpcbiAgICogQ3JlZGl0cyB0byB0aGUgQXJpYWtpdCB0ZWFtOlxuICAgKiBodHRwczovL2dpdGh1Yi5jb20vYXJpYWtpdC9hcmlha2l0L2Jsb2IvbWFpbi9wYWNrYWdlcy9hcmlha2l0LXV0aWxzL3NyYy9mb2N1cy50c1xuICAgKlxuICAgKiBQb3J0aW9ucyBvZiB0aGlzIGZpbGUgYXJlIGJhc2VkIG9uIGNvZGUgZnJvbSByZWFjdC1zcGVjdHJ1bS5cbiAgICogQXBhY2hlIExpY2Vuc2UgVmVyc2lvbiAyLjAsIENvcHlyaWdodCAyMDIwIEFkb2JlLlxuICAgKlxuICAgKiBDcmVkaXRzIHRvIHRoZSBSZWFjdCBTcGVjdHJ1bSB0ZWFtOlxuICAgKiBodHRwczovL2dpdGh1Yi5jb20vYWRvYmUvcmVhY3Qtc3BlY3RydW0vYmxvYi9tYWluL3BhY2thZ2VzLyU0MHJlYWN0LWFyaWEvZm9jdXMvc3JjL2lzRWxlbWVudFZpc2libGUudHNcbiAgICogaHR0cHM6Ly9naXRodWIuY29tL2Fkb2JlL3JlYWN0LXNwZWN0cnVtL2Jsb2IvOGYyZjJhY2IzZDU4NTAzODJlYmU2MzFmMDU1Zjg4YzcwNGFhN2QxNy9wYWNrYWdlcy9AcmVhY3QtYXJpYS9mb2N1cy9zcmMvRm9jdXNTY29wZS50c3hcbiAgICopXG4gICgqIVxuICAgKiBQb3J0aW9ucyBvZiB0aGlzIGZpbGUgYXJlIGJhc2VkIG9uIGNvZGUgZnJvbSByZWFjdC1zcGVjdHJ1bS5cbiAgICogQXBhY2hlIExpY2Vuc2UgVmVyc2lvbiAyLjAsIENvcHlyaWdodCAyMDIwIEFkb2JlLlxuICAgKlxuICAgKiBDcmVkaXRzIHRvIHRoZSBSZWFjdCBTcGVjdHJ1bSB0ZWFtOlxuICAgKiBodHRwczovL2dpdGh1Yi5jb20vYWRvYmUvcmVhY3Qtc3BlY3RydW0vYmxvYi9mNmU2ODZmZTlkM2I5ODNkNDg2NTA5ODBjMWVjZmRkZTMyMGJjNjJmL3BhY2thZ2VzL0ByZWFjdC1hcmlhL2ZvY3VzL3NyYy9Gb2N1c1Njb3BlLnRzeFxuICAgKilcbiAgKCohXG4gICAqIFBvcnRpb25zIG9mIHRoaXMgZmlsZSBhcmUgYmFzZWQgb24gY29kZSBmcm9tIHJlYWN0LXNwZWN0cnVtLlxuICAgKiBBcGFjaGUgTGljZW5zZSBWZXJzaW9uIDIuMCwgQ29weXJpZ2h0IDIwMjAgQWRvYmUuXG4gICAqXG4gICAqIENyZWRpdHMgdG8gdGhlIFJlYWN0IFNwZWN0cnVtIHRlYW06XG4gICAqIGh0dHBzOi8vZ2l0aHViLmNvbS9hZG9iZS9yZWFjdC1zcGVjdHJ1bS9ibG9iL2E5ZGVhOGEzNjcyMTc5ZTZjMzhhYWZkMTQyOWRhZjQ0YzdlYTJmZjYvcGFja2FnZXMvQHJlYWN0LWFyaWEvdXRpbHMvc3JjL2dldFNjcm9sbFBhcmVudC50c1xuICAgKilcbiAgKCohXG4gICAqIFBvcnRpb25zIG9mIHRoaXMgZmlsZSBhcmUgYmFzZWQgb24gY29kZSBmcm9tIHJlYWN0LXNwZWN0cnVtLlxuICAgKiBBcGFjaGUgTGljZW5zZSBWZXJzaW9uIDIuMCwgQ29weXJpZ2h0IDIwMjAgQWRvYmUuXG4gICAqXG4gICAqIENyZWRpdHMgdG8gdGhlIFJlYWN0IFNwZWN0cnVtIHRlYW06XG4gICAqIGh0dHBzOi8vZ2l0aHViLmNvbS9hZG9iZS9yZWFjdC1zcGVjdHJ1bS9ibG9iL2E5ZGVhOGEzNjcyMTc5ZTZjMzhhYWZkMTQyOWRhZjQ0YzdlYTJmZjYvcGFja2FnZXMvQHJlYWN0LWFyaWEvdXRpbHMvc3JjL2lzVmlydHVhbEV2ZW50LnRzXG4gICAqKVxuICAoKiFcbiAgICogUG9ydGlvbnMgb2YgdGhpcyBmaWxlIGFyZSBiYXNlZCBvbiBjb2RlIGZyb20gcmVhY3Qtc3BlY3RydW0uXG4gICAqIEFwYWNoZSBMaWNlbnNlIFZlcnNpb24gMi4wLCBDb3B5cmlnaHQgMjAyMCBBZG9iZS5cbiAgICpcbiAgICogQ3JlZGl0cyB0byB0aGUgUmVhY3QgU3BlY3RydW0gdGVhbTpcbiAgICogaHR0cHM6Ly9naXRodWIuY29tL2Fkb2JlL3JlYWN0LXNwZWN0cnVtL2Jsb2IvZmYzZTY5MGZmZmM2YzU0MzY3YjgwNTdlMjhhMGU1YjkyMTFmMzdiNS9wYWNrYWdlcy9AcmVhY3Qtc3RhdGVseS91dGlscy9zcmMvbnVtYmVyLnRzXG4gICAqKVxuICAoKiFcbiAgICogUG9ydGlvbnMgb2YgdGhpcyBmaWxlIGFyZSBiYXNlZCBvbiBjb2RlIGZyb20gYXJpYWtpdC5cbiAgICogTUlUIExpY2Vuc2VkLCBDb3B5cmlnaHQgKGMpIERpZWdvIEhhei5cbiAgICpcbiAgICogQ3JlZGl0cyB0byB0aGUgQXJpYWtpdCB0ZWFtOlxuICAgKiBodHRwczovL2dpdGh1Yi5jb20vYXJpYWtpdC9hcmlha2l0L2Jsb2IvODRlOTc5NDNhZDYzN2E1ODJjMDFjOWI1NmQ4ODBjZDk1ZjU5NTczNy9wYWNrYWdlcy9hcmlha2l0L3NyYy9ob3ZlcmNhcmQvX191dGlscy9wb2x5Z29uLnRzXG4gICAqIGh0dHBzOi8vZ2l0aHViLmNvbS9hcmlha2l0L2FyaWFraXQvYmxvYi9mMmE5Njk3M2RlNTIzZDY3ZTQxZWVjOTgzMjYzOTM2YzQ4OWVmM2UyL3BhY2thZ2VzL2FyaWFraXQvc3JjL2hvdmVyY2FyZC9fX3V0aWxzL2RlYnVnLXBvbHlnb24udHNcbiAgICopXG4gICgqIVxuICAgKiBQb3J0aW9ucyBvZiB0aGlzIGZpbGUgYXJlIGJhc2VkIG9uIGNvZGUgZnJvbSByZWFjdC1zcGVjdHJ1bS5cbiAgICogQXBhY2hlIExpY2Vuc2UgVmVyc2lvbiAyLjAsIENvcHlyaWdodCAyMDIwIEFkb2JlLlxuICAgKlxuICAgKiBDcmVkaXRzIHRvIHRoZSBSZWFjdCBTcGVjdHJ1bSB0ZWFtOlxuICAgKiBodHRwczovL2dpdGh1Yi5jb20vYWRvYmUvcmVhY3Qtc3BlY3RydW0vYmxvYi9hOWRlYThhMzY3MjE3OWU2YzM4YWFmZDE0MjlkYWY0NGM3ZWEyZmY2L3BhY2thZ2VzL0ByZWFjdC1hcmlhL3V0aWxzL3NyYy9ydW5BZnRlclRyYW5zaXRpb24udHNcbiAgICopXG4gICgqIVxuICAgKiBQb3J0aW9ucyBvZiB0aGlzIGZpbGUgYXJlIGJhc2VkIG9uIGNvZGUgZnJvbSByZWFjdC1zcGVjdHJ1bS5cbiAgICogQXBhY2hlIExpY2Vuc2UgVmVyc2lvbiAyLjAsIENvcHlyaWdodCAyMDIwIEFkb2JlLlxuICAgKlxuICAgKiBDcmVkaXRzIHRvIHRoZSBSZWFjdCBTcGVjdHJ1bSB0ZWFtOlxuICAgKiBodHRwczovL2dpdGh1Yi5jb20vYWRvYmUvcmVhY3Qtc3BlY3RydW0vYmxvYi84ZjJmMmFjYjNkNTg1MDM4MmViZTYzMWYwNTVmODhjNzA0YWE3ZDE3L3BhY2thZ2VzL0ByZWFjdC1hcmlhL3V0aWxzL3NyYy9zY3JvbGxJbnRvVmlldy50c1xuICAgKilcbiovXG5cbmV4cG9ydCB7IERldnRvb2xzX2RlZmF1bHQgYXMgZGVmYXVsdCB9O1xuIl0sIm5hbWVzIjpbImNyZWF0ZUNvbnRleHQiLCJzcGxpdFByb3BzIiwiY3JlYXRlTWVtbyIsImNyZWF0ZUNvbXBvbmVudCIsIm1lcmdlUHJvcHMiLCJjcmVhdGVVbmlxdWVJZCIsImNyZWF0ZVNpZ25hbCIsImNyZWF0ZUVmZmVjdCIsIm9uQ2xlYW51cCIsIlNob3ciLCJvbiIsImRlbGVnYXRlRXZlbnRzIiwic29ydEZucyIsIm11dGF0aW9uU29ydEZucyIsIkR5bmFtaWMiLCJ1c2VDb250ZXh0IiwiY3JlYXRlUmVuZGVyRWZmZWN0Iiwic2V0QXR0cmlidXRlIiwiUG9ydGFsIiwidW50cmFjayIsInRlbXBsYXRlIiwiZ2V0UHJlZmVycmVkQ29sb3JTY2hlbWUiLCJvbk1vdW50IiwidXNlIiwiaW5zZXJ0IiwiY2xhc3NOYW1lIiwiZ2V0UXVlcnlTdGF0dXNDb2xvciIsImdldE11dGF0aW9uU3RhdHVzQ29sb3IiLCJnZXRRdWVyeVN0YXR1c0xhYmVsIiwic3ByZWFkIiwiZ2V0UXVlcnlTdGF0dXNDb2xvckJ5TGFiZWwiLCJkaXNwbGF5VmFsdWUiLCJGb3IiLCJiYXRjaCIsImlzU2VydmVyIiwiY3JlYXRlQ29tcHV0ZWQiLCJJbmRleCIsInVwZGF0ZU5lc3RlZERhdGFCeVBhdGgiLCJjb252ZXJ0UmVtVG9QaXhlbHMiLCJnZXRTaWRlZFByb3AiLCJ1c2VUcmFuc2l0aW9uIiwiJFRSQUNLIiwiY3JlYXRlUm9vdCIsImFkZEV2ZW50TGlzdGVuZXIiLCJzdHJpbmdpZnkiLCJTd2l0Y2giLCJNYXRjaCIsImRlbGV0ZU5lc3RlZERhdGFCeVBhdGgiLCJjbGVhckRlbGVnYXRlZEV2ZW50cyIsImdldE93bmVyIiwiREVWIiwiY2hhcmFjdGVyTWFwIiwiw4AiLCLDgSIsIsOCIiwiw4MiLCLDhCIsIsOFIiwi4bqkIiwi4bquIiwi4bqyIiwi4bq0Iiwi4bq2Iiwiw4YiLCLhuqYiLCLhurAiLCLIgiIsIsOHIiwi4biIIiwiw4giLCLDiSIsIsOKIiwiw4siLCLhur4iLCLhuJYiLCLhu4AiLCLhuJQiLCLhuJwiLCLIhiIsIsOMIiwiw40iLCLDjiIsIsOPIiwi4biuIiwiyIoiLCLDkCIsIsORIiwiw5IiLCLDkyIsIsOUIiwiw5UiLCLDliIsIsOYIiwi4buQIiwi4bmMIiwi4bmSIiwiyI4iLCLDmSIsIsOaIiwiw5siLCLDnCIsIsOdIiwiw6AiLCLDoSIsIsOiIiwiw6MiLCLDpCIsIsOlIiwi4bqlIiwi4bqvIiwi4bqzIiwi4bq1Iiwi4bq3Iiwiw6YiLCLhuqciLCLhurEiLCLIgyIsIsOnIiwi4biJIiwiw6giLCLDqSIsIsOqIiwiw6siLCLhur8iLCLhuJciLCLhu4EiLCLhuJUiLCLhuJ0iLCLIhyIsIsOsIiwiw60iLCLDriIsIsOvIiwi4bivIiwiyIsiLCLDsCIsIsOxIiwiw7IiLCLDsyIsIsO0Iiwiw7UiLCLDtiIsIsO4Iiwi4buRIiwi4bmNIiwi4bmTIiwiyI8iLCLDuSIsIsO6Iiwiw7siLCLDvCIsIsO9Iiwiw78iLCLEgCIsIsSBIiwixIIiLCLEgyIsIsSEIiwixIUiLCLEhiIsIsSHIiwixIgiLCLEiSIsIsSKIiwixIsiLCLEjCIsIsSNIiwiQ8yGIiwiY8yGIiwixI4iLCLEjyIsIsSQIiwixJEiLCLEkiIsIsSTIiwixJQiLCLElSIsIsSWIiwixJciLCLEmCIsIsSZIiwixJoiLCLEmyIsIsScIiwix7QiLCLEnSIsIse1IiwixJ4iLCLEnyIsIsSgIiwixKEiLCLEoiIsIsSjIiwixKQiLCLEpSIsIsSmIiwixKciLCLhuKoiLCLhuKsiLCLEqCIsIsSpIiwixKoiLCLEqyIsIsSsIiwixK0iLCLEriIsIsSvIiwixLAiLCLEsSIsIsSyIiwixLMiLCLEtCIsIsS1IiwixLYiLCLEtyIsIuG4sCIsIuG4sSIsIkvMhiIsImvMhiIsIsS5IiwixLoiLCLEuyIsIsS8IiwixL0iLCLEviIsIsS/IiwixYAiLCLFgSIsIsWCIiwi4bi+Iiwi4bi/IiwiTcyGIiwibcyGIiwixYMiLCLFhCIsIsWFIiwixYYiLCLFhyIsIsWIIiwixYkiLCJOzIYiLCJuzIYiLCLFjCIsIsWNIiwixY4iLCLFjyIsIsWQIiwixZEiLCLFkiIsIsWTIiwiUMyGIiwicMyGIiwixZQiLCLFlSIsIsWWIiwixZciLCLFmCIsIsWZIiwiUsyGIiwicsyGIiwiyJIiLCLIkyIsIsWaIiwixZsiLCLFnCIsIsWdIiwixZ4iLCLImCIsIsiZIiwixZ8iLCLFoCIsIsWhIiwixaIiLCLFoyIsIsibIiwiyJoiLCLFpCIsIsWlIiwixaYiLCLFpyIsIlTMhiIsInTMhiIsIsWoIiwixakiLCLFqiIsIsWrIiwixawiLCLFrSIsIsWuIiwixa8iLCLFsCIsIsWxIiwixbIiLCLFsyIsIsiWIiwiyJciLCJWzIYiLCJ2zIYiLCLFtCIsIsW1Iiwi4bqCIiwi4bqDIiwiWMyGIiwieMyGIiwixbYiLCLFtyIsIsW4IiwiWcyGIiwiecyGIiwixbkiLCLFuiIsIsW7IiwixbwiLCLFvSIsIsW+Iiwixb8iLCLGkiIsIsagIiwixqEiLCLGryIsIsawIiwix40iLCLHjiIsIsePIiwix5AiLCLHkSIsIseSIiwix5MiLCLHlCIsIseVIiwix5YiLCLHlyIsIseYIiwix5kiLCLHmiIsIsebIiwix5wiLCLhu6giLCLhu6kiLCLhubgiLCLhubkiLCLHuiIsIse7Iiwix7wiLCLHvSIsIse+Iiwix78iLCLDniIsIsO+Iiwi4bmUIiwi4bmVIiwi4bmkIiwi4bmlIiwiWMyBIiwieMyBIiwi0IMiLCLRkyIsItCMIiwi0ZwiLCJBzIsiLCJhzIsiLCJFzIsiLCJlzIsiLCJJzIsiLCJpzIsiLCLHuCIsIse5Iiwi4buSIiwi4buTIiwi4bmQIiwi4bmRIiwi4buqIiwi4burIiwi4bqAIiwi4bqBIiwi4buyIiwi4buzIiwiyIAiLCLIgSIsIsiEIiwiyIUiLCLIiCIsIsiJIiwiyIwiLCLIjSIsIsiQIiwiyJEiLCLIlCIsIsiVIiwiQsyMIiwiYsyMIiwixIzMoyIsIsSNzKMiLCLDisyMIiwiw6rMjCIsIkbMjCIsImbMjCIsIsemIiwix6ciLCLIniIsIsifIiwiSsyMIiwix7AiLCLHqCIsIsepIiwiTcyMIiwibcyMIiwiUMyMIiwicMyMIiwiUcyMIiwiccyMIiwixZjMqSIsIsWZzKkiLCLhuaYiLCLhuaciLCJWzIwiLCJ2zIwiLCJXzIwiLCJ3zIwiLCJYzIwiLCJ4zIwiLCJZzIwiLCJ5zIwiLCJBzKciLCJhzKciLCJCzKciLCJizKciLCLhuJAiLCLhuJEiLCLIqCIsIsipIiwixpDMpyIsIsmbzKciLCLhuKgiLCLhuKkiLCJJzKciLCJpzKciLCLGl8ynIiwiyajMpyIsIk3MpyIsIm3MpyIsIk/MpyIsIm/MpyIsIlHMpyIsInHMpyIsIlXMpyIsInXMpyIsIljMpyIsInjMpyIsIlrMpyIsInrMpyIsImNoYXJzIiwiT2JqZWN0Iiwia2V5cyIsImpvaW4iLCJhbGxBY2NlbnRzIiwiUmVnRXhwIiwicmVtb3ZlQWNjZW50cyIsInN0ciIsInJlcGxhY2UiLCJtYXRjaCIsInJhbmtpbmdzIiwiQ0FTRV9TRU5TSVRJVkVfRVFVQUwiLCJFUVVBTCIsIlNUQVJUU19XSVRIIiwiV09SRF9TVEFSVFNfV0lUSCIsIkNPTlRBSU5TIiwiQUNST05ZTSIsIk1BVENIRVMiLCJOT19NQVRDSCIsInJhbmtJdGVtIiwiaXRlbSIsInZhbHVlIiwib3B0aW9ucyIsIl9vcHRpb25zJHRocmVzaG9sZCIsInRocmVzaG9sZCIsImFjY2Vzc29ycyIsInJhbmsiLCJnZXRNYXRjaFJhbmtpbmciLCJyYW5rZWRWYWx1ZSIsImFjY2Vzc29ySW5kZXgiLCJhY2Nlc3NvclRocmVzaG9sZCIsInBhc3NlZCIsInZhbHVlc1RvUmFuayIsImdldEFsbFZhbHVlc1RvUmFuayIsInJhbmtpbmdJbmZvIiwiaTIiLCJsZW5ndGgiLCJyYW5rVmFsdWUiLCJuZXdSYW5rIiwiaXRlbVZhbHVlIiwibWluUmFua2luZyIsIm1heFJhbmtpbmciLCJhdHRyaWJ1dGVzIiwiTWF0aCIsIm1pbiIsInRlc3RTdHJpbmciLCJzdHJpbmdUb1JhbmsiLCJwcmVwYXJlVmFsdWVGb3JDb21wYXJpc29uIiwidG9Mb3dlckNhc2UiLCJzdGFydHNXaXRoIiwiaW5jbHVkZXMiLCJnZXRBY3JvbnltIiwiZ2V0Q2xvc2VuZXNzUmFua2luZyIsInN0cmluZyIsImFjcm9ueW0iLCJ3b3Jkc0luU3RyaW5nIiwic3BsaXQiLCJmb3JFYWNoIiwid29yZEluU3RyaW5nIiwic3BsaXRCeUh5cGhlbldvcmRzIiwic3BsaXRCeUh5cGhlbldvcmQiLCJzdWJzdHIiLCJtYXRjaGluZ0luT3JkZXJDaGFyQ291bnQiLCJjaGFyTnVtYmVyIiwiZmluZE1hdGNoaW5nQ2hhcmFjdGVyIiwibWF0Y2hDaGFyIiwiaW5kZXgiLCJqIiwiSiIsInN0cmluZ0NoYXIiLCJnZXRSYW5raW5nIiwic3ByZWFkMyIsInNwcmVhZFBlcmNlbnRhZ2UiLCJpbk9yZGVyUGVyY2VudGFnZSIsInJhbmtpbmciLCJmaXJzdEluZGV4IiwiSSIsImZvdW5kIiwic3ByZWFkMiIsIl9yZWYiLCJrZWVwRGlhY3JpdGljcyIsImdldEl0ZW1WYWx1ZXMiLCJhY2Nlc3NvciIsImFjY2Vzc29yRm4iLCJBcnJheSIsImlzQXJyYXkiLCJTdHJpbmciLCJhbGxWYWx1ZXMiLCJnZXRBY2Nlc3NvckF0dHJpYnV0ZXMiLCJpdGVtVmFsdWVzIiwicHVzaCIsImRlZmF1bHRLZXlBdHRyaWJ1dGVzIiwiSW5maW5pdHkiLCJlIiwiZGF0YSIsInQiLCJ0MiIsInF1ZXJ5U2VsZWN0b3IiLCJ3aW5kb3ciLCJfZ29vYmVyIiwiYXNzaWduIiwiZG9jdW1lbnQiLCJoZWFkIiwiYXBwZW5kQ2hpbGQiLCJjcmVhdGVFbGVtZW50IiwiaW5uZXJIVE1MIiwiaWQiLCJmaXJzdENoaWxkIiwibCIsImEiLCJuIiwibyIsImUyIiwicjIiLCJsMiIsImEyIiwibjIiLCJjMiIsImUzIiwidDMiLCJ0ZXN0IiwicCIsImMiLCJzIiwiaSIsInAyIiwidTIiLCJkIiwicjMiLCJjaGFyQ29kZUF0IiwidDQiLCJvMiIsImV4ZWMiLCJzaGlmdCIsInRyaW0iLCJ1bnNoaWZ0IiwiZiIsImciLCJpbmRleE9mIiwicmVkdWNlIiwiY2FsbCIsImU0IiwicHJvcHMiLCJ1IiwicmF3Iiwic2xpY2UiLCJhcmd1bWVudHMiLCJ0YXJnZXQiLCJrIiwiYmluZCIsInIiLCJjbHN4Iiwibm9vcCIsImNyZWF0ZUxpc3RUcmFuc2l0aW9uIiwic291cmNlIiwiaW5pdFNvdXJjZSIsImNvcHkiLCJvbkNoYW5nZSIsInByZXZTZXQiLCJTZXQiLCJhcHBlYXIiLCJleGl0aW5nIiwiV2Vha1NldCIsInRvUmVtb3ZlIiwic2V0VG9SZW1vdmUiLCJlcXVhbHMiLCJpc1RyYW5zaXRpb25QZW5kaW5nIiwiZmluaXNoUmVtb3ZlZCIsImV4aXRNZXRob2QiLCJlbHMiLCJhcHBseSIsImVsIiwiZGVsZXRlIiwiaGFuZGxlUmVtb3ZlZCIsInNwbGljZSIsInByZXYiLCJlbHNUb1JlbW92ZSIsInNvdXJjZUxpc3QiLCJuZXh0IiwiZmlsdGVyIiwibGlzdCIsImFkZGVkIiwicmVtb3ZlZCIsInVuY2hhbmdlZCIsIm5leHRTZXQiLCJoYXMiLCJub3RoaW5nQ2hhbmdlZCIsImFkZCIsImlzQ2xpZW50IiwiaXNEZXYiLCJub29wMiIsImlzTm9uTnVsbGFibGUiLCJmaWx0ZXJOb25OdWxsYWJsZSIsImFyciIsImNoYWluIiwiY2FsbGJhY2tzIiwiYXJncyIsImNhbGxiYWNrIiwiYWNjZXNzIiwidiIsImFzQXJyYXkiLCJhY2Nlc3NXaXRoIiwidmFsdWVPckZuIiwidHJ5T25DbGVhbnVwIiwiZm4iLCJoYW5kbGVEaWZmQXJyYXkiLCJjdXJyZW50IiwiaGFuZGxlQWRkZWQiLCJjdXJyTGVuZ3RoIiwicHJldkxlbmd0aCIsInByZXZFbCIsImN1cnJFbCIsIm1lcmdlUmVmcyIsInJlZnMiLCJkZWZhdWx0RWxlbWVudFByZWRpY2F0ZSIsIkVsZW1lbnQiLCJnZXRSZXNvbHZlZEVsZW1lbnRzIiwicHJlZGljYXRlIiwicmVzdWx0cyIsInJlc3VsdCIsInJlc29sdmVFbGVtZW50cyIsInNlcnZlclByZWRpY2F0ZSIsImNoaWxkcmVuMiIsIm1lbW8iLCJ0b0FycmF5IiwiY3JlYXRlQ2xhc3NuYW1lcyIsIm5hbWUiLCJlbnRlckFjdGl2ZSIsImVudGVyQWN0aXZlQ2xhc3MiLCJlbnRlciIsImVudGVyQ2xhc3MiLCJlbnRlclRvIiwiZW50ZXJUb0NsYXNzIiwiZXhpdEFjdGl2ZSIsImV4aXRBY3RpdmVDbGFzcyIsImV4aXQiLCJleGl0Q2xhc3MiLCJleGl0VG8iLCJleGl0VG9DbGFzcyIsIm1vdmUiLCJtb3ZlQ2xhc3MiLCJuZXh0RnJhbWUiLCJyZXF1ZXN0QW5pbWF0aW9uRnJhbWUiLCJlbnRlclRyYW5zaXRpb24iLCJjbGFzc2VzIiwiZXZlbnRzIiwiZG9uZSIsIm9uQmVmb3JlRW50ZXIiLCJvbkVudGVyIiwib25BZnRlckVudGVyIiwiY2xhc3NMaXN0IiwicXVldWVNaWNyb3Rhc2siLCJwYXJlbnROb2RlIiwiZW5kVHJhbnNpdGlvbiIsInJlbW92ZSIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJleGl0VHJhbnNpdGlvbiIsIm9uQmVmb3JlRXhpdCIsIm9uRXhpdCIsIm9uQWZ0ZXJFeGl0IiwiVHJhbnNpdGlvbkdyb3VwIiwiY2xhc3NuYW1lcyIsImNoaWxkcmVuIiwidG9Nb3ZlIiwiaXNDb25uZWN0ZWQiLCJIVE1MRWxlbWVudCIsIlNWR0VsZW1lbnQiLCJyZWN0IiwiZ2V0Qm91bmRpbmdDbGllbnRSZWN0IiwibW92ZWQiLCJuZXdSZWN0IiwiZFgiLCJsZWZ0IiwiZFkiLCJ0b3AiLCJzdHlsZSIsInRyYW5zZm9ybSIsInRyYW5zaXRpb25EdXJhdGlvbiIsImJvZHkiLCJvZmZzZXRIZWlnaHQiLCJlbmRUcmFuc2l0aW9uMiIsInByb3BlcnR5TmFtZSIsIkZBTExCQUNLIiwiU3ltYm9sIiwiZGlzcG9zZSIsImtleUFycmF5IiwiaXRlbXMiLCJrZXlGbiIsIm1hcEZuIiwiaXRlbXNSZWYiLCJzMiIsImxlbiIsImZhbGxiYWNrIiwiTWFwIiwidmFsdWVzIiwiY2xlYXIiLCJmYjIiLCJkaXNwb3NlMiIsInNldCIsImZiIiwiZ2V0Iiwic2l6ZSIsImtleSIsImFkZE5ld0l0ZW0iLCJwcmV2S2V5cyIsImxvb2t1cCIsIm1hcHBlZCIsInNldEluZGV4Iiwic2V0SXRlbSIsImdldEl0ZW0iLCJzYXZlIiwiS2V5IiwiYnkiLCJlYWNoIiwiY3JlYXRlU3RvcmFnZSIsImVycm9yIiwic2V0RXJyb3IiLCJoYW5kbGVFcnJvciIsInRocm93IiwiZXJyIiwiRXJyb3IiLCJhcGlzIiwiYXBpIiwiZ2xvYmFsVGhpcyIsImxvY2FsU3RvcmFnZSIsIkJvb2xlYW4iLCJwcmVmaXgiLCJzaWduYWxzIiwic3RvcmUiLCJQcm94eSIsIl8iLCJub2RlIiwiZGVzZXJpYWxpemVyIiwic2V0dGVyIiwiZmlsdGVyZWRWYWx1ZSIsInNlcmlhbGl6ZXIiLCJhcGlLZXkiLCJyZW1vdmVJdGVtIiwidG9KU09OIiwiYWRkVmFsdWUiLCJoYXNPd25Qcm9wZXJ0eSIsImdldEFsbCIsInN5bmMiLCJsaXN0ZW5lciIsImV2IiwiY2hhbmdlZCIsInN0b3JhZ2VBcmVhIiwibmV3VmFsdWUiLCJjcmVhdGVMb2NhbFN0b3JhZ2UiLCJhZGRDbGVhck1ldGhvZCIsInN0b3JhZ2UiLCJzZXJpYWxpemVDb29raWVPcHRpb25zIiwiRGF0ZSIsInRvVVRDU3RyaW5nIiwiY29va2llU3RvcmFnZSIsIl9jb29raWVzIiwicG9wIiwib2xkVmFsdWUiLCJzdG9yYWdlRXZlbnQiLCJFdmVudCIsInVybCIsIlVSTCIsImRpc3BhdGNoRXZlbnQiLCJleHBpcmVzIiwiY291bnQiLCJtYWtlRXZlbnRMaXN0ZW5lciIsInR5cGUiLCJoYW5kbGVyIiwiY3JlYXRlRXZlbnRMaXN0ZW5lciIsInRhcmdldHMiLCJhdHRhY2hMaXN0ZW5lcnMiLCJ0eXBlMiIsIm1ha2VSZXNpemVPYnNlcnZlciIsIm9ic2VydmUiLCJ1bm9ic2VydmUiLCJvYnNlcnZlciIsIlJlc2l6ZU9ic2VydmVyIiwiZGlzY29ubmVjdCIsInJlZiIsImNyZWF0ZVJlc2l6ZU9ic2VydmVyIiwib25SZXNpemUiLCJwcmV2aW91c01hcCIsIldlYWtNYXAiLCJlbnRyaWVzMiIsImVudHJ5IiwiY29udGVudFJlY3QiLCJ3aWR0aCIsInJvdW5kIiwiaGVpZ2h0IiwicHJldmlvdXMiLCJhZGRJdGVtVG9BcnJheSIsImFycmF5IiwicmVtb3ZlSXRlbUZyb21BcnJheSIsInVwZGF0ZWRBcnJheSIsImlzTnVtYmVyIiwiaXNTdHJpbmciLCJwcm90b3R5cGUiLCJ0b1N0cmluZyIsImlzRnVuY3Rpb24iLCJjcmVhdGVHZW5lcmF0ZUlkIiwiYmFzZUlkIiwic3VmZml4IiwiY29udGFpbnMiLCJwYXJlbnQiLCJjaGlsZCIsImdldEFjdGl2ZUVsZW1lbnQiLCJhY3RpdmVEZXNjZW5kYW50IiwiYWN0aXZlRWxlbWVudCIsImdldERvY3VtZW50Iiwibm9kZU5hbWUiLCJpc0ZyYW1lIiwiY29udGVudERvY3VtZW50IiwiZ2V0QXR0cmlidXRlIiwiZWxlbWVudCIsImdldEVsZW1lbnRCeUlkIiwiZ2V0V2luZG93IiwiZGVmYXVsdFZpZXciLCJvd25lckRvY3VtZW50IiwidGFnTmFtZSIsIkV2ZW50S2V5IiwiRXZlbnRLZXkyIiwidGVzdFBsYXRmb3JtIiwicmUiLCJuYXZpZ2F0b3IiLCJwbGF0Zm9ybSIsImlzTWFjIiwiaXNJUGhvbmUiLCJpc0lQYWQiLCJtYXhUb3VjaFBvaW50cyIsImlzSU9TIiwiaXNBcHBsZURldmljZSIsImNhbGxIYW5kbGVyIiwiZXZlbnQiLCJkZWZhdWx0UHJldmVudGVkIiwiY29tcG9zZUV2ZW50SGFuZGxlcnMiLCJoYW5kbGVycyIsImlzQ3RybEtleSIsIm1ldGFLZXkiLCJjdHJsS2V5IiwiZm9jdXNXaXRob3V0U2Nyb2xsaW5nIiwic3VwcG9ydHNQcmV2ZW50U2Nyb2xsIiwiZm9jdXMiLCJwcmV2ZW50U2Nyb2xsIiwic2Nyb2xsYWJsZUVsZW1lbnRzIiwiZ2V0U2Nyb2xsYWJsZUVsZW1lbnRzIiwicmVzdG9yZVNjcm9sbFBvc2l0aW9uIiwic3VwcG9ydHNQcmV2ZW50U2Nyb2xsQ2FjaGVkIiwiZm9jdXNFbGVtIiwicm9vdFNjcm9sbGluZ0VsZW1lbnQiLCJzY3JvbGxpbmdFbGVtZW50IiwiZG9jdW1lbnRFbGVtZW50Iiwic2Nyb2xsSGVpZ2h0Iiwib2Zmc2V0V2lkdGgiLCJzY3JvbGxXaWR0aCIsInNjcm9sbFRvcCIsInNjcm9sbExlZnQiLCJmb2N1c2FibGVFbGVtZW50cyIsInRhYmJhYmxlRWxlbWVudHMiLCJGT0NVU0FCTEVfRUxFTUVOVF9TRUxFQ1RPUiIsIlRBQkJBQkxFX0VMRU1FTlRfU0VMRUNUT1IiLCJnZXRBbGxUYWJiYWJsZUluIiwiY29udGFpbmVyIiwiaW5jbHVkZUNvbnRhaW5lciIsImVsZW1lbnRzIiwiZnJvbSIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJ0YWJiYWJsZUVsZW1lbnRzMiIsImlzVGFiYmFibGUiLCJmcmFtZUJvZHkiLCJhbGxGcmFtZVRhYmJhYmxlIiwiaXNGb2N1c2FibGUiLCJoYXNOZWdhdGl2ZVRhYkluZGV4IiwibWF0Y2hlcyIsImlzRWxlbWVudFZpc2libGUiLCJ0YWJJbmRleCIsInBhcnNlSW50IiwiY2hpbGRFbGVtZW50IiwiaXNTdHlsZVZpc2libGUiLCJpc0F0dHJpYnV0ZVZpc2libGUiLCJwYXJlbnRFbGVtZW50IiwiZGlzcGxheSIsInZpc2liaWxpdHkiLCJpc1Zpc2libGUiLCJnZXRDb21wdXRlZFN0eWxlIiwiZ2V0Q29tcHV0ZWRTdHlsZTMiLCJjb21wdXRlZERpc3BsYXkiLCJjb21wdXRlZFZpc2liaWxpdHkiLCJoYXNBdHRyaWJ1dGUiLCJpc0VsZW1lbnRJblNjb3BlIiwic2NvcGUiLCJzb21lIiwiZ2V0Rm9jdXNhYmxlVHJlZVdhbGtlciIsInJvb3QiLCJvcHRzIiwic2VsZWN0b3IiLCJ0YWJiYWJsZSIsIndhbGtlciIsImNyZWF0ZVRyZWVXYWxrZXIiLCJOb2RlRmlsdGVyIiwiU0hPV19FTEVNRU5UIiwiYWNjZXB0Tm9kZSIsIkZJTFRFUl9SRUpFQ1QiLCJhY2NlcHQiLCJGSUxURVJfQUNDRVBUIiwiRklMVEVSX1NLSVAiLCJjdXJyZW50Tm9kZSIsImdldFNjcm9sbFBhcmVudCIsImlzU2Nyb2xsYWJsZSIsIm92ZXJmbG93Iiwib3ZlcmZsb3dYIiwib3ZlcmZsb3dZIiwibm9vcDMiLCJpc1BvaW50SW5Qb2x5Z29uIiwicG9pbnQiLCJwb2x5Z29uIiwieCIsInkiLCJpbnNpZGUiLCJ4aSIsInlpIiwieGoiLCJ5aiIsInZ5Iiwid2hlcmUiLCJtZXJnZURlZmF1bHRQcm9wcyIsImRlZmF1bHRQcm9wcyIsInRyYW5zaXRpb25zQnlFbGVtZW50IiwidHJhbnNpdGlvbkNhbGxiYWNrcyIsInNldHVwR2xvYmFsRXZlbnRzIiwib25UcmFuc2l0aW9uU3RhcnQiLCJ0cmFuc2l0aW9ucyIsIm9uVHJhbnNpdGlvbkVuZCIsInByb3BlcnRpZXMiLCJjYiIsInJlYWR5U3RhdGUiLCJzY3JvbGxJbnRvVmlldyIsInNjcm9sbFZpZXciLCJvZmZzZXRYIiwicmVsYXRpdmVPZmZzZXQiLCJvZmZzZXRZIiwibWF4WCIsIm1heFkiLCJhbmNlc3RvciIsImF4aXMiLCJwcm9wIiwic3VtIiwib2Zmc2V0UGFyZW50Iiwic2Nyb2xsSW50b1ZpZXdwb3J0IiwidGFyZ2V0RWxlbWVudCIsImlzU2Nyb2xsUHJldmVudGVkIiwib3JpZ2luYWxMZWZ0Iiwib3JpZ2luYWxUb3AiLCJibG9jayIsIm5ld0xlZnQiLCJuZXdUb3AiLCJhYnMiLCJjb250YWluaW5nRWxlbWVudCIsImlubGluZSIsInNjcm9sbFBhcmVudCIsInZpc3VhbGx5SGlkZGVuU3R5bGVzIiwiYm9yZGVyIiwiY2xpcCIsIm1hcmdpbiIsInBhZGRpbmciLCJwb3NpdGlvbiIsImNyZWF0ZUNvbnRyb2xsYWJsZVNpZ25hbCIsIl92YWx1ZSIsIl9zZXRWYWx1ZSIsImRlZmF1bHRWYWx1ZSIsImlzQ29udHJvbGxlZCIsInNldFZhbHVlIiwibmV4dFZhbHVlIiwiaXMiLCJjcmVhdGVDb250cm9sbGFibGVCb29sZWFuU2lnbmFsIiwiY3JlYXRlQ29udHJvbGxhYmxlQXJyYXlTaWduYWwiLCJEb21Db2xsZWN0aW9uQ29udGV4dCIsInVzZU9wdGlvbmFsRG9tQ29sbGVjdGlvbkNvbnRleHQiLCJ1c2VEb21Db2xsZWN0aW9uQ29udGV4dCIsImNvbnRleHQiLCJpc0VsZW1lbnRQcmVjZWRpbmciLCJiMiIsImNvbXBhcmVEb2N1bWVudFBvc2l0aW9uIiwiTm9kZSIsIkRPQ1VNRU5UX1BPU0lUSU9OX1BSRUNFRElORyIsImZpbmRET01JbmRleCIsIml0ZW1FbCIsImN1cnJlbnRJdGVtRWwiLCJzb3J0QmFzZWRPbkRPTVBvc2l0aW9uIiwicGFpcnMiLCJtYXAiLCJpc09yZGVyRGlmZmVyZW50Iiwic29ydCIsImluZGV4QSIsImluZGV4QiIsImVsZW1lbnRBIiwiZWxlbWVudEIiLCJzZXRJdGVtc0Jhc2VkT25ET01Qb3NpdGlvbiIsInNldEl0ZW1zIiwic29ydGVkSXRlbXMiLCJnZXRDb21tb25QYXJlbnQiLCJmaXJzdEl0ZW0iLCJsYXN0SXRlbUVsIiwicGFyZW50RWwiLCJjcmVhdGVUaW1lb3V0T2JzZXJ2ZXIiLCJ0aW1lb3V0Iiwic2V0VGltZW91dCIsImNsZWFyVGltZW91dCIsImNyZWF0ZVNvcnRCYXNlZE9uRE9NUG9zaXRpb24iLCJJbnRlcnNlY3Rpb25PYnNlcnZlciIsInByZXZpb3VzSXRlbXMiLCJoYXNQcmV2aW91c0l0ZW1zIiwiY3JlYXRlRG9tQ29sbGVjdGlvbiIsIm9uSXRlbXNDaGFuZ2UiLCJyZWdpc3Rlckl0ZW0iLCJwcmV2SXRlbXMiLCJuZXh0SXRlbXMiLCJwcmV2SXRlbSIsIkRvbUNvbGxlY3Rpb25Qcm92aWRlciIsInByb3BzMiIsIlByb3ZpZGVyIiwiY3JlYXRlRG9tQ29sbGVjdGlvbkl0ZW0iLCJtZXJnZWRQcm9wcyIsInNob3VsZFJlZ2lzdGVySXRlbSIsInVucmVnaXN0ZXIiLCJidWlsZE5vZGVzIiwicGFyYW1zIiwic3RhcnRJbmRleCIsImxldmVsIiwic3RhcnRMZXZlbCIsIm5vZGVzIiwiZ2V0S2V5IiwiX2dldEtleSIsImRhdGFLZXkiLCJnZXRUZXh0VmFsdWUiLCJfZ2V0VGV4dFZhbHVlIiwiZGF0YVRleHRWYWx1ZSIsImdldERpc2FibGVkIiwiX2dldERpc2FibGVkIiwiZ2V0U2VjdGlvbkNoaWxkcmVuIiwiZGF0YVNvdXJjZSIsInJhd1ZhbHVlIiwidGV4dFZhbHVlIiwiZGlzYWJsZWQiLCJzZWN0aW9uQ2hpbGRyZW4iLCJjaGlsZE5vZGVzIiwiY3JlYXRlQ29sbGVjdGlvbiIsImRlcHMiLCJmYWN0b3J5IiwiUlRMX1NDUklQVFMiLCJSVExfTEFOR1MiLCJpc1JUTCIsImxvY2FsZSIsIkludGwiLCJMb2NhbGUiLCJzY3JpcHQiLCJtYXhpbWl6ZSIsImxhbmciLCJnZXRSZWFkaW5nRGlyZWN0aW9uIiwiZ2V0RGVmYXVsdExvY2FsZSIsImxhbmd1YWdlIiwidXNlckxhbmd1YWdlIiwiZGlyZWN0aW9uIiwiY3VycmVudExvY2FsZSIsImxpc3RlbmVycyIsInVwZGF0ZUxvY2FsZSIsImNyZWF0ZURlZmF1bHRMb2NhbGUiLCJkZWZhdWx0U1NSTG9jYWxlIiwiZGVmYXVsdENsaWVudExvY2FsZSIsInNldERlZmF1bHRDbGllbnRMb2NhbGUiLCJkZWZhdWx0TG9jYWxlIiwiSTE4bkNvbnRleHQiLCJ1c2VMb2NhbGUiLCJjYWNoZSIsImNyZWF0ZUNvbGxhdG9yIiwiY2FjaGVLZXkiLCJlbnRyaWVzIiwiY29sbGF0b3IiLCJDb2xsYXRvciIsIlNlbGVjdGlvbiIsIl9TZWxlY3Rpb24iLCJjb25zdHJ1Y3RvciIsImtleXMyIiwiYW5jaG9yS2V5IiwiY3VycmVudEtleSIsImNyZWF0ZUNvbnRyb2xsYWJsZVNlbGVjdGlvblNpZ25hbCIsImlzTm9uQ29udGlndW91c1NlbGVjdGlvbk1vZGlmaWVyIiwiYWx0S2V5IiwiaXNDdHJsS2V5UHJlc3NlZCIsImNvbnZlcnRTZWxlY3Rpb24iLCJzZWxlY3Rpb24iLCJpc1NhbWVTZWxlY3Rpb24iLCJzZXRBIiwic2V0QiIsImNyZWF0ZU11bHRpcGxlU2VsZWN0aW9uU3RhdGUiLCJzZWxlY3Rpb25Nb2RlIiwic2VsZWN0aW9uQmVoYXZpb3IiLCJpc0ZvY3VzZWQiLCJzZXRGb2N1c2VkIiwiZm9jdXNlZEtleSIsInNldEZvY3VzZWRLZXkiLCJzZWxlY3RlZEtleXNQcm9wIiwic2VsZWN0ZWRLZXlzIiwiZGVmYXVsdFNlbGVjdGVkS2V5cyIsImRlZmF1bHRTZWxlY3Rpb24iLCJfc2V0U2VsZWN0ZWRLZXlzIiwib25TZWxlY3Rpb25DaGFuZ2UiLCJzZXRTZWxlY3Rpb25CZWhhdmlvciIsImRpc2FsbG93RW1wdHlTZWxlY3Rpb24iLCJzZXRTZWxlY3RlZEtleXMiLCJhbGxvd0R1cGxpY2F0ZVNlbGVjdGlvbkV2ZW50cyIsImNyZWF0ZVR5cGVTZWxlY3QiLCJzZWFyY2giLCJzZXRTZWFyY2giLCJ0aW1lb3V0SWQiLCJzZXRUaW1lb3V0SWQiLCJvbktleURvd24iLCJpc0Rpc2FibGVkIiwiZGVsZWdhdGUiLCJrZXlib2FyZERlbGVnYXRlIiwibWFuYWdlciIsInNlbGVjdGlvbk1hbmFnZXIiLCJnZXRLZXlGb3JTZWFyY2giLCJjaGFyYWN0ZXIiLCJnZXRTdHJpbmdGb3JLZXkiLCJwcmV2ZW50RGVmYXVsdCIsInN0b3BQcm9wYWdhdGlvbiIsIm5ld1NlYXJjaCIsImlzQWxsU2FtZUxldHRlciIsIm9uVHlwZVNlbGVjdCIsInR5cGVTZWxlY3RIYW5kbGVycyIsImV2ZXJ5IiwibGV0dGVyIiwiY3JlYXRlU2VsZWN0YWJsZUNvbGxlY3Rpb24iLCJzY3JvbGxSZWYiLCJzZWxlY3RPbkZvY3VzIiwiZmluYWxTY3JvbGxSZWYiLCJzY3JvbGxQb3MiLCJpc1ZpcnR1YWxpemVkIiwic2Nyb2xsRWwiLCJkaXNhbGxvd1R5cGVBaGVhZCIsInJlZkVsIiwibmF2aWdhdGVUb0tleSIsInNoaWZ0S2V5IiwiZXh0ZW5kU2VsZWN0aW9uIiwicmVwbGFjZVNlbGVjdGlvbiIsInNob3VsZEZvY3VzV3JhcCIsImdldEtleUJlbG93IiwibmV4dEtleSIsImdldEZpcnN0S2V5IiwiZ2V0S2V5QWJvdmUiLCJnZXRMYXN0S2V5IiwiZ2V0S2V5TGVmdE9mIiwiaXNSVEwzIiwiZ2V0S2V5UmlnaHRPZiIsImZpcnN0S2V5IiwibGFzdEtleSIsImdldEtleVBhZ2VCZWxvdyIsImdldEtleVBhZ2VBYm92ZSIsImRpc2FsbG93U2VsZWN0QWxsIiwic2VsZWN0QWxsIiwiY2xlYXJTZWxlY3Rpb24iLCJhbGxvd3NUYWJOYXZpZ2F0aW9uIiwibGFzdCIsImxhc3RDaGlsZCIsIm9uRm9jdXNJbiIsImN1cnJlbnRUYXJnZXQiLCJuYXZpZ2F0ZVRvRmlyc3RLZXkiLCJyZWxhdGVkVGFyZ2V0IiwiRE9DVU1FTlRfUE9TSVRJT05fRk9MTE9XSU5HIiwibGFzdFNlbGVjdGVkS2V5IiwiZmlyc3RTZWxlY3RlZEtleSIsIm9uRm9jdXNPdXQiLCJvbk1vdXNlRG93biIsInRyeUF1dG9Gb2N1cyIsImF1dG9Gb2N1cyIsInNob3VsZFVzZVZpcnR1YWxGb2N1cyIsImRlZmVyQXV0b0ZvY3VzIiwic2Nyb2xsVG9LZXkiLCJjcmVhdGVTZWxlY3RhYmxlSXRlbSIsIm9uU2VsZWN0IiwiaXNTZWxlY3RlZCIsInRvZ2dsZVNlbGVjdGlvbiIsInBvaW50ZXJUeXBlIiwiYWxsb3dzU2VsZWN0aW9uIiwiY2FuU2VsZWN0SXRlbSIsInBvaW50ZXJEb3duVHlwZSIsIm9uUG9pbnRlckRvd24iLCJidXR0b24iLCJzaG91bGRTZWxlY3RPblByZXNzVXAiLCJvblBvaW50ZXJVcCIsImFsbG93c0RpZmZlcmVudFByZXNzT3JpZ2luIiwib25DbGljayIsIm9uRm9jdXMiLCJ2aXJ0dWFsaXplZCIsImtleTIiLCJzaG91bGRVc2VWaXJ0dWFsRm9jdXMyIiwiU2VsZWN0aW9uTWFuYWdlciIsInN0YXRlIiwiY29sbGVjdGlvbiIsInJldHJpZXZlZEtleSIsImlzRW1wdHkiLCJpc1NlbGVjdEFsbCIsImdldEFsbFNlbGVjdGFibGVLZXlzIiwiZmlyc3QiLCJpc0l0ZW1CZWZvcmVGaXJzdCIsImlzSXRlbUFmdGVyTGFzdCIsInRvS2V5IiwicmV0cmlldmVkVG9LZXkiLCJnZXRLZXlSYW5nZSIsInRvIiwiZnJvbUl0ZW0iLCJ0b0l0ZW0iLCJnZXRLZXlSYW5nZUludGVybmFsIiwiZ2V0S2V5QWZ0ZXIiLCJ0b2dnbGVTZWxlY3RBbGwiLCJzZWxlY3QiLCJpc1NlbGVjdGlvbkVxdWFsIiwiYWRkS2V5cyIsIkxpc3RDb2xsZWN0aW9uIiwiaXRlcmF0b3IiLCJpdGVyYWJsZSIsImdldFNpemUiLCJrZXlNYXAiLCJnZXRLZXlzIiwiZ2V0S2V5QmVmb3JlIiwicHJldktleSIsImF0IiwiaWR4IiwiY3JlYXRlTGlzdFN0YXRlIiwic2VsZWN0aW9uU3RhdGUiLCJjcmVhdGVQcmVzZW5jZSIsInByZXNlbnQiLCJzZXROb2RlIiwic3R5bGVzIiwicHJldlByZXNlbnQiLCJwcmV2QW5pbWF0aW9uTmFtZSIsInNlbmQiLCJjcmVhdGVTdGF0ZU1hY2hpbmUiLCJtb3VudGVkIiwiVU5NT1VOVCIsIkFOSU1BVElPTl9PVVQiLCJ1bm1vdW50U3VzcGVuZGVkIiwiTU9VTlQiLCJBTklNQVRJT05fRU5EIiwidW5tb3VudGVkIiwic3RhdGUyIiwiY3VycmVudEFuaW1hdGlvbk5hbWUiLCJnZXRBbmltYXRpb25OYW1lIiwicHJlc2VudDIiLCJpc0FuaW1hdGluZyIsIm5vZGUyIiwiaGFuZGxlQW5pbWF0aW9uRW5kIiwiaXNDdXJyZW50QW5pbWF0aW9uIiwiYW5pbWF0aW9uTmFtZSIsImhhbmRsZUFuaW1hdGlvblN0YXJ0IiwiaXNQcmVzZW50Iiwic2V0UmVmIiwiaW5pdGlhbFN0YXRlIiwibWFjaGluZSIsIm5leHRTdGF0ZSIsInNldFN0YXRlIiwiUG9seW1vcnBoaWMiLCJsb2NhbCIsIm90aGVycyIsImFzIiwiY29tcG9uZW50IiwiX19kZWZQcm9wIiwiZGVmaW5lUHJvcGVydHkiLCJfX2V4cG9ydCIsImFsbCIsImVudW1lcmFibGUiLCJjcmVhdGVSZWdpc3RlcklkIiwiY3JlYXRlVGFnTmFtZSIsInNldFRhZ05hbWUiLCJzdHJpbmdPclVuZGVmaW5lZCIsIkZPUk1fQ09OVFJPTF9QUk9QX05BTUVTIiwiY3JlYXRlRm9ybUNvbnRyb2wiLCJkZWZhdWx0SWQiLCJsYWJlbElkIiwic2V0TGFiZWxJZCIsImZpZWxkSWQiLCJzZXRGaWVsZElkIiwiZGVzY3JpcHRpb25JZCIsInNldERlc2NyaXB0aW9uSWQiLCJlcnJvck1lc3NhZ2VJZCIsInNldEVycm9yTWVzc2FnZUlkIiwiZ2V0QXJpYUxhYmVsbGVkQnkiLCJmaWVsZElkMiIsImZpZWxkQXJpYUxhYmVsIiwiZmllbGRBcmlhTGFiZWxsZWRCeSIsImhhc0FyaWFMYWJlbGxlZEJ5IiwiZ2V0QXJpYURlc2NyaWJlZEJ5IiwiZmllbGRBcmlhRGVzY3JpYmVkQnkiLCJkYXRhc2V0IiwidmFsaWRhdGlvblN0YXRlIiwicmVxdWlyZWQiLCJyZWFkT25seSIsImZvcm1Db250cm9sQ29udGV4dCIsImlzUmVxdWlyZWQiLCJpc1JlYWRPbmx5IiwiZ2VuZXJhdGVJZCIsInJlZ2lzdGVyTGFiZWwiLCJyZWdpc3RlckZpZWxkIiwicmVnaXN0ZXJEZXNjcmlwdGlvbiIsInJlZ2lzdGVyRXJyb3JNZXNzYWdlIiwiRm9ybUNvbnRyb2xDb250ZXh0IiwidXNlRm9ybUNvbnRyb2xDb250ZXh0IiwiRm9ybUNvbnRyb2xEZXNjcmlwdGlvbiIsIkZvcm1Db250cm9sRXJyb3JNZXNzYWdlIiwiaXNJbnZhbGlkIiwid2hlbiIsImZvcmNlTW91bnQiLCJGb3JtQ29udHJvbExhYmVsIiwiciQiLCJfcmVmJCIsImNyZWF0ZUZvcm1SZXNldExpc3RlbmVyIiwiZWxlbWVudDIiLCJmb3JtIiwiZ2V0Q2xvc2VzdEZvcm0iLCJwYXNzaXZlIiwiaXNGb3JtRWxlbWVudCIsImNsb3Nlc3QiLCJEQVRBX1RPUF9MQVlFUl9BVFRSIiwib3JpZ2luYWxCb2R5UG9pbnRlckV2ZW50cyIsImhhc0Rpc2FibGVkQm9keVBvaW50ZXJFdmVudHMiLCJsYXllcnMiLCJmaW5kSW5kZXgiLCJsYXllciIsImZpbmQiLCJpc1RvcE1vc3RMYXllciIsImdldFBvaW50ZXJCbG9ja2luZ0xheWVycyIsImlzUG9pbnRlckJsb2NraW5nIiwiZ2V0VG9wTW9zdFBvaW50ZXJCbG9ja2luZ0xheWVyIiwiaGFzUG9pbnRlckJsb2NraW5nTGF5ZXIiLCJpc0JlbG93UG9pbnRlckJsb2NraW5nTGF5ZXIiLCJoaWdoZXN0QmxvY2tpbmdJbmRleCIsImFkZExheWVyIiwicmVtb3ZlTGF5ZXIiLCJhc3NpZ25Qb2ludGVyRXZlbnRUb0xheWVycyIsInBvaW50ZXJFdmVudHMiLCJkaXNhYmxlQm9keVBvaW50ZXJFdmVudHMiLCJyZXN0b3JlQm9keVBvaW50ZXJFdmVudHMiLCJyZW1vdmVBdHRyaWJ1dGUiLCJsYXllclN0YWNrIiwiYnV0dG9uX2V4cG9ydHMiLCJCdXR0b24iLCJSb290IiwiQnV0dG9uUm9vdCIsIkJVVFRPTl9JTlBVVF9UWVBFUyIsImlzQnV0dG9uIiwiaXNOYXRpdmVCdXR0b24iLCJlbGVtZW50VGFnTmFtZSIsImlzTmF0aXZlSW5wdXQiLCJpc05hdGl2ZUxpbmsiLCJyb2xlIiwiY3JlYXRlVG9nZ2xlU3RhdGUiLCJfc2V0SXNTZWxlY3RlZCIsImRlZmF1bHRJc1NlbGVjdGVkIiwib25TZWxlY3RlZENoYW5nZSIsInNldElzU2VsZWN0ZWQiLCJ0b2dnbGUiLCJzaWRlcyIsIm1heCIsIm9wcG9zaXRlU2lkZU1hcCIsInJpZ2h0IiwiYm90dG9tIiwib3Bwb3NpdGVBbGlnbm1lbnRNYXAiLCJzdGFydCIsImVuZCIsImNsYW1wMiIsImV2YWx1YXRlIiwicGFyYW0iLCJnZXRTaWRlIiwicGxhY2VtZW50IiwiZ2V0QWxpZ25tZW50IiwiZ2V0T3Bwb3NpdGVBeGlzIiwiZ2V0QXhpc0xlbmd0aCIsImdldFNpZGVBeGlzIiwiZ2V0QWxpZ25tZW50QXhpcyIsImdldEFsaWdubWVudFNpZGVzIiwicmVjdHMiLCJydGwiLCJhbGlnbm1lbnQiLCJhbGlnbm1lbnRBeGlzIiwibWFpbkFsaWdubWVudFNpZGUiLCJyZWZlcmVuY2UiLCJmbG9hdGluZyIsImdldE9wcG9zaXRlUGxhY2VtZW50IiwiZ2V0RXhwYW5kZWRQbGFjZW1lbnRzIiwib3Bwb3NpdGVQbGFjZW1lbnQiLCJnZXRPcHBvc2l0ZUFsaWdubWVudFBsYWNlbWVudCIsImdldFNpZGVMaXN0Iiwic2lkZSIsImlzU3RhcnQiLCJsciIsInJsIiwidGIiLCJidCIsImdldE9wcG9zaXRlQXhpc1BsYWNlbWVudHMiLCJmbGlwQWxpZ25tZW50IiwiY29uY2F0IiwiZXhwYW5kUGFkZGluZ09iamVjdCIsImdldFBhZGRpbmdPYmplY3QiLCJyZWN0VG9DbGllbnRSZWN0IiwiY29tcHV0ZUNvb3Jkc0Zyb21QbGFjZW1lbnQiLCJzaWRlQXhpcyIsImFsaWduTGVuZ3RoIiwiaXNWZXJ0aWNhbCIsImNvbW1vblgiLCJjb21tb25ZIiwiY29tbW9uQWxpZ24iLCJjb29yZHMiLCJjb21wdXRlUG9zaXRpb24iLCJjb25maWciLCJzdHJhdGVneSIsIm1pZGRsZXdhcmUiLCJwbGF0Zm9ybTIiLCJ2YWxpZE1pZGRsZXdhcmUiLCJnZXRFbGVtZW50UmVjdHMiLCJzdGF0ZWZ1bFBsYWNlbWVudCIsIm1pZGRsZXdhcmVEYXRhIiwicmVzZXRDb3VudCIsIm5leHRYIiwibmV4dFkiLCJyZXNldCIsImluaXRpYWxQbGFjZW1lbnQiLCJkZXRlY3RPdmVyZmxvdyIsIl9hd2FpdCRwbGF0Zm9ybSRpc0VsZSIsImJvdW5kYXJ5Iiwicm9vdEJvdW5kYXJ5IiwiZWxlbWVudENvbnRleHQiLCJhbHRCb3VuZGFyeSIsInBhZGRpbmdPYmplY3QiLCJhbHRDb250ZXh0IiwiY2xpcHBpbmdDbGllbnRSZWN0IiwiZ2V0Q2xpcHBpbmdSZWN0IiwiaXNFbGVtZW50IiwiY29udGV4dEVsZW1lbnQiLCJnZXREb2N1bWVudEVsZW1lbnQiLCJnZXRPZmZzZXRQYXJlbnQiLCJvZmZzZXRTY2FsZSIsImdldFNjYWxlIiwiZWxlbWVudENsaWVudFJlY3QiLCJjb252ZXJ0T2Zmc2V0UGFyZW50UmVsYXRpdmVSZWN0VG9WaWV3cG9ydFJlbGF0aXZlUmVjdCIsImFycm93IiwiYXJyb3dEaW1lbnNpb25zIiwiZ2V0RGltZW5zaW9ucyIsImlzWUF4aXMiLCJtaW5Qcm9wIiwibWF4UHJvcCIsImNsaWVudFByb3AiLCJlbmREaWZmIiwic3RhcnREaWZmIiwiYXJyb3dPZmZzZXRQYXJlbnQiLCJjbGllbnRTaXplIiwiY2VudGVyVG9SZWZlcmVuY2UiLCJsYXJnZXN0UG9zc2libGVQYWRkaW5nIiwibWluUGFkZGluZyIsIm1heFBhZGRpbmciLCJtaW4kMSIsIm1heDMiLCJjZW50ZXIiLCJvZmZzZXQzIiwic2hvdWxkQWRkT2Zmc2V0IiwiYWxpZ25tZW50T2Zmc2V0IiwiY2VudGVyT2Zmc2V0IiwiZmxpcCIsIl9taWRkbGV3YXJlRGF0YSRhcnJvdyIsIl9taWRkbGV3YXJlRGF0YSRmbGlwIiwibWFpbkF4aXMiLCJjaGVja01haW5BeGlzIiwiY3Jvc3NBeGlzIiwiY2hlY2tDcm9zc0F4aXMiLCJmYWxsYmFja1BsYWNlbWVudHMiLCJzcGVjaWZpZWRGYWxsYmFja1BsYWNlbWVudHMiLCJmYWxsYmFja1N0cmF0ZWd5IiwiZmFsbGJhY2tBeGlzU2lkZURpcmVjdGlvbiIsImRldGVjdE92ZXJmbG93T3B0aW9ucyIsImlzQmFzZVBsYWNlbWVudCIsInBsYWNlbWVudHMyIiwib3ZlcmZsb3dzIiwib3ZlcmZsb3dzRGF0YSIsInNpZGVzMiIsInNpZGUyIiwiX21pZGRsZXdhcmVEYXRhJGZsaXAyIiwiX292ZXJmbG93c0RhdGEkZmlsdGVyIiwibmV4dEluZGV4IiwibmV4dFBsYWNlbWVudCIsInJlc2V0UGxhY2VtZW50IiwiX292ZXJmbG93c0RhdGEkbWFwJHNvIiwicGxhY2VtZW50MiIsIm92ZXJmbG93MiIsImFjYyIsImdldFNpZGVPZmZzZXRzIiwiaXNBbnlTaWRlRnVsbHlDbGlwcGVkIiwiaGlkZSIsIm9mZnNldHMiLCJyZWZlcmVuY2VIaWRkZW5PZmZzZXRzIiwicmVmZXJlbmNlSGlkZGVuIiwiZXNjYXBlZE9mZnNldHMiLCJlc2NhcGVkIiwiY29udmVydFZhbHVlVG9Db29yZHMiLCJtYWluQXhpc011bHRpIiwiY3Jvc3NBeGlzTXVsdGkiLCJvZmZzZXQiLCJkaWZmQ29vcmRzIiwibGltaXRlciIsIngyIiwieTIiLCJtYWluQXhpc0Nvb3JkIiwiY3Jvc3NBeGlzQ29vcmQiLCJtaW5TaWRlIiwibWF4U2lkZSIsIm1pbjMiLCJsaW1pdGVkQ29vcmRzIiwiaGVpZ2h0U2lkZSIsIndpZHRoU2lkZSIsIm92ZXJmbG93QXZhaWxhYmxlSGVpZ2h0Iiwib3ZlcmZsb3dBdmFpbGFibGVXaWR0aCIsIm5vU2hpZnQiLCJhdmFpbGFibGVIZWlnaHQiLCJhdmFpbGFibGVXaWR0aCIsIm1heGltdW1DbGlwcGluZ1dpZHRoIiwibWF4aW11bUNsaXBwaW5nSGVpZ2h0IiwieE1pbiIsInhNYXgiLCJ5TWluIiwieU1heCIsIm5leHREaW1lbnNpb25zIiwibWluMiIsIm1heDIiLCJmbG9vciIsImNyZWF0ZUNvb3JkcyIsImdldE5vZGVOYW1lIiwiaXNOb2RlIiwiZ2V0V2luZG93MiIsIl9ub2RlJG93bmVyRG9jdW1lbnQiLCJpc0hUTUxFbGVtZW50IiwiaXNTaGFkb3dSb290IiwiU2hhZG93Um9vdCIsImlzT3ZlcmZsb3dFbGVtZW50IiwiZ2V0Q29tcHV0ZWRTdHlsZTIiLCJpc1RhYmxlRWxlbWVudCIsImlzQ29udGFpbmluZ0Jsb2NrIiwid2Via2l0IiwiaXNXZWJLaXQiLCJjc3MiLCJwZXJzcGVjdGl2ZSIsImNvbnRhaW5lclR5cGUiLCJiYWNrZHJvcEZpbHRlciIsIndpbGxDaGFuZ2UiLCJjb250YWluIiwiZ2V0Q29udGFpbmluZ0Jsb2NrIiwiZ2V0UGFyZW50Tm9kZSIsImlzTGFzdFRyYXZlcnNhYmxlTm9kZSIsIkNTUyIsInN1cHBvcnRzIiwiZ2V0Tm9kZVNjcm9sbCIsInBhZ2VYT2Zmc2V0IiwicGFnZVlPZmZzZXQiLCJhc3NpZ25lZFNsb3QiLCJob3N0IiwiZ2V0TmVhcmVzdE92ZXJmbG93QW5jZXN0b3IiLCJnZXRPdmVyZmxvd0FuY2VzdG9ycyIsInRyYXZlcnNlSWZyYW1lcyIsIl9ub2RlJG93bmVyRG9jdW1lbnQyIiwic2Nyb2xsYWJsZUFuY2VzdG9yIiwiaXNCb2R5Iiwid2luIiwidmlzdWFsVmlld3BvcnQiLCJmcmFtZUVsZW1lbnQiLCJnZXRDc3NEaW1lbnNpb25zIiwicGFyc2VGbG9hdCIsImhhc09mZnNldCIsInNob3VsZEZhbGxiYWNrIiwiJCIsInVud3JhcEVsZW1lbnQiLCJkb21FbGVtZW50IiwiTnVtYmVyIiwiaXNGaW5pdGUiLCJub09mZnNldHMiLCJnZXRWaXN1YWxPZmZzZXRzIiwib2Zmc2V0TGVmdCIsIm9mZnNldFRvcCIsInNob3VsZEFkZFZpc3VhbE9mZnNldHMiLCJpc0ZpeGVkIiwiZmxvYXRpbmdPZmZzZXRQYXJlbnQiLCJpbmNsdWRlU2NhbGUiLCJpc0ZpeGVkU3RyYXRlZ3kiLCJjbGllbnRSZWN0Iiwic2NhbGUiLCJ2aXN1YWxPZmZzZXRzIiwib2Zmc2V0V2luIiwiY3VycmVudFdpbiIsImN1cnJlbnRJRnJhbWUiLCJpZnJhbWVTY2FsZSIsImlmcmFtZVJlY3QiLCJjbGllbnRMZWZ0IiwicGFkZGluZ0xlZnQiLCJjbGllbnRUb3AiLCJwYWRkaW5nVG9wIiwidG9wTGF5ZXJTZWxlY3RvcnMiLCJpc1RvcExheWVyIiwidG9wTGF5ZXIiLCJzY3JvbGwiLCJpc09mZnNldFBhcmVudEFuRWxlbWVudCIsIm9mZnNldFJlY3QiLCJnZXRDbGllbnRSZWN0cyIsImdldFdpbmRvd1Njcm9sbEJhclgiLCJnZXREb2N1bWVudFJlY3QiLCJodG1sIiwiY2xpZW50V2lkdGgiLCJjbGllbnRIZWlnaHQiLCJnZXRWaWV3cG9ydFJlY3QiLCJ2aXN1YWxWaWV3cG9ydEJhc2VkIiwiZ2V0SW5uZXJCb3VuZGluZ0NsaWVudFJlY3QiLCJnZXRDbGllbnRSZWN0RnJvbUNsaXBwaW5nQW5jZXN0b3IiLCJjbGlwcGluZ0FuY2VzdG9yIiwiaGFzRml4ZWRQb3NpdGlvbkFuY2VzdG9yIiwic3RvcE5vZGUiLCJnZXRDbGlwcGluZ0VsZW1lbnRBbmNlc3RvcnMiLCJjYWNoZTIiLCJjYWNoZWRSZXN1bHQiLCJjdXJyZW50Q29udGFpbmluZ0Jsb2NrQ29tcHV0ZWRTdHlsZSIsImVsZW1lbnRJc0ZpeGVkIiwiY29tcHV0ZWRTdHlsZSIsImN1cnJlbnROb2RlSXNDb250YWluaW5nIiwic2hvdWxkRHJvcEN1cnJlbnROb2RlIiwiZWxlbWVudENsaXBwaW5nQW5jZXN0b3JzIiwiX2MiLCJjbGlwcGluZ0FuY2VzdG9ycyIsImZpcnN0Q2xpcHBpbmdBbmNlc3RvciIsImNsaXBwaW5nUmVjdCIsImFjY1JlY3QiLCJnZXRSZWN0UmVsYXRpdmVUb09mZnNldFBhcmVudCIsImlzU3RhdGljUG9zaXRpb25lZCIsImdldFRydWVPZmZzZXRQYXJlbnQiLCJwb2x5ZmlsbCIsInN2Z09mZnNldFBhcmVudCIsImdldE9mZnNldFBhcmVudEZuIiwiZ2V0RGltZW5zaW9uc0ZuIiwiZmxvYXRpbmdEaW1lbnNpb25zIiwiaXNSVEwyIiwib2JzZXJ2ZU1vdmUiLCJvbk1vdmUiLCJpbyIsImNsZWFudXAiLCJfaW8iLCJyZWZyZXNoIiwic2tpcCIsImluc2V0VG9wIiwiaW5zZXRSaWdodCIsImluc2V0Qm90dG9tIiwiaW5zZXRMZWZ0Iiwicm9vdE1hcmdpbiIsImlzRmlyc3RVcGRhdGUiLCJoYW5kbGVPYnNlcnZlIiwicmF0aW8iLCJpbnRlcnNlY3Rpb25SYXRpbyIsImF1dG9VcGRhdGUiLCJ1cGRhdGUiLCJhbmNlc3RvclNjcm9sbCIsImFuY2VzdG9yUmVzaXplIiwiZWxlbWVudFJlc2l6ZSIsImxheW91dFNoaWZ0IiwiYW5pbWF0aW9uRnJhbWUiLCJyZWZlcmVuY2VFbCIsImFuY2VzdG9ycyIsImNsZWFudXBJbyIsInJlb2JzZXJ2ZUZyYW1lIiwicmVzaXplT2JzZXJ2ZXIiLCJmaXJzdEVudHJ5IiwiY2FuY2VsQW5pbWF0aW9uRnJhbWUiLCJfcmVzaXplT2JzZXJ2ZXIiLCJmcmFtZUlkIiwicHJldlJlZlJlY3QiLCJmcmFtZUxvb3AiLCJuZXh0UmVmUmVjdCIsIl9yZXNpemVPYnNlcnZlcjIiLCJvZmZzZXQyIiwic2hpZnQyIiwiZmxpcDIiLCJzaXplMiIsImhpZGUyIiwiYXJyb3cyIiwiY29tcHV0ZVBvc2l0aW9uMiIsIm1lcmdlZE9wdGlvbnMiLCJwbGF0Zm9ybVdpdGhDYWNoZSIsIlBvcHBlckNvbnRleHQiLCJ1c2VQb3BwZXJDb250ZXh0IiwiX3RtcGwkIiwiREVGQVVMVF9TSVpFIiwiSEFMRl9ERUZBVUxUX1NJWkUiLCJST1RBVElPTl9ERUciLCJQb3BwZXJBcnJvdyIsImRpciIsImN1cnJlbnRQbGFjZW1lbnQiLCJjb250ZW50U3R5bGUiLCJjcmVhdGVDb21wdXRlZFN0eWxlIiwiY29udGVudFJlZiIsImZpbGwiLCJnZXRQcm9wZXJ0eVZhbHVlIiwic3Ryb2tlIiwiYm9yZGVyV2lkdGgiLCJzdHJva2VXaWR0aCIsInJvdGF0ZSIsInNldEFycm93UmVmIiwiX2VsJCIsIl9lbCQyIiwic2V0U3R5bGUiLCJQb3BwZXJQb3NpdGlvbmVyIiwic2V0UG9zaXRpb25lclJlZiIsImNyZWF0ZURPTVJlY3QiLCJhbmNob3JSZWN0IiwiRE9NUmVjdCIsImdldEFuY2hvckVsZW1lbnQiLCJhbmNob3IiLCJnZXRBbmNob3JSZWN0IiwiaXNWYWxpZFBsYWNlbWVudCIsImZsaXAyMiIsIlJFVkVSU0VfQkFTRV9QTEFDRU1FTlQiLCJnZXRUcmFuc2Zvcm1PcmlnaW4iLCJyZWFkaW5nRGlyZWN0aW9uIiwiYmFzZVBsYWNlbWVudCIsInJldmVyc2VQbGFjZW1lbnQiLCJQb3BwZXJSb290IiwiZ3V0dGVyIiwic2xpZGUiLCJvdmVybGFwIiwic2FtZVdpZHRoIiwiZml0Vmlld3BvcnQiLCJoaWRlV2hlbkRldGFjaGVkIiwiZGV0YWNoZWRQYWRkaW5nIiwiYXJyb3dQYWRkaW5nIiwib3ZlcmZsb3dQYWRkaW5nIiwicG9zaXRpb25lclJlZiIsImFycm93UmVmIiwic2V0Q3VycmVudFBsYWNlbWVudCIsImFuY2hvclJlZiIsInVwZGF0ZVBvc2l0aW9uIiwiZmxvYXRpbmdFbCIsImFycm93RWwiLCJhcnJvd09mZnNldCIsImZpbmFsR3V0dGVyIiwic2V0UHJvcGVydHkiLCJoYXNBbGlnbm1lbnQiLCJyZWZlcmVuY2VXaWR0aCIsIm1heFdpZHRoIiwibWF4SGVpZ2h0IiwicG9zIiwib25DdXJyZW50UGxhY2VtZW50Q2hhbmdlIiwiYXJyb3dYIiwiYXJyb3dZIiwiY2xlYW51cEF1dG9VcGRhdGUiLCJwb3NpdGlvbmVyIiwiY29udGVudCIsInpJbmRleCIsIlBvcHBlciIsIkFycm93IiwiQ29udGV4dCIsIlBvc2l0aW9uZXIiLCJjcmVhdGVFc2NhcGVLZXlEb3duIiwiaGFuZGxlS2V5RG93biIsIkVzY2FwZSIsIm9uRXNjYXBlS2V5RG93biIsImRvY3VtZW50MiIsIlBPSU5URVJfRE9XTl9PVVRTSURFX0VWRU5UIiwiRk9DVVNfT1VUU0lERV9FVkVOVCIsImNyZWF0ZUludGVyYWN0T3V0c2lkZSIsInBvaW50ZXJEb3duVGltZW91dElkIiwiY2xpY2tIYW5kbGVyIiwib25Qb2ludGVyRG93bk91dHNpZGUiLCJvbkZvY3VzT3V0c2lkZSIsIm9uSW50ZXJhY3RPdXRzaWRlIiwiaXNFdmVudE91dHNpZGUiLCJzaG91bGRFeGNsdWRlRWxlbWVudCIsImhhbmRsZXIyIiwib25jZSIsInBvaW50ZXJEb3duT3V0c2lkZUV2ZW50IiwiQ3VzdG9tRXZlbnQiLCJidWJibGVzIiwiY2FuY2VsYWJsZSIsImRldGFpbCIsIm9yaWdpbmFsRXZlbnQiLCJpc0NvbnRleHRNZW51IiwiZm9jdXNPdXRzaWRlRXZlbnQiLCJEaXNtaXNzYWJsZUxheWVyQ29udGV4dCIsInVzZU9wdGlvbmFsRGlzbWlzc2FibGVMYXllckNvbnRleHQiLCJEaXNtaXNzYWJsZUxheWVyIiwicGFyZW50Q29udGV4dCIsIm5lc3RlZExheWVycyIsInJlZ2lzdGVyTmVzdGVkTGF5ZXIiLCJwYXJlbnRVbnJlZ2lzdGVyIiwiZXhjbHVkZWRFbGVtZW50cyIsImJ5cGFzc1RvcE1vc3RMYXllckNoZWNrIiwib25EaXNtaXNzIiwiZGlzYWJsZU91dHNpZGVQb2ludGVyRXZlbnRzIiwiZGlzbWlzcyIsInVucmVnaXN0ZXJGcm9tUGFyZW50TGF5ZXIiLCJyZWYyIiwiZGVmZXIiLCJjcmVhdGVEaXNjbG9zdXJlU3RhdGUiLCJpc09wZW4iLCJzZXRJc09wZW4iLCJvcGVuIiwiZGVmYXVsdE9wZW4iLCJvbk9wZW5DaGFuZ2UiLCJjbG9zZSIsInJhZGlvX2dyb3VwX2V4cG9ydHMiLCJEZXNjcmlwdGlvbiIsIkVycm9yTWVzc2FnZSIsIkl0ZW0iLCJSYWRpb0dyb3VwSXRlbSIsIkl0ZW1Db250cm9sIiwiUmFkaW9Hcm91cEl0ZW1Db250cm9sIiwiSXRlbURlc2NyaXB0aW9uIiwiUmFkaW9Hcm91cEl0ZW1EZXNjcmlwdGlvbiIsIkl0ZW1JbmRpY2F0b3IiLCJSYWRpb0dyb3VwSXRlbUluZGljYXRvciIsIkl0ZW1JbnB1dCIsIlJhZGlvR3JvdXBJdGVtSW5wdXQiLCJJdGVtTGFiZWwiLCJSYWRpb0dyb3VwSXRlbUxhYmVsIiwiTGFiZWwiLCJSYWRpb0dyb3VwTGFiZWwiLCJSYWRpb0dyb3VwIiwiUmFkaW9Hcm91cFJvb3QiLCJSYWRpb0dyb3VwQ29udGV4dCIsInVzZVJhZGlvR3JvdXBDb250ZXh0IiwiUmFkaW9Hcm91cEl0ZW1Db250ZXh0IiwidXNlUmFkaW9Hcm91cEl0ZW1Db250ZXh0IiwicmFkaW9Hcm91cENvbnRleHQiLCJpbnB1dElkIiwic2V0SW5wdXRJZCIsImlucHV0UmVmIiwic2V0SW5wdXRSZWYiLCJzZXRJc0ZvY3VzZWQiLCJpc1NlbGVjdGVkVmFsdWUiLCJzZXRTZWxlY3RlZFZhbHVlIiwicmVnaXN0ZXJJbnB1dCIsIlNwYWNlIiwicHJlc2VuY2UiLCJyYWRpb0NvbnRleHQiLCJhcmlhTGFiZWxsZWRCeSIsImFyaWFEZXNjcmliZWRCeSIsImlzSW50ZXJuYWxDaGFuZ2VFdmVudCIsInNldElzSW50ZXJuYWxDaGFuZ2VFdmVudCIsImNoZWNrZWQiLCJvbkJsdXIiLCJyZWFkb25seSIsIm9yaWVudGF0aW9uIiwiZm9ybUNvbnRyb2xQcm9wcyIsInNlbGVjdGVkIiwic2V0U2VsZWN0ZWQiLCJyYWRpbyIsIkxpc3RLZXlib2FyZERlbGVnYXRlIiwia2V5QWZ0ZXIiLCJrZXlCZWZvcmUiLCJtZW51IiwicGFnZVkiLCJrZXlBYm92ZSIsImtleUJlbG93IiwiZnJvbUtleSIsInN1YnN0cmluZyIsImNvbXBhcmUiLCJjcmVhdGVTZWxlY3RhYmxlTGlzdCIsInVzYWdlIiwic2Vuc2l0aXZpdHkiLCJBVVRPRk9DVVNfT05fTU9VTlRfRVZFTlQiLCJBVVRPRk9DVVNfT05fVU5NT1VOVF9FVkVOVCIsIkVWRU5UX09QVElPTlMiLCJmb2N1c1Njb3BlU3RhY2siLCJzdGFjayIsImFjdGl2ZSIsInBhdXNlIiwicmVzdW1lIiwiY3JlYXRlRm9jdXNTY29wZSIsImlzUGF1c2VkIiwic2V0SXNQYXVzZWQiLCJmb2N1c1Njb3BlIiwibGFzdEZvY3VzZWRFbGVtZW50Iiwib25Nb3VudEF1dG9Gb2N1cyIsIm9uVW5tb3VudEF1dG9Gb2N1cyIsImNyZWF0ZVNlbnRpbmVsIiwidGFiYmFibGVzIiwiZmlyc3RUYWJiYWJsZSIsImxhc3RUYWJiYWJsZSIsInNob3VsZFByZXZlbnRVbm1vdW50QXV0b0ZvY3VzIiwicHJldmlvdXNseUZvY3VzZWRFbGVtZW50IiwiaGFzRm9jdXNlZENhbmRpZGF0ZSIsIm1vdW50RXZlbnQiLCJ1bm1vdW50RXZlbnQiLCJ0cmFwRm9jdXMiLCJzdGFydFNlbnRpbmVsIiwiaW5zZXJ0QWRqYWNlbnRFbGVtZW50IiwiZW5kU2VudGluZWwiLCJNdXRhdGlvbk9ic2VydmVyIiwibXV0YXRpb25zIiwibXV0YXRpb24iLCJwcmV2aW91c1NpYmxpbmciLCJuZXh0U2libGluZyIsImNoaWxkTGlzdCIsInN1YnRyZWUiLCJEQVRBX0xJVkVfQU5OT1VOQ0VSX0FUVFIiLCJjcmVhdGVIaWRlT3V0c2lkZSIsImFyaWFIaWRlT3V0c2lkZSIsInJlZkNvdW50TWFwIiwib2JzZXJ2ZXJTdGFjayIsInZpc2libGVOb2RlcyIsImhpZGRlbk5vZGVzIiwid2FsayIsInJvb3QyIiwiYWNjZXB0Um9vdCIsImhpZGUzIiwibmV4dE5vZGUiLCJyZWZDb3VudCIsImNoYW5nZXMiLCJjaGFuZ2UiLCJhZGRlZE5vZGVzIiwicmVtb3ZlZE5vZGVzIiwibGl2ZUFubm91bmNlciIsInJlYWN0QXJpYVRvcExheWVyIiwib2JzZXJ2ZXJXcmFwcGVyIiwiYWNjZXNzMiIsImFjdGl2ZVN0eWxlcyIsImNyZWF0ZVN0eWxlIiwib3JpZ2luYWxTdHlsZXMiLCJhY3RpdmVTdHlsZSIsImFjdGl2ZUNvdW50IiwicHJvcGVydHkiLCJhY3RpdmVTdHlsZTIiLCJyZW1vdmVQcm9wZXJ0eSIsInN0eWxlX2RlZmF1bHQiLCJnZXRTY3JvbGxEaW1lbnNpb25zIiwiaXNTY3JvbGxDb250YWluZXIiLCJnZXRTY3JvbGxBdExvY2F0aW9uIiwibG9jYXRpb24iLCJzdG9wQXQiLCJkaXJlY3Rpb25GYWN0b3IiLCJjdXJyZW50RWxlbWVudCIsImF2YWlsYWJsZVNjcm9sbCIsImF2YWlsYWJsZVNjcm9sbFRvcCIsIndyYXBwZXJSZWFjaGVkIiwic2Nyb2xsT2Zmc2V0Iiwic2Nyb2xsU2l6ZSIsInNjcm9sbGVkIiwiXyRob3N0IiwicHJldmVudFNjcm9sbFN0YWNrIiwic2V0UHJldmVudFNjcm9sbFN0YWNrIiwiaXNBY3RpdmUiLCJjcmVhdGVQcmV2ZW50U2Nyb2xsIiwiZGVmYXVsdGVkUHJvcHMiLCJlbmFibGVkIiwiaGlkZVNjcm9sbGJhciIsInByZXZlbnRTY3JvbGxiYXJTaGlmdCIsInByZXZlbnRTY3JvbGxiYXJTaGlmdE1vZGUiLCJhbGxvd1BpbmNoWm9vbSIsInByZXZlbnRTY3JvbGxJZCIsImN1cnJlbnRUb3VjaFN0YXJ0IiwiY3VycmVudFRvdWNoU3RhcnRBeGlzIiwiY3VycmVudFRvdWNoU3RhcnREZWx0YSIsInNjcm9sbGJhcldpZHRoIiwiaW5uZXJXaWR0aCIsInBhZGRpbmdSaWdodCIsIm1hcmdpblJpZ2h0Iiwic2Nyb2xsWSIsInNjcm9sbFgiLCJzY3JvbGxUbyIsIm1heWJlUHJldmVudFdoZWVsIiwibG9nVG91Y2hTdGFydCIsIm1heWJlUHJldmVudFRvdWNoIiwiZ2V0VG91Y2hYWSIsIndyYXBwZXIiLCJkZWx0YSIsImdldERlbHRhWFkiLCJheGlzRGVsdGEiLCJyZXN1bHRzSW5TY3JvbGwiLCJ3b3VsZFNjcm9sbCIsInNob3VsZENhbmNlbCIsImNvbnRhaW5zMiIsInRvdWNoZXMiLCJ0b3VjaCIsIndvdWxkUmVzdWx0SW5TY3JvbGwiLCJkZWx0YVgiLCJkZWx0YVkiLCJjaGFuZ2VkVG91Y2hlcyIsImNsaWVudFgiLCJjbGllbnRZIiwidGFyZ2V0SW5XcmFwcGVyIiwicHJldmVudFNjcm9sbF9kZWZhdWx0Iiwic3JjX2RlZmF1bHQiLCJNZW51Q29udGV4dCIsInVzZU9wdGlvbmFsTWVudUNvbnRleHQiLCJ1c2VNZW51Q29udGV4dCIsIk1lbnVJdGVtQ29udGV4dCIsInVzZU1lbnVJdGVtQ29udGV4dCIsIk1lbnVSb290Q29udGV4dCIsInVzZU1lbnVSb290Q29udGV4dCIsIk1lbnVJdGVtQmFzZSIsInJvb3RDb250ZXh0IiwibWVudUNvbnRleHQiLCJsYWJlbFJlZiIsInNldExhYmVsUmVmIiwibGlzdFN0YXRlIiwiaXNIaWdobGlnaHRlZCIsImNsb3NlT25TZWxlY3QiLCJ0ZXh0Q29udGVudCIsInNlbGVjdGFibGVJdGVtIiwib25Qb2ludGVyTW92ZSIsIm9uSXRlbUxlYXZlIiwib25JdGVtRW50ZXIiLCJvblBvaW50ZXJMZWF2ZSIsInJlcGVhdCIsImFyaWFDaGVja2VkIiwiaW5kZXRlcm1pbmF0ZSIsImlzQ2hlY2tlZCIsIk1lbnVDaGVja2JveEl0ZW0iLCJkZWZhdWx0Q2hlY2tlZCIsIk1lbnViYXJDb250ZXh0IiwidXNlT3B0aW9uYWxNZW51YmFyQ29udGV4dCIsIk1lbnVDb250ZW50QmFzZSIsIm9wdGlvbmFsTWVudWJhckNvbnRleHQiLCJsYXN0UG9pbnRlclgiLCJpc1Jvb3RNb2RhbENvbnRlbnQiLCJwYXJlbnRNZW51Q29udGV4dCIsImlzTW9kYWwiLCJzZWxlY3RhYmxlTGlzdCIsIm9uT3BlbkF1dG9Gb2N1cyIsIm9uQ2xvc2VBdXRvRm9jdXMiLCJzZXRBdXRvRm9jdXNNZW51IiwibmV4dE1lbnUiLCJwcmV2aW91c01lbnUiLCJvblBvaW50ZXJFbnRlciIsInBvaW50ZXJYSGFzQ2hhbmdlZCIsInNldFBvaW50ZXJEaXIiLCJyZWdpc3RlckNvbnRlbnRJZCIsImNvbnRlbnRQcmVzZW5jZSIsInNldENvbnRlbnRSZWYiLCJ0cmlnZ2VyUmVmIiwidHJpZ2dlcklkIiwiTWVudUNvbnRlbnQiLCJNZW51R3JvdXBDb250ZXh0IiwidXNlTWVudUdyb3VwQ29udGV4dCIsIk1lbnVHcm91cCIsInJlZ2lzdGVyTGFiZWxJZCIsIk1lbnVHcm91cExhYmVsIiwiTWVudUljb24iLCJNZW51SXRlbSIsIk1lbnVJdGVtRGVzY3JpcHRpb24iLCJNZW51SXRlbUluZGljYXRvciIsIk1lbnVJdGVtTGFiZWwiLCJNZW51UG9ydGFsIiwiTWVudVJhZGlvR3JvdXBDb250ZXh0IiwidXNlTWVudVJhZGlvR3JvdXBDb250ZXh0IiwiTWVudVJhZGlvR3JvdXAiLCJNZW51UmFkaW9JdGVtIiwiZ2V0UG9pbnRlckdyYWNlQXJlYSIsImNvbnRlbnRFbCIsInBvaW50ZXJYIiwicG9pbnRlclkiLCJpc1BvaW50ZXJJbkdyYWNlQXJlYSIsImFyZWEiLCJNZW51IiwicGFyZW50RG9tQ29sbGVjdGlvbkNvbnRleHQiLCJwb2ludGVyR3JhY2VUaW1lb3V0SWQiLCJwb2ludGVyR3JhY2VJbnRlbnQiLCJwb2ludGVyRGlyIiwic2V0VHJpZ2dlcklkIiwiY29udGVudElkIiwic2V0Q29udGVudElkIiwic2V0VHJpZ2dlclJlZiIsImZvY3VzU3RyYXRlZ3kiLCJzZXRGb2N1c1N0cmF0ZWd5IiwibmVzdGVkTWVudXMiLCJzZXROZXN0ZWRNZW51cyIsImRpc2Nsb3N1cmVTdGF0ZSIsImZvY3VzU3RyYXRlZ3kyIiwicmVjdXJzaXZlbHkiLCJmb2N1c0NvbnRlbnQiLCJyZWdpc3Rlck5lc3RlZE1lbnUiLCJpc1BvaW50ZXJNb3ZpbmdUb1N1Ym1lbnUiLCJpc01vdmluZ1Rvd2FyZHMiLCJvblRyaWdnZXJMZWF2ZSIsInNldFBvaW50ZXJHcmFjZVRpbWVvdXRJZCIsInNldFBvaW50ZXJHcmFjZUludGVudCIsImludGVudCIsInJlZ2lzdGVySXRlbVRvUGFyZW50RG9tQ29sbGVjdGlvbiIsInJlZ2lzdGVyVHJpZ2dlcklkIiwiTWVudVN1YiIsIlNVQl9DTE9TRV9LRVlTIiwibHRyIiwiTWVudVN1YkNvbnRlbnQiLCJpc0tleURvd25JbnNpZGUiLCJpc0Nsb3NlS2V5IiwiaXNTdWJNZW51IiwiU0VMRUNUSU9OX0tFWVMiLCJTVUJfT1BFTl9LRVlTIiwiTWVudVN1YlRyaWdnZXIiLCJvcGVuVGltZW91dElkIiwiY2xlYXJPcGVuVGltZW91dCIsInBhcmVudFNlbGVjdGlvbk1hbmFnZXIiLCJwb2ludGVyR3JhY2VUaW1lciIsIk1lbnVSb290IiwibW9kYWwiLCJNZW51VHJpZ2dlciIsInJlZ2lzdGVyTWVudSIsImF1dG9Gb2N1c01lbnUiLCJ1bnJlZ2lzdGVyTWVudSIsImxhc3RWYWx1ZSIsInNldExhc3RWYWx1ZSIsImhhbmRsZUNsaWNrIiwiY2xvc2VNZW51Iiwib25Nb3VzZU92ZXIiLCJzZXBhcmF0b3JfZXhwb3J0cyIsIlNlcGFyYXRvclJvb3QiLCJTZXBhcmF0b3IiLCJkcm9wZG93bl9tZW51X2V4cG9ydHMiLCJDaGVja2JveEl0ZW0iLCJDb250ZW50IiwiRHJvcGRvd25NZW51Q29udGVudCIsIkRyb3Bkb3duTWVudSIsIkdyb3VwIiwiR3JvdXBMYWJlbCIsIkljb24iLCJSYWRpb0l0ZW0iLCJEcm9wZG93bk1lbnVSb290IiwiU3ViIiwiU3ViQ29udGVudCIsIlN1YlRyaWdnZXIiLCJUcmlnZ2VyIiwiaGFzSW50ZXJhY3RlZE91dHNpZGUiLCJ0b2tlbnMiLCJjb2xvcnMiLCJpbmhlcml0IiwidHJhbnNwYXJlbnQiLCJibGFjayIsIndoaXRlIiwibmV1dHJhbCIsImRhcmtHcmF5IiwiZ3JheSIsImJsdWUiLCJncmVlbiIsInJlZCIsInllbGxvdyIsInB1cnBsZSIsInRlYWwiLCJwaW5rIiwiY3lhbiIsImFscGhhIiwiZm9udCIsInhzIiwic20iLCJtZCIsImxnIiwieGwiLCJsaW5lSGVpZ2h0Iiwid2VpZ2h0IiwidGhpbiIsImV4dHJhbGlnaHQiLCJsaWdodCIsIm5vcm1hbCIsIm1lZGl1bSIsInNlbWlib2xkIiwiYm9sZCIsImV4dHJhYm9sZCIsImJyZWFrcG9pbnRzIiwicmFkaXVzIiwibm9uZSIsImZ1bGwiLCJzaGFkb3ciLCJjb2xvciIsImlubmVyIiwiekluZGljZXMiLCJhdXRvIiwiYmFzZSIsImRvY2tlZCIsImRyb3Bkb3duIiwic3RpY2t5IiwiYmFubmVyIiwib3ZlcmxheSIsInBvcG92ZXIiLCJza2lwTGluayIsInRvYXN0IiwidG9vbHRpcCIsIl90bXBsJDIiLCJfdG1wbCQyMiIsIl90bXBsJDMiLCJfdG1wbCQ0IiwiX3RtcGwkNSIsIl90bXBsJDYiLCJfdG1wbCQ3IiwiX3RtcGwkOCIsIl90bXBsJDkiLCJfdG1wbCQxMCIsIl90bXBsJDExIiwiX3RtcGwkMTIiLCJfdG1wbCQxMyIsIl90bXBsJDE0IiwiX3RtcGwkMTUiLCJfdG1wbCQxNiIsIl90bXBsJDE3IiwiX3RtcGwkMTgiLCJfdG1wbCQxOSIsIl90bXBsJDIwIiwiX3RtcGwkMjEiLCJfdG1wbCQyMjIiLCJTZWFyY2giLCJUcmFzaCIsIkNoZXZyb25Eb3duIiwiQXJyb3dVcCIsIkFycm93RG93biIsIkFycm93TGVmdCIsIl9lbCQ2IiwiQXJyb3dSaWdodCIsIl9lbCQ3IiwiU3VuIiwiTW9vbiIsIk1vbml0b3IiLCJXaWZpIiwiT2ZmbGluZSIsIlNldHRpbmdzIiwiUGlQSWNvbiIsIkNvcGllciIsIkNvcGllZENvcGllciIsIl9lbCQxNiIsIl9lbCQxNyIsInRoZW1lIiwiRXJyb3JDb3BpZXIiLCJMaXN0IiwiQ2hlY2siLCJfZWwkMjAiLCJfZWwkMjEiLCJfZWwkMjIiLCJfZWwkMjMiLCJDaGVja0NpcmNsZSIsIkxvYWRpbmdDaXJjbGUiLCJYQ2lyY2xlIiwiUGF1c2VDaXJjbGUiLCJUYW5zdGFja0xvZ28iLCJfZWwkMjgiLCJfZWwkMjkiLCJfZWwkMzAiLCJfZWwkMzEiLCJfZWwkMzIiLCJfZWwkMzMiLCJfZWwkMzQiLCJfZWwkMzUiLCJfZWwkMzYiLCJfZWwkMzciLCJfZWwkMzgiLCJfZWwkMzkiLCJfZWwkNDAiLCJfZWwkNDEiLCJfZWwkNDIiLCJfZWwkNDMiLCJfZWwkNDQiLCJfZWwkNDUiLCJfZWwkNDYiLCJfZWwkNDciLCJfZWwkNDgiLCJfZWwkNDkiLCJfZWwkNTAiLCJfZWwkNTEiLCJfZWwkNTIiLCJfZWwkNTMiLCJfZWwkNTQiLCJfZWwkNTUiLCJfZWwkNTYiLCJfZWwkNTciLCJfZWwkNTgiLCJfZWwkNTkiLCJfZWwkNjAiLCJfZWwkNjEiLCJfZWwkNjIiLCJfZWwkNjMiLCJfZWwkNjQiLCJfZWwkNjUiLCJfZWwkNjYiLCJfZWwkNjciLCJfZWwkNjgiLCJfZWwkNjkiLCJfZWwkNzAiLCJfZWwkNzEiLCJfZWwkNzIiLCJfZWwkNzMiLCJfZWwkNzQiLCJfZWwkNzUiLCJfZWwkNzYiLCJfZWwkNzciLCJfZWwkNzgiLCJfZWwkNzkiLCJfZWwkODAiLCJfZWwkODEiLCJfZWwkODIiLCJfZWwkODMiLCJfZWwkODQiLCJfZWwkODUiLCJfZWwkODYiLCJfZWwkODciLCJfZWwkODgiLCJfZWwkODkiLCJfZWwkOTAiLCJfZWwkOTEiLCJfZWwkOTIiLCJfZWwkOTMiLCJfZWwkOTQiLCJfZWwkOTUiLCJfZWwkOTYiLCJfZWwkOTciLCJfZWwkOTgiLCJfZWwkOTkiLCJfZWwkMTAwIiwiX2VsJDEwMSIsIl9lbCQxMDIiLCJfZWwkMTAzIiwiX2VsJDEwNCIsIl9lbCQxMDUiLCJfZWwkMTA2IiwiX2VsJDEwNyIsIl9lbCQxMDgiLCJfZWwkMTA5IiwiX2VsJDExMCIsIl9lbCQxMTEiLCJfZWwkMTEyIiwiX2VsJDExMyIsIl9lbCQxMTQiLCJfZWwkMTE1IiwiX2VsJDExNiIsIl9lbCQxMTciLCJfZWwkMTE4IiwiX2VsJDExOSIsIl9lbCQxMjAiLCJRdWVyeURldnRvb2xzQ29udGV4dCIsImNsaWVudCIsIm9ubGluZU1hbmFnZXIiLCJxdWVyeUZsYXZvciIsInZlcnNpb24iLCJzaGFkb3dET01UYXJnZXQiLCJ1c2VRdWVyeURldnRvb2xzQ29udGV4dCIsIlRoZW1lQ29udGV4dCIsInVzZVRoZW1lIiwiX3RtcGwkMjMiLCJfdG1wbCQyNCIsIl90bXBsJDMyIiwiX3RtcGwkNDIiLCJfdG1wbCQ1MiIsIl90bXBsJDYyIiwiX3RtcGwkNzIiLCJfdG1wbCQ4MiIsIl90bXBsJDkyIiwiX3RtcGwkMTAyIiwiX3RtcGwkMTEyIiwiY2h1bmtBcnJheSIsInNpemUzIiwiRXhwYW5kZXIiLCJkYXJrU3R5bGVzIiwibGlnaHRTdHlsZXMiLCJleHBhbmRlciIsImV4cGFuZGVkIiwiQ29weUJ1dHRvbiIsImNvcHlTdGF0ZSIsInNldENvcHlTdGF0ZSIsImNsaXBib2FyZCIsIndyaXRlVGV4dCIsInRoZW4iLCJjb25zb2xlIiwiX3AkIiwiX3YkIiwiYWN0aW9uQnV0dG9uIiwiX3YkMiIsIkNsZWFyQXJyYXlCdXR0b24iLCJxdWVyeUNsaWVudCIsIl9lbCQzIiwiJCRjbGljayIsIm9sZERhdGEiLCJhY3RpdmVRdWVyeSIsIm5ld0RhdGEiLCJkYXRhUGF0aCIsInNldFF1ZXJ5RGF0YSIsInF1ZXJ5S2V5IiwiRGVsZXRlSXRlbUJ1dHRvbiIsIl9lbCQ0IiwiVG9nZ2xlVmFsdWVCdXR0b24iLCJfZWwkNSIsImlzSXRlcmFibGUiLCJFeHBsb3JlciIsInNldEV4cGFuZGVkIiwiZGVmYXVsdEV4cGFuZGVkIiwibGFiZWwiLCJ0b2dnbGVFeHBhbmRlZCIsIm9sZCIsImV4cGFuZGVkUGFnZXMiLCJzZXRFeHBhbmRlZFBhZ2VzIiwic3ViRW50cmllcyIsInZhbCIsInN1YkVudHJ5UGFnZXMiLCJjdXJyZW50RGF0YVBhdGgiLCJfZWwkOCIsIl9lbCQ5IiwiX2VsJDEwIiwiX2VsJDExIiwiX2VsJDEyIiwiX2VsJDEzIiwiZWRpdGFibGUiLCJfZWwkMTQiLCJpdGVtc0RlbGV0YWJsZSIsImFjdGlvbnMiLCJfdiQzIiwiZXhwYW5kZXJCdXR0b25Db250YWluZXIiLCJfdiQ0IiwiZXhwYW5kZXJCdXR0b24iLCJfdiQ1IiwiaW5mbyIsIl9lbCQxNSIsInN1YkVudHJ5IiwiX2VsJDI0IiwiX2VsJDI1IiwiX2VsJDI3IiwiX3YkMTAiLCJfdiQxMSIsIl9lbCQxOCIsIl9lbCQxOSIsImNoYW5nZUV2ZW50IiwidmFsdWVBc051bWJlciIsIl92JDYiLCJfdiQ3IiwiZWRpdGFibGVJbnB1dCIsIl92JDgiLCJyb3ciLCJfdiQ5Iiwic3R5bGVzRmFjdG9yeSIsImRhcmsiLCJfdG1wbCQyNSIsIl90bXBsJDI2IiwiX3RtcGwkMzMiLCJfdG1wbCQ0MyIsIl90bXBsJDUzIiwiX3RtcGwkNjMiLCJfdG1wbCQ3MyIsIl90bXBsJDgzIiwiX3RtcGwkOTMiLCJfdG1wbCQxMDMiLCJfdG1wbCQxMTMiLCJfdG1wbCQxMjIiLCJfdG1wbCQxMzIiLCJfdG1wbCQxNDIiLCJfdG1wbCQxNTIiLCJfdG1wbCQxNjIiLCJfdG1wbCQxNzIiLCJfdG1wbCQxODIiLCJfdG1wbCQxOTIiLCJfdG1wbCQyMDIiLCJfdG1wbCQyMTIiLCJfdG1wbCQyMjMiLCJfdG1wbCQyMzIiLCJfdG1wbCQyNDIiLCJfdG1wbCQyNTIiLCJfdG1wbCQyNjIiLCJfdG1wbCQyNyIsIl90bXBsJDI4IiwiX3RtcGwkMjkiLCJfdG1wbCQzMCIsIl90bXBsJDMxIiwiX3RtcGwkMzIyIiwiZmlyc3RCcmVha3BvaW50Iiwic2Vjb25kQnJlYWtwb2ludCIsInRoaXJkQnJlYWtwb2ludCIsIkJVVFRPTl9QT1NJVElPTiIsIlBPU0lUSU9OIiwiVEhFTUVfUFJFRkVSRU5DRSIsIklOSVRJQUxfSVNfT1BFTiIsIkRFRkFVTFRfSEVJR0hUIiwiREVGQVVMVF9XSURUSCIsIkRFRkFVTFRfU09SVF9GTl9OQU1FIiwiREVGQVVMVF9TT1JUX09SREVSIiwiREVGQVVMVF9NVVRBVElPTl9TT1JUX0ZOX05BTUUiLCJzZWxlY3RlZFF1ZXJ5SGFzaCIsInNldFNlbGVjdGVkUXVlcnlIYXNoIiwic2VsZWN0ZWRNdXRhdGlvbklkIiwic2V0U2VsZWN0ZWRNdXRhdGlvbklkIiwicGFuZWxXaWR0aCIsInNldFBhbmVsV2lkdGgiLCJvZmZsaW5lIiwic2V0T2ZmbGluZSIsIlBpUENvbnRleHQiLCJQaVBQcm92aWRlciIsInBpcFdpbmRvdyIsInNldFBpcFdpbmRvdyIsImNsb3NlUGlwV2luZG93IiwidyIsInJlcXVlc3RQaXBXaW5kb3ciLCJwaXAiLCJ0aXRsZSIsInNldExvY2FsU3RvcmUiLCJzdHlsZVNoZWV0cyIsInN0eWxlU2hlZXQiLCJjc3NSdWxlcyIsInJ1bGUiLCJjc3NUZXh0Iiwic3R5bGVfbm9kZSIsIm93bmVyTm9kZSIsInN0eWxlX2lkIiwibGluayIsImhyZWYiLCJyZWwiLCJtZWRpYSIsInBpcF9vcGVuIiwibG9jYWxTdG9yZSIsImdvb2JlclN0eWxlcyIsInBpcF9zdHlsZSIsImNoYXJhY3RlckRhdGFPbGRWYWx1ZSIsInVzZVBpUFdpbmRvdyIsImN0eCIsIkRldnRvb2xzQ29tcG9uZW50IiwiY29sb3JTY2hlbWUiLCJwcmVmZXJlbmNlIiwidGhlbWVfcHJlZmVyZW5jZSIsIkRldnRvb2xzIiwiRGV2dG9vbHNfZGVmYXVsdCIsImRhcmtTdHlsZXMyIiwibGlnaHRTdHlsZXMyIiwiYnV0dG9uUG9zaXRpb24iLCJpbml0aWFsSXNPcGVuIiwidHJhbnNpdGlvbnNDb250YWluZXJSZWYiLCJwYW5lbFBvc2l0aW9uIiwiZm9udFNpemUiLCJtb3VudCIsIlBpUFBhbmVsIiwiQ29udGVudFZpZXciLCJEZXZ0b29sc1BhbmVsIiwiZGV2dG9vbHNCdG4iLCJnZXRQYW5lbER5bmFtaWNTdHlsZXMiLCJyZXNpemVDQiIsInBhbmVsIiwiaXNSZXNpemluZyIsInNldElzUmVzaXppbmciLCJoYW5kbGVEcmFnU3RhcnQiLCJwYW5lbEVsZW1lbnQiLCJzdGFydFgiLCJzdGFydFkiLCJuZXdTaXplIiwibWluSGVpZ2h0IiwibWluV2lkdGgiLCJydW5EcmFnIiwibW92ZUV2ZW50IiwidmFsVG9BZGQiLCJuZXdXaWR0aCIsInVuc3Vic2NyaWJlIiwicGFuZWxSZWYiLCJyb290Q29udGFpbmVyIiwiY3VycmVudFBvc2l0aW9uIiwic3R5bGVQcm9wIiwicHJldmlvdXNQYWRkaW5ncyIsInBhZGRpbmdCb3R0b20iLCJwcmV2aW91c1ZhbHVlIiwiX3JlZiQyIiwiJCRtb3VzZWRvd24iLCJkcmFnSGFuZGxlIiwiY2xvc2VCdG4iLCJzZXR1cFF1ZXJ5Q2FjaGVTdWJzY3JpcHRpb24iLCJzZXR1cE11dGF0aW9uQ2FjaGVTdWJzY3JpcHRpb24iLCJjb250YWluZXJSZWYiLCJzZWxlY3RlZFZpZXciLCJzZXRTZWxlY3RlZFZpZXciLCJzb3J0T3JkZXIiLCJtdXRhdGlvblNvcnQiLCJtdXRhdGlvblNvcnRPcmRlciIsInNvcnRGbiIsIm11dGF0aW9uU29ydEZuIiwicXVlcnlfY2FjaGUiLCJnZXRRdWVyeUNhY2hlIiwibXV0YXRpb25fY2FjaGUiLCJnZXRNdXRhdGlvbkNhY2hlIiwicXVlcnlDb3VudCIsImNyZWF0ZVN1YnNjcmliZVRvUXVlcnlDYWNoZUJhdGNoZXIiLCJxdWVyeUNhY2hlIiwicXVlcmllcyIsImN1cnIiLCJmaWx0ZXJlZCIsInF1ZXJ5SGFzaCIsInNvcnRlZCIsIm11dGF0aW9uQ291bnQiLCJjcmVhdGVTdWJzY3JpYmVUb011dGF0aW9uQ2FjaGVCYXRjaGVyIiwibXV0YXRpb25DYWNoZSIsIm11dGF0aW9uRmlsdGVyIiwibXV0YXRpb25LZXkiLCJKU09OIiwic3VibWl0dGVkQXQiLCJ0b0xvY2FsZVN0cmluZyIsInNldERldnRvb2xzUG9zaXRpb24iLCJzZXRDb21wdXRlZFZhcmlhYmxlcyIsInZhcmlhYmxlIiwiX2VsJDI2IiwiX3JlZiQzIiwidmlld1RvZ2dsZSIsIlF1ZXJ5U3RhdHVzQ291bnQiLCJNdXRhdGlvblN0YXR1c0NvdW50IiwiJCRpbnB1dCIsInNldE9ubGluZSIsIl9jJCIsImFjdGlvbnNCdG4iLCJzZXR0aW5nc01lbnUiLCJzZXR0aW5nc01lbnVIZWFkZXIiLCJzZXR0aW5nc1N1YlRyaWdnZXIiLCJzZXR0aW5nc1N1YkJ1dHRvbiIsInRoZW1lU2VsZWN0ZWRCdXR0b24iLCJxIiwicXVlcnkiLCJRdWVyeVJvdyIsIm92ZXJmbG93UXVlcnlDb250YWluZXIiLCJtIiwibXV0YXRpb25JZCIsIk11dGF0aW9uUm93IiwicXVlcmllc0NvbnRhaW5lciIsImxvZ29BbmRUb2dnbGVDb250YWluZXIiLCJsb2dvIiwidGFuc3RhY2tMb2dvIiwicXVlcnlGbGF2b3JMb2dvIiwiX3YkMTIiLCJfdiQxMyIsImZpbHRlcnNDb250YWluZXIiLCJfdiQxNCIsImZpbHRlcklucHV0IiwiX3YkMTUiLCJfdiQxNiIsImZpbHRlclNlbGVjdCIsIl92JDE3IiwiX3YkMTgiLCJfdiQxOSIsImFjdGlvbnNDb250YWluZXIiLCJfdiQyMCIsIl92JDIxIiwiX3YkMjIiLCJhY3Rpb25zQnRuT2ZmbGluZSIsIl92JDIzIiwiX3YkMjQiLCJfdiQyNSIsIlF1ZXJ5RGV0YWlscyIsIk11dGF0aW9uRGV0YWlscyIsInF1ZXJ5U3RhdGUiLCJpc1N0YWxlIiwib2JzZXJ2ZXJzIiwiZ2V0T2JzZXJ2ZXJzQ291bnQiLCJvYnNlcnZlckNvdW50IiwiZ2V0T2JzZXJ2ZXJDb3VudENvbG9yU3R5bGVzIiwiX3YkMjYiLCJxdWVyeVJvdyIsInNlbGVjdGVkUXVlcnlSb3ciLCJfdiQyNyIsIl92JDI4IiwibXV0YXRpb25TdGF0ZSIsInN0YXR1cyIsIl92JDI5IiwiX3YkMzAiLCJfdiQzMSIsInN0YWxlIiwiZnJlc2giLCJmZXRjaGluZyIsInBhdXNlZCIsImluYWN0aXZlIiwiUXVlcnlTdGF0dXMiLCJxdWVyeVN0YXR1c0NvbnRhaW5lciIsInN1Y2Nlc3MiLCJwZW5kaW5nIiwidGFnUmVmIiwibW91c2VPdmVyIiwic2V0TW91c2VPdmVyIiwiZm9jdXNlZCIsInNob3dMYWJlbCIsIl9yZWYkNCIsInF1ZXJ5U3RhdHVzVGFnIiwic3RhdHVzVG9vbHRpcCIsInF1ZXJ5U3RhdHVzVGFnTGFiZWwiLCJfdiQzMiIsIl92JDMzIiwicXVlcnlTdGF0dXNDb3VudCIsInJlc3RvcmluZ0xvYWRpbmciLCJzZXRSZXN0b3JpbmdMb2FkaW5nIiwiZXJyb3JUeXBlcyIsImFjdGl2ZVF1ZXJ5RnJlc2giLCJhY3RpdmVRdWVyeVN0YXRlIiwiYWN0aXZlUXVlcnlTdGF0ZURhdGEiLCJzdGF0dXNMYWJlbCIsInF1ZXJ5U3RhdHVzIiwiaGFuZGxlUmVmZXRjaCIsInByb21pc2UiLCJmZXRjaCIsImNhdGNoIiwidHJpZ2dlckVycm9yIiwiZXJyb3JUeXBlIiwiaW5pdGlhbGl6ZXIiLCJfX3ByZXZpb3VzUXVlcnlPcHRpb25zIiwiZmV0Y2hNZXRhIiwicmVzdG9yZVF1ZXJ5QWZ0ZXJMb2FkaW5nT3JFcnJvciIsImFjdGl2ZVF1ZXJ5VmFsIiwicHJldmlvdXNTdGF0ZSIsInByZXZpb3VzT3B0aW9ucyIsImNhbmNlbCIsInNpbGVudCIsImZldGNoU3RhdHVzIiwiZ2V0UXVlcnlTdGF0dXNDb2xvcnMiLCJkYXRhVXBkYXRlZEF0IiwidG9Mb2NhbGVUaW1lU3RyaW5nIiwiaW52YWxpZGF0ZVF1ZXJpZXMiLCJyZXNldFF1ZXJpZXMiLCJyZW1vdmVRdWVyaWVzIiwicXVlcnlGbiIsIlByb21pc2UiLCJnY1RpbWUiLCJfdiQzNCIsIl92JDM1IiwiX3YkMzYiLCJldCIsIl92JDM3IiwiYWN0aW9uc1NlbGVjdCIsIl92JDM4IiwiX3YkMzkiLCJfdiQ0MCIsImRldGFpbHNDb250YWluZXIiLCJfdiQ0MSIsImRldGFpbHNIZWFkZXIiLCJfdiQ0MiIsImRldGFpbHNCb2R5IiwiX3YkNDMiLCJxdWVyeURldGFpbHNTdGF0dXMiLCJfdiQ0NCIsIl92JDQ1IiwiYWN0aW9uc0JvZHkiLCJfdiQ0NiIsIl92JDQ3IiwiX3YkNDgiLCJfdiQ0OSIsIl92JDUwIiwiX3YkNTEiLCJfdiQ1MiIsIl92JDUzIiwiX3YkNTQiLCJfdiQ1NSIsIl92JDU2IiwiX3YkNTciLCJfdiQ1OCIsIl92JDU5IiwiX3YkNjAiLCJfdiQ2MSIsIl92JDYyIiwiX3YkNjMiLCJfdiQ2NCIsImFjdGl2ZU11dGF0aW9uIiwidmFyaWFibGVzIiwiX3YkNjUiLCJfdiQ2NiIsIl92JDY3IiwiX3YkNjgiLCJfdiQ2OSIsIl92JDcwIiwiX3YkNzEiLCJfdiQ3MiIsIl92JDczIiwiX3YkNzQiLCJfdiQ3NSIsIl92JDc2IiwicXVlcnlDYWNoZU1hcCIsInN1YnNjcmliZSIsInNob3VsZFVwZGF0ZSIsImVxdWFsaXR5Q2hlY2siLCJtdXRhdGlvbkNhY2hlTWFwIiwic3R5bGVzRmFjdG9yeTIiLCJkZWZhdWx0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@tanstack/query-devtools/build/Devtools/Q436JGP5.js\n"));

/***/ })

}]);